{"ast":null,"code":"import { inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsTreeControl } from '@rds/angular-components';\nimport * as i0 from \"@angular/core\";\nexport class SelectionTreeTableComponent {\n  constructor() {\n    this.marker = /\\${(.*?)\\}/gi;\n    this.data = inject(RDS_DIALOG_DATA);\n    this.searchPattern = '';\n    this.treeData = [{\n      name: \"Online Data\",\n      children: [{\n        name: \"Optcal density line slope\"\n      }, {\n        name: \"Elapsed hours\"\n      }]\n    }, {\n      name: \"Offline Data\",\n      children: [{\n        name: \"Optcal density line slope\"\n      }, {\n        name: \"Elapsed hours\"\n      }]\n    }];\n    this.treeControl = new RdsTreeControl(node => node.level, node => node.expandable);\n  }\n  hasChild(treeNode) {\n    console.log(treeNode);\n    return true;\n  }\n  static #_ = this.ɵfac = function SelectionTreeTableComponent_Factory(t) {\n    return new (t || SelectionTreeTableComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectionTreeTableComponent,\n    selectors: [[\"app-selection-tree-table\"]],\n    decls: 7,\n    vars: 6,\n    consts: [[\"rds-dialog-header\", \"\"], [\"rds-dialog-content\", \"\"], [3, \"ngModelChange\", \"includeButton\", \"autoSearch\", \"ngModel\"]],\n    template: function SelectionTreeTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"rds-global-search\", 2);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function SelectionTreeTableComponent_Template_rds_global_search_ngModelChange_4_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.searchPattern, $event) || (ctx.searchPattern = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"selection-tree-table works!\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 4, \"date-range\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"includeButton\", false)(\"autoSearch\", true);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.searchPattern);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","RDS_DIALOG_DATA","RdsTreeControl","SelectionTreeTableComponent","constructor","marker","data","searchPattern","treeData","name","children","treeControl","node","level","expandable","hasChild","treeNode","console","log","_","_2","selectors","decls","vars","consts","template","SelectionTreeTableComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","SelectionTreeTableComponent_Template_rds_global_search_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ɵɵtwoWayProperty"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/selection-tree-table/selection-tree-table.component.ts","/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/selection-tree-table/selection-tree-table.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsFlatTreeNode, RdsTreeControl, RdsTreeNode, RdsTreeDataSource, RdsTreeSelectionModel, RdsTreeFlattener } from '@rds/angular-components';\n\n\n@Component({\n  selector: 'app-selection-tree-table',\n  templateUrl: './selection-tree-table.component.html',\n  styleUrl: './selection-tree-table.component.scss'\n})\nexport class SelectionTreeTableComponent {\n\n  protected readonly marker: RegExp = /\\${(.*?)\\}/gi;\n\n  protected readonly data: any = inject(RDS_DIALOG_DATA);\n\n  public searchPattern: string = '';\n\n  public treeData: RdsTreeNode[] = [\n    {\n      name: \"Online Data\",\n      children: [\n        { name: \"Optcal density line slope\" },\n        { name: \"Elapsed hours\" }\n      ]\n    },\n    {\n      name: \"Offline Data\",\n      children: [\n        { name: \"Optcal density line slope\" },\n        { name: \"Elapsed hours\" }\n      ]\n    }\n  ];\n\n  private dialog!: RdsDialogRef<any>;\n\n  public treeControl = new RdsTreeControl<RdsFlatTreeNode>(\n    (node) => node.level,\n    (node) => node.expandable\n  );\n\n  public hasChild(treeNode: RdsFlatTreeNode) {\n    console.log(treeNode)\n    return true;\n  }\n}\n","<h2 rds-dialog-header>{{ 'date-range' | translate }}</h2>\n<div rds-dialog-content>\n    <rds-global-search\n        [includeButton]=\"false\"\n        [autoSearch]=\"true\"\n        [(ngModel)]=\"searchPattern\"></rds-global-search>\n    <p>selection-tree-table works!</p>\n    <!--rds-tree [dataSource]=\"treeData\" [treeControl]=\"treeControl\">\n        <rds-tree-node *rdsTreeNodeDef=\"let node\">\n          <rds-tree-node-text>{{ node.name }}</rds-tree-node-text>\n        </rds-tree-node>\n      \n        <rds-tree-node *rdsTreeNodeDef=\"let node; when: hasChild\">\n          <rds-tree-node-text>{{ node.name }}</rds-tree-node-text>\n          <div rdsTreeNodeContentLeft>\n            <button\n              rds-icon-button\n              rdsTreeNodeToggle\n              [attr.aria-label]=\"'Toggle ' + node.name\"\n            >\n              <rds-icon class=\"expand-arrow\" icon=\"caret_right\"></rds-icon>\n            </button>\n          </div>\n        </rds-tree-node>\n      </rds-tree>-->\n</div>\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,eAAe,EAAiCC,cAAc,QAAiF,yBAAyB;;AAQjL,OAAM,MAAOC,2BAA2B;EALxCC,YAAA;IAOqB,KAAAC,MAAM,GAAW,cAAc;IAE/B,KAAAC,IAAI,GAAQN,MAAM,CAACC,eAAe,CAAC;IAE/C,KAAAM,aAAa,GAAW,EAAE;IAE1B,KAAAC,QAAQ,GAAkB,CAC/B;MACEC,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE,CACR;QAAED,IAAI,EAAE;MAA2B,CAAE,EACrC;QAAEA,IAAI,EAAE;MAAe,CAAE;KAE5B,EACD;MACEA,IAAI,EAAE,cAAc;MACpBC,QAAQ,EAAE,CACR;QAAED,IAAI,EAAE;MAA2B,CAAE,EACrC;QAAEA,IAAI,EAAE;MAAe,CAAE;KAE5B,CACF;IAIM,KAAAE,WAAW,GAAG,IAAIT,cAAc,CACpCU,IAAI,IAAKA,IAAI,CAACC,KAAK,EACnBD,IAAI,IAAKA,IAAI,CAACE,UAAU,CAC1B;;EAEMC,QAAQA,CAACC,QAAyB;IACvCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,OAAO,IAAI;EACb;EAAC,QAAAG,CAAA,G;qBAnCUhB,2BAA2B;EAAA;EAAA,QAAAiB,EAAA,G;UAA3BjB,2BAA2B;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTxCE,EAAA,CAAAC,cAAA,YAAsB;QAAAD,EAAA,CAAAE,MAAA,GAA8B;;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAErDH,EADJ,CAAAC,cAAA,aAAwB,2BAIY;QAA5BD,EAAA,CAAAI,gBAAA,2BAAAC,gFAAAC,MAAA;UAAAN,EAAA,CAAAO,kBAAA,CAAAR,GAAA,CAAArB,aAAA,EAAA4B,MAAA,MAAAP,GAAA,CAAArB,aAAA,GAAA4B,MAAA;UAAA,OAAAA,MAAA;QAAA,EAA2B;QAACN,EAAA,CAAAG,YAAA,EAAoB;QACpDH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,kCAA2B;QAmBlCF,EAnBkC,CAAAG,YAAA,EAAI,EAmBhC;;;QAzBgBH,EAAA,CAAAQ,SAAA,EAA8B;QAA9BR,EAAA,CAAAS,iBAAA,CAAAT,EAAA,CAAAU,WAAA,qBAA8B;QAG5CV,EAAA,CAAAQ,SAAA,GAAuB;QACvBR,EADA,CAAAW,UAAA,wBAAuB,oBACJ;QACnBX,EAAA,CAAAY,gBAAA,YAAAb,GAAA,CAAArB,aAAA,CAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}