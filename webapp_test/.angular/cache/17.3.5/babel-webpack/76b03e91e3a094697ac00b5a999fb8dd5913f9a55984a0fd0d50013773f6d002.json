{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, ɵisPromise as _isPromise, Injectable, input, PLATFORM_ID, Directive, Output, ElementRef, Component, ChangeDetectionStrategy, ViewChild, makeStateKey } from '@angular/core';\nimport { from, of, Observable, Subject, BehaviorSubject, defer } from 'rxjs';\nimport { map, tap, shareReplay, mergeMap, filter, switchMap } from 'rxjs/operators';\nimport { isPlatformBrowser, NgStyle, NgClass } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nconst _c0 = [\"container\"];\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\nfunction convertPlayerOrLoaderToObservable() {\n  const ngZone = inject(NgZone);\n  const {\n    player,\n    useWebWorker\n  } = inject(LOTTIE_OPTIONS);\n  const playerOrLoader = ngZone.runOutsideAngular(() => player());\n  // We need to use `isPromise` instead of checking whether\n  // `result instanceof Promise`. In zone.js patched environments, `global.Promise`\n  // is the `ZoneAwarePromise`. Some APIs, which are likely not patched by zone.js\n  // for certain reasons, might not work with `instanceof`. For instance, the dynamic\n  // import `() => import('./chunk.js')` returns a native promise (not a `ZoneAwarePromise`),\n  // causing this check to be falsy.\n  const player$ = _isPromise(playerOrLoader) ? from(playerOrLoader).pipe(map(module => module.default || module)) : of(playerOrLoader);\n  return player$.pipe(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  tap(player => player.useWebWorker?.(useWebWorker)), shareReplay({\n    bufferSize: 1,\n    refCount: true\n  }));\n}\nclass AnimationLoader {\n  constructor() {\n    this.player$ = convertPlayerOrLoaderToObservable().pipe(mergeMap(player => raf$(this.ngZone).pipe(map(() => player))));\n    this.ngZone = inject(NgZone);\n  }\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n  }\n  resolveOptions(options, container) {\n    return Object.assign({\n      container,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true\n    }, options);\n  }\n  createAnimationItem(player, options) {\n    return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function AnimationLoader_Factory(t) {\n    return new (t || AnimationLoader)();\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationLoader,\n    factory: AnimationLoader.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction raf$(ngZone) {\n  return new Observable(subscriber => {\n    const requestId = ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n      subscriber.next();\n      subscriber.complete();\n    }));\n    return () => cancelAnimationFrame(requestId);\n  });\n}\nclass CacheableAnimationLoader extends AnimationLoader {\n  constructor() {\n    super(...arguments);\n    this.cache = new Map();\n  }\n  ngOnDestroy() {\n    this.cache.clear();\n  }\n  loadAnimation(options) {\n    return this.player$.pipe(map(player => {\n      const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n      this.awaitConfigAndCache(options, animationItem);\n      return animationItem;\n    }));\n  }\n  awaitConfigAndCache(options, animationItem) {\n    if (this.isAnimationConfigWithPath(options)) {\n      // Don't wait for the `config_ready` event if it has been cached previously.\n      if (this.cache.has(options.path)) {\n        return;\n      }\n      animationItem.addEventListener('config_ready', () => {\n        // See the comments below on why we're storing the animation data as a string.\n        this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n      });\n    }\n  }\n  transformOptions(options) {\n    if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n      return {\n        ...options,\n        path: undefined,\n        // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n        // have to retrieve a new object each time an animation is created.\n        // https://github.com/airbnb/lottie-web#html\n        // See comments for the `animationData` property.\n        animationData: JSON.parse(this.cache.get(options.path))\n      };\n    } else {\n      return options;\n    }\n  }\n  isAnimationConfigWithPath(options) {\n    return typeof options.path === 'string';\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = /* @__PURE__ */(() => {\n    let ɵCacheableAnimationLoader_BaseFactory;\n    return function CacheableAnimationLoader_Factory(t) {\n      return (ɵCacheableAnimationLoader_BaseFactory || (ɵCacheableAnimationLoader_BaseFactory = i0.ɵɵgetInheritedFactory(CacheableAnimationLoader)))(t || CacheableAnimationLoader);\n    };\n  })();\n  /** @nocollapse */\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: CacheableAnimationLoader,\n    factory: CacheableAnimationLoader.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CacheableAnimationLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction provideCacheableAnimationLoader() {\n  return [{\n    provide: AnimationLoader,\n    useExisting: CacheableAnimationLoader\n  }];\n}\nfunction provideLottieOptions(options) {\n  return [{\n    provide: LOTTIE_OPTIONS,\n    useValue: options\n  }];\n}\nclass BaseDirective {\n  constructor() {\n    this.options = input(null);\n    this.containerClass = input(null);\n    this.styles = input(null);\n    /**\n     * `animationCreated` is dispatched after calling `loadAnimation`.\n     */\n    this.animationCreated = this.getAnimationItem();\n    /**\n     * `complete` is dispatched after completing the last frame.\n     */\n    this.complete = this.awaitAnimationItemAndStartListening('complete');\n    /**\n     * `loopComplete` is dispatched after completing the frame loop.\n     */\n    this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n    /**\n     * `enterFrame` is dispatched after entering the new frame.\n     */\n    this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n    /**\n     * `segmentStart` is dispatched when the new segment is adjusted.\n     */\n    this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n    /**\n     * Original event name is `config_ready`. `config_ready` is dispatched\n     * after the needed renderer is configured.\n     */\n    this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n    /**\n     * Original event name is `data_ready`. `data_ready` is dispatched\n     * when all parts of the animation have been loaded.\n     */\n    this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n    /**\n     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n     * when elements have been added to the DOM.\n     */\n    this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n    /**\n     * `destroy` will be dispatched when the component gets destroyed,\n     * it's handy for releasing resources.\n     */\n    this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n    /**\n     * `error` will be dispatched if the Lottie player could not render\n     * some frame or parse config.\n     */\n    this.error = this.awaitAnimationItemAndStartListening('error');\n    this.ngZone = inject(NgZone);\n    this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    this.animationLoader = inject(AnimationLoader);\n    this.loadAnimation$ = new Subject();\n    this.animationItem$ = new BehaviorSubject(null);\n    this.setupLoadAnimationListener();\n  }\n  ngOnDestroy() {\n    this.destroyAnimation();\n  }\n  loadAnimation(changes, container) {\n    this.ngZone.runOutsideAngular(() => this.loadAnimation$.next([changes, container]));\n  }\n  getAnimationItem() {\n    return defer(() => this.animationItem$).pipe(filter(animationItem => animationItem !== null));\n  }\n  awaitAnimationItemAndStartListening(name) {\n    return this.getAnimationItem().pipe(switchMap(animationItem =>\n    // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n    // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n    // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n    // removes event listeners when calling `destroy()`.\n    new Observable(observer => {\n      this.ngZone.runOutsideAngular(() => {\n        animationItem.addEventListener(name, event => {\n          this.ngZone.runOutsideAngular(() => {\n            observer.next(event);\n          });\n        });\n      });\n    })));\n  }\n  setupLoadAnimationListener() {\n    const loadAnimation$ = this.loadAnimation$.pipe(filter(([changes]) => this.isBrowser && changes.options !== undefined));\n    loadAnimation$.pipe(switchMap(([changes, container]) => {\n      this.destroyAnimation();\n      return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n    }), takeUntilDestroyed()).subscribe(animationItem => {\n      this.ngZone.run(() => this.animationItem$.next(animationItem));\n    });\n  }\n  destroyAnimation() {\n    const animationItem = this.animationItem$.getValue();\n    // The `ng-lottie` component or the `lottie` directive can be destroyed\n    // before the `animationItem` is set, thus it will fail with\n    // `Cannot read property 'destroy' of null`.\n    // Potentially it can happen if the directive gets destroyed before change\n    // detection is run.\n    if (animationItem === null) {\n      return;\n    }\n    // `destroy()` will remove all events listeners.\n    animationItem.destroy();\n    this.animationItem$.next(null);\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function BaseDirective_Factory(t) {\n    return new (t || BaseDirective)();\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseDirective,\n    selectors: [[\"\", \"lottie\", \"\"]],\n    inputs: {\n      options: [i0.ɵɵInputFlags.SignalBased, \"options\"],\n      containerClass: [i0.ɵɵInputFlags.SignalBased, \"containerClass\"],\n      styles: [i0.ɵɵInputFlags.SignalBased, \"styles\"]\n    },\n    outputs: {\n      animationCreated: \"animationCreated\",\n      complete: \"complete\",\n      loopComplete: \"loopComplete\",\n      enterFrame: \"enterFrame\",\n      segmentStart: \"segmentStart\",\n      configReady: \"configReady\",\n      dataReady: \"dataReady\",\n      domLoaded: \"domLoaded\",\n      destroy: \"destroy\",\n      error: \"error\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]'\n    }]\n  }], () => [], {\n    animationCreated: [{\n      type: Output\n    }],\n    complete: [{\n      type: Output\n    }],\n    loopComplete: [{\n      type: Output\n    }],\n    enterFrame: [{\n      type: Output\n    }],\n    segmentStart: [{\n      type: Output\n    }],\n    configReady: [{\n      type: Output\n    }],\n    dataReady: [{\n      type: Output\n    }],\n    domLoaded: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }]\n  });\n})();\nclass LottieDirective extends BaseDirective {\n  constructor() {\n    super(...arguments);\n    this.host = inject(ElementRef);\n  }\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.host.nativeElement);\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = /* @__PURE__ */(() => {\n    let ɵLottieDirective_BaseFactory;\n    return function LottieDirective_Factory(t) {\n      return (ɵLottieDirective_BaseFactory || (ɵLottieDirective_BaseFactory = i0.ɵɵgetInheritedFactory(LottieDirective)))(t || LottieDirective);\n    };\n  })();\n  /** @nocollapse */\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: LottieDirective,\n    selectors: [[\"\", \"lottie\", \"\"]],\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lottie]',\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass LottieComponent extends BaseDirective {\n  constructor() {\n    super(...arguments);\n    this.width = input(null);\n    this.height = input(null);\n    this.container = null;\n  }\n  ngOnChanges(changes) {\n    super.loadAnimation(changes, this.container.nativeElement);\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = /* @__PURE__ */(() => {\n    let ɵLottieComponent_BaseFactory;\n    return function LottieComponent_Factory(t) {\n      return (ɵLottieComponent_BaseFactory || (ɵLottieComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LottieComponent)))(t || LottieComponent);\n    };\n  })();\n  /** @nocollapse */\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LottieComponent,\n    selectors: [[\"ng-lottie\"]],\n    viewQuery: function LottieComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      }\n    },\n    inputs: {\n      width: [i0.ɵɵInputFlags.SignalBased, \"width\"],\n      height: [i0.ɵɵInputFlags.SignalBased, \"height\"]\n    },\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 6,\n    consts: [[\"container\", \"\"], [3, \"ngStyle\", \"ngClass\"]],\n    template: function LottieComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 1, 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.width() || \"100%\")(\"height\", ctx.height() || \"100%\");\n        i0.ɵɵproperty(\"ngStyle\", ctx.styles())(\"ngClass\", ctx.containerClass());\n      }\n    },\n    dependencies: [NgStyle, NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-lottie',\n      template: `\n    <div\n      #container\n      [style.width]=\"width() || '100%'\"\n      [style.height]=\"height() || '100%'\"\n      [ngStyle]=\"styles()\"\n      [ngClass]=\"containerClass()\"\n    ></div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [NgStyle, NgClass]\n    }]\n  }], null, {\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        static: true\n      }]\n    }]\n  });\n})();\nfunction transformAnimationFilenameToKey(animation) {\n  const [animationName] = animation.split('.json');\n  return `animation-${animationName}`;\n}\nclass LottieTransferState {\n  constructor(transferState) {\n    this.transferState = transferState;\n  }\n  get(animation) {\n    const animationKey = transformAnimationFilenameToKey(animation);\n    const stateKey = makeStateKey(animationKey);\n    return this.transferState.get(stateKey, null);\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function LottieTransferState_Factory(t) {\n    return new (t || LottieTransferState)(i0.ɵɵinject(i0.TransferState));\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LottieTransferState,\n    factory: LottieTransferState.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LottieTransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.TransferState\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationLoader, BaseDirective, LottieComponent, LottieDirective, LottieTransferState, provideCacheableAnimationLoader, provideLottieOptions, transformAnimationFilenameToKey, CacheableAnimationLoader as ɵCacheableAnimationLoader, LOTTIE_OPTIONS as ɵLOTTIE_OPTIONS };","map":{"version":3,"names":["i0","InjectionToken","inject","NgZone","ɵisPromise","_isPromise","Injectable","input","PLATFORM_ID","Directive","Output","ElementRef","Component","ChangeDetectionStrategy","ViewChild","makeStateKey","from","of","Observable","Subject","BehaviorSubject","defer","map","tap","shareReplay","mergeMap","filter","switchMap","isPlatformBrowser","NgStyle","NgClass","takeUntilDestroyed","_c0","LOTTIE_OPTIONS","convertPlayerOrLoaderToObservable","ngZone","player","useWebWorker","playerOrLoader","runOutsideAngular","player$","pipe","module","default","bufferSize","refCount","AnimationLoader","constructor","raf$","loadAnimation","options","createAnimationItem","resolveOptions","container","Object","assign","renderer","loop","autoplay","_","ɵfac","AnimationLoader_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","subscriber","requestId","requestAnimationFrame","next","complete","cancelAnimationFrame","CacheableAnimationLoader","arguments","cache","Map","ngOnDestroy","clear","animationItem","transformOptions","awaitConfigAndCache","isAnimationConfigWithPath","has","path","addEventListener","set","JSON","stringify","undefined","animationData","parse","get","ɵCacheableAnimationLoader_BaseFactory","CacheableAnimationLoader_Factory","ɵɵgetInheritedFactory","provideCacheableAnimationLoader","provide","useExisting","provideLottieOptions","useValue","BaseDirective","containerClass","styles","animationCreated","getAnimationItem","awaitAnimationItemAndStartListening","loopComplete","enterFrame","segmentStart","configReady","dataReady","domLoaded","destroy","error","isBrowser","animationLoader","loadAnimation$","animationItem$","setupLoadAnimationListener","destroyAnimation","changes","name","observer","event","currentValue","subscribe","run","getValue","BaseDirective_Factory","ɵdir","ɵɵdefineDirective","selectors","inputs","ɵɵInputFlags","SignalBased","outputs","selector","LottieDirective","host","ngOnChanges","nativeElement","ɵLottieDirective_BaseFactory","LottieDirective_Factory","standalone","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","LottieComponent","width","height","ɵLottieComponent_BaseFactory","LottieComponent_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","LottieComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","ɵɵStandaloneFeature","decls","vars","consts","template","LottieComponent_Template","ɵɵelement","ɵɵstyleProp","ɵɵproperty","dependencies","encapsulation","changeDetection","OnPush","imports","static","transformAnimationFilenameToKey","animation","animationName","split","LottieTransferState","transferState","animationKey","stateKey","LottieTransferState_Factory","ɵɵinject","TransferState","ɵCacheableAnimationLoader","ɵLOTTIE_OPTIONS"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/node_modules/ngx-lottie/fesm2022/ngx-lottie.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, ɵisPromise as _isPromise, Injectable, input, PLATFORM_ID, Directive, Output, ElementRef, Component, ChangeDetectionStrategy, ViewChild, makeStateKey } from '@angular/core';\nimport { from, of, Observable, Subject, BehaviorSubject, defer } from 'rxjs';\nimport { map, tap, shareReplay, mergeMap, filter, switchMap } from 'rxjs/operators';\nimport { isPlatformBrowser, NgStyle, NgClass } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst LOTTIE_OPTIONS = new InjectionToken('LottieOptions');\n\nfunction convertPlayerOrLoaderToObservable() {\n    const ngZone = inject(NgZone);\n    const { player, useWebWorker } = inject(LOTTIE_OPTIONS);\n    const playerOrLoader = ngZone.runOutsideAngular(() => player());\n    // We need to use `isPromise` instead of checking whether\n    // `result instanceof Promise`. In zone.js patched environments, `global.Promise`\n    // is the `ZoneAwarePromise`. Some APIs, which are likely not patched by zone.js\n    // for certain reasons, might not work with `instanceof`. For instance, the dynamic\n    // import `() => import('./chunk.js')` returns a native promise (not a `ZoneAwarePromise`),\n    // causing this check to be falsy.\n    const player$ = _isPromise(playerOrLoader)\n        ? from(playerOrLoader).pipe(map(module => module.default || module))\n        : of(playerOrLoader);\n    return player$.pipe(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tap(player => player.useWebWorker?.(useWebWorker)), shareReplay({ bufferSize: 1, refCount: true }));\n}\nclass AnimationLoader {\n    constructor() {\n        this.player$ = convertPlayerOrLoaderToObservable().pipe(mergeMap(player => raf$(this.ngZone).pipe(map(() => player))));\n        this.ngZone = inject(NgZone);\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => this.createAnimationItem(player, options)));\n    }\n    resolveOptions(options, container) {\n        return Object.assign({\n            container,\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n        }, options);\n    }\n    createAnimationItem(player, options) {\n        return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AnimationLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AnimationLoader, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AnimationLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nfunction raf$(ngZone) {\n    return new Observable(subscriber => {\n        const requestId = ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n            subscriber.next();\n            subscriber.complete();\n        }));\n        return () => cancelAnimationFrame(requestId);\n    });\n}\n\nclass CacheableAnimationLoader extends AnimationLoader {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    ngOnDestroy() {\n        this.cache.clear();\n    }\n    loadAnimation(options) {\n        return this.player$.pipe(map(player => {\n            const animationItem = this.createAnimationItem(player, this.transformOptions(options));\n            this.awaitConfigAndCache(options, animationItem);\n            return animationItem;\n        }));\n    }\n    awaitConfigAndCache(options, animationItem) {\n        if (this.isAnimationConfigWithPath(options)) {\n            // Don't wait for the `config_ready` event if it has been cached previously.\n            if (this.cache.has(options.path)) {\n                return;\n            }\n            animationItem.addEventListener('config_ready', () => {\n                // See the comments below on why we're storing the animation data as a string.\n                this.cache.set(options.path, JSON.stringify(animationItem['animationData']));\n            });\n        }\n    }\n    transformOptions(options) {\n        if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {\n            return {\n                ...options,\n                path: undefined,\n                // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we\n                // have to retrieve a new object each time an animation is created.\n                // https://github.com/airbnb/lottie-web#html\n                // See comments for the `animationData` property.\n                animationData: JSON.parse(this.cache.get(options.path)),\n            };\n        }\n        else {\n            return options;\n        }\n    }\n    isAnimationConfigWithPath(options) {\n        return typeof options.path === 'string';\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CacheableAnimationLoader, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CacheableAnimationLoader, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CacheableAnimationLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction provideCacheableAnimationLoader() {\n    return [\n        {\n            provide: AnimationLoader,\n            useExisting: CacheableAnimationLoader,\n        },\n    ];\n}\nfunction provideLottieOptions(options) {\n    return [\n        {\n            provide: LOTTIE_OPTIONS,\n            useValue: options,\n        },\n    ];\n}\n\nclass BaseDirective {\n    constructor() {\n        this.options = input(null);\n        this.containerClass = input(null);\n        this.styles = input(null);\n        /**\n         * `animationCreated` is dispatched after calling `loadAnimation`.\n         */\n        this.animationCreated = this.getAnimationItem();\n        /**\n         * `complete` is dispatched after completing the last frame.\n         */\n        this.complete = this.awaitAnimationItemAndStartListening('complete');\n        /**\n         * `loopComplete` is dispatched after completing the frame loop.\n         */\n        this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');\n        /**\n         * `enterFrame` is dispatched after entering the new frame.\n         */\n        this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');\n        /**\n         * `segmentStart` is dispatched when the new segment is adjusted.\n         */\n        this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');\n        /**\n         * Original event name is `config_ready`. `config_ready` is dispatched\n         * after the needed renderer is configured.\n         */\n        this.configReady = this.awaitAnimationItemAndStartListening('config_ready');\n        /**\n         * Original event name is `data_ready`. `data_ready` is dispatched\n         * when all parts of the animation have been loaded.\n         */\n        this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');\n        /**\n         * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched\n         * when elements have been added to the DOM.\n         */\n        this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');\n        /**\n         * `destroy` will be dispatched when the component gets destroyed,\n         * it's handy for releasing resources.\n         */\n        this.destroy = this.awaitAnimationItemAndStartListening('destroy');\n        /**\n         * `error` will be dispatched if the Lottie player could not render\n         * some frame or parse config.\n         */\n        this.error = this.awaitAnimationItemAndStartListening('error');\n        this.ngZone = inject(NgZone);\n        this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n        this.animationLoader = inject(AnimationLoader);\n        this.loadAnimation$ = new Subject();\n        this.animationItem$ = new BehaviorSubject(null);\n        this.setupLoadAnimationListener();\n    }\n    ngOnDestroy() {\n        this.destroyAnimation();\n    }\n    loadAnimation(changes, container) {\n        this.ngZone.runOutsideAngular(() => this.loadAnimation$.next([changes, container]));\n    }\n    getAnimationItem() {\n        return defer(() => this.animationItem$).pipe(filter((animationItem) => animationItem !== null));\n    }\n    awaitAnimationItemAndStartListening(name) {\n        return this.getAnimationItem().pipe(switchMap(animationItem => \n        // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.\n        // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from\n        // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`\n        // removes event listeners when calling `destroy()`.\n        new Observable(observer => {\n            this.ngZone.runOutsideAngular(() => {\n                animationItem.addEventListener(name, event => {\n                    this.ngZone.runOutsideAngular(() => {\n                        observer.next(event);\n                    });\n                });\n            });\n        })));\n    }\n    setupLoadAnimationListener() {\n        const loadAnimation$ = this.loadAnimation$.pipe(filter(([changes]) => this.isBrowser && changes.options !== undefined));\n        loadAnimation$\n            .pipe(switchMap(([changes, container]) => {\n            this.destroyAnimation();\n            return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));\n        }), takeUntilDestroyed())\n            .subscribe(animationItem => {\n            this.ngZone.run(() => this.animationItem$.next(animationItem));\n        });\n    }\n    destroyAnimation() {\n        const animationItem = this.animationItem$.getValue();\n        // The `ng-lottie` component or the `lottie` directive can be destroyed\n        // before the `animationItem` is set, thus it will fail with\n        // `Cannot read property 'destroy' of null`.\n        // Potentially it can happen if the directive gets destroyed before change\n        // detection is run.\n        if (animationItem === null) {\n            return;\n        }\n        // `destroy()` will remove all events listeners.\n        animationItem.destroy();\n        this.animationItem$.next(null);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: BaseDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"17.2.4\", type: BaseDirective, selector: \"[lottie]\", inputs: { options: { classPropertyName: \"options\", publicName: \"options\", isSignal: true, isRequired: false, transformFunction: null }, containerClass: { classPropertyName: \"containerClass\", publicName: \"containerClass\", isSignal: true, isRequired: false, transformFunction: null }, styles: { classPropertyName: \"styles\", publicName: \"styles\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { animationCreated: \"animationCreated\", complete: \"complete\", loopComplete: \"loopComplete\", enterFrame: \"enterFrame\", segmentStart: \"segmentStart\", configReady: \"configReady\", dataReady: \"dataReady\", domLoaded: \"domLoaded\", destroy: \"destroy\", error: \"error\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: BaseDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]' }]\n        }], ctorParameters: () => [], propDecorators: { animationCreated: [{\n                type: Output\n            }], complete: [{\n                type: Output\n            }], loopComplete: [{\n                type: Output\n            }], enterFrame: [{\n                type: Output\n            }], segmentStart: [{\n                type: Output\n            }], configReady: [{\n                type: Output\n            }], dataReady: [{\n                type: Output\n            }], domLoaded: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }] } });\n\nclass LottieDirective extends BaseDirective {\n    constructor() {\n        super(...arguments);\n        this.host = inject(ElementRef);\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.host.nativeElement);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.4\", type: LottieDirective, isStandalone: true, selector: \"[lottie]\", usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[lottie]', standalone: true }]\n        }] });\n\nclass LottieComponent extends BaseDirective {\n    constructor() {\n        super(...arguments);\n        this.width = input(null);\n        this.height = input(null);\n        this.container = null;\n    }\n    ngOnChanges(changes) {\n        super.loadAnimation(changes, this.container.nativeElement);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"17.2.4\", type: LottieComponent, isStandalone: true, selector: \"ng-lottie\", inputs: { width: { classPropertyName: \"width\", publicName: \"width\", isSignal: true, isRequired: false, transformFunction: null }, height: { classPropertyName: \"height\", publicName: \"height\", isSignal: true, isRequired: false, transformFunction: null } }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      #container\n      [style.width]=\"width() || '100%'\"\n      [style.height]=\"height() || '100%'\"\n      [ngStyle]=\"styles()\"\n      [ngClass]=\"containerClass()\"\n    ></div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng-lottie',\n                    template: `\n    <div\n      #container\n      [style.width]=\"width() || '100%'\"\n      [style.height]=\"height() || '100%'\"\n      [ngStyle]=\"styles()\"\n      [ngClass]=\"containerClass()\"\n    ></div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                    imports: [NgStyle, NgClass],\n                }]\n        }], propDecorators: { container: [{\n                type: ViewChild,\n                args: ['container', { static: true }]\n            }] } });\n\nfunction transformAnimationFilenameToKey(animation) {\n    const [animationName] = animation.split('.json');\n    return `animation-${animationName}`;\n}\n\nclass LottieTransferState {\n    constructor(transferState) {\n        this.transferState = transferState;\n    }\n    get(animation) {\n        const animationKey = transformAnimationFilenameToKey(animation);\n        const stateKey = makeStateKey(animationKey);\n        return this.transferState.get(stateKey, null);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieTransferState, deps: [{ token: i0.TransferState }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieTransferState, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: LottieTransferState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.TransferState }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationLoader, BaseDirective, LottieComponent, LottieDirective, LottieTransferState, provideCacheableAnimationLoader, provideLottieOptions, transformAnimationFilenameToKey, CacheableAnimationLoader as ɵCacheableAnimationLoader, LOTTIE_OPTIONS as ɵLOTTIE_OPTIONS };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}