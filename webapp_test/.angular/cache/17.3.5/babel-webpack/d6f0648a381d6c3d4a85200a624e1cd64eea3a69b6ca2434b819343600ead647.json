{"ast":null,"code":"import { inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource } from '@rds/angular-components';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nconst _c0 = a0 => ({\n  \"outlier\": a0\n});\nfunction PcvModelSelectionBatchesComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 20);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"rds-checkbox\", 23);\n    i0.ɵɵlistener(\"click\", function PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template_rds_checkbox_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    })(\"change\", function PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template_rds_checkbox_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const element_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r3.toggleSelection(element_r3) : null);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"aria-label\", ctx_r3.checkboxLabel(element_r3))(\"checked\", ctx_r3.isSelected(element_r3))(\"disabled\", ctx_r3.isDisabled(element_r3));\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtemplate(1, PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template, 1, 3, \"rds-checkbox\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, element_r3.outlier_flag === false ? 1 : -1);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-model-insights.batch_id\"));\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r5.batch_id);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_th_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-model-insights.predicted_pcv_10h\"));\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r6.predicted_pcv_10h);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_th_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-model-insights.predicted_pcv_60h\"));\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r7.predicted_pcv_60h);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_th_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-model-insights.measured_pcv\"));\n  }\n}\nfunction PcvModelSelectionBatchesComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r8.measured_pcv);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\nfunction PcvModelSelectionBatchesComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n  if (rf & 2) {\n    const row_r9 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, row_r9.outlier_flag === true))(\"disabled\", ctx_r3.isDisabled(row_r9));\n  }\n}\nexport class PcvModelSelectionBatchesComponent {\n  get search() {\n    return this.dataSource.filter;\n  }\n  set search(term) {\n    this.dataSource.filter = term;\n  }\n  get batches() {\n    return this.data.batches;\n  }\n  get selectedBatchIds() {\n    return this._selectedBatchIds;\n  }\n  constructor() {\n    this.rdsDialogRef = inject(RdsDialogRef);\n    this.data = inject(RDS_DIALOG_DATA);\n    this._selectedBatchIds = [...this.data.selectedBatchIds] || [];\n    this.dataSource = new RdsTableDataSource(this.batches).init();\n    this.displayedColumns = ['multiselect', 'batch_id', 'predicted_pcv_10h', 'predicted_pcv_60h', 'measured_pcv'];\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n  isDisabled(row) {\n    if (this.selectedBatchIds.includes(row.batch_id)) {\n      return false;\n    }\n    if (this.selectedBatchIds.length === this.data.batchlimit) {\n      return true;\n    }\n    return false;\n  }\n  checkboxLabel(row) {\n    return row.batch_id;\n  }\n  isSelected(row) {\n    return this.selectedBatchIds.includes(row.batch_id);\n  }\n  toggleSelection(row) {\n    if (this._selectedBatchIds.includes(row.batch_id)) {\n      this._selectedBatchIds = this._selectedBatchIds.filter(batchId => batchId !== row.batch_id);\n    } else {\n      this._selectedBatchIds = [...this.selectedBatchIds, row.batch_id];\n    }\n  }\n  close() {\n    this.rdsDialogRef.close();\n  }\n  submit() {\n    this.rdsDialogRef.close(this._selectedBatchIds);\n  }\n  filterPredicate(data, filter) {\n    if (!filter) {\n      return true;\n    }\n    return data.batch_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n  sortData(data, sort) {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n  static #_ = this.ɵfac = function PcvModelSelectionBatchesComponent_Factory(t) {\n    return new (t || PcvModelSelectionBatchesComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcvModelSelectionBatchesComponent,\n    selectors: [[\"app-pcv-model-selection-batches\"]],\n    viewQuery: function PcvModelSelectionBatchesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(RdsSortDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 36,\n    vars: 21,\n    consts: [[\"sort\", \"\"], [\"rds-dialog-header\", \"\"], [\"icon\", \"close\", 3, \"click\"], [\"rds-dialog-content\", \"\"], [\"closable\", \"\"], [3, \"innerHTML\"], [3, \"ngModelChange\", \"includeButton\", \"autoSearch\", \"placeholder\", \"ngModel\"], [\"rds-table\", \"\", \"rdsSort\", \"\", 3, \"dataSource\"], [\"rdsColumnDef\", \"multiselect\"], [\"rds-header-cell\", \"\", 4, \"rdsHeaderCellDef\"], [\"rds-cell\", \"\", 4, \"rdsCellDef\"], [\"rdsColumnDef\", \"batch_id\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\", 4, \"rdsHeaderCellDef\"], [\"rdsColumnDef\", \"predicted_pcv_10h\"], [\"rdsColumnDef\", \"predicted_pcv_60h\"], [\"rdsColumnDef\", \"measured_pcv\"], [\"rds-header-row\", \"\", 4, \"rdsHeaderRowDef\"], [\"rds-row\", \"\", 3, \"ngClass\", \"disabled\", 4, \"rdsRowDef\", \"rdsRowDefColumns\"], [\"rds-dialog-actions-container\", \"\"], [\"rds-primary-button\", \"\", \"size\", \"m\", 3, \"click\"], [\"rds-header-cell\", \"\"], [\"rds-cell\", \"\"], [3, \"aria-label\", \"checked\", \"disabled\"], [3, \"click\", \"change\", \"aria-label\", \"checked\", \"disabled\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\"], [\"rds-header-row\", \"\"], [\"rds-row\", \"\", 3, \"ngClass\", \"disabled\"]],\n    template: function PcvModelSelectionBatchesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\", 1);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"rds-icon\", 2);\n        i0.ɵɵlistener(\"click\", function PcvModelSelectionBatchesComponent_Template_rds_icon_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"rds-alert\", 4);\n        i0.ɵɵelement(9, \"div\", 5);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"rds-global-search\", 6);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function PcvModelSelectionBatchesComponent_Template_rds_global_search_ngModelChange_11_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.dataSource.filter, $event) || (ctx.dataSource.filter = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"table\", 7, 0);\n        i0.ɵɵelementContainerStart(15, 8);\n        i0.ɵɵtemplate(16, PcvModelSelectionBatchesComponent_th_16_Template, 1, 0, \"th\", 9)(17, PcvModelSelectionBatchesComponent_td_17_Template, 2, 1, \"td\", 10);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(18, 11);\n        i0.ɵɵtemplate(19, PcvModelSelectionBatchesComponent_th_19_Template, 3, 3, \"th\", 12)(20, PcvModelSelectionBatchesComponent_td_20_Template, 2, 1, \"td\", 10);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(21, 13);\n        i0.ɵɵtemplate(22, PcvModelSelectionBatchesComponent_th_22_Template, 3, 3, \"th\", 12)(23, PcvModelSelectionBatchesComponent_td_23_Template, 2, 1, \"td\", 10);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(24, 14);\n        i0.ɵɵtemplate(25, PcvModelSelectionBatchesComponent_th_25_Template, 3, 3, \"th\", 12)(26, PcvModelSelectionBatchesComponent_td_26_Template, 2, 1, \"td\", 10);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(27, 15);\n        i0.ɵɵtemplate(28, PcvModelSelectionBatchesComponent_th_28_Template, 3, 3, \"th\", 12)(29, PcvModelSelectionBatchesComponent_td_29_Template, 2, 1, \"td\", 10);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(30, PcvModelSelectionBatchesComponent_tr_30_Template, 1, 0, \"tr\", 16)(31, PcvModelSelectionBatchesComponent_tr_31_Template, 1, 4, \"tr\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 18)(33, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function PcvModelSelectionBatchesComponent_Template_button_click_33_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submit());\n        });\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"translate\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 11, \"pcv-model-insights.select-batches-button\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 13, \"pcv-model-insights.select-batches-description\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(10, 15, \"pcv-model-insights.select-batches-hint\"), i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"includeButton\", false)(\"autoSearch\", true)(\"placeholder\", i0.ɵɵpipeBind1(12, 17, \"pcv-model-insights.search-batches-placeholder\"));\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.dataSource.filter);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"rdsHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"rdsRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(35, 19, \"pcv-model-insights.select-batches-submit\"));\n      }\n    },\n    styles: [\"[_nghost-%COMP%]   tr.outlier[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  background-color: #FEE6EC;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wY3YtbW9kZWwtaW5zaWdodHMvcGN2LW1vZGVsLXNlbGVjdGlvbi1iYXRjaGVzL3Bjdi1tb2RlbC1zZWxlY3Rpb24tYmF0Y2hlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHWTtFQUNJLHlCQUFBO0FBRmhCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIHRyIHtcbiAgICAgICAgJi5vdXRsaWVyIHtcbiAgICAgICAgICAgIHRkIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVFNkVDO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","RDS_DIALOG_DATA","RdsDialogRef","RdsSortDirective","RdsTableDataSource","_","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template_rds_checkbox_click_0_listener","$event","ɵɵrestoreView","_r2","ɵɵresetView","stopPropagation","PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template_rds_checkbox_change_0_listener","element_r3","ɵɵnextContext","$implicit","ctx_r3","toggleSelection","ɵɵelementEnd","ɵɵproperty","checkboxLabel","isSelected","isDisabled","ɵɵtemplate","PcvModelSelectionBatchesComponent_td_17_Conditional_1_Template","ɵɵadvance","ɵɵconditional","outlier_flag","ɵɵtext","ɵɵtextInterpolate","ɵɵpipeBind1","element_r5","batch_id","element_r6","predicted_pcv_10h","element_r7","predicted_pcv_60h","element_r8","measured_pcv","ɵɵpureFunction1","_c0","row_r9","PcvModelSelectionBatchesComponent","search","dataSource","filter","term","batches","data","selectedBatchIds","_selectedBatchIds","constructor","rdsDialogRef","init","displayedColumns","filterPredicate","sortData","ngAfterViewInit","sort","row","includes","length","batchlimit","batchId","close","submit","toLocaleLowerCase","active","direction","orderBy","_2","selectors","viewQuery","PcvModelSelectionBatchesComponent_Query","rf","ctx","PcvModelSelectionBatchesComponent_Template_rds_icon_click_3_listener","_r1","ɵɵtwoWayListener","PcvModelSelectionBatchesComponent_Template_rds_global_search_ngModelChange_11_listener","ɵɵtwoWayBindingSet","ɵɵelementContainerStart","PcvModelSelectionBatchesComponent_th_16_Template","PcvModelSelectionBatchesComponent_td_17_Template","PcvModelSelectionBatchesComponent_th_19_Template","PcvModelSelectionBatchesComponent_td_20_Template","PcvModelSelectionBatchesComponent_th_22_Template","PcvModelSelectionBatchesComponent_td_23_Template","PcvModelSelectionBatchesComponent_th_25_Template","PcvModelSelectionBatchesComponent_td_26_Template","PcvModelSelectionBatchesComponent_th_28_Template","PcvModelSelectionBatchesComponent_td_29_Template","PcvModelSelectionBatchesComponent_tr_30_Template","PcvModelSelectionBatchesComponent_tr_31_Template","PcvModelSelectionBatchesComponent_Template_button_click_33_listener","ɵɵsanitizeHtml","ɵɵtwoWayProperty"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-model-insights/pcv-model-selection-batches/pcv-model-selection-batches.component.ts","/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-model-insights/pcv-model-selection-batches/pcv-model-selection-batches.component.html"],"sourcesContent":["import { AfterViewInit, Component, ViewChild, inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource, SortDirection } from '@rds/angular-components';\nimport { IBatch } from '../../../../types/pcv-model-insights';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-pcv-model-selection-batches',\n  templateUrl: './pcv-model-selection-batches.component.html',\n  styleUrl: './pcv-model-selection-batches.component.scss'\n})\nexport class PcvModelSelectionBatchesComponent implements AfterViewInit {\n\n  public readonly rdsDialogRef = inject<RdsDialogRef<PcvModelSelectionBatchesComponent>>(RdsDialogRef);\n\n  protected readonly data: any = inject(RDS_DIALOG_DATA);\n\n  @ViewChild(RdsSortDirective) sort!: RdsSortDirective;\n\n  private _selectedBatchIds: string[] = [...this.data.selectedBatchIds] || []\n\n  readonly dataSource = new RdsTableDataSource(this.batches).init();\n\n  get search(): string {\n    return this.dataSource.filter;\n  }\n\n  set search(term: string) {\n    this.dataSource.filter = term;\n  }\n\n  get batches(): IBatch[] {\n    return this.data.batches;\n  }\n\n  get selectedBatchIds(): string[] {\n    return this._selectedBatchIds;\n  }\n\n  public displayedColumns: (keyof IBatch | \"actions\" | \"multiselect\")[] = [\n    'multiselect',\n    'batch_id',\n    'predicted_pcv_10h',\n    'predicted_pcv_60h',\n    'measured_pcv'\n  ];\n\n  constructor() {\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n\n  }\n\n  public isDisabled(row: IBatch): boolean {\n    if (this.selectedBatchIds.includes(row.batch_id)) {\n      return false;\n    }\n    if (this.selectedBatchIds.length === this.data.batchlimit) {\n      return true;\n    }\n    return false;\n  }\n\n  public checkboxLabel(row: IBatch): string {\n    return row.batch_id;\n  }\n\n  public isSelected(row: IBatch): boolean {\n    return this.selectedBatchIds.includes(row.batch_id);\n  }\n\n  public toggleSelection(row: IBatch): void {\n    if (this._selectedBatchIds.includes(row.batch_id)) {\n      this._selectedBatchIds = this._selectedBatchIds.filter((batchId: string) => batchId !== row.batch_id);\n    } else {\n      this._selectedBatchIds = [...this.selectedBatchIds, row.batch_id];\n    }\n  }\n\n  public close(): void {\n    this.rdsDialogRef.close();\n  }\n\n  public submit(): void {\n    this.rdsDialogRef.close(this._selectedBatchIds);\n  }\n\n  private filterPredicate(data: IBatch, filter: string): boolean {\n    if (!filter) {\n      return true;\n    }\n    return data.batch_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n\n  private sortData(data: IBatch[], sort: RdsSortDirective): IBatch[] {\n    const active: string | null = sort.active;\n    const direction: SortDirection = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n}\n","<h2 rds-dialog-header>{{ 'pcv-model-insights.select-batches-button' | translate }}<rds-icon icon=\"close\" (click)=\"close()\"/></h2>\n<div rds-dialog-content>\n  <p>{{ 'pcv-model-insights.select-batches-description' | translate }}</p>\n  <rds-alert closable><div [innerHTML]=\"'pcv-model-insights.select-batches-hint' | translate\"></div></rds-alert>\n  <rds-global-search\n      [includeButton]=\"false\"\n      [autoSearch]=\"true\"\n      [placeholder]=\"'pcv-model-insights.search-batches-placeholder' | translate\"\n      [(ngModel)]=\"dataSource.filter\"></rds-global-search>\n  <table rds-table [dataSource]=\"dataSource\" rdsSort #sort>\n    <ng-container rdsColumnDef=\"multiselect\">\n      <th rds-header-cell *rdsHeaderCellDef></th>\n      <td rds-cell *rdsCellDef=\"let element\">\n        @if(element.outlier_flag === false) {\n          <rds-checkbox\n            (click)=\"$event.stopPropagation()\"\n            [aria-label]=\"checkboxLabel(element)\"\n            [checked]=\"isSelected(element)\"\n            (change)=\"$event ? toggleSelection(element) : null\"\n            [disabled]=\"isDisabled(element)\"\n          ></rds-checkbox>\n        }\n      </td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"batch_id\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-model-insights.batch_id' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.batch_id }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"predicted_pcv_10h\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-model-insights.predicted_pcv_10h' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.predicted_pcv_10h }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"predicted_pcv_60h\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-model-insights.predicted_pcv_60h' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.predicted_pcv_60h }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"measured_pcv\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-model-insights.measured_pcv' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.measured_pcv }}</td>\n    </ng-container>\n    <tr rds-header-row *rdsHeaderRowDef=\"displayedColumns\"></tr>\n    <tr rds-row *rdsRowDef=\"let row; columns: displayedColumns\" [ngClass]=\"{'outlier': row.outlier_flag === true }\" [disabled]=\"isDisabled(row)\"></tr>\n  </table>\n</div>\n<div rds-dialog-actions-container>\n  <button rds-primary-button size=\"m\" (click)=\"submit()\">{{ 'pcv-model-insights.select-batches-submit' | translate }}</button>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}