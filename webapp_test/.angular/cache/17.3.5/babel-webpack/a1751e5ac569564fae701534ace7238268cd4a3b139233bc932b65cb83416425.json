{"ast":null,"code":"import { inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource } from '@rds/angular-components';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nfunction PcvModelSelectionParametersComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 16)(1, \"rds-checkbox\", 17);\n    i0.ɵɵlistener(\"changed\", function PcvModelSelectionParametersComponent_th_10_Template_rds_checkbox_changed_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event.checked ? ctx_r2.selectAll() : ctx_r2.deselectAll());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r2.isAllChecked())(\"indeterminate\", ctx_r2.isIntermediate())(\"aria-label\", ctx_r2.allCheckboxLabel());\n  }\n}\nfunction PcvModelSelectionParametersComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 18)(1, \"rds-checkbox\", 19);\n    i0.ɵɵlistener(\"click\", function PcvModelSelectionParametersComponent_td_11_Template_rds_checkbox_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      return i0.ɵɵresetView($event.stopPropagation());\n    })(\"change\", function PcvModelSelectionParametersComponent_td_11_Template_rds_checkbox_change_1_listener($event) {\n      const element_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r2.toggleSelection(element_r5) : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"aria-label\", ctx_r2.checkboxLabel(element_r5))(\"checked\", ctx_r2.isSelected(element_r5))(\"disabled\", ctx_r2.isDisabled(element_r5));\n  }\n}\nfunction PcvModelSelectionParametersComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-model-insights.parameter_id\"));\n  }\n}\nfunction PcvModelSelectionParametersComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r6.parameter_id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(element_r6.description);\n  }\n}\nfunction PcvModelSelectionParametersComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\nfunction PcvModelSelectionParametersComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n  if (rf & 2) {\n    const row_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isDisabled(row_r7));\n  }\n}\nexport class PcvModelSelectionParametersComponent {\n  get search() {\n    return this.dataSource.filter;\n  }\n  set search(term) {\n    this.dataSource.filter = term;\n  }\n  get parameters() {\n    return this.data.parameters;\n  }\n  get selectedParameterIds() {\n    return this._selectedParameterIds;\n  }\n  constructor() {\n    this.rdsDialogRef = inject(RdsDialogRef);\n    this.data = inject(RDS_DIALOG_DATA);\n    this._selectedParameterIds = [...this.data.selectedParameterIds] || [];\n    this.dataSource = new RdsTableDataSource(this.parameters).init();\n    this.displayedColumns = ['multiselect', 'parameter_id'];\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n  isDisabled(row) {\n    if (this.selectedParameterIds.includes(row.parameter_id)) {\n      return false;\n    }\n    return false;\n  }\n  checkboxLabel(row) {\n    return row.parameter_id;\n  }\n  isSelected(row) {\n    return this.selectedParameterIds.includes(row.parameter_id);\n  }\n  toggleSelection(row) {\n    if (this._selectedParameterIds.includes(row.parameter_id)) {\n      this._selectedParameterIds = this._selectedParameterIds.filter(parameterId => parameterId !== row.parameter_id);\n    } else {\n      this._selectedParameterIds = [...this.selectedParameterIds, row.parameter_id];\n    }\n  }\n  close() {\n    this.rdsDialogRef.close();\n  }\n  submit() {\n    this.rdsDialogRef.close(this._selectedParameterIds);\n  }\n  submitAll() {\n    this.rdsDialogRef.close(this.parameters.map(paramater => paramater.parameter_id));\n  }\n  filterPredicate(data, filter) {\n    if (!filter) {\n      return true;\n    }\n    return data.parameter_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n  sortData(data, sort) {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n  selectAll() {\n    this._selectedParameterIds = this.dataSource.filteredData.map(filteredRow => filteredRow.parameter_id);\n  }\n  deselectAll() {\n    const filteredIds = this.dataSource.filteredData.map(filteredRow => filteredRow.parameter_id);\n    this._selectedParameterIds = this._selectedParameterIds.filter(selectedId => filteredIds.includes(selectedId) === false);\n  }\n  isIntermediate() {\n    const filteredIds = this.dataSource.filteredData.map(filteredRow => filteredRow.parameter_id);\n    const someChecked = _.some(filteredIds, filteredId => this._selectedParameterIds.includes(filteredId));\n    const someUnchecked = _.some(filteredIds, filteredId => this._selectedParameterIds.includes(filteredId) === false);\n    if (someChecked && someUnchecked) {\n      return true;\n    }\n    return false;\n  }\n  isAllChecked() {\n    const filteredIds = this.dataSource.filteredData.map(filteredRow => filteredRow.parameter_id);\n    if (_.some(filteredIds, filteredId => this._selectedParameterIds.includes(filteredId) === false)) {\n      return false;\n    }\n    return true;\n  }\n  allCheckboxLabel() {\n    return 'Toggle all';\n  }\n  static #_ = this.ɵfac = function PcvModelSelectionParametersComponent_Factory(t) {\n    return new (t || PcvModelSelectionParametersComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcvModelSelectionParametersComponent,\n    selectors: [[\"app-pcv-model-selection-parameters\"]],\n    viewQuery: function PcvModelSelectionParametersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(RdsSortDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 18,\n    consts: [[\"sort\", \"\"], [\"rds-dialog-header\", \"\"], [\"icon\", \"close\", 3, \"click\"], [\"rds-dialog-content\", \"\"], [3, \"ngModelChange\", \"includeButton\", \"autoSearch\", \"ngModel\", \"placeholder\"], [\"rds-table\", \"\", \"rdsSort\", \"\", 3, \"dataSource\"], [\"rdsColumnDef\", \"multiselect\"], [\"rds-header-cell\", \"\", 4, \"rdsHeaderCellDef\"], [\"rds-cell\", \"\", 4, \"rdsCellDef\"], [\"rdsColumnDef\", \"parameter_id\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\", 4, \"rdsHeaderCellDef\"], [\"rds-header-row\", \"\", 4, \"rdsHeaderRowDef\"], [\"rds-row\", \"\", 3, \"disabled\", 4, \"rdsRowDef\", \"rdsRowDefColumns\"], [\"rds-dialog-actions-container\", \"\"], [\"rds-secondary-button\", \"\", \"size\", \"m\", 3, \"click\"], [\"rds-primary-button\", \"\", \"size\", \"m\", 3, \"click\"], [\"rds-header-cell\", \"\"], [3, \"changed\", \"checked\", \"indeterminate\", \"aria-label\"], [\"rds-cell\", \"\"], [3, \"click\", \"change\", \"aria-label\", \"checked\", \"disabled\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\"], [\"rds-header-row\", \"\"], [\"rds-row\", \"\", 3, \"disabled\"]],\n    template: function PcvModelSelectionParametersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\", 1);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"rds-icon\", 2);\n        i0.ɵɵlistener(\"click\", function PcvModelSelectionParametersComponent_Template_rds_icon_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"rds-global-search\", 4);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function PcvModelSelectionParametersComponent_Template_rds_global_search_ngModelChange_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.dataSource.filter, $event) || (ctx.dataSource.filter = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"table\", 5, 0);\n        i0.ɵɵelementContainerStart(9, 6);\n        i0.ɵɵtemplate(10, PcvModelSelectionParametersComponent_th_10_Template, 2, 3, \"th\", 7)(11, PcvModelSelectionParametersComponent_td_11_Template, 2, 3, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(12, 9);\n        i0.ɵɵtemplate(13, PcvModelSelectionParametersComponent_th_13_Template, 3, 3, \"th\", 10)(14, PcvModelSelectionParametersComponent_td_14_Template, 5, 2, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(15, PcvModelSelectionParametersComponent_tr_15_Template, 1, 0, \"tr\", 11)(16, PcvModelSelectionParametersComponent_tr_16_Template, 1, 1, \"tr\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 13)(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function PcvModelSelectionParametersComponent_Template_button_click_18_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submitAll());\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function PcvModelSelectionParametersComponent_Template_button_click_21_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submit());\n        });\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 10, \"pcv-model-insights.select-parameters-button\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"includeButton\", false)(\"autoSearch\", true);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.dataSource.filter);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(6, 12, \"pcv-model-insights.search-parameters-placeholder\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"rdsHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"rdsRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 14, \"pcv-model-insights.select-all-parameters-submit\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 16, \"pcv-model-insights.select-parameters-submit\"));\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","RDS_DIALOG_DATA","RdsDialogRef","RdsSortDirective","RdsTableDataSource","_","i0","ɵɵelementStart","ɵɵlistener","PcvModelSelectionParametersComponent_th_10_Template_rds_checkbox_changed_1_listener","$event","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","checked","selectAll","deselectAll","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","isAllChecked","isIntermediate","allCheckboxLabel","PcvModelSelectionParametersComponent_td_11_Template_rds_checkbox_click_1_listener","_r4","stopPropagation","PcvModelSelectionParametersComponent_td_11_Template_rds_checkbox_change_1_listener","element_r5","$implicit","toggleSelection","checkboxLabel","isSelected","isDisabled","ɵɵtext","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵelement","element_r6","parameter_id","description","row_r7","PcvModelSelectionParametersComponent","search","dataSource","filter","term","parameters","data","selectedParameterIds","_selectedParameterIds","constructor","rdsDialogRef","init","displayedColumns","filterPredicate","sortData","ngAfterViewInit","sort","row","includes","parameterId","close","submit","submitAll","map","paramater","toLocaleLowerCase","active","direction","orderBy","filteredData","filteredRow","filteredIds","selectedId","someChecked","some","filteredId","someUnchecked","_2","selectors","viewQuery","PcvModelSelectionParametersComponent_Query","rf","ctx","PcvModelSelectionParametersComponent_Template_rds_icon_click_3_listener","_r1","ɵɵtwoWayListener","PcvModelSelectionParametersComponent_Template_rds_global_search_ngModelChange_5_listener","ɵɵtwoWayBindingSet","ɵɵelementContainerStart","ɵɵtemplate","PcvModelSelectionParametersComponent_th_10_Template","PcvModelSelectionParametersComponent_td_11_Template","PcvModelSelectionParametersComponent_th_13_Template","PcvModelSelectionParametersComponent_td_14_Template","PcvModelSelectionParametersComponent_tr_15_Template","PcvModelSelectionParametersComponent_tr_16_Template","PcvModelSelectionParametersComponent_Template_button_click_18_listener","PcvModelSelectionParametersComponent_Template_button_click_21_listener","ɵɵtwoWayProperty"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-model-insights/pcv-model-selection-parameters/pcv-model-selection-parameters.component.ts","/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-model-insights/pcv-model-selection-parameters/pcv-model-selection-parameters.component.html"],"sourcesContent":["\nimport { AfterViewInit, Component, ViewChild, inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource, SortDirection } from '@rds/angular-components';\nimport { IParameter } from '../../../../types/pcv-model-insights';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-pcv-model-selection-parameters',\n  templateUrl: './pcv-model-selection-parameters.component.html',\n  styleUrl: './pcv-model-selection-parameters.component.scss'\n})\nexport class PcvModelSelectionParametersComponent implements AfterViewInit {\n\n  public readonly rdsDialogRef = inject<RdsDialogRef<PcvModelSelectionParametersComponent>>(RdsDialogRef);\n\n  protected readonly data: any = inject(RDS_DIALOG_DATA);\n\n  @ViewChild(RdsSortDirective) sort!: RdsSortDirective;\n\n  private _selectedParameterIds: string[] = [...this.data.selectedParameterIds] || []\n\n  readonly dataSource = new RdsTableDataSource(this.parameters).init();\n\n  get search(): string {\n    return this.dataSource.filter;\n  }\n\n  set search(term: string) {\n    this.dataSource.filter = term;\n  }\n\n  get parameters(): IParameter[] {\n    return this.data.parameters;\n  }\n\n  get selectedParameterIds(): string[] {\n    return this._selectedParameterIds;\n  }\n\n  public displayedColumns: (keyof IParameter | \"actions\" | \"multiselect\")[] = [\n    'multiselect',\n    'parameter_id'\n  ]\n\n  constructor() {\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n\n  }\n\n  public isDisabled(row: IParameter): boolean {\n    if (this.selectedParameterIds.includes(row.parameter_id)) {\n      return false;\n    }\n    return false;\n  }\n\n  public checkboxLabel(row: IParameter): string {\n    return row.parameter_id;\n  }\n\n  public isSelected(row: IParameter): boolean {\n    return this.selectedParameterIds.includes(row.parameter_id);\n  }\n\n  public toggleSelection(row: IParameter): void {\n    if (this._selectedParameterIds.includes(row.parameter_id)) {\n      this._selectedParameterIds = this._selectedParameterIds.filter((parameterId: string) => parameterId !== row.parameter_id);\n    } else {\n      this._selectedParameterIds = [...this.selectedParameterIds, row.parameter_id];\n    }\n  }\n\n  public close(): void {\n    this.rdsDialogRef.close();\n  }\n\n  public submit(): void {\n    this.rdsDialogRef.close(this._selectedParameterIds);\n  }\n\n  public submitAll(): void {\n    this.rdsDialogRef.close(this.parameters.map((paramater: IParameter) => paramater.parameter_id));\n  }\n\n  private filterPredicate(data: IParameter, filter: string): boolean {\n    if (!filter) {\n      return true;\n    }\n    return data.parameter_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n\n  private sortData(data: IParameter[], sort: RdsSortDirective): IParameter[] {\n    const active: string | null = sort.active;\n    const direction: SortDirection = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n\n  public selectAll(): void {\n    this._selectedParameterIds = this.dataSource.filteredData.map((filteredRow: IParameter) => filteredRow.parameter_id);\n  }\n\n  public deselectAll(): void {\n    const filteredIds: string[] = this.dataSource.filteredData.map((filteredRow: IParameter) => filteredRow.parameter_id);\n    this._selectedParameterIds = this._selectedParameterIds.filter((selectedId: string) => filteredIds.includes(selectedId) === false);\n\n  }\n\n  public isIntermediate(): boolean {\n    const filteredIds: string[] = this.dataSource.filteredData.map((filteredRow: IParameter) => filteredRow.parameter_id);\n    const someChecked: boolean = _.some(filteredIds, (filteredId: string) => this._selectedParameterIds.includes(filteredId));\n    const someUnchecked: boolean = _.some(filteredIds, (filteredId: string) => this._selectedParameterIds.includes(filteredId) === false);\n    if (someChecked && someUnchecked) {\n      return true;\n    }\n    return false;\n  }\n\n  public isAllChecked(): boolean {\n    const filteredIds: string[] = this.dataSource.filteredData.map((filteredRow: IParameter) => filteredRow.parameter_id);\n    if (_.some(filteredIds, (filteredId: string) => this._selectedParameterIds.includes(filteredId) === false)) {\n      return false;\n    }\n    return true;\n  }\n\n  public allCheckboxLabel(): string {\n    return 'Toggle all';\n  }\n}\n","<h2 rds-dialog-header>{{ 'pcv-model-insights.select-parameters-button' | translate }}<rds-icon icon=\"close\" (click)=\"close()\"/></h2>\n<div rds-dialog-content>\n  <rds-global-search\n      [includeButton]=\"false\"\n      [autoSearch]=\"true\"\n      [(ngModel)]=\"dataSource.filter\"\n      [placeholder]=\"'pcv-model-insights.search-parameters-placeholder' | translate\"></rds-global-search>\n  <table rds-table [dataSource]=\"dataSource\" rdsSort #sort>\n    <ng-container rdsColumnDef=\"multiselect\">\n      <th rds-header-cell *rdsHeaderCellDef>\n        <rds-checkbox\n          (changed)=\"$event.checked ? selectAll() : deselectAll()\"\n          [checked]=\"isAllChecked()\"\n          [indeterminate]=\"isIntermediate()\"\n          [aria-label]=\"allCheckboxLabel()\"\n      ></rds-checkbox>\n      </th>\n      <td rds-cell *rdsCellDef=\"let element\">\n        <rds-checkbox\n          (click)=\"$event.stopPropagation()\"\n          [aria-label]=\"checkboxLabel(element)\"\n          [checked]=\"isSelected(element)\"\n          (change)=\"$event ? toggleSelection(element) : null\"\n          [disabled]=\"isDisabled(element)\"\n        ></rds-checkbox>\n      </td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"parameter_id\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-model-insights.parameter_id' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.parameter_id }}<br /><span>{{ element.description }}</span></td>\n    </ng-container>\n    <tr rds-header-row *rdsHeaderRowDef=\"displayedColumns\"></tr>\n    <tr rds-row *rdsRowDef=\"let row; columns: displayedColumns\" [disabled]=\"isDisabled(row)\"></tr>\n  </table>\n</div>\n<div rds-dialog-actions-container>\n  <button rds-secondary-button size=\"m\" (click)=\"submitAll()\">{{ 'pcv-model-insights.select-all-parameters-submit' | translate }}</button>\n  <button rds-primary-button size=\"m\" (click)=\"submit()\">{{ 'pcv-model-insights.select-parameters-submit' | translate }}</button>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}