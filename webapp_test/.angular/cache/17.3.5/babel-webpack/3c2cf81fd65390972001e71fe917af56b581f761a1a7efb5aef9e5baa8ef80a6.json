{"ast":null,"code":"import { inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource } from '@rds/angular-components';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nfunction PcvPredictionSelectionBatchComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 18);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 19)(1, \"rds-checkbox\", 20);\n    i0.ɵɵlistener(\"click\", function PcvPredictionSelectionBatchComponent_td_14_Template_rds_checkbox_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView($event.stopPropagation());\n    })(\"change\", function PcvPredictionSelectionBatchComponent_td_14_Template_rds_checkbox_change_1_listener($event) {\n      const element_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r3.toggleSelection(element_r3) : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r3 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"aria-label\", ctx_r3.checkboxLabel(element_r3))(\"checked\", ctx_r3.isSelected(element_r3));\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-prediction.batch_id\"));\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r5.batch_id);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-prediction.predicted_pcv_10h\"));\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r6.predicted_pcv_10h);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_th_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-prediction.predicted_pcv_60h\"));\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r7.predicted_pcv_60h);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_th_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"pcv-prediction.measured_pcv\"));\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(element_r8.measured_pcv);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\nfunction PcvPredictionSelectionBatchComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 23);\n  }\n}\nexport class PcvPredictionSelectionBatchComponent {\n  get search() {\n    return this.dataSource.filter;\n  }\n  set search(term) {\n    this.dataSource.filter = term;\n  }\n  get batches() {\n    return this.data.batches;\n  }\n  get selectedBatchId() {\n    return this._selectedBatchId;\n  }\n  constructor() {\n    this.rdsDialogRef = inject(RdsDialogRef);\n    this.data = inject(RDS_DIALOG_DATA);\n    this._selectedBatchId = this.data.selectedBatchId || null;\n    this.dataSource = new RdsTableDataSource(this.batches).init();\n    this.displayedColumns = ['select', 'batch_id', 'predicted_pcv_10h', 'predicted_pcv_60h', 'measured_pcv'];\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n  checkboxLabel(row) {\n    return row.batch_id;\n  }\n  isSelected(row) {\n    return this.selectedBatchId === row.batch_id;\n  }\n  toggleSelection(row) {\n    if (this._selectedBatchId === row.batch_id) {\n      this._selectedBatchId = null;\n    } else {\n      this._selectedBatchId = row.batch_id;\n    }\n  }\n  close() {\n    this.rdsDialogRef.close();\n  }\n  submit() {\n    this.rdsDialogRef.close(this._selectedBatchId);\n  }\n  filterPredicate(data, filter) {\n    if (!filter) {\n      return true;\n    }\n    return data.batch_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n  sortData(data, sort) {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n  static #_ = this.ɵfac = function PcvPredictionSelectionBatchComponent_Factory(t) {\n    return new (t || PcvPredictionSelectionBatchComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcvPredictionSelectionBatchComponent,\n    selectors: [[\"app-pcv-prediction-selection-batch\"]],\n    viewQuery: function PcvPredictionSelectionBatchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(RdsSortDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 33,\n    vars: 18,\n    consts: [[\"sort\", \"\"], [\"rds-dialog-header\", \"\"], [\"icon\", \"close\", 3, \"click\"], [\"rds-dialog-content\", \"\"], [3, \"ngModelChange\", \"includeButton\", \"autoSearch\", \"placeholder\", \"ngModel\"], [\"rds-table\", \"\", \"rdsSort\", \"\", 3, \"dataSource\"], [\"rdsColumnDef\", \"select\"], [\"rds-header-cell\", \"\", 4, \"rdsHeaderCellDef\"], [\"rds-cell\", \"\", 4, \"rdsCellDef\"], [\"rdsColumnDef\", \"batch_id\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\", 4, \"rdsHeaderCellDef\"], [\"rdsColumnDef\", \"predicted_pcv_10h\"], [\"rdsColumnDef\", \"predicted_pcv_60h\"], [\"rdsColumnDef\", \"measured_pcv\"], [\"rds-header-row\", \"\", 4, \"rdsHeaderRowDef\"], [\"rds-row\", \"\", 4, \"rdsRowDef\", \"rdsRowDefColumns\"], [\"rds-dialog-actions-container\", \"\"], [\"rds-primary-button\", \"\", \"size\", \"m\", 3, \"click\"], [\"rds-header-cell\", \"\"], [\"rds-cell\", \"\"], [3, \"click\", \"change\", \"aria-label\", \"checked\"], [\"rds-header-cell\", \"\", \"rds-sort-header\", \"\"], [\"rds-header-row\", \"\"], [\"rds-row\", \"\"]],\n    template: function PcvPredictionSelectionBatchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\", 1);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementStart(3, \"rds-icon\", 2);\n        i0.ɵɵlistener(\"click\", function PcvPredictionSelectionBatchComponent_Template_rds_icon_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"rds-global-search\", 4);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function PcvPredictionSelectionBatchComponent_Template_rds_global_search_ngModelChange_8_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.dataSource.filter, $event) || (ctx.dataSource.filter = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"table\", 5, 0);\n        i0.ɵɵelementContainerStart(12, 6);\n        i0.ɵɵtemplate(13, PcvPredictionSelectionBatchComponent_th_13_Template, 1, 0, \"th\", 7)(14, PcvPredictionSelectionBatchComponent_td_14_Template, 2, 2, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(15, 9);\n        i0.ɵɵtemplate(16, PcvPredictionSelectionBatchComponent_th_16_Template, 3, 3, \"th\", 10)(17, PcvPredictionSelectionBatchComponent_td_17_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(18, 11);\n        i0.ɵɵtemplate(19, PcvPredictionSelectionBatchComponent_th_19_Template, 3, 3, \"th\", 10)(20, PcvPredictionSelectionBatchComponent_td_20_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(21, 12);\n        i0.ɵɵtemplate(22, PcvPredictionSelectionBatchComponent_th_22_Template, 3, 3, \"th\", 10)(23, PcvPredictionSelectionBatchComponent_td_23_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(24, 13);\n        i0.ɵɵtemplate(25, PcvPredictionSelectionBatchComponent_th_25_Template, 3, 3, \"th\", 10)(26, PcvPredictionSelectionBatchComponent_td_26_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(27, PcvPredictionSelectionBatchComponent_tr_27_Template, 1, 0, \"tr\", 14)(28, PcvPredictionSelectionBatchComponent_tr_28_Template, 1, 0, \"tr\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 16)(30, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function PcvPredictionSelectionBatchComponent_Template_button_click_30_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submit());\n        });\n        i0.ɵɵtext(31);\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 10, \"pcv-prediction.select-batch-button\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 12, \"pcv-prediction.select-batch-description\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"includeButton\", false)(\"autoSearch\", true)(\"placeholder\", i0.ɵɵpipeBind1(9, 14, \"pcv-prediction.search-batches-placeholder\"));\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.dataSource.filter);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"rdsHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"rdsRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(32, 16, \"pcv-prediction.select-batch-submit\"));\n      }\n    },\n    styles: [\"[_nghost-%COMP%]   tr.outlier[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  background-color: #FEE6EC;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wY3YtcHJlZGljdGlvbi9wY3YtcHJlZGljdGlvbi1zZWxlY3Rpb24tYmF0Y2gvcGN2LXByZWRpY3Rpb24tc2VsZWN0aW9uLWJhdGNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdZO0VBQ0kseUJBQUE7QUFGaEIiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgdHIge1xuICAgICAgICAmLm91dGxpZXIge1xuICAgICAgICAgICAgdGQge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRUU2RUM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","RDS_DIALOG_DATA","RdsDialogRef","RdsSortDirective","RdsTableDataSource","_","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","PcvPredictionSelectionBatchComponent_td_14_Template_rds_checkbox_click_1_listener","$event","ɵɵrestoreView","_r2","ɵɵresetView","stopPropagation","PcvPredictionSelectionBatchComponent_td_14_Template_rds_checkbox_change_1_listener","element_r3","$implicit","ctx_r3","ɵɵnextContext","toggleSelection","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","checkboxLabel","isSelected","ɵɵtext","ɵɵtextInterpolate","ɵɵpipeBind1","element_r5","batch_id","element_r6","predicted_pcv_10h","element_r7","predicted_pcv_60h","element_r8","measured_pcv","PcvPredictionSelectionBatchComponent","search","dataSource","filter","term","batches","data","selectedBatchId","_selectedBatchId","constructor","rdsDialogRef","init","displayedColumns","filterPredicate","sortData","ngAfterViewInit","sort","row","close","submit","toLocaleLowerCase","includes","active","direction","orderBy","_2","selectors","viewQuery","PcvPredictionSelectionBatchComponent_Query","rf","ctx","PcvPredictionSelectionBatchComponent_Template_rds_icon_click_3_listener","_r1","ɵɵtwoWayListener","PcvPredictionSelectionBatchComponent_Template_rds_global_search_ngModelChange_8_listener","ɵɵtwoWayBindingSet","ɵɵelementContainerStart","ɵɵtemplate","PcvPredictionSelectionBatchComponent_th_13_Template","PcvPredictionSelectionBatchComponent_td_14_Template","PcvPredictionSelectionBatchComponent_th_16_Template","PcvPredictionSelectionBatchComponent_td_17_Template","PcvPredictionSelectionBatchComponent_th_19_Template","PcvPredictionSelectionBatchComponent_td_20_Template","PcvPredictionSelectionBatchComponent_th_22_Template","PcvPredictionSelectionBatchComponent_td_23_Template","PcvPredictionSelectionBatchComponent_th_25_Template","PcvPredictionSelectionBatchComponent_td_26_Template","PcvPredictionSelectionBatchComponent_tr_27_Template","PcvPredictionSelectionBatchComponent_tr_28_Template","PcvPredictionSelectionBatchComponent_Template_button_click_30_listener","ɵɵtwoWayProperty"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-prediction/pcv-prediction-selection-batch/pcv-prediction-selection-batch.component.ts","/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/pcv-prediction/pcv-prediction-selection-batch/pcv-prediction-selection-batch.component.html"],"sourcesContent":["import { AfterViewInit, Component, ViewChild, inject } from '@angular/core';\nimport { RDS_DIALOG_DATA, RdsDialogRef, RdsSortDirective, RdsTableDataSource, SortDirection } from '@rds/angular-components';\nimport { IBatch } from '../../../../types/pcv-prediction';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-pcv-prediction-selection-batch',\n  templateUrl: './pcv-prediction-selection-batch.component.html',\n  styleUrl: './pcv-prediction-selection-batch.component.scss'\n})\nexport class PcvPredictionSelectionBatchComponent implements AfterViewInit {\n\n  public readonly rdsDialogRef = inject<RdsDialogRef<PcvPredictionSelectionBatchComponent>>(RdsDialogRef);\n\n  protected readonly data: any = inject(RDS_DIALOG_DATA);\n\n  @ViewChild(RdsSortDirective) sort!: RdsSortDirective;\n\n  private _selectedBatchId: string | null = this.data.selectedBatchId || null;\n\n  readonly dataSource = new RdsTableDataSource(this.batches).init();\n\n  get search(): string {\n    return this.dataSource.filter;\n  }\n\n  set search(term: string) {\n    this.dataSource.filter = term;\n  }\n\n  get batches(): IBatch[] {\n    return this.data.batches;\n  }\n\n  get selectedBatchId(): string | null {\n    return this._selectedBatchId;\n  }\n\n  public displayedColumns: (keyof IBatch | \"actions\" | \"select\")[] = [\n    'select',\n    'batch_id',\n    'predicted_pcv_10h',\n    'predicted_pcv_60h',\n    'measured_pcv'\n  ];\n\n  constructor() {\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.dataSource.sortData = this.sortData;\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n\n  }\n\n  public checkboxLabel(row: IBatch): string {\n    return row.batch_id;\n  }\n\n  public isSelected(row: IBatch): boolean {\n    return this.selectedBatchId === row.batch_id;\n  }\n\n  public toggleSelection(row: IBatch): void {\n    if (this._selectedBatchId === row.batch_id) {\n      this._selectedBatchId = null;\n    } else {\n      this._selectedBatchId = row.batch_id;\n    }\n\n  }\n\n  public close(): void {\n    this.rdsDialogRef.close();\n  }\n\n  public submit(): void {\n    this.rdsDialogRef.close(this._selectedBatchId);\n  }\n\n  private filterPredicate(data: IBatch, filter: string): boolean {\n    if (!filter) {\n      return true;\n    }\n    return data.batch_id.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n  }\n\n  private sortData(data: IBatch[], sort: RdsSortDirective): IBatch[] {\n    const active: string | null = sort.active;\n    const direction: SortDirection = sort.direction;\n    if (!!active && !!direction) {\n      return _.orderBy(data, [active], [direction]);\n    }\n    return data;\n  }\n}\n","<h2 rds-dialog-header>{{ 'pcv-prediction.select-batch-button' | translate }}<rds-icon icon=\"close\" (click)=\"close()\"/></h2>\n<div rds-dialog-content>\n  <p>{{ 'pcv-prediction.select-batch-description' | translate }}</p>\n  <rds-global-search\n      [includeButton]=\"false\"\n      [autoSearch]=\"true\"\n      [placeholder]=\"'pcv-prediction.search-batches-placeholder' | translate\"\n      [(ngModel)]=\"dataSource.filter\"></rds-global-search>\n  <table rds-table [dataSource]=\"dataSource\" rdsSort #sort>\n    <ng-container rdsColumnDef=\"select\">\n      <th rds-header-cell *rdsHeaderCellDef></th>\n      <td rds-cell *rdsCellDef=\"let element\">\n        <rds-checkbox\n          (click)=\"$event.stopPropagation()\"\n          [aria-label]=\"checkboxLabel(element)\"\n          [checked]=\"isSelected(element)\"\n          (change)=\"$event ? toggleSelection(element) : null\"\n        ></rds-checkbox>\n      </td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"batch_id\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-prediction.batch_id' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.batch_id }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"predicted_pcv_10h\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-prediction.predicted_pcv_10h' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.predicted_pcv_10h }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"predicted_pcv_60h\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-prediction.predicted_pcv_60h' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.predicted_pcv_60h }}</td>\n    </ng-container>\n    <ng-container rdsColumnDef=\"measured_pcv\">\n      <th rds-header-cell *rdsHeaderCellDef rds-sort-header>{{ 'pcv-prediction.measured_pcv' | translate }}</th>\n      <td rds-cell *rdsCellDef=\"let element\">{{ element.measured_pcv }}</td>\n    </ng-container>\n    <tr rds-header-row *rdsHeaderRowDef=\"displayedColumns\"></tr>\n    <tr rds-row *rdsRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n<div rds-dialog-actions-container>\n  <button rds-primary-button size=\"m\" (click)=\"submit()\">{{ 'pcv-prediction.select-batch-submit' | translate }}</button>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}