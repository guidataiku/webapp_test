{"ast":null,"code":"import { mergeMap, Subject, takeUntil, tap } from 'rxjs';\nimport { RdsSidenavMenuComponent } from '@rds/angular-components';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tree-navigation.service\";\nimport * as i2 from \"../../services/chapter.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/lang.service\";\nfunction TreeNavigationComponent_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function TreeNavigationComponent_Conditional_10_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openLink(\"avastin\", \"pcv-model-insights\"));\n    });\n    i0.ɵɵtext(1, \"PCV model insights\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"a\", 4);\n    i0.ɵɵtext(3, \"Titer model insight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function TreeNavigationComponent_Conditional_10_Template_a_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openLink(\"avastin\", \"parameter-dashboard\"));\n    });\n    i0.ɵɵtext(5, \"Parameter Dashboard\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TreeNavigationComponent_Conditional_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function TreeNavigationComponent_Conditional_11_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openLink(\"avastin\", \"pcv-prediction\"));\n    });\n    i0.ɵɵtext(1, \"PCV Prediction\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TreeNavigationComponent {\n  constructor(treeNavigation, chapter, router, lang) {\n    this.treeNavigation = treeNavigation;\n    this.chapter = chapter;\n    this.router = router;\n    this.lang = lang;\n    this.destroy$ = new Subject();\n    this.treeItems = [];\n    this.chapter.getChapterChange().pipe(takeUntil(this.destroy$), mergeMap(chapter => {\n      this.currentChapter = chapter;\n      this.treeItems = [];\n      return this.treeNavigation.getNavigationByChapter(chapter);\n    }), tap(items => {\n      this.treeItems = items;\n    })).subscribe();\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  getMenuComponent(index) {\n    console.log(this.menus);\n    return this.menus.get(index);\n  }\n  openLink(product, type) {\n    this.router.navigate(['/', this.lang.getCurrentLang(), this.chapter.getCurrentChapter(), product, type]);\n  }\n  static #_ = this.ɵfac = function TreeNavigationComponent_Factory(t) {\n    return new (t || TreeNavigationComponent)(i0.ɵɵdirectiveInject(i1.TreeNavigationService), i0.ɵɵdirectiveInject(i2.ChapterService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LangService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreeNavigationComponent,\n    selectors: [[\"app-tree-navigation\"]],\n    viewQuery: function TreeNavigationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(RdsSidenavMenuComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menus = _t);\n      }\n    },\n    decls: 12,\n    vars: 3,\n    consts: [[\"menu2\", \"rdsSidenavMenu\", \"sidenav\", \"\"], [3, \"rdsSidenavMenuTriggerFor\"], [\"namespace\", \"outlined\", \"icon\", \"folder\"], [\"color\", \"info\", \"label\", \"3\", \"size\", \"s\"], [\"rds-sidenav-menuitem\", \"\"], [\"rds-sidenav-menuitem\", \"\", 3, \"click\"]],\n    template: function TreeNavigationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"rds-sidenav-group\")(1, \"rds-sidenav-group-title\");\n        i0.ɵɵtext(2, \"Documentation version 4.0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵelement(4, \"rds-icon\", 2);\n        i0.ɵɵtext(5, \" Avastin \");\n        i0.ɵɵelement(6, \"rds-badge\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"rds-sidenav-menu\", null, 0);\n        i0.ɵɵtemplate(10, TreeNavigationComponent_Conditional_10_Template, 6, 0)(11, TreeNavigationComponent_Conditional_11_Template, 2, 0, \"a\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const menu2_r4 = i0.ɵɵreference(8);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"rdsSidenavMenuTriggerFor\", menu2_r4);\n        i0.ɵɵadvance(7);\n        i0.ɵɵconditional(10, ctx.currentChapter === \"manufacturX\" ? 10 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(11, ctx.currentChapter === \"operatorX\" ? 11 : -1);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["mergeMap","Subject","takeUntil","tap","RdsSidenavMenuComponent","i0","ɵɵelementStart","ɵɵlistener","TreeNavigationComponent_Conditional_10_Template_a_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","openLink","ɵɵtext","ɵɵelementEnd","TreeNavigationComponent_Conditional_10_Template_a_click_4_listener","TreeNavigationComponent_Conditional_11_Template_a_click_0_listener","_r3","TreeNavigationComponent","constructor","treeNavigation","chapter","router","lang","destroy$","treeItems","getChapterChange","pipe","currentChapter","getNavigationByChapter","items","subscribe","ngOnInit","ngOnDestroy","next","complete","getMenuComponent","index","console","log","menus","get","product","type","navigate","getCurrentLang","getCurrentChapter","_","ɵɵdirectiveInject","i1","TreeNavigationService","i2","ChapterService","i3","Router","i4","LangService","_2","selectors","viewQuery","TreeNavigationComponent_Query","rf","ctx","ɵɵelement","ɵɵtemplate","TreeNavigationComponent_Conditional_10_Template","TreeNavigationComponent_Conditional_11_Template","ɵɵadvance","ɵɵproperty","menu2_r4","ɵɵconditional"],"sources":["/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/tree-navigation/tree-navigation.component.ts","/home/dataiku/workspace/project-lib-versioned/webapp_test/frontend_copy/src/app/components/tree-navigation/tree-navigation.component.html"],"sourcesContent":["import { Component, ComponentRef, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { INavigationItem, ITreeNavigationItem } from '../../../types/navigation';\nimport { mergeMap, Subject, takeUntil, tap } from 'rxjs';\nimport { ChapterService } from '../../services/chapter.service';\nimport { TreeNavigationService } from '../../services/tree-navigation.service';\nimport { RdsMenuComponent, RdsSidenavMenuComponent } from '@rds/angular-components';\nimport { Router } from '@angular/router';\nimport { LangService } from '../../services/lang.service';\n\n@Component({\n  selector: 'app-tree-navigation',\n  templateUrl: './tree-navigation.component.html',\n  styleUrl: './tree-navigation.component.scss'\n})\nexport class TreeNavigationComponent implements OnInit, OnDestroy {\n\n  @ViewChildren(RdsSidenavMenuComponent) menus!: QueryList<RdsSidenavMenuComponent>;\n\n  private destroy$: Subject<void> = new Subject();\n\n  public treeItems: ITreeNavigationItem[] = [];\n\n  public currentChapter!: string;\n\n  constructor(private treeNavigation: TreeNavigationService, private chapter: ChapterService, private router: Router, private lang: LangService) {\n    this.chapter.getChapterChange()\n      .pipe(\n        takeUntil(this.destroy$),\n        mergeMap((chapter: string) => {\n          this.currentChapter = chapter;\n          this.treeItems = [];\n          return this.treeNavigation.getNavigationByChapter(chapter);\n        }),\n        tap((items: ITreeNavigationItem[]) => {\n          this.treeItems = items;\n        })\n      ).subscribe();\n  }\n\n  ngOnInit(): void {\n      \n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getMenuComponent(index: number) {\n    console.log(this.menus)\n    return this.menus.get(index) as RdsSidenavMenuComponent;\n  }\n\n  openLink(product: string, type: string) {\n    this.router.navigate(['/', this.lang.getCurrentLang(), this.chapter.getCurrentChapter(), product, type]);\n  }\n}\n","<rds-sidenav-group>\n    <rds-sidenav-group-title>Documentation version 4.0</rds-sidenav-group-title>\n    <button [rdsSidenavMenuTriggerFor]=\"menu2\">\n        <rds-icon namespace=\"outlined\" icon=\"folder\"></rds-icon>\n        Avastin\n        <rds-badge color=\"info\" label=\"3\" size=\"s\"></rds-badge>\n      </button>\n      <rds-sidenav-menu #menu2=\"rdsSidenavMenu\" #sidenav>\n        @if (currentChapter === 'manufacturX') {\n            <a rds-sidenav-menuitem (click)=\"openLink('avastin', 'pcv-model-insights')\">PCV model insights</a>\n            <a rds-sidenav-menuitem>Titer model insight</a>\n            <a rds-sidenav-menuitem (click)=\"openLink('avastin', 'parameter-dashboard')\">Parameter Dashboard</a>\n        }\n        @if (currentChapter === 'operatorX') {\n            <a rds-sidenav-menuitem (click)=\"openLink('avastin', 'pcv-prediction')\">PCV Prediction</a>\n        }\n      </rds-sidenav-menu>\n</rds-sidenav-group>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}