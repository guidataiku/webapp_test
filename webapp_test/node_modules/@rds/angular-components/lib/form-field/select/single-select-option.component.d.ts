import { AfterViewChecked } from '@angular/core';
import { Subject } from 'rxjs';
import { RdsSingleSelectListItemComponent } from '../../list-item';
import { AbstractFocusableOption } from './abstract-focusable-option';
import { RdsSelectOptionSelectionChangedEvent } from './select-option-selection-changed.event';
import * as i0 from "@angular/core";
export declare class RdsSingleSelectOptionComponent<T> extends RdsSingleSelectListItemComponent implements AfterViewChecked, AbstractFocusableOption {
    private _currentViewValue;
    hostClass: string;
    id: string;
    value: T;
    readonly selectionChange$: Subject<RdsSelectOptionSelectionChangedEvent<T>>;
    get viewValue(): string;
    ngAfterViewChecked(): void;
    rect(): DOMRect;
    isVisible(): boolean;
    toggleVisibility(value: boolean | null): void;
    hide(): void;
    show(): void;
    toggle(): void;
    handleClick(): void;
    setActiveStyles(): void;
    setInactiveStyles(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsSingleSelectOptionComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsSingleSelectOptionComponent<any>, "rds-select-option", never, { "id": { "alias": "id"; "required": false; }; "value": { "alias": "value"; "required": false; }; }, {}, never, ["rds-avatar", "rds-icon", "*"], false, never>;
}
