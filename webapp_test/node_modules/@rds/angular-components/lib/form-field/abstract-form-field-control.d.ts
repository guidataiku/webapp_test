import { BooleanInput } from '@angular/cdk/coercion';
import { EventEmitter } from '@angular/core';
import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';
import { RdsControlType } from './control.type';
export declare abstract class RdsAbstractFormFieldControl<T> {
    readonly ngControl: NgControl | null;
    readonly parentForm: NgForm | null;
    readonly parentFormGroup: FormGroupDirective | null;
    prefixed: boolean;
    suffixed: boolean;
    readonly stateChanges: EventEmitter<void>;
    protected _value: T;
    protected _id: string;
    protected _disabled: boolean;
    protected _focused: boolean;
    protected _errorState: boolean;
    protected _required: boolean | undefined;
    abstract get errorState(): boolean;
    abstract get controlType(): RdsControlType;
    abstract get empty(): boolean;
    abstract get shouldLabelFloat(): boolean;
    abstract setDescribedByIds(ids: string[]): void;
    abstract onContainerClick(event: MouseEvent): void;
    get focused(): boolean;
    get value(): T;
    set value(newId: T);
    get disabled(): boolean;
    set disabled(isDisabled: BooleanInput);
    get required(): boolean;
    set required(isRequired: BooleanInput);
    get id(): string;
    set id(newId: string);
}
