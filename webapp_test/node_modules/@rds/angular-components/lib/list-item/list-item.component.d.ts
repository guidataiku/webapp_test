import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';
import { ElementRef, Renderer2 } from '@angular/core';
import { Subject } from 'rxjs';
import { RdsIconComponent } from '../icons';
import * as i0 from "@angular/core";
export type RdsListItemSize = 's' | 'm' | 'l';
export declare class RdsListItemComponent implements FocusableOption {
    protected readonly elementRef: ElementRef<HTMLButtonElement>;
    protected readonly renderer: Renderer2;
    protected icon: RdsIconComponent;
    readonly _focused: Subject<RdsListItemComponent>;
    size: RdsListItemSize;
    role: 'menuitem' | 'option';
    protected readonly tabIndex = -1;
    protected get cssClasses(): string[];
    disabled: boolean;
    protected get attrAriaDisabled(): string;
    protected get attrDisabled(): 'disabled' | null;
    focus(origin?: FocusOrigin): void;
    blur(): void;
    click(): void;
    getLabel(): string;
    markAsActive(): void;
    markAsInactive(): void;
    private removeNodes;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsListItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsListItemComponent, "button[rds-list-item], button[rdsListItem]", never, { "size": { "alias": "size"; "required": false; }; "role": { "alias": "role"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, {}, ["icon"], ["rds-icon", "*"], false, never>;
    static ngAcceptInputType_disabled: unknown;
}
