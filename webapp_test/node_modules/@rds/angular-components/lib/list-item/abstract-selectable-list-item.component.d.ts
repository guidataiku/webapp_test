import { FocusOrigin } from '@angular/cdk/a11y';
import { ContentObserver } from '@angular/cdk/observers';
import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { RdsAvatarComponent } from '../avatar';
import { RdsListItemComponent } from './list-item.component';
import * as i0 from "@angular/core";
export declare abstract class RdsAbstractSelectableListItemComponent extends RdsListItemComponent implements AfterViewInit, OnChanges {
    private readonly destroyRef;
    protected readonly contentObserver: ContentObserver;
    protected readonly cdr: ChangeDetectorRef;
    protected avatar: RdsAvatarComponent;
    readonly checkedChanged: EventEmitter<boolean>;
    role: 'menuitem' | 'option';
    protected get cssClasses(): string[];
    checked: boolean;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    toggle(): void;
    protected abstract getSelectTypeClass(): string;
    private adjustAvatarSize;
    focus(origin?: FocusOrigin): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsAbstractSelectableListItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsAbstractSelectableListItemComponent, "ng-component", never, { "role": { "alias": "role"; "required": false; }; "checked": { "alias": "checked"; "required": false; }; }, { "checkedChanged": "checkedChanged"; }, ["avatar"], never, false, never>;
    static ngAcceptInputType_checked: unknown;
}
