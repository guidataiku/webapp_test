import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';
import { AfterViewInit, OnDestroy } from '@angular/core';
import { Subject } from 'rxjs';
import { RdsListItemComponent, RdsNestableListItemComponent } from '../list-item';
import { RdsMenuPanel } from './menu-panel';
import * as i0 from "@angular/core";
export declare class RdsMenuItemComponent extends RdsNestableListItemComponent implements AfterViewInit, OnDestroy {
    readonly _parentMenu: RdsMenuPanel<RdsMenuItemComponent> | null;
    protected readonly focusMonitor: FocusMonitor;
    rdsMenuItemClass: boolean;
    readonly _hovered: Subject<RdsListItemComponent>;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    _getHostElement(): HTMLElement;
    protected handleMouseEnter(): void;
    focus(origin?: FocusOrigin, options?: FocusOptions): void;
    blur(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsMenuItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsMenuItemComponent, "[rds-menu-item], [rdsMenuItem]", ["rdsMenuItem"], {}, {}, never, ["rds-icon", "*"], false, never>;
}
