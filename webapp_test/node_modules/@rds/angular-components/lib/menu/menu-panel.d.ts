import { EventEmitter, InjectionToken, TemplateRef } from '@angular/core';
import { Direction } from '@angular/cdk/bidi';
import { FocusOrigin } from '@angular/cdk/a11y';
import { RdsMenuContentDirective } from './menu-content.directive';
import { RdsMenuPositionX, RdsMenuPositionY, RdsMenuCloseReason, RdsMenuBackdrop } from './menu.types';
export declare const RDS_MENU_PANEL: InjectionToken<RdsMenuPanel<any>>;
export interface RdsMenuPanel<T = any> {
    xPosition: RdsMenuPositionX;
    yPosition: RdsMenuPositionY;
    overlapTrigger: boolean;
    templateRef: TemplateRef<any>;
    readonly closed: EventEmitter<RdsMenuCloseReason>;
    parentMenu?: RdsMenuPanel | undefined;
    direction?: Direction;
    focusFirstItem: (origin?: FocusOrigin) => void;
    resetActiveItem: () => void;
    setPositionClasses?: (x: RdsMenuPositionX, y: RdsMenuPositionY) => void;
    setElevation?(depth: number): void;
    lazyContent?: RdsMenuContentDirective;
    backdrop?: RdsMenuBackdrop;
    overlayPanelClass?: string | string[];
    hasBackdrop?: boolean;
    readonly panelId?: string;
}
