import { TemplateRef } from '@angular/core';
import { BooleanInput } from '@angular/cdk/coercion';
import { RdsTooltipDirective } from '../tooltip';
import { RdsPopoverClass, RdsPopoverPosition, RdsPopoverTouchGestures } from './popover.types';
import * as i0 from "@angular/core";
export declare class RdsPopoverDirective extends RdsTooltipDirective {
    protected _hasBackdrop: boolean;
    protected readonly isPopover = true;
    showDelay: number;
    hideDelay: number;
    rdsPopoverRole: string;
    ariaDescription: string;
    get hideArrow(): boolean;
    set hideArrow(shouldHideArrow: BooleanInput);
    touchGestures: RdsPopoverTouchGestures;
    get position(): RdsPopoverPosition;
    set position(value: RdsPopoverPosition);
    set disabled(value: BooleanInput);
    get disabled(): boolean;
    get content(): string | TemplateRef<unknown>;
    set content(value: string | TemplateRef<unknown>);
    get tooltipClass(): RdsPopoverClass;
    set tooltipClass(value: RdsPopoverClass);
    set hasBackdrop(v: BooleanInput);
    get hasBackdrop(): boolean;
    set showCloseButton(v: BooleanInput);
    get showCloseButton(): boolean;
    protected ariaExpanded: boolean | null;
    protected _hideArrow: boolean;
    protected handleFocus(): void;
    private createTabHandler;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsPopoverDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RdsPopoverDirective, "[rdsPopover], [rds-popover]", ["rdsPopover"], { "rdsPopoverRole": { "alias": "rdsPopoverRole"; "required": false; }; "ariaDescription": { "alias": "rdsPopoverAriaDescription"; "required": false; }; "touchGestures": { "alias": "rdsPopoverTouchGestures"; "required": false; }; "position": { "alias": "rdsPopoverPosition"; "required": false; }; "disabled": { "alias": "rdsPopoverDisabled"; "required": false; }; "content": { "alias": "rdsPopover"; "required": false; }; "tooltipClass": { "alias": "rdsPopoverClass"; "required": false; }; "hasBackdrop": { "alias": "rdsPopoverHasBackdrop"; "required": false; }; "showCloseButton": { "alias": "rdsPopoverShowCloseButton"; "required": false; }; }, {}, never, never, false, never>;
}
