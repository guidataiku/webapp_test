import { AfterContentInit, OnDestroy, QueryList, SimpleChanges } from '@angular/core';
import { RdsAccordionBase, RdsAccordionSize, RdsAccordionTogglePosition } from './accordion-base';
import { RdsExpansionPanelHeaderComponent } from './expansion-panel-header.component';
import { Subject } from 'rxjs';
import { CdkAccordion } from '@angular/cdk/accordion';
import * as i0 from "@angular/core";
export declare class RdsAccordionDirective extends CdkAccordion implements RdsAccordionBase, AfterContentInit, OnDestroy {
    readonly _stateChanges: Subject<SimpleChanges>;
    readonly _openCloseAllActions: Subject<boolean>;
    readonly id: string;
    private _ownHeaders;
    private _keyManager;
    _headers: QueryList<RdsExpansionPanelHeaderComponent>;
    size: RdsAccordionSize;
    get class(): string[];
    multi: boolean;
    togglePosition: RdsAccordionTogglePosition;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    _handleHeaderKeydown(event: KeyboardEvent): void;
    _handleHeaderFocus(header: RdsExpansionPanelHeaderComponent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsAccordionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RdsAccordionDirective, "rds-accordion", ["rdsAccordion"], { "size": { "alias": "size"; "required": false; }; "multi": { "alias": "multi"; "required": false; }; "togglePosition": { "alias": "togglePosition"; "required": false; }; }, {}, ["_headers"], never, false, never>;
    static ngAcceptInputType_multi: unknown;
}
