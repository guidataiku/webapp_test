import { AnimationEvent } from '@angular/animations';
import { CdkAccordionItem } from '@angular/cdk/accordion';
import { TemplatePortal } from '@angular/cdk/portal';
import { AfterContentInit, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Subject } from 'rxjs';
import { RdsAccordionBase, RdsAccordionTogglePosition } from './accordion-base';
import { RdsExpansionPanelContentDirective } from './expansion-panel-content.directive';
import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
export type RdsExpansionPanelState = 'expanded' | 'collapsed';
export declare class RdsExpansionPanelComponent extends CdkAccordionItem implements AfterContentInit, FocusableOption, OnChanges, OnDestroy {
    readonly accordion: RdsAccordionBase;
    private readonly viewContainerRef;
    private readonly document;
    private readonly focusMonitor;
    private readonly elementRef;
    private _togglePosition;
    class: string;
    get togglePosition(): RdsAccordionTogglePosition;
    set togglePosition(value: RdsAccordionTogglePosition);
    disabled: boolean;
    set expanded(value: boolean);
    get expanded(): boolean;
    readonly afterExpand: EventEmitter<void>;
    readonly afterCollapse: EventEmitter<void>;
    readonly opened: EventEmitter<void>;
    readonly closed: EventEmitter<void>;
    readonly expandedChange: EventEmitter<boolean>;
    readonly _inputChanges: Subject<SimpleChanges>;
    _lazyContent: RdsExpansionPanelContentDirective;
    _body: ElementRef<HTMLElement>;
    _portal: TemplatePortal;
    _headerId: string;
    readonly _bodyAnimationDone: Subject<AnimationEvent>;
    constructor();
    _getExpandedState(): RdsExpansionPanelState;
    toggle(): void;
    close(): void;
    open(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    focus(origin?: FocusOrigin, options?: FocusOptions): void;
    _containsFocus(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsExpansionPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsExpansionPanelComponent, "rds-expansion-panel", ["rdsExpansionPanel"], { "togglePosition": { "alias": "togglePosition"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "expanded": { "alias": "expanded"; "required": false; }; }, { "afterExpand": "afterExpand"; "afterCollapse": "afterCollapse"; "opened": "opened"; "closed": "closed"; "expandedChange": "expandedChange"; }, ["_lazyContent"], ["rds-expansion-panel-header", "*"], false, never>;
    static ngAcceptInputType_disabled: unknown;
    static ngAcceptInputType_expanded: unknown;
}
