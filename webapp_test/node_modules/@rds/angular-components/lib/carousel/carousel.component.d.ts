import { RdsCarouselItemDirective } from './carousel-item.directive';
import { AfterContentInit, OnChanges, OnDestroy, QueryList, SimpleChanges } from '@angular/core';
import { RdsCarouselActiveItemChangedEvent } from './carousel.types';
import * as i0 from "@angular/core";
export declare class RdsCarouselComponent implements AfterContentInit, OnDestroy, OnChanges {
    private readonly cdr;
    private readonly destroyRef;
    protected indexOfActiveCarouselItem: number;
    hostClass: string;
    autoplay: boolean;
    autoplayDelay: number;
    showButtons: boolean;
    carouselItems: QueryList<RdsCarouselItemDirective>;
    get indexOfLastElement(): number;
    private readonly destroyTimeout$;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    prev(): void;
    next(): void;
    _changeActive({ index }: RdsCarouselActiveItemChangedEvent): void;
    _isMobile(): boolean;
    private defineAutoplayInterval;
    private showCarouselItemMatchedWithIndexOfActive;
    private hideCurrentVisibleCarouselItem;
    private selectActiveItem;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsCarouselComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsCarouselComponent, "rds-carousel", ["rdsCarousel"], { "autoplay": { "alias": "autoplay"; "required": false; }; "autoplayDelay": { "alias": "autoplayDelay"; "required": false; }; "showButtons": { "alias": "showButtons"; "required": false; }; }, {}, ["carouselItems"], ["*"], false, never>;
    static ngAcceptInputType_autoplay: unknown;
    static ngAcceptInputType_autoplayDelay: unknown;
    static ngAcceptInputType_showButtons: unknown;
}
