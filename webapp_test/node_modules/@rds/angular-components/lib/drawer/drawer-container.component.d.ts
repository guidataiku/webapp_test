import { BooleanInput } from '@angular/cdk/coercion';
import { AfterContentInit, EventEmitter, OnDestroy } from '@angular/core';
import { RdsDrawerBackdrop, RdsDrawerContainerContentMargins } from './drawer-types';
import * as i0 from "@angular/core";
export declare class RdsDrawerContainerComponent implements AfterContentInit, OnDestroy {
    private readonly ngZone;
    private readonly elementRef;
    private readonly destroyRef;
    private readonly renderer;
    readonly class: string[];
    private drawer;
    private drawerElement;
    readonly backdropClick: EventEmitter<void>;
    private readonly _contentMargin$;
    readonly contentMargins$: import("rxjs").Observable<RdsDrawerContainerContentMargins>;
    private start;
    private end;
    set backdrop(value: RdsDrawerBackdrop | BooleanInput);
    get backdrop(): RdsDrawerBackdrop;
    private _backdrop;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /** for internal purposes only */
    _onBackdropClicked(): void;
    isShowingBackdrop(): boolean;
    updateContentMargins(): void;
    private isDrawerOpen;
    private watchDrawerToggle;
    private getDrawerWidth;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsDrawerContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsDrawerContainerComponent, "rds-drawer-container", never, { "backdrop": { "alias": "backdrop"; "required": false; }; }, { "backdropClick": "backdropClick"; }, ["drawer", "drawerElement"], ["rds-drawer", "rds-drawer-content"], true, never>;
}
