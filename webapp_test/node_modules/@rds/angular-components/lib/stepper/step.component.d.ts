import { CdkStep } from '@angular/cdk/stepper';
import { AfterContentInit, OnDestroy } from '@angular/core';
import { TemplatePortal } from '@angular/cdk/portal';
import { UntypedFormControl, FormGroupDirective, NgForm } from '@angular/forms';
import { RdsStepLabelDirective } from './step-label.directive';
import { RdsStepContentDirective } from './step-content.directive';
import * as i0 from "@angular/core";
export declare class RdsStepComponent extends CdkStep implements AfterContentInit, OnDestroy {
    private readonly errorStateMatcher;
    private readonly viewContainerRef;
    private _isSelected;
    stepLabel: RdsStepLabelDirective;
    _lazyContent: RdsStepContentDirective | undefined;
    _portal: TemplatePortal | undefined;
    constructor();
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /** Custom error state matcher that additionally checks for validity of interacted form. */
    isErrorState(control: UntypedFormControl | null, form: FormGroupDirective | NgForm | null): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsStepComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsStepComponent, "rds-step", ["rdsStep"], {}, {}, ["stepLabel", "_lazyContent"], ["*"], false, never>;
}
