import { CdkStepHeader, StepperOrientation, StepState } from '@angular/cdk/stepper';
import { AfterViewInit, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { FocusOrigin } from '@angular/cdk/a11y';
import { RdsStepLabelDirective } from './step-label.directive';
import * as i0 from "@angular/core";
export declare class RdsStepHeaderComponent extends CdkStepHeader implements AfterViewInit, OnChanges, OnDestroy, OnInit {
    readonly _elementRef: ElementRef<HTMLElement>;
    private readonly destroyRef;
    private readonly focusMonitor;
    private readonly cdr;
    private readonly ngZone;
    hostRole: string;
    get hostClass(): string[];
    orientation: StepperOrientation;
    sideBySide: boolean;
    /** State of the given step. */
    state: StepState | undefined;
    /** Label of the given step. */
    label: RdsStepLabelDirective | string;
    /** Index of the given step. */
    index: number;
    /** Whether the given step is selected. */
    selected: boolean;
    /** Whether the given step label is active. */
    active: boolean;
    /** Whether the given step is optional. */
    optional: boolean;
    stepNumberMobileFunc: (stepNumber: number) => string;
    _animationState: string;
    private readonly _mouseevent$;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onClick(): void;
    onMouseenter(): void;
    onMouseleave(): void;
    onAnimationDone(): void;
    focus(origin?: FocusOrigin, options?: FocusOptions): void;
    getStepMobileNumber(stepNumber: number): string;
    isMobile(): boolean;
    _stringLabel(): string | null;
    _templateLabel(): RdsStepLabelDirective | null;
    private _getDefaultStepMobileNumber;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsStepHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsStepHeaderComponent, "rds-step-header", never, { "orientation": { "alias": "orientation"; "required": false; }; "sideBySide": { "alias": "sideBySide"; "required": false; }; "state": { "alias": "state"; "required": false; }; "label": { "alias": "label"; "required": false; }; "index": { "alias": "index"; "required": false; }; "selected": { "alias": "selected"; "required": false; }; "active": { "alias": "active"; "required": false; }; "optional": { "alias": "optional"; "required": false; }; "stepNumberMobileFunc": { "alias": "stepNumberMobileFunc"; "required": false; }; }, {}, never, never, false, never>;
    static ngAcceptInputType_sideBySide: unknown;
    static ngAcceptInputType_selected: unknown;
    static ngAcceptInputType_active: unknown;
    static ngAcceptInputType_optional: unknown;
}
