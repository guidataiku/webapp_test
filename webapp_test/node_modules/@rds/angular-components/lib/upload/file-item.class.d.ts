import { RdsFileItemState, RdsUploadFilter } from './upload.types';
import { RdsUploadIntlToken } from './rds-upload-intl.service';
export declare class RdsFileItem {
    readonly file: File;
    readonly failedFilters: RdsUploadFilter[];
    private _errorIntlToken;
    private readonly _progress$;
    private readonly _state$;
    get errorIntlToken(): RdsUploadIntlToken;
    readonly progress$: import("rxjs").Observable<number | null>;
    readonly state$: import("rxjs").Observable<RdsFileItemState>;
    readonly id: number;
    readonly hasFailedFilters: boolean;
    get state(): RdsFileItemState;
    private set state(value);
    get isUploading(): boolean;
    constructor(file: File, failedFilters: RdsUploadFilter[]);
    onBeforeUpload(): void;
    onProgress(progress: number | null): void;
    onSuccess(): void;
    onError(): void;
    onAbort(): void;
}
