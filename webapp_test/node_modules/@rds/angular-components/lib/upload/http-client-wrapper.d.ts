import { RdsFileItem } from './file-item.class';
import { RdsFileItemProgressChange, RdsFileItemStatusChange, RdsUploadConfig } from './upload.types';
import { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';
export declare class RdsHttpClientWrapper<T = unknown> {
    private readonly item;
    readonly config: RdsUploadConfig;
    private readonly client;
    private readonly form;
    private readonly request;
    private readonly response$;
    private responseSubscription?;
    progress?: (change: RdsFileItemProgressChange) => void;
    success?: (change: RdsFileItemStatusChange<T>) => void;
    error?: (change: RdsFileItemStatusChange<T, HttpErrorResponse>) => void;
    complete?: (change: RdsFileItemStatusChange<T, HttpResponse<T> | HttpErrorResponse>) => void;
    cancel?: (change: RdsFileItemStatusChange<T>) => void;
    constructor(item: RdsFileItem, config: RdsUploadConfig, client: HttpClient);
    abort(): void;
    send(): void;
    private onSuccess;
    private onError;
    private onProgress;
    private onAbort;
}
