import { AfterViewInit, EventEmitter, QueryList } from '@angular/core';
import { RdsTableDragHandleDirective } from './table-drag-handle.directive';
import * as i0 from "@angular/core";
export type RdsTableDragEndEvent = {
    oldIndex: number;
    newIndex: number;
};
export declare class RdsTableDraggableDirective implements AfterViewInit {
    private readonly destroyRef;
    private readonly document;
    private readonly renderer;
    private readonly originalTable;
    private readonly zone;
    private header;
    private container;
    private boundingRect;
    private columnPreview;
    private currentIndex;
    private originalIndex;
    private clientX;
    private clientY;
    private columnRects;
    private moveColumnAnimationFrame;
    dragHandlesQuery: QueryList<RdsTableDragHandleDirective>;
    maxPreviewRows: number;
    rdsTableDragEnd: EventEmitter<RdsTableDragEndEvent>;
    ngAfterViewInit(): void;
    private onDragStart;
    private createColumnAndHandleDrag;
    private addColumn;
    private addDraggedColumn;
    private saveLastColumnRect;
    private createDragStartObservable;
    private createDragMoveObservable;
    private addHeaderCellData;
    private createAndInsertContainerElement;
    private getColumnCells;
    private createColumnPreview;
    private createColumnHTML;
    private createColumnPlaceholderHTML;
    private getHeaderCells;
    private swapColumns;
    private createDragEndObservable;
    private onDragMove;
    private saveCoords;
    private onDragEnd;
    private emitChange;
    private removeContainerAndPreview;
    private followPointerFactory;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsTableDraggableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RdsTableDraggableDirective, "[rdsTableDraggable], [rds-table-draggable]", never, { "maxPreviewRows": { "alias": "maxPreviewRows"; "required": false; }; }, { "rdsTableDragEnd": "rdsTableDragEnd"; }, ["dragHandlesQuery"], never, false, never>;
    static ngAcceptInputType_maxPreviewRows: unknown;
}
