import { AfterViewInit, OnDestroy, OnInit } from '@angular/core';
import { RdsSortable, SortDirection } from './sort.directive';
import * as i0 from "@angular/core";
export type ArrowViewState = SortDirection | 'hint' | 'active';
export interface ArrowViewStateTransition {
    fromState?: ArrowViewState;
    toState: ArrowViewState;
}
export declare class RdsSortHeaderComponent implements RdsSortable, OnDestroy, OnInit, AfterViewInit {
    private readonly cdr;
    private readonly sort;
    private readonly columnDef;
    private readonly focusMonitor;
    private readonly elementRef;
    private _rerenderSubscription;
    class: string;
    get _disabledClass(): boolean;
    get ariaSortAttribute(): string;
    _showIndicatorHint: boolean;
    _viewState: ArrowViewStateTransition | null;
    _arrowDirection: SortDirection;
    _disableViewStateAnimation: boolean;
    id: string;
    arrowPosition: 'left' | 'right';
    start: SortDirection;
    disableClear: boolean;
    disabled: boolean;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onMouseenter(): void;
    onMouseleave(): void;
    _handleClick(): void;
    _handleKeydown(event: KeyboardEvent): void;
    _isSorted(): boolean;
    _isDisabled(): boolean;
    _renderArrow(): boolean;
    _getArrowDirectionState(): string;
    _getArrowViewState(): string;
    private _updateArrowDirection;
    private _handleStateChanges;
    private _setIndicatorHintVisible;
    private _setAnimationTransitionState;
    private _toggleOnInteraction;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsSortHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsSortHeaderComponent, "[rds-sort-header], [rdsSortHeader]", ["rdsSortHeader"], { "id": { "alias": "rds-sort-header"; "required": false; }; "arrowPosition": { "alias": "arrowPosition"; "required": false; }; "start": { "alias": "start"; "required": false; }; "disableClear": { "alias": "disableClear"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, ["*"], false, never>;
    static ngAcceptInputType_disableClear: unknown;
    static ngAcceptInputType_disabled: unknown;
}
