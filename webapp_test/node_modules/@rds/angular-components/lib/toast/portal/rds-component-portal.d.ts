import { ComponentRef, Injector } from '@angular/core';
import { ComponentType } from '@angular/cdk/overlay';
export declare class RdsComponentPortal<T> {
    readonly component: ComponentType<T>;
    readonly injector: Injector;
    private _attachedHost?;
    constructor(component: ComponentType<T>, injector: Injector);
    attach(host: RdsBasePortalHost<T>, newestOnTop: boolean): ComponentRef<T>;
    detach(): void;
    get isAttached(): boolean;
    setAttachedHost(host?: RdsBasePortalHost<T>): void;
}
export declare abstract class RdsBasePortalHost<T> {
    private _attachedPortal?;
    private _disposeFn?;
    attach(portal: RdsComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;
    abstract attachComponentPortal(portal: RdsComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;
    detach(): void;
    setDisposeFn(fn: () => void): void;
}
