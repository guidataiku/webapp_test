import { ComponentRef } from '@angular/core';
import { Observable } from 'rxjs';
import { RdsToastRef } from './rds-toast.ref';
import { RdsToastGlobalConfig, RdsToastIndividualConfig } from './rds-toast.config';
import { RdsToastComponent } from './rds-toast.component';
import * as i0 from "@angular/core";
export interface RdsActiveToast<C = RdsToastComponent> {
    toastId: number;
    title: string;
    message: string;
    portal: ComponentRef<C>;
    toastRef: RdsToastRef<C>;
    onShown: Observable<void>;
    onHidden: Observable<void>;
    onTap: Observable<void>;
    onAction: Observable<any>;
}
export declare class RdsToastService {
    private readonly overlayService;
    private readonly injector;
    private readonly domSanitizer;
    private readonly ngZone;
    private readonly liveAnnouncer;
    private readonly toastGlobalConfig;
    globalConfig: RdsToastGlobalConfig;
    private readonly toasts;
    private currentlyActive;
    private overlayContainer?;
    private previousToastMessage;
    private _index;
    constructor();
    show<T = RdsToastComponent, A = any>(message?: string, title?: string, override?: Partial<RdsToastIndividualConfig>): RdsActiveToast<T> | null;
    success<T = RdsToastComponent, A = any>(message?: string, title?: string, override?: Partial<RdsToastIndividualConfig>): RdsActiveToast<T> | null;
    error<T = RdsToastComponent, A = any>(message?: string, title?: string, override?: Partial<RdsToastIndividualConfig>): RdsActiveToast<T> | null;
    info<T = RdsToastComponent, A = any>(message?: string, title?: string, override?: Partial<RdsToastIndividualConfig>): RdsActiveToast<T> | null;
    warning<T = RdsToastComponent, A = any>(message?: string, title?: string, override?: Partial<RdsToastIndividualConfig>): RdsActiveToast<T> | null;
    clear<T>(toastId?: number | RdsActiveToast<T>): void;
    private _remove;
    private _applyConfig;
    private _preBuildNotification;
    private _buildNotification;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsToastService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RdsToastService>;
}
