import { RdsIconName, RdsIconNamespace } from '../icons';
import { AriaLivePoliteness } from '@angular/cdk/a11y';
import { ComponentType } from '@angular/cdk/overlay';
import { InjectionToken } from '@angular/core';
export type RdsToastType = 'info' | 'warning' | 'success' | 'error';
export type RdsToastPosition = 'center-center' | 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';
/**
 * Configuration for an individual toast.
 */
export interface RdsToastIndividualConfig {
    /**
     * toast type
     * default: 'info'
     */
    type: RdsToastType;
    /**
     * disable both timeOut and extendedTimeOut
     * default: false
     */
    disableTimeOut: boolean | 'timeOut' | 'extendedTimeOut';
    /**
     * toast time to live in milliseconds
     * default: 5000
     */
    timeOut: number;
    /**
     * toast show close button
     * default: false
     */
    closeButton: boolean;
    /**
     * time to close after a user hovers over toast
     * default: 1000
     */
    extendedTimeOut: number;
    /**
     * render html in toast message (possibly unsafe)
     * default: false
     */
    enableHtml: boolean;
    /**
     * css class on toast component
     * default: ngx-toastr
     */
    toastClass: string;
    /**
     * toast container position
     * default: toast-top-right
     */
    position: RdsToastPosition;
    /**
     * css class on toast title
     * default: toast-title
     */
    titleClass: string;
    /**
     * css class on toast message
     * default: toast-message
     */
    messageClass: string;
    /**
     * animation easing on toast
     * default: ease-in
     */
    easing: string;
    /**
     * animation ease time on toast
     * default: 300
     */
    easeTime: string | number;
    /**
     * clicking on toast dismisses it
     * default: true
     */
    tapToDismiss: boolean;
    /**
     * Angular toast component to be shown. RdsToast Component is only supported.
     * default: RdsToastComponent
     */
    toastComponent?: ComponentType<any>;
    /**
     * Helps show toast from a websocket or from event outside Angular
     * default: false
     */
    onActivateTick: boolean;
    /**
     * New toast placement
     * default: true
     */
    newestOnTop: boolean;
    /**
     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom
     * component or template, the announcement message will default to the specified message.
     */
    announcementMessage: string | null;
    /** The politeness level for the LiveAnnouncer announcement. */
    politeness: AriaLivePoliteness;
    /**
     * Icon class
     */
    icon: RdsIconName | null;
    /**
     * Icon namespace
     */
    iconNamespace: RdsIconNamespace | null;
}
export interface RdsToastGlobalConfig extends RdsToastIndividualConfig {
    /**
     * max toasts opened. Toasts will be queued
     * Zero is unlimited
     * default: 0
     */
    maxOpened: number;
    /**
     * dismiss current toast when max is reached
     * default: false
     */
    autoDismiss: boolean;
}
export declare const DEFAULT_GLOBAL_CONFIG: RdsToastGlobalConfig;
export declare const RDS_TOAST_GLOBAL_CONFIG_TOKEN: InjectionToken<RdsToastGlobalConfig>;
