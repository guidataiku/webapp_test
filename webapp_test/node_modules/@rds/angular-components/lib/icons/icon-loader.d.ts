import { OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { RdsIconName, RdsIconNamespace } from './icon-types';
import * as i0 from "@angular/core";
export declare function getSvgHref(namespace: RdsIconNamespace, name: RdsIconName): string;
/**
 * Service to load icons used by the `<rds-icon>` component.
 * Icons are get from, assets/icons/{namespace}/{iconName}
 */
export declare class RdsIconLoader implements OnDestroy {
    private readonly config;
    private readonly httpClient;
    private readonly document;
    private readonly domSanitizer;
    private static BASE_URL;
    private static BASE_URL_FETCHED;
    private readonly iconConfigsCache;
    private readonly iconFetchesInProgress;
    private allIcons;
    private preloadAll;
    private static _getBaseUrl;
    constructor();
    preloadSelectedIcons(selectedIcons: Record<RdsIconNamespace, RdsIconName[]>): void;
    /**
     * Returns an Observable with the icon (as an `<svg>` SVGelement) for the given name
     * and namespace.
     * @param name Name of the icon to be retrieved.
     * @param namespace Namespace in which to look for the icon.
     */
    getSvgIcon(name: RdsIconName, namespace: RdsIconNamespace): Observable<SVGElement>;
    ngOnDestroy(): void;
    private getFromAllIconsFile;
    private getOrCreateIconConfig;
    private _addIconConfigToCache;
    private _buildIconUrl;
    private _getSvgElementFromIconConfig;
    private _fetchIcon;
    private _buildSvgElement;
    private buildFromSymbol;
    private _convertSVGStringToSvgElement;
    private _setDefaultSvgAttributes;
    private handleConfig;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsIconLoader, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RdsIconLoader>;
}
