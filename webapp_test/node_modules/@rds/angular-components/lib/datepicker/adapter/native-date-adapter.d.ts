import { DateAdapter } from './date-adapter';
import { RdsCalendarView } from '../calendar.types';
import * as i0 from "@angular/core";
export declare class NativeDateAdapter extends DateAdapter<Date> {
    private readonly rdsDateLocale;
    private readonly platform;
    private readonly _clampDate;
    useUtcForDisplay: boolean;
    constructor();
    getYear(date: Date): number;
    getMonth(date: Date): number;
    getDate(date: Date): number;
    getDayOfWeek(date: Date): number;
    getMonthNames(style: 'long' | 'short' | 'narrow'): string[];
    getDateNames(): string[];
    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];
    getYearName(date: Date): string;
    getFirstDayOfWeek(): number;
    getNumDaysInMonth(date: Date): number;
    clone(date: Date): Date;
    createDate(year: number, month: number, date: number): Date;
    today(): Date;
    parse(value: any): Date | null;
    format(date: Date, displayFormat: any, availableViews?: RdsCalendarView[]): string;
    placeholderFormat(displayFormat: any, availableViews?: RdsCalendarView[]): string;
    addCalendarYears(date: Date, years: number): Date;
    addCalendarMonths(date: Date, months: number): Date;
    addCalendarDays(date: Date, days: number): Date;
    toIso8601(date: Date): string;
    deserialize(value: Date | string | null): Date | null;
    isDateInstance(obj: unknown): boolean;
    isValid(date: Date): boolean;
    invalid(): Date;
    private _createDateWithOverflow;
    private _2digit;
    private _stripDirectionalityCharacters;
    private _format;
    static ɵfac: i0.ɵɵFactoryDeclaration<NativeDateAdapter, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NativeDateAdapter>;
}
