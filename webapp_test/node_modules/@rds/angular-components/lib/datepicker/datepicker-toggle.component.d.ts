import { BooleanInput } from '@angular/cdk/coercion';
import { AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { RdsDatepickerIntl } from './datepicker.intl';
import { RdsDatepickerControl, RdsDatepickerPanel } from './datepicker-base';
import { ExtractDateTypeFromSelection } from './date-selection.model';
import { RdsFormFieldSize } from '../form-field';
import * as i0 from "@angular/core";
export declare class RdsDatepickerToggleIconDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsDatepickerToggleIconDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RdsDatepickerToggleIconDirective, "[rdsDatepickerToggleIcon], [rds-datepicker-toggle-icon]", never, {}, {}, never, never, false, never>;
}
export declare class RdsDatepickerToggleComponent<S, D = ExtractDateTypeFromSelection<S>> implements AfterContentInit, OnChanges, OnDestroy {
    readonly intl: RdsDatepickerIntl;
    private readonly destroyRef;
    private readonly cdr;
    private readonly formField;
    private _stateChanges;
    get classes(): string[];
    get dataRdsCalendar(): string | null;
    _tabIndex: null;
    forDatepicker?: RdsDatepickerPanel<RdsDatepickerControl<D>, S, D>;
    tabIndex: number | null;
    ariaLabel: string;
    set disabled(value: BooleanInput);
    get disabled(): boolean;
    private _disabled;
    _customIcon: RdsDatepickerToggleIconDirective | null;
    get _buttonSize(): RdsFormFieldSize;
    _onClick($event: Event): void;
    constructor(tabIndex?: string);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    _open(event: Event): void;
    private _watchStateChanges;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsDatepickerToggleComponent<any, any>, [{ attribute: "tabindex"; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsDatepickerToggleComponent<any, any>, "rds-datepicker-toggle", ["rdsDatepickerToggle"], { "forDatepicker": { "alias": "forDatepicker"; "required": false; }; "tabIndex": { "alias": "tabIndex"; "required": false; }; "ariaLabel": { "alias": "aria-label"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, {}, ["_customIcon"], ["[rdsDatepickerToggleIcon], [rds-datepicker-toggle-icon]"], false, never>;
    static ngAcceptInputType_tabIndex: unknown;
}
