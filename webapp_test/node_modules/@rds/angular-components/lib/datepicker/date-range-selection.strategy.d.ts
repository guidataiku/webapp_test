import { FactoryProvider, InjectionToken } from '@angular/core';
import { DateAdapter } from './adapter';
import { DateRange } from './date-selection.model';
import * as i0 from "@angular/core";
export declare const RDS_DATE_RANGE_SELECTION_STRATEGY: InjectionToken<RdsDateRangeSelectionStrategy<unknown>>;
export interface RdsDateRangeSelectionStrategy<D> {
    selectionFinished(date: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;
    createPreview(activeDate: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;
}
export declare class DefaultRdsCalendarRangeStrategy<D> implements RdsDateRangeSelectionStrategy<D> {
    protected readonly dateAdapter: DateAdapter<D>;
    selectionFinished(date: D, currentRange: DateRange<D>): DateRange<D>;
    createPreview(activeDate: D | null, currentRange: DateRange<D>): DateRange<D>;
    static ɵfac: i0.ɵɵFactoryDeclaration<DefaultRdsCalendarRangeStrategy<any>, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DefaultRdsCalendarRangeStrategy<any>>;
}
export declare function RDS_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent: RdsDateRangeSelectionStrategy<unknown>): RdsDateRangeSelectionStrategy<unknown>;
export declare const RDS_CALENDAR_RANGE_STRATEGY_PROVIDER: FactoryProvider;
