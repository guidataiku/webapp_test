import { AfterContentInit, AfterViewInit, QueryList } from '@angular/core';
import { RdsTabLabelWrapperDirective } from './tab-label-wrapper.directive';
import { RdsTabComponent } from './tab.component';
import * as i0 from "@angular/core";
export type RdsTabsSize = 's' | 'm';
export declare class RdsTabsComponent implements AfterContentInit, AfterViewInit {
    private readonly cdr;
    private readonly destroyRef;
    private focusKeyManager;
    private _tabLabelSubscription;
    selectedIndex: number;
    tabs: QueryList<RdsTabComponent>;
    labelWrappers: QueryList<RdsTabLabelWrapperDirective>;
    size: RdsTabsSize;
    stretch: boolean;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    selectTab(tabIndex: number): void;
    onKeydown(event: KeyboardEvent): void;
    resetActiveItem(): void;
    private getIndexOfFocusedElement;
    private getActiveTabIndex;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsTabsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsTabsComponent, "rds-tabs", never, { "size": { "alias": "size"; "required": false; }; "stretch": { "alias": "stretch"; "required": false; }; }, {}, ["tabs"], ["*"], false, never>;
    static ngAcceptInputType_stretch: unknown;
}
