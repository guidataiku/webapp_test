import { FocusableOption, FocusOptions, FocusOrigin } from '@angular/cdk/a11y';
import { AfterViewInit, OnDestroy } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class RdsTabLabelWrapperDirective implements AfterViewInit, FocusableOption, OnDestroy {
    private readonly elementRef;
    private readonly focusMonitor;
    private readonly destroyRef;
    disabled: boolean;
    readonly _focused: Subject<RdsTabLabelWrapperDirective>;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    focus(origin: FocusOrigin, options?: FocusOptions): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsTabLabelWrapperDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RdsTabLabelWrapperDirective, "[rdsTabLabelWrapper]", never, { "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, never, false, never>;
    static ngAcceptInputType_disabled: unknown;
}
