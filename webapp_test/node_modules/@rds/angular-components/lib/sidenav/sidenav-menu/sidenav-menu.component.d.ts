import { AfterContentInit, EventEmitter, OnDestroy, OnInit, QueryList, TemplateRef } from '@angular/core';
import { RdsSidenavMenuitemComponent } from '../sidenav-menuitem/sidenav-menuitem.component';
import { FocusOrigin } from '@angular/cdk/a11y';
import { RdsSidenavMenuCloseReason, RdsSidenavMenuPanel } from '../sidenav.types';
import { Subject } from 'rxjs';
import { AnimationEvent } from '@angular/animations';
import { Direction } from '@angular/cdk/bidi';
import { RdsMenuPositionX, RdsMenuPositionY } from '../../menu';
import { RdsSidenavMenuHeaderComponent } from '../sidenav-menu-header/sidenav-menu-header.component';
import * as i0 from "@angular/core";
export declare class RdsSidenavMenuComponent implements OnInit, AfterContentInit, OnDestroy, RdsSidenavMenuPanel {
    private readonly sidenav;
    private readonly cdr;
    private _keyManager;
    _hovered: Subject<boolean>;
    hovered: import("rxjs").Observable<boolean>;
    menuHeader?: RdsSidenavMenuHeaderComponent;
    _allItems: QueryList<RdsSidenavMenuitemComponent>;
    attrAriaLabel: null;
    attrAriaLabelledBy: null;
    attrAriaDescribedBy: null;
    private _directDescendantItems;
    private _tabSubscription;
    _classList: {
        [key: string]: boolean;
    };
    _panelAnimationState: 'void' | 'enter';
    readonly _animationDone: Subject<AnimationEvent>;
    _isAnimating: boolean;
    parentMenu: RdsSidenavMenuPanel | undefined;
    direction: Direction;
    expandedState: 'expanded' | 'collapsed';
    private _isOpened;
    get isOpened(): boolean;
    set isOpened(value: boolean);
    private _title;
    set title(v: string);
    get title(): string;
    overlayPanelClass: string | string[];
    backdropClass: string;
    ariaLabel: string | null;
    ariaLabelledby: string | null;
    ariaDescribedby: string | null;
    openOnInit: boolean;
    templateRef: TemplateRef<unknown>;
    readonly closed: EventEmitter<RdsSidenavMenuCloseReason>;
    readonly panelId: string;
    readonly isMinimal$: import("rxjs").Observable<boolean>;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    _handleKeydown(event: KeyboardEvent): void;
    focusFirstItem(origin?: FocusOrigin): void;
    private _focusFirstItem;
    resetActiveItem(): void;
    setPositionClasses(posX?: RdsMenuPositionX, posY?: RdsMenuPositionY): void;
    _startAnimation(): void;
    _resetAnimation(): void;
    _onAnimationDone(event: AnimationEvent): void;
    private _updateDirectDescendants;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsSidenavMenuComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsSidenavMenuComponent, "rds-sidenav-menu", ["rdsSidenavMenu"], { "ariaLabel": { "alias": "aria-label"; "required": false; }; "ariaLabelledby": { "alias": "aria-labelledby"; "required": false; }; "ariaDescribedby": { "alias": "aria-describedby"; "required": false; }; "openOnInit": { "alias": "openOnInit"; "required": false; }; }, { "closed": "closed"; }, ["menuHeader", "_allItems"], [".rds-sidenav-menu-header", "*"], false, never>;
    static ngAcceptInputType_openOnInit: unknown;
}
