import { AfterViewInit, OnDestroy, OnInit } from '@angular/core';
import { Subject } from 'rxjs';
import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';
import { NativeElement } from '../sidenav.types';
import * as i0 from "@angular/core";
export declare class RdsSidenavMenuitemComponent implements OnInit, AfterViewInit, OnDestroy, FocusableOption, NativeElement {
    readonly _parentMenu: import("../sidenav.types").RdsSidenavMenuPanel | null;
    private readonly sidenavService;
    private readonly destroyRef;
    private readonly elementRef;
    private readonly focusMonitor;
    role: string;
    readonly _hovered: Subject<RdsSidenavMenuitemComponent>;
    readonly _focused: Subject<RdsSidenavMenuitemComponent>;
    readonly nativeElement: HTMLElement;
    isMinimal: boolean;
    rdsMenuItemClass: boolean;
    rdsFocusIndicatorClass: boolean;
    focus(origin?: FocusOrigin, options?: FocusOptions): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    _handleMouseEnter(): void;
    getLabel(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsSidenavMenuitemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsSidenavMenuitemComponent, "rds-sidenav-menuitem, [rds-sidenav-menuitem], [rdsSidenavMenuitem]", ["rdsSidenavMenuitem"], {}, {}, never, ["rds-icon", "*", "rds-badge"], false, never>;
}
