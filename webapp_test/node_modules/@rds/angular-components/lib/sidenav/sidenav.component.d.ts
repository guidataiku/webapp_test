import { AfterContentInit, AfterViewInit, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class RdsSidenavComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {
    private readonly destroyRef;
    private readonly nativeElement;
    private readonly document;
    private readonly renderer;
    private readonly cdr;
    private readonly sidenavService;
    private menubarHeight;
    private scrollingAncestor;
    noScroll: boolean;
    isExpandable: boolean;
    set isMinimal(v: BooleanInput);
    get isMinimal(): boolean;
    get isInMinimalState(): boolean;
    get isInFullState(): boolean;
    isMinimalChange: EventEmitter<boolean>;
    private children;
    private footerRef?;
    private navRef;
    private directDescendantItems;
    private keyManager;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    toggleIsMinimal(): void;
    onContentChanged(entries?: ResizeObserverEntry[]): void;
    handleKeydown(event: KeyboardEvent): void;
    private scrollIfNeeded;
    private getHeight;
    private onMinimalStateChange;
    private updateSelfAppearance;
    private calculateNoScroll;
    private updateDirectDescendants;
    static ɵfac: i0.ɵɵFactoryDeclaration<RdsSidenavComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RdsSidenavComponent, "rds-sidenav", ["rdsSidenav"], { "isExpandable": { "alias": "isExpandable"; "required": false; }; "isMinimal": { "alias": "isMinimal"; "required": false; }; }, { "isMinimalChange": "isMinimalChange"; }, ["children"], ["*"], false, never>;
    static ngAcceptInputType_isExpandable: unknown;
}
