import { Observable } from 'rxjs';
import { EventEmitter, InjectionToken, TemplateRef } from '@angular/core';
import { Direction } from '@angular/cdk/bidi';
import { FocusOrigin } from '@angular/cdk/a11y';
import { RdsMenuPositionX, RdsMenuPositionY } from '../menu';
export type RdsSidenavMenuCloseReason = void | 'click' | 'keydown' | 'tab';
export declare const RDS_SIDENAV_MENU_PANEL: InjectionToken<RdsSidenavMenuPanel>;
export interface RdsSidenavMenuPanel {
    isOpened: boolean;
    title: string;
    hovered: Observable<boolean>;
    expandedState: string;
    templateRef: TemplateRef<unknown>;
    readonly closed: EventEmitter<RdsSidenavMenuCloseReason>;
    parentMenu?: RdsSidenavMenuPanel | undefined;
    direction?: Direction;
    focusFirstItem: (origin?: FocusOrigin) => void;
    resetActiveItem: () => void;
    setPositionClasses?: (x: RdsMenuPositionX, y: RdsMenuPositionY) => void;
    backdropClass?: string;
    overlayPanelClass?: string | string[];
    readonly panelId?: string;
    openOnInit: boolean;
}
export interface NativeElement {
    readonly nativeElement: HTMLElement;
}
