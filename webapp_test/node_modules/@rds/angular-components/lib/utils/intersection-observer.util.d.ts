import { ElementRef, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class IntersectionObserverFactory {
    create(callback: IntersectionObserverCallback, options?: IntersectionObserverInit): IntersectionObserver | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<IntersectionObserverFactory, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IntersectionObserverFactory>;
}
export declare class IntersectionObserverRx implements OnDestroy {
    private readonly intersectionObserverFactory;
    private _observedElements;
    ngOnDestroy(): void;
    observe(element: Element, options?: IntersectionObserverInit): Observable<IntersectionObserverEntry[]>;
    observe(element: ElementRef<Element>, options?: IntersectionObserverInit): Observable<IntersectionObserverEntry[]>;
    private _observeElement;
    private _unobserveElement;
    private _cleanupObserver;
    static ɵfac: i0.ɵɵFactoryDeclaration<IntersectionObserverRx, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IntersectionObserverRx>;
}
