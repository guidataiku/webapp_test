import { RdsCarouselItemDirective } from './carousel-item.directive';
import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, DestroyRef, HostBinding, inject, Input, numberAttribute, QueryList, ViewEncapsulation, } from '@angular/core';
import { BreakpointUtil } from '../utils';
import { delay, takeUntil, tap } from 'rxjs/operators';
import { interval, Subject, timer } from 'rxjs';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
import * as i1 from "../icons/icon.component";
import * as i2 from "../button/icon-button.component";
const INITIAL_AUTOPLAY_DELAY = 2000;
export class RdsCarouselComponent {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.destroyRef = inject(DestroyRef);
        this.indexOfActiveCarouselItem = 0;
        this.hostClass = 'rds-carousel';
        this.autoplay = false;
        this.autoplayDelay = INITIAL_AUTOPLAY_DELAY;
        this.showButtons = false;
        this.destroyTimeout$ = new Subject();
    }
    get indexOfLastElement() {
        return this.carouselItems.length - 1;
    }
    ngAfterContentInit() {
        this.selectActiveItem();
        this.carouselItems.changes
            .pipe(delay(0), takeUntilDestroyed(this.destroyRef))
            .subscribe(() => this.selectActiveItem());
    }
    ngOnChanges(changes) {
        if (changes['autoplay'] || changes['autoplayDelay']) {
            this.defineAutoplayInterval();
        }
    }
    ngOnDestroy() {
        this.destroyTimeout$.next();
        this.destroyTimeout$.complete();
    }
    prev() {
        this.hideCurrentVisibleCarouselItem();
        let indexOfNewCarouselItemToShow = this.indexOfActiveCarouselItem - 1;
        if (this.indexOfActiveCarouselItem === 0) {
            indexOfNewCarouselItemToShow = this.indexOfLastElement;
        }
        this.indexOfActiveCarouselItem = indexOfNewCarouselItemToShow;
        this.showCarouselItemMatchedWithIndexOfActive();
        this.defineAutoplayInterval();
    }
    next() {
        this.hideCurrentVisibleCarouselItem();
        let indexOfNewCarouselItemToShow = this.indexOfActiveCarouselItem + 1;
        if (this.indexOfActiveCarouselItem === this.indexOfLastElement) {
            indexOfNewCarouselItemToShow = 0;
        }
        this.indexOfActiveCarouselItem = indexOfNewCarouselItemToShow;
        this.showCarouselItemMatchedWithIndexOfActive();
        this.defineAutoplayInterval();
    }
    _changeActive({ index }) {
        this.hideCurrentVisibleCarouselItem();
        this.indexOfActiveCarouselItem = index;
        this.showCarouselItemMatchedWithIndexOfActive();
    }
    _isMobile() {
        return BreakpointUtil.isMobile();
    }
    defineAutoplayInterval() {
        this.destroyTimeout$.next();
        if (this.autoplay) {
            interval(this.autoplayDelay)
                .pipe(tap(() => this.next()), takeUntil(this.destroyTimeout$), takeUntilDestroyed(this.destroyRef))
                .subscribe();
        }
    }
    showCarouselItemMatchedWithIndexOfActive() {
        const carouselItemToShow = this.carouselItems.get(this.indexOfActiveCarouselItem);
        if (carouselItemToShow) {
            carouselItemToShow._show();
            timer(0)
                .pipe(tap(() => this.cdr.markForCheck()))
                .subscribe();
        }
    }
    hideCurrentVisibleCarouselItem() {
        const carouselItemToHide = this.carouselItems.get(this.indexOfActiveCarouselItem);
        if (carouselItemToHide) {
            carouselItemToHide._hide();
        }
    }
    selectActiveItem() {
        this.indexOfActiveCarouselItem = Math.max(this.carouselItems.toArray().findIndex((item) => item.isShown()), 0);
        this.carouselItems.forEach((item, index) => {
            if (index !== this.indexOfActiveCarouselItem && item.isShown()) {
                item._hide();
            }
        });
        this.showCarouselItemMatchedWithIndexOfActive();
        this.defineAutoplayInterval();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsCarouselComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsCarouselComponent, selector: "rds-carousel", inputs: { autoplay: ["autoplay", "autoplay", booleanAttribute], autoplayDelay: ["autoplayDelay", "autoplayDelay", (v) => numberAttribute(v, INITIAL_AUTOPLAY_DELAY)], showButtons: ["showButtons", "showButtons", booleanAttribute] }, host: { properties: { "class": "this.hostClass" } }, queries: [{ propertyName: "carouselItems", predicate: RdsCarouselItemDirective }], exportAs: ["rdsCarousel"], usesOnChanges: true, ngImport: i0, template: `
    <div class="rds-carousel__carousel-items">
      <ng-content />
    </div>
    <div class="rds-carousel__carousel-pagination">
      @if (showButtons) {
        <div
          class="rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--left"
        >
          <button
            rds-icon-button
            (click)="prev()"
            [size]="_isMobile() ? 's' : 'm'"
          >
            <rds-icon namespace="filled" icon="chevron_left" />
          </button>
        </div>
      }
      <div class="rds-carousel__carousel-pagination--text">
        {{ indexOfActiveCarouselItem + 1 }}/{{ carouselItems.length || 0 }}
      </div>
      @if (showButtons) {
        <div
          class="rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--right"
        >
          <button
            rds-icon-button
            (click)="next()"
            [size]="_isMobile() ? 's' : 'm'"
          >
            <rds-icon namespace="filled" icon="chevron_right" />
          </button>
        </div>
      }
    </div>
  `, isInline: true, styles: ["@keyframes fade{0%{opacity:.1}to{opacity:1}}.rds-carousel{position:relative;flex-direction:column;display:flex;overflow:hidden;margin:0 auto;padding-left:96px;padding-right:96px;width:100%}.rds-carousel .rds-carousel__carousel-items{align-items:center;justify-content:center;display:flex}.rds-carousel .rds-carousel__item{display:none;animation:fade .4s;width:100%}.rds-carousel .rds-carousel__item.rds-carousel__item--visible{align-items:center;justify-content:center;display:flex}.rds-carousel__carousel-pagination{display:flex;justify-content:center;align-items:center;margin-top:32px;height:40px}.rds-carousel__carousel-pagination .rds-carousel__carousel-pagination--text{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:var(--rds-color-low-contrast);padding-left:24px;padding-right:24px}.rds-carousel__carousel-pagination .rds-carousel__carousel-navigation-button-wrapper{display:flex}@media (max-width: 767.999999px){.rds-carousel{padding-left:20px;padding-right:20px}.rds-carousel__carousel-pagination{height:36px}.rds-carousel__carousel-pagination .rds-carousel__carousel-pagination--text{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}\n"], dependencies: [{ kind: "component", type: i1.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "component", type: i2.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsCarouselComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-carousel', template: `
    <div class="rds-carousel__carousel-items">
      <ng-content />
    </div>
    <div class="rds-carousel__carousel-pagination">
      @if (showButtons) {
        <div
          class="rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--left"
        >
          <button
            rds-icon-button
            (click)="prev()"
            [size]="_isMobile() ? 's' : 'm'"
          >
            <rds-icon namespace="filled" icon="chevron_left" />
          </button>
        </div>
      }
      <div class="rds-carousel__carousel-pagination--text">
        {{ indexOfActiveCarouselItem + 1 }}/{{ carouselItems.length || 0 }}
      </div>
      @if (showButtons) {
        <div
          class="rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--right"
        >
          <button
            rds-icon-button
            (click)="next()"
            [size]="_isMobile() ? 's' : 'm'"
          >
            <rds-icon namespace="filled" icon="chevron_right" />
          </button>
        </div>
      }
    </div>
  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'rdsCarousel', styles: ["@keyframes fade{0%{opacity:.1}to{opacity:1}}.rds-carousel{position:relative;flex-direction:column;display:flex;overflow:hidden;margin:0 auto;padding-left:96px;padding-right:96px;width:100%}.rds-carousel .rds-carousel__carousel-items{align-items:center;justify-content:center;display:flex}.rds-carousel .rds-carousel__item{display:none;animation:fade .4s;width:100%}.rds-carousel .rds-carousel__item.rds-carousel__item--visible{align-items:center;justify-content:center;display:flex}.rds-carousel__carousel-pagination{display:flex;justify-content:center;align-items:center;margin-top:32px;height:40px}.rds-carousel__carousel-pagination .rds-carousel__carousel-pagination--text{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:var(--rds-color-low-contrast);padding-left:24px;padding-right:24px}.rds-carousel__carousel-pagination .rds-carousel__carousel-navigation-button-wrapper{display:flex}@media (max-width: 767.999999px){.rds-carousel{padding-left:20px;padding-right:20px}.rds-carousel__carousel-pagination{height:36px}.rds-carousel__carousel-pagination .rds-carousel__carousel-pagination--text{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}\n"] }]
        }], propDecorators: { hostClass: [{
                type: HostBinding,
                args: ['class']
            }], autoplay: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], autoplayDelay: [{
                type: Input,
                args: [{
                        transform: (v) => numberAttribute(v, INITIAL_AUTOPLAY_DELAY),
                    }]
            }], showButtons: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], carouselItems: [{
                type: ContentChildren,
                args: [RdsCarouselItemDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,