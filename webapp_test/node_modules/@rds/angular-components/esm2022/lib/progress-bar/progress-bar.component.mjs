import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, numberAttribute, ViewChild, ViewEncapsulation, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
let progressbarId = 0;
export class RdsProgressBarComponent {
    get hostMode() {
        return this.mode;
    }
    get hostValueNow() {
        let valueNow = this.value;
        if (this.mode === 'indeterminate') {
            valueNow = null;
        }
        return valueNow;
    }
    constructor() {
        this.progressbarId = `rds-progress-bar-${progressbarId++}`;
        this.hostClass = true;
        this.hostRole = 'progressbar';
        this.hostAriaValuemin = '0';
        this.hostAriaValuemax = '100';
        /* eslint-disable-next-line @angular-eslint/no-input-rename */
        this.value = 0;
        /* eslint-disable-next-line @angular-eslint/no-input-rename */
        this.bufferValue = 0;
        this.mode = 'indeterminate';
        // We need to prefix the SVG reference with the current path, otherwise they won't work
        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,
        // because named route URLs can contain parentheses
        const path = location ? location.href.split('#')[0] : '';
        this.rectangleFillValue = `url('${path}#${this.progressbarId}')`;
    }
    primaryTransform() {
        const scale = this.value / 100;
        return { transform: `scaleX(${scale})` };
    }
    bufferTransform() {
        if (this.mode === 'buffer') {
            const scale = this.bufferValue / 100;
            return { transform: `scaleX(${scale})` };
        }
        return null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsProgressBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.3.1", type: RdsProgressBarComponent, selector: "rds-progress-bar", inputs: { value: ["value", "value", (v) => clamp(numberAttribute(v, 0))], bufferValue: ["bufferValue", "bufferValue", (v) => clamp(numberAttribute(v, 0))], mode: "mode" }, host: { properties: { "class.rds-progress-bar": "this.hostClass", "attr.role": "this.hostRole", "attr.aria-valuemin": "this.hostAriaValuemin", "attr.aria-valuemax": "this.hostAriaValuemax", "attr.mode": "this.hostMode", "attr.aria-valuenow": "this.hostValueNow" } }, viewQueries: [{ propertyName: "_primaryValueBar", first: true, predicate: ["primaryValueBar"], descendants: true }], ngImport: i0, template: `
    <svg
      width="100%"
      height="4"
      focusable="false"
      class="rds-progress-bar-background rds-progress-bar-element"
    >
      <defs>
        <pattern
          [id]="progressbarId"
          x="4"
          y="0"
          width="8"
          height="4"
          patternUnits="userSpaceOnUse"
        >
          <circle cx="2" cy="2" r="2" />
        </pattern>
      </defs>
      <rect [attr.fill]="rectangleFillValue" width="100%" height="100%" />
    </svg>

    <div
      class="rds-progress-bar-buffer rds-progress-bar-element"
      [ngStyle]="bufferTransform()"
    ></div>
    <div
      class="rds-progress-bar-primary rds-progress-bar-fill rds-progress-bar-element"
      [ngStyle]="primaryTransform()"
      #primaryValueBar
    ></div>
    <div
      class="rds-progress-bar-secondary rds-progress-bar-fill rds-progress-bar-element"
    ></div>
  `, isInline: true, styles: [".rds-progress-bar{--rds-progress-bar-fill-color: var(--rds-color-informative);position:relative;display:block;overflow:hidden;transition:opacity .25s linear;width:100%;height:4px}.rds-progress-bar .rds-progress-bar-element,.rds-progress-bar .rds-progress-bar-fill:after{position:absolute;width:100%;height:100%}.rds-progress-bar .rds-progress-bar-background{width:calc(100% + 10px);fill:var(--rds-color-track)}.rds-progress-bar .rds-progress-bar-buffer{transform-origin:top left;transition:transform .25s ease;background-color:var(--rds-color-track)}.rds-progress-bar .rds-progress-bar-secondary{display:none}.rds-progress-bar .rds-progress-bar-fill{transform-origin:top left;animation:none;transition:transform .25s ease}.rds-progress-bar .rds-progress-bar-fill:after{left:0;display:inline-block;animation:none;background-color:var(--rds-progress-bar-fill-color);content:\"\"}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-fill{transition:none}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-primary{animation:rds-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-primary.rds-progress-bar-fill:after{animation:rds-progress-bar-primary-indeterminate-scale 2s infinite linear}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-secondary{left:-54.888891%;display:block;animation:rds-progress-bar-secondary-indeterminate-translate 2s infinite linear}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-secondary.rds-progress-bar-fill:after{animation:rds-progress-bar-secondary-indeterminate-scale 2s infinite linear}.rds-progress-bar[mode=buffer] .rds-progress-bar-background{display:block;animation:rds-progress-bar-background-scroll .25s infinite linear}.rds-progress-bar[mode=buffer] .rds-progress-bar-fill:after{background-color:transparent}@keyframes rds-progress-bar-primary-indeterminate-translate{0%{transform:translate(0)}20%{animation-timing-function:cubic-bezier(.5,0,.701732,.495819);transform:translate(0)}59.15%{animation-timing-function:cubic-bezier(.302435,.381352,.55,.956352);transform:translate(83.67142%)}to{transform:translate(200.611057%)}}@keyframes rds-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.334731,.12482,.785844,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.661479)}to{transform:scaleX(.08)}}@keyframes rds-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.515058,.409685);transform:translate(0)}25%{animation-timing-function:cubic-bezier(.31033,.284058,.8,.733712);transform:translate(37.651913%)}48.35%{animation-timing-function:cubic-bezier(.4,.627035,.6,.902026);transform:translate(84.386165%)}to{transform:translate(160.277782%)}}@keyframes rds-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.515058,.409685);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.284058,.8,.733712);transform:scaleX(.457104)}44.15%{animation-timing-function:cubic-bezier(.4,.627035,.6,.902026);transform:scaleX(.72796)}to{transform:scaleX(.08)}}@keyframes rds-progress-bar-background-scroll{to{transform:translate(-8px)}}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsProgressBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-progress-bar', template: `
    <svg
      width="100%"
      height="4"
      focusable="false"
      class="rds-progress-bar-background rds-progress-bar-element"
    >
      <defs>
        <pattern
          [id]="progressbarId"
          x="4"
          y="0"
          width="8"
          height="4"
          patternUnits="userSpaceOnUse"
        >
          <circle cx="2" cy="2" r="2" />
        </pattern>
      </defs>
      <rect [attr.fill]="rectangleFillValue" width="100%" height="100%" />
    </svg>

    <div
      class="rds-progress-bar-buffer rds-progress-bar-element"
      [ngStyle]="bufferTransform()"
    ></div>
    <div
      class="rds-progress-bar-primary rds-progress-bar-fill rds-progress-bar-element"
      [ngStyle]="primaryTransform()"
      #primaryValueBar
    ></div>
    <div
      class="rds-progress-bar-secondary rds-progress-bar-fill rds-progress-bar-element"
    ></div>
  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [".rds-progress-bar{--rds-progress-bar-fill-color: var(--rds-color-informative);position:relative;display:block;overflow:hidden;transition:opacity .25s linear;width:100%;height:4px}.rds-progress-bar .rds-progress-bar-element,.rds-progress-bar .rds-progress-bar-fill:after{position:absolute;width:100%;height:100%}.rds-progress-bar .rds-progress-bar-background{width:calc(100% + 10px);fill:var(--rds-color-track)}.rds-progress-bar .rds-progress-bar-buffer{transform-origin:top left;transition:transform .25s ease;background-color:var(--rds-color-track)}.rds-progress-bar .rds-progress-bar-secondary{display:none}.rds-progress-bar .rds-progress-bar-fill{transform-origin:top left;animation:none;transition:transform .25s ease}.rds-progress-bar .rds-progress-bar-fill:after{left:0;display:inline-block;animation:none;background-color:var(--rds-progress-bar-fill-color);content:\"\"}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-fill{transition:none}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-primary{animation:rds-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-primary.rds-progress-bar-fill:after{animation:rds-progress-bar-primary-indeterminate-scale 2s infinite linear}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-secondary{left:-54.888891%;display:block;animation:rds-progress-bar-secondary-indeterminate-translate 2s infinite linear}.rds-progress-bar[mode=indeterminate] .rds-progress-bar-secondary.rds-progress-bar-fill:after{animation:rds-progress-bar-secondary-indeterminate-scale 2s infinite linear}.rds-progress-bar[mode=buffer] .rds-progress-bar-background{display:block;animation:rds-progress-bar-background-scroll .25s infinite linear}.rds-progress-bar[mode=buffer] .rds-progress-bar-fill:after{background-color:transparent}@keyframes rds-progress-bar-primary-indeterminate-translate{0%{transform:translate(0)}20%{animation-timing-function:cubic-bezier(.5,0,.701732,.495819);transform:translate(0)}59.15%{animation-timing-function:cubic-bezier(.302435,.381352,.55,.956352);transform:translate(83.67142%)}to{transform:translate(200.611057%)}}@keyframes rds-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.334731,.12482,.785844,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.661479)}to{transform:scaleX(.08)}}@keyframes rds-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.515058,.409685);transform:translate(0)}25%{animation-timing-function:cubic-bezier(.31033,.284058,.8,.733712);transform:translate(37.651913%)}48.35%{animation-timing-function:cubic-bezier(.4,.627035,.6,.902026);transform:translate(84.386165%)}to{transform:translate(160.277782%)}}@keyframes rds-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.515058,.409685);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.284058,.8,.733712);transform:scaleX(.457104)}44.15%{animation-timing-function:cubic-bezier(.4,.627035,.6,.902026);transform:scaleX(.72796)}to{transform:scaleX(.08)}}@keyframes rds-progress-bar-background-scroll{to{transform:translate(-8px)}}\n"] }]
        }], ctorParameters: () => [], propDecorators: { hostClass: [{
                type: HostBinding,
                args: ['class.rds-progress-bar']
            }], hostRole: [{
                type: HostBinding,
                args: ['attr.role']
            }], hostAriaValuemin: [{
                type: HostBinding,
                args: ['attr.aria-valuemin']
            }], hostAriaValuemax: [{
                type: HostBinding,
                args: ['attr.aria-valuemax']
            }], hostMode: [{
                type: HostBinding,
                args: ['attr.mode']
            }], hostValueNow: [{
                type: HostBinding,
                args: ['attr.aria-valuenow']
            }], value: [{
                type: Input,
                args: [{ transform: (v) => clamp(numberAttribute(v, 0)) }]
            }], bufferValue: [{
                type: Input,
                args: [{ transform: (v) => clamp(numberAttribute(v, 0)) }]
            }], mode: [{
                type: Input
            }], _primaryValueBar: [{
                type: ViewChild,
                args: ['primaryValueBar']
            }] } });
/** Clamps a value to be between two numbers, by default 0 and 100. */
function clamp(value, min = 0, max = 100) {
    return Math.max(min, Math.min(max, value));
}
//# sourceMappingURL=data:application/json;base64,