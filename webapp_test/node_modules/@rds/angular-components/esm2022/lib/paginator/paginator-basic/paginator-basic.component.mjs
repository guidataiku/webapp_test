import { booleanAttribute, ChangeDetectionStrategy, Component, EventEmitter, inject, Input, numberAttribute, Output, } from '@angular/core';
import { RdsPaginatorIntl } from '../paginator-intl';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../icons/icon.component";
import * as i3 from "../../tooltip/tooltip.directive";
import * as i4 from "../../button/icon-button.component";
export class RdsPaginatorBasicComponent {
    constructor() {
        this.intl = inject(RdsPaginatorIntl);
        this.disabled = false;
        this.showButtons = true;
        this.page = 1;
        this.pageChange = new EventEmitter();
        this.pageCount = 0;
        this.pages = [];
    }
    hasPrevious() {
        return this.page > 1;
    }
    hasNext() {
        return this.page < this.pageCount;
    }
    selectFirstPage() {
        this._updatePages(1);
    }
    selectPreviousPage() {
        if (!this.isPreviousDisabled()) {
            this._updatePages(this.page - 1);
        }
    }
    selectPage(pageNumber) {
        this._updatePages(pageNumber);
    }
    selectNextPage() {
        if (!this.isNextDisabled()) {
            this._updatePages(this.page + 1);
        }
    }
    selectLastPage() {
        this._updatePages(this.pageCount);
    }
    ngOnChanges() {
        this._updatePages(this.page);
    }
    isNextDisabled() {
        return !this.hasNext() || this.disabled;
    }
    isPreviousDisabled() {
        return !this.hasPrevious() || this.disabled;
    }
    isEllipsis(pageNumber) {
        return pageNumber === -1;
    }
    _applyEllipses(start, end) {
        if (start > 0) {
            if (start > 2) {
                this.pages.unshift(-1);
            }
            else if (start === 2) {
                this.pages.unshift(2);
            }
            this.pages.unshift(1);
        }
        if (end < this.pageCount) {
            if (end < this.pageCount - 2) {
                this.pages.push(-1);
            }
            else if (end === this.pageCount - 2) {
                this.pages.push(this.pageCount - 1);
            }
            this.pages.push(this.pageCount);
        }
    }
    _setPageInRange(newPageNo) {
        const prevPageNo = this.page;
        this.page = this._getValueInRange(newPageNo, this.pageCount, 1);
        if (this.page !== prevPageNo && this._isNumber(this.collectionSize)) {
            this.pageChange.emit({
                previousPageIndex: prevPageNo - 1,
                pageIndex: this.page - 1,
            });
        }
    }
    _updatePages(newPage) {
        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);
        if (!this._isNumber(this.pageCount)) {
            this.pageCount = 0;
        }
        this.pages = [];
        for (let i = 1; i <= this.pageCount; i++) {
            this.pages.push(i);
        }
        this._setPageInRange(newPage);
        if (this.maxSize > 0 && this.pageCount > this.maxSize) {
            const [start, end] = this._applyRotation();
            this.pages = this.pages.slice(start, end);
            this._applyEllipses(start, end);
        }
    }
    _getValueInRange(value, max, min = 0) {
        return Math.max(Math.min(value, max), min);
    }
    _applyRotation() {
        let start = 0;
        let end = this.pageCount;
        const leftOffset = Math.floor(this.maxSize / 2);
        const rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;
        if (this.page <= leftOffset) {
            end = this.maxSize;
        }
        else if (this.pageCount - this.page < leftOffset) {
            start = this.pageCount - this.maxSize;
        }
        else {
            start = this.page - leftOffset - 1;
            end = this.page + rightOffset;
        }
        return [start, end];
    }
    _isNumber(value) {
        return !isNaN(this._toInteger(value));
    }
    _toInteger(value) {
        return parseInt(`${value}`, 10);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsPaginatorBasicComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsPaginatorBasicComponent, selector: "rds-paginator-basic", inputs: { disabled: ["disabled", "disabled", booleanAttribute], showButtons: ["showButtons", "showButtons", booleanAttribute], collectionSize: ["collectionSize", "collectionSize", numberAttribute], maxSize: ["maxSize", "maxSize", numberAttribute], page: ["page", "page", numberAttribute], pageSize: ["pageSize", "pageSize", numberAttribute] }, outputs: { pageChange: "pageChange" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"rds-basic-paginator\">\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'first_page',\n        btnClass: 'rds-paginator-navigation-first',\n        tooltipText: intl.firstPageLabel,\n        click: selectFirstPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'chevron_left',\n        btnClass: 'rds-paginator-navigation-previous',\n        tooltipText: intl.previousPageLabel,\n        click: selectPreviousPage.bind(this)\n      }\"\n    />\n  }\n  @for (pageNumber of pages; track pageNumber) {\n    <div\n      class=\"rds-page-item\"\n      [class.active]=\"pageNumber === page\"\n      [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n      [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n    >\n      @if (!isEllipsis(pageNumber)) {\n        <div\n          class=\"rds-page-link\"\n          [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\"\n          (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n        >\n          <button\n            type=\"button\"\n            class=\"rds-paginator-page-button rds-button--text\"\n          >\n            {{ pageNumber }}\n          </button>\n        </div>\n      } @else {\n        <div\n          class=\"rds-page-link rds-paginator-ellipsis\"\n          tabindex=\"-1\"\n          aria-disabled=\"true\"\n        >\n          ...\n        </div>\n      }\n    </div>\n  }\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'chevron_right',\n        btnClass: 'rds-paginator-navigation-next',\n        tooltipText: intl.nextPageLabel,\n        click: selectNextPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'last_page',\n        btnClass: 'rds-paginator-navigation-last',\n        tooltipText: intl.lastPageLabel,\n        click: selectLastPage.bind(this)\n      }\"\n    />\n  }\n</div>\n\n<ng-template\n  #arrow\n  let-disabled=\"disabled\"\n  let-icon=\"icon\"\n  let-btnClass=\"btnClass\"\n  let-tooltipText=\"tooltipText\"\n  let-click=\"click\"\n>\n  <div class=\"rds-page-item\" [class.disabled]=\"disabled\">\n    <div\n      class=\"rds-page-link\"\n      [attr.tabindex]=\"disabled ? '-1' : null\"\n      [attr.aria-disabled]=\"disabled ? 'true' : null\"\n    >\n      <button\n        rds-icon-button\n        type=\"button\"\n        size=\"m\"\n        [class]=\"btnClass\"\n        [attr.aria-label]=\"tooltipText\"\n        [rdsTooltip]=\"tooltipText\"\n        [rdsTooltipDisabled]=\"disabled\"\n        rdsTooltipPosition=\"top-center\"\n        [rdsTooltipShowDelay]=\"500\"\n        rdsTooltipHideArrow\n        [disabled]=\"disabled\"\n        (click)=\"click(); $event.preventDefault()\"\n      >\n        <rds-icon [icon]=\"icon\" namespace=\"outlined\" />\n      </button>\n    </div>\n  </div>\n</ng-template>\n", styles: [".rds-basic-paginator{display:flex;gap:8px}.rds-page-item{display:flex;align-items:center;justify-content:center}.rds-page-item .rds-paginator-page-button{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;cursor:pointer;color:var(--rds-color-high-contrast);background:none;border:none;height:40px;min-width:40px;border-radius:2px}.rds-page-item .rds-paginator-page-button:hover{background-color:var(--rds-color-bg-transparent-hover-select)}.rds-page-item .rds-paginator-page-button:focus-visible{outline:2px solid var(--rds-color-stroke-active-focus)}.rds-page-item .rds-paginator-page-button:active{background-color:var(--rds-color-bg-transparent-pressed)}.rds-page-item.active .rds-paginator-page-button{color:var(--rds-color-bg-base-1);background:var(--rds-color-bg-informative-hover)}.rds-page-item .rds-paginator-navigation-first,.rds-page-item .rds-paginator-navigation-previous,.rds-page-item .rds-paginator-navigation-next,.rds-page-item .rds-paginator-navigation-last{height:40px;min-width:40px}.rds-page-link{display:flex}.rds-page-link.rds-paginator-ellipsis.rds-paginator-ellipsis{justify-content:space-around;align-items:center;height:40px;min-width:40px}.rds-page-link .rds-paginator-page-button:before,.rds-page-link .rds-paginator-page-button:after{inset:1px -6px -6px 2px;height:40px;width:40px}.rds-page-link .rds-button.rds-button--icon.rds-button-m:before,.rds-page-link .rds-button.rds-button--icon.rds-button-m:after{inset:0 -6px -6px 0;height:40px;width:40px}\n"], dependencies: [{ kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "directive", type: i3.RdsTooltipDirective, selector: "[rdsTooltip], [rds-tooltip]", inputs: ["rdsTooltipAriaDescription", "rdsTooltipShowDelay", "rdsTooltipHideDelay", "rdsTooltipHideArrow", "rdsTooltipTouchGestures", "rdsTooltipPosition", "rdsTooltipDisabled", "rdsTooltip", "rdsTooltipClass"], exportAs: ["rdsTooltip"] }, { kind: "component", type: i4.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsPaginatorBasicComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-paginator-basic', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"rds-basic-paginator\">\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'first_page',\n        btnClass: 'rds-paginator-navigation-first',\n        tooltipText: intl.firstPageLabel,\n        click: selectFirstPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'chevron_left',\n        btnClass: 'rds-paginator-navigation-previous',\n        tooltipText: intl.previousPageLabel,\n        click: selectPreviousPage.bind(this)\n      }\"\n    />\n  }\n  @for (pageNumber of pages; track pageNumber) {\n    <div\n      class=\"rds-page-item\"\n      [class.active]=\"pageNumber === page\"\n      [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n      [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n    >\n      @if (!isEllipsis(pageNumber)) {\n        <div\n          class=\"rds-page-link\"\n          [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\"\n          (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n        >\n          <button\n            type=\"button\"\n            class=\"rds-paginator-page-button rds-button--text\"\n          >\n            {{ pageNumber }}\n          </button>\n        </div>\n      } @else {\n        <div\n          class=\"rds-page-link rds-paginator-ellipsis\"\n          tabindex=\"-1\"\n          aria-disabled=\"true\"\n        >\n          ...\n        </div>\n      }\n    </div>\n  }\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'chevron_right',\n        btnClass: 'rds-paginator-navigation-next',\n        tooltipText: intl.nextPageLabel,\n        click: selectNextPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'last_page',\n        btnClass: 'rds-paginator-navigation-last',\n        tooltipText: intl.lastPageLabel,\n        click: selectLastPage.bind(this)\n      }\"\n    />\n  }\n</div>\n\n<ng-template\n  #arrow\n  let-disabled=\"disabled\"\n  let-icon=\"icon\"\n  let-btnClass=\"btnClass\"\n  let-tooltipText=\"tooltipText\"\n  let-click=\"click\"\n>\n  <div class=\"rds-page-item\" [class.disabled]=\"disabled\">\n    <div\n      class=\"rds-page-link\"\n      [attr.tabindex]=\"disabled ? '-1' : null\"\n      [attr.aria-disabled]=\"disabled ? 'true' : null\"\n    >\n      <button\n        rds-icon-button\n        type=\"button\"\n        size=\"m\"\n        [class]=\"btnClass\"\n        [attr.aria-label]=\"tooltipText\"\n        [rdsTooltip]=\"tooltipText\"\n        [rdsTooltipDisabled]=\"disabled\"\n        rdsTooltipPosition=\"top-center\"\n        [rdsTooltipShowDelay]=\"500\"\n        rdsTooltipHideArrow\n        [disabled]=\"disabled\"\n        (click)=\"click(); $event.preventDefault()\"\n      >\n        <rds-icon [icon]=\"icon\" namespace=\"outlined\" />\n      </button>\n    </div>\n  </div>\n</ng-template>\n", styles: [".rds-basic-paginator{display:flex;gap:8px}.rds-page-item{display:flex;align-items:center;justify-content:center}.rds-page-item .rds-paginator-page-button{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;cursor:pointer;color:var(--rds-color-high-contrast);background:none;border:none;height:40px;min-width:40px;border-radius:2px}.rds-page-item .rds-paginator-page-button:hover{background-color:var(--rds-color-bg-transparent-hover-select)}.rds-page-item .rds-paginator-page-button:focus-visible{outline:2px solid var(--rds-color-stroke-active-focus)}.rds-page-item .rds-paginator-page-button:active{background-color:var(--rds-color-bg-transparent-pressed)}.rds-page-item.active .rds-paginator-page-button{color:var(--rds-color-bg-base-1);background:var(--rds-color-bg-informative-hover)}.rds-page-item .rds-paginator-navigation-first,.rds-page-item .rds-paginator-navigation-previous,.rds-page-item .rds-paginator-navigation-next,.rds-page-item .rds-paginator-navigation-last{height:40px;min-width:40px}.rds-page-link{display:flex}.rds-page-link.rds-paginator-ellipsis.rds-paginator-ellipsis{justify-content:space-around;align-items:center;height:40px;min-width:40px}.rds-page-link .rds-paginator-page-button:before,.rds-page-link .rds-paginator-page-button:after{inset:1px -6px -6px 2px;height:40px;width:40px}.rds-page-link .rds-button.rds-button--icon.rds-button-m:before,.rds-page-link .rds-button.rds-button--icon.rds-button-m:after{inset:0 -6px -6px 0;height:40px;width:40px}\n"] }]
        }], propDecorators: { disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], showButtons: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], collectionSize: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], maxSize: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], page: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], pageSize: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], pageChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,