import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RdsIconComponent } from '../icons';
import { RdsButtonModule } from '../button';
import { RdsUploadComponent } from './upload.component';
import { RdsUploadDirective } from './upload.directive';
import { RdsUploadDropZoneDirective } from './upload-drop-zone.directive';
import { RdsProgressBarModule } from '../progress-bar';
import { RdsFileSizePipe } from './file-size.pipe';
import { RdsUploadListItemComponent } from './upload-list-item/upload-list-item.component';
import { RdsUploadErrorDirective } from './upload-error.directive';
import * as i0 from "@angular/core";
const publicElements = [
    RdsUploadComponent,
    RdsUploadDirective,
    RdsUploadDropZoneDirective,
    RdsFileSizePipe,
    RdsUploadListItemComponent,
    RdsUploadErrorDirective,
];
export class RdsUploadModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadModule, declarations: [RdsUploadComponent,
            RdsUploadDirective,
            RdsUploadDropZoneDirective,
            RdsFileSizePipe,
            RdsUploadListItemComponent,
            RdsUploadErrorDirective], imports: [CommonModule,
            RdsIconComponent,
            RdsButtonModule,
            RdsProgressBarModule], exports: [RdsUploadComponent,
            RdsUploadDirective,
            RdsUploadDropZoneDirective,
            RdsFileSizePipe,
            RdsUploadListItemComponent,
            RdsUploadErrorDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadModule, imports: [CommonModule,
            RdsButtonModule,
            RdsProgressBarModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: [...publicElements],
                    declarations: [...publicElements],
                    imports: [
                        CommonModule,
                        RdsIconComponent,
                        RdsButtonModule,
                        RdsProgressBarModule,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYW5ndWxhci1jb21wb25lbnRzL3NyYy9saWIvdXBsb2FkL3VwbG9hZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQzVDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDNUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDMUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ25ELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQUVuRSxNQUFNLGNBQWMsR0FBRztJQUNyQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixlQUFlO0lBQ2YsMEJBQTBCO0lBQzFCLHVCQUF1QjtDQUN4QixDQUFDO0FBWUYsTUFBTSxPQUFPLGVBQWU7OEdBQWYsZUFBZTsrR0FBZixlQUFlLGlCQWxCMUIsa0JBQWtCO1lBQ2xCLGtCQUFrQjtZQUNsQiwwQkFBMEI7WUFDMUIsZUFBZTtZQUNmLDBCQUEwQjtZQUMxQix1QkFBdUIsYUFPckIsWUFBWTtZQUNaLGdCQUFnQjtZQUNoQixlQUFlO1lBQ2Ysb0JBQW9CLGFBZnRCLGtCQUFrQjtZQUNsQixrQkFBa0I7WUFDbEIsMEJBQTBCO1lBQzFCLGVBQWU7WUFDZiwwQkFBMEI7WUFDMUIsdUJBQXVCOytHQWFaLGVBQWUsWUFOeEIsWUFBWTtZQUVaLGVBQWU7WUFDZixvQkFBb0I7OzJGQUdYLGVBQWU7a0JBVjNCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsR0FBRyxjQUFjLENBQUM7b0JBQzVCLFlBQVksRUFBRSxDQUFDLEdBQUcsY0FBYyxDQUFDO29CQUNqQyxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixnQkFBZ0I7d0JBQ2hCLGVBQWU7d0JBQ2Ysb0JBQW9CO3FCQUNyQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUmRzSWNvbkNvbXBvbmVudCB9IGZyb20gJy4uL2ljb25zJztcbmltcG9ydCB7IFJkc0J1dHRvbk1vZHVsZSB9IGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgeyBSZHNVcGxvYWRDb21wb25lbnQgfSBmcm9tICcuL3VwbG9hZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmRzVXBsb2FkRGlyZWN0aXZlIH0gZnJvbSAnLi91cGxvYWQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFJkc1VwbG9hZERyb3Bab25lRGlyZWN0aXZlIH0gZnJvbSAnLi91cGxvYWQtZHJvcC16b25lLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSZHNQcm9ncmVzc0Jhck1vZHVsZSB9IGZyb20gJy4uL3Byb2dyZXNzLWJhcic7XG5pbXBvcnQgeyBSZHNGaWxlU2l6ZVBpcGUgfSBmcm9tICcuL2ZpbGUtc2l6ZS5waXBlJztcbmltcG9ydCB7IFJkc1VwbG9hZExpc3RJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi91cGxvYWQtbGlzdC1pdGVtL3VwbG9hZC1saXN0LWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IFJkc1VwbG9hZEVycm9yRGlyZWN0aXZlIH0gZnJvbSAnLi91cGxvYWQtZXJyb3IuZGlyZWN0aXZlJztcblxuY29uc3QgcHVibGljRWxlbWVudHMgPSBbXG4gIFJkc1VwbG9hZENvbXBvbmVudCxcbiAgUmRzVXBsb2FkRGlyZWN0aXZlLFxuICBSZHNVcGxvYWREcm9wWm9uZURpcmVjdGl2ZSxcbiAgUmRzRmlsZVNpemVQaXBlLFxuICBSZHNVcGxvYWRMaXN0SXRlbUNvbXBvbmVudCxcbiAgUmRzVXBsb2FkRXJyb3JEaXJlY3RpdmUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBleHBvcnRzOiBbLi4ucHVibGljRWxlbWVudHNdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5wdWJsaWNFbGVtZW50c10sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmRzSWNvbkNvbXBvbmVudCxcbiAgICBSZHNCdXR0b25Nb2R1bGUsXG4gICAgUmRzUHJvZ3Jlc3NCYXJNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFJkc1VwbG9hZE1vZHVsZSB7fVxuIl19