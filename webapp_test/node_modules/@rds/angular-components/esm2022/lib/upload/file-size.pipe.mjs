import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
const THRESHOLD = 1024;
export class RdsFileSizePipe {
    transform(sizeInBytes, decimalPrecision = 1) {
        if (sizeInBytes < THRESHOLD) {
            return sizeInBytes + 'B';
        }
        const units = ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        let unitIndex = -1;
        const r = Math.pow(10, decimalPrecision);
        do {
            sizeInBytes /= THRESHOLD;
            ++unitIndex;
        } while (Math.round(sizeInBytes * r) / r >= THRESHOLD &&
            unitIndex < units.length - 1);
        return sizeInBytes.toFixed(decimalPrecision) + units[unitIndex];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsFileSizePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "17.3.1", ngImport: i0, type: RdsFileSizePipe, name: "rdsFileSize" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsFileSizePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'rdsFileSize' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zaXplLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL3VwbG9hZC9maWxlLXNpemUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFFcEQsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDO0FBR3ZCLE1BQU0sT0FBTyxlQUFlO0lBQzFCLFNBQVMsQ0FBQyxXQUFtQixFQUFFLGdCQUFnQixHQUFHLENBQUM7UUFDakQsSUFBSSxXQUFXLEdBQUcsU0FBUyxFQUFFLENBQUM7WUFDNUIsT0FBTyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQzNCLENBQUM7UUFFRCxNQUFNLEtBQUssR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMvRCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNuQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBRXpDLEdBQUcsQ0FBQztZQUNGLFdBQVcsSUFBSSxTQUFTLENBQUM7WUFDekIsRUFBRSxTQUFTLENBQUM7UUFDZCxDQUFDLFFBQ0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLFNBQVM7WUFDNUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUM1QjtRQUVGLE9BQU8sV0FBVyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNsRSxDQUFDOzhHQW5CVSxlQUFlOzRHQUFmLGVBQWU7OzJGQUFmLGVBQWU7a0JBRDNCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5jb25zdCBUSFJFU0hPTEQgPSAxMDI0O1xuXG5AUGlwZSh7IG5hbWU6ICdyZHNGaWxlU2l6ZScgfSlcbmV4cG9ydCBjbGFzcyBSZHNGaWxlU2l6ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKHNpemVJbkJ5dGVzOiBudW1iZXIsIGRlY2ltYWxQcmVjaXNpb24gPSAxKTogc3RyaW5nIHtcbiAgICBpZiAoc2l6ZUluQnl0ZXMgPCBUSFJFU0hPTEQpIHtcbiAgICAgIHJldHVybiBzaXplSW5CeXRlcyArICdCJztcbiAgICB9XG5cbiAgICBjb25zdCB1bml0cyA9IFsna0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInLCAnRUInLCAnWkInLCAnWUInXTtcbiAgICBsZXQgdW5pdEluZGV4ID0gLTE7XG4gICAgY29uc3QgciA9IE1hdGgucG93KDEwLCBkZWNpbWFsUHJlY2lzaW9uKTtcblxuICAgIGRvIHtcbiAgICAgIHNpemVJbkJ5dGVzIC89IFRIUkVTSE9MRDtcbiAgICAgICsrdW5pdEluZGV4O1xuICAgIH0gd2hpbGUgKFxuICAgICAgTWF0aC5yb3VuZChzaXplSW5CeXRlcyAqIHIpIC8gciA+PSBUSFJFU0hPTEQgJiZcbiAgICAgIHVuaXRJbmRleCA8IHVuaXRzLmxlbmd0aCAtIDFcbiAgICApO1xuXG4gICAgcmV0dXJuIHNpemVJbkJ5dGVzLnRvRml4ZWQoZGVjaW1hbFByZWNpc2lvbikgKyB1bml0c1t1bml0SW5kZXhdO1xuICB9XG59XG4iXX0=