import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, DestroyRef, ElementRef, HostBinding, inject, Input, QueryList, ViewChild, } from '@angular/core';
import { RdsFileUploader } from './uploader';
import { RdsUploadIntlService } from './rds-upload-intl.service';
import { filter, startWith } from 'rxjs/operators';
import { NgControl, } from '@angular/forms';
import { noop } from 'rxjs';
import { RdsUploadErrorDirective } from './upload-error.directive';
import { HttpClient } from '@angular/common/http';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
import * as i1 from "../icons/icon.component";
import * as i2 from "../button/button.component";
import * as i3 from "./upload.directive";
import * as i4 from "./upload-drop-zone.directive";
import * as i5 from "./upload-list-item/upload-list-item.component";
import * as i6 from "@angular/common";
let nextId = 0;
export class RdsUploadComponent {
    get hasError() {
        return !!(this.ngControl && this.ngControl.errors);
    }
    set uploader(uploader) {
        this._uploader = uploader;
        if (!this._uploader.isHttpClientRegistered()) {
            this._uploader.registerHttpClient(this.httpClient);
        }
    }
    get uploader() {
        return this._uploader;
    }
    get class() {
        return [`rds-upload-size-${this.size}`];
    }
    constructor() {
        this.intl = inject(RdsUploadIntlService);
        this.cdr = inject(ChangeDetectorRef);
        this.destroyRef = inject(DestroyRef);
        this.httpClient = inject(HttpClient);
        this.ngControl = inject(NgControl, {
            self: true,
            optional: true,
        });
        this.ariaErrorMessage = null;
        this.onChange = noop;
        this.onTouched = noop;
        this.size = 'm';
        this.hasBackground = false;
        this.hasDropZone = false;
        this.disabled = false;
        // can be used to transform/filter the files before they get added to the queue
        this.beforeAddFn = (files) => files;
        if (this.ngControl != null) {
            // Setting the value accessor directly (instead of using
            // the providers) to avoid running into a circular import.
            this.ngControl.valueAccessor = this;
        }
    }
    ngOnInit() {
        this.uploader.config$
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe(() => this.cdr.markForCheck());
        this.uploader.queue$
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe((v) => this.onChange(v));
        if (this.ngControl) {
            // Setting the validator directly (instead of using
            // the providers) to avoid running into a circular import.
            this.ngControl.control?.addValidators((control) => this.validate(control));
            this.ngControl.statusChanges
                ?.pipe(filter((status) => status === 'VALID' && !!this.uploader.config.autoUpload), takeUntilDestroyed(this.destroyRef))
                .subscribe(() => this.uploader.uploadAll());
        }
    }
    ngAfterContentInit() {
        this.errors.changes
            .pipe(startWith(this.errors), takeUntilDestroyed(this.destroyRef))
            .subscribe((errors) => this.setupErrors(errors));
    }
    ngOnDestroy() {
        this.uploader?.destroy();
    }
    onFilesSelected(files) {
        this.onTouched();
        this.uploader.addToQueue(this.beforeAddFn(files), [], !!this.ngControl);
    }
    writeValue(files) {
        this.uploader.addToQueue(files);
    }
    registerOnChange(onChange) {
        this.onChange = onChange;
    }
    registerOnTouched(onTouched) {
        this.onTouched = onTouched;
    }
    setDisabledState(disabled) {
        if (this.disabled !== disabled) {
            this.disabled = disabled;
            this.cdr.markForCheck();
        }
    }
    validate(control) {
        if (!control.value) {
            return null;
        }
        const errors = control.value.reduce((acc, curr) => {
            if (!curr.hasFailedFilters) {
                return acc;
            }
            curr.failedFilters.forEach((failedFilter) => {
                if (acc[failedFilter.name]) {
                    acc[failedFilter.name].push(curr.file.name);
                }
                else {
                    acc[failedFilter.name] = [curr.file.name];
                }
            });
            return acc;
        }, {});
        if (Object.keys(errors).length > 0) {
            return errors;
        }
        return null;
    }
    openDialog() {
        this.fileInput?.nativeElement.click();
    }
    setupErrors(errors) {
        const errorMessageIds = [];
        errors.forEach((err) => {
            const id = `rds-upload-error-${nextId++}`;
            err.setId(id);
            errorMessageIds.push(id);
        });
        this.ariaErrorMessage = errorMessageIds.length
            ? errorMessageIds.join(',')
            : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsUploadComponent, selector: "rds-upload", inputs: { size: "size", hasBackground: ["hasBackground", "hasBackground", booleanAttribute], uploader: "uploader", hasDropZone: ["hasDropZone", "hasDropZone", booleanAttribute], disabled: ["disabled", "disabled", booleanAttribute], beforeAddFn: "beforeAddFn" }, host: { properties: { "class": "this.class" } }, queries: [{ propertyName: "errors", predicate: RdsUploadErrorDirective }], viewQueries: [{ propertyName: "fileInput", first: true, predicate: ["fileInput"], descendants: true }], exportAs: ["rdsUpload"], ngImport: i0, template: "@if (intl.change$ | async; as t) {\n  @if (hasDropZone) {\n    <button\n      rds-upload-drop-zone\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      (fileDropped)=\"onFilesSelected($event)\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      <strong>{{ t.dropZoneChooseFiles }}</strong>\n      {{ t.dropZoneOrDropFiles }}\n    </button>\n  } @else {\n    <button\n      rds-secondary-button\n      class=\"rds-upload-simple-button\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      {{ t.chooseFilesButtonLabel }}\n    </button>\n  }\n  <div class=\"rds-upload-error-container\">\n    <ng-content\n      select=\"rds-upload-error, [rds-upload-error], [rdsUploadError]\"\n    />\n  </div>\n  <input\n    #fileInput\n    rds-upload\n    [config]=\"uploader.config\"\n    (fileSelected)=\"onFilesSelected($event)\"\n  />\n  <ul\n    [class.rds-upload-item-with-background]=\"hasBackground\"\n    [attr.aria-label]=\"t.uploadListAriaLabel\"\n  >\n    @for (item of uploader.queue; track item) {\n      <li\n        rds-upload-list-item\n        [disabled]=\"disabled\"\n        [size]=\"size\"\n        [fileItem]=\"item\"\n        (remove)=\"uploader.removeFromQueue($event)\"\n        (upload)=\"uploader.uploadItem($event)\"\n      ></li>\n    }\n  </ul>\n  @if (!uploader.config.autoUpload && uploader.queue.length) {\n    <button\n      rds-primary-button\n      [size]=\"size\"\n      [disabled]=\"uploader.isUploading || disabled || hasError\"\n      (click)=\"uploader.uploadAll()\"\n    >\n      {{ t.startUploadButtonLabel }}\n    </button>\n  }\n}\n", styles: [":host{display:block}:host.rds-upload-size-s [rds-upload-drop-zone]{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:16px 32px}:host.rds-upload-size-s [rds-upload-drop-zone] strong{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-s li+li{margin-top:8px}:host.rds-upload-size-s ul.rds-upload-item-with-background li{padding:8px}:host.rds-upload-size-s ul.rds-upload-item-with-background li+li{margin-top:4px}:host.rds-upload-size-m [rds-upload-drop-zone]{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:24px 32px}:host.rds-upload-size-m [rds-upload-drop-zone] strong{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-m li+li{margin-top:16px}:host.rds-upload-size-m ul.rds-upload-item-with-background li{padding:12px}:host.rds-upload-size-m ul.rds-upload-item-with-background li+li{margin-top:4px}:host.rds-upload-size-l [rds-upload-drop-zone]{font-size:18px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:32px}:host.rds-upload-size-l [rds-upload-drop-zone] strong{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-l li+li{margin-top:24px}:host.rds-upload-size-l ul.rds-upload-item-with-background li{padding:16px}:host.rds-upload-size-l ul.rds-upload-item-with-background li+li{margin-top:8px}:host [rds-upload-drop-zone]{display:flex;align-items:center;justify-content:center;gap:8px;width:100%;cursor:pointer;background-color:var(--rds-color-bg-base-1);border:1px dashed var(--rds-color-grey-2);border-radius:2px;color:var(--rds-color-high-contrast)}:host [rds-upload-drop-zone] rds-icon{height:18px;width:18px}:host [rds-upload-drop-zone] rds-icon,:host [rds-upload-drop-zone] strong{color:var(--rds-color-informative);pointer-events:none}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover{border-color:var(--rds-color-bg-informative-hover)}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover rds-icon,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover strong,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover rds-icon,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover strong{color:var(--rds-color-bg-informative-hover)}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):focus-visible{outline:2px solid var(--rds-color-stroke-active-focus)}:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]),:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]){border-color:var(--rds-color-error);color:var(--rds-color-error)}:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]) rds-icon,:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]) strong,:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]) rds-icon,:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]) strong{color:inherit}:host .rds-upload-drop-zone-disabled,:host button[disabled]{border-color:var(--rds-color-stroke-enabled);background-color:var(--rds-color-bg-disabled);color:var(--rds-color-disabled);cursor:not-allowed}:host .rds-upload-drop-zone-disabled rds-icon,:host .rds-upload-drop-zone-disabled strong,:host button[disabled] rds-icon,:host button[disabled] strong{color:inherit}:host ul{list-style-type:none;margin-top:24px;padding-left:0}:host ul>li:before{display:none}:host ul.rds-upload-item-with-background li{background-color:var(--rds-color-bg-disabled)}:host ul+button{display:flex;margin-top:24px;margin-left:auto}:host .rds-upload-error-container{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;margin-top:8px;color:var(--rds-color-error)}\n"], dependencies: [{ kind: "component", type: i1.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "component", type: i2.RdsButtonComponent, selector: "\n    button[rds-primary-button],\n    button[rds-warning-button],\n    button[rds-secondary-button],\n    button[rds-secondary-warning-button],\n    button[rdsPrimaryButton],\n    button[rdsWarningButton],\n    button[rdsSecondaryButton],\n    button[rdsSecondaryWarningButton],\n  " }, { kind: "directive", type: i3.RdsUploadDirective, selector: "input[rds-upload], input[rdsUpload]", inputs: ["config"], outputs: ["fileSelected"] }, { kind: "directive", type: i4.RdsUploadDropZoneDirective, selector: "[rds-upload-drop-zone], [rdsUploadDropZone]", inputs: ["disabled"], outputs: ["fileOver", "fileDropped"] }, { kind: "component", type: i5.RdsUploadListItemComponent, selector: "li[rds-upload-list-item], li[rdsUploadListItem]", inputs: ["fileItem", "disabled", "size"], outputs: ["upload", "remove"] }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsUploadComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-upload', exportAs: 'rdsUpload', changeDetection: ChangeDetectionStrategy.OnPush, template: "@if (intl.change$ | async; as t) {\n  @if (hasDropZone) {\n    <button\n      rds-upload-drop-zone\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      (fileDropped)=\"onFilesSelected($event)\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      <strong>{{ t.dropZoneChooseFiles }}</strong>\n      {{ t.dropZoneOrDropFiles }}\n    </button>\n  } @else {\n    <button\n      rds-secondary-button\n      class=\"rds-upload-simple-button\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      {{ t.chooseFilesButtonLabel }}\n    </button>\n  }\n  <div class=\"rds-upload-error-container\">\n    <ng-content\n      select=\"rds-upload-error, [rds-upload-error], [rdsUploadError]\"\n    />\n  </div>\n  <input\n    #fileInput\n    rds-upload\n    [config]=\"uploader.config\"\n    (fileSelected)=\"onFilesSelected($event)\"\n  />\n  <ul\n    [class.rds-upload-item-with-background]=\"hasBackground\"\n    [attr.aria-label]=\"t.uploadListAriaLabel\"\n  >\n    @for (item of uploader.queue; track item) {\n      <li\n        rds-upload-list-item\n        [disabled]=\"disabled\"\n        [size]=\"size\"\n        [fileItem]=\"item\"\n        (remove)=\"uploader.removeFromQueue($event)\"\n        (upload)=\"uploader.uploadItem($event)\"\n      ></li>\n    }\n  </ul>\n  @if (!uploader.config.autoUpload && uploader.queue.length) {\n    <button\n      rds-primary-button\n      [size]=\"size\"\n      [disabled]=\"uploader.isUploading || disabled || hasError\"\n      (click)=\"uploader.uploadAll()\"\n    >\n      {{ t.startUploadButtonLabel }}\n    </button>\n  }\n}\n", styles: [":host{display:block}:host.rds-upload-size-s [rds-upload-drop-zone]{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:16px 32px}:host.rds-upload-size-s [rds-upload-drop-zone] strong{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-s li+li{margin-top:8px}:host.rds-upload-size-s ul.rds-upload-item-with-background li{padding:8px}:host.rds-upload-size-s ul.rds-upload-item-with-background li+li{margin-top:4px}:host.rds-upload-size-m [rds-upload-drop-zone]{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:24px 32px}:host.rds-upload-size-m [rds-upload-drop-zone] strong{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-m li+li{margin-top:16px}:host.rds-upload-size-m ul.rds-upload-item-with-background li{padding:12px}:host.rds-upload-size-m ul.rds-upload-item-with-background li+li{margin-top:4px}:host.rds-upload-size-l [rds-upload-drop-zone]{font-size:18px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:32px}:host.rds-upload-size-l [rds-upload-drop-zone] strong{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:host.rds-upload-size-l li+li{margin-top:24px}:host.rds-upload-size-l ul.rds-upload-item-with-background li{padding:16px}:host.rds-upload-size-l ul.rds-upload-item-with-background li+li{margin-top:8px}:host [rds-upload-drop-zone]{display:flex;align-items:center;justify-content:center;gap:8px;width:100%;cursor:pointer;background-color:var(--rds-color-bg-base-1);border:1px dashed var(--rds-color-grey-2);border-radius:2px;color:var(--rds-color-high-contrast)}:host [rds-upload-drop-zone] rds-icon{height:18px;width:18px}:host [rds-upload-drop-zone] rds-icon,:host [rds-upload-drop-zone] strong{color:var(--rds-color-informative);pointer-events:none}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover{border-color:var(--rds-color-bg-informative-hover)}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover rds-icon,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled).rds-upload-drop-zone-dragover strong,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover rds-icon,:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):hover strong{color:var(--rds-color-bg-informative-hover)}:host [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled):focus-visible{outline:2px solid var(--rds-color-stroke-active-focus)}:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]),:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]){border-color:var(--rds-color-error);color:var(--rds-color-error)}:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]) rds-icon,:host.ng-invalid:not(.ng-untouched) [rds-upload-drop-zone]:not(.rds-upload-drop-zone-disabled,[disabled]) strong,:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]) rds-icon,:host.ng-invalid:not(.ng-untouched) .rds-upload-simple-button:not(.rds-upload-drop-zone-disabled,[disabled]) strong{color:inherit}:host .rds-upload-drop-zone-disabled,:host button[disabled]{border-color:var(--rds-color-stroke-enabled);background-color:var(--rds-color-bg-disabled);color:var(--rds-color-disabled);cursor:not-allowed}:host .rds-upload-drop-zone-disabled rds-icon,:host .rds-upload-drop-zone-disabled strong,:host button[disabled] rds-icon,:host button[disabled] strong{color:inherit}:host ul{list-style-type:none;margin-top:24px;padding-left:0}:host ul>li:before{display:none}:host ul.rds-upload-item-with-background li{background-color:var(--rds-color-bg-disabled)}:host ul+button{display:flex;margin-top:24px;margin-left:auto}:host .rds-upload-error-container{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;margin-top:8px;color:var(--rds-color-error)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { size: [{
                type: Input
            }], hasBackground: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], uploader: [{
                type: Input
            }], hasDropZone: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], class: [{
                type: HostBinding,
                args: ['class']
            }], fileInput: [{
                type: ViewChild,
                args: ['fileInput']
            }], errors: [{
                type: ContentChildren,
                args: [RdsUploadErrorDirective]
            }], beforeAddFn: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,