import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, HostListener, inject, ViewChild, ViewEncapsulation, } from '@angular/core';
import { Subject } from 'rxjs';
import { tooltipAnimation } from './tooltip.animations';
import { getFirstFocusableChild } from '../utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../button/icon-button.component";
import * as i3 from "../icons/icon.component";
let rdsTooltipCounter = 0;
export class RdsTooltipComponent {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.nativeElement = inject(ElementRef).nativeElement;
        this._tooltipArrow = false;
        this._visibility = 'initial';
        // close tooltip on body click
        this._closeOnInteraction = false;
        this._onHide = new Subject();
        this.id = `rdsTooltip-${rdsTooltipCounter++}`;
        this.isModal = false;
    }
    closeOnBodyClick() {
        if (!this.isPopover && this._closeOnInteraction) {
            this.hide();
        }
    }
    get contentIsString() {
        return typeof this._content === 'string';
    }
    get tooltipIconClass() {
        return this._tooltipArrow ? 'rds-tooltip--hide-arrow ' : '';
    }
    ngOnDestroy() {
        this._onHide.complete();
    }
    /**
     * Show tooltip
     * @param delay in ms
     */
    show(delay = 0) {
        // Cancel hide if it is scheduled
        if (this._hideTimeout) {
            clearTimeout(this._hideTimeout);
            this._hideTimeout = null;
        }
        this._closeOnInteraction = !this.isPopover;
        this._showTimeout = setTimeout(() => {
            this._visibility = 'visible';
            this._showTimeout = null;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyway
            this._markForCheck();
        }, delay);
    }
    /**
     * Hide tooltip
     * @param delay in ms
     */
    hide(delay = 0) {
        // Cancel show if it is scheduled
        if (this._showTimeout) {
            clearTimeout(this._showTimeout);
            this._showTimeout = null;
        }
        this._hideTimeout = setTimeout(() => {
            this._visibility = 'hidden';
            this._hideTimeout = null;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyway
            this._markForCheck();
        }, delay);
    }
    getFirstFocusableElement() {
        return getFirstFocusableChild(this.nativeElement);
    }
    getLastFocusableElement() {
        return this.closeButton?.nativeElement ?? null;
    }
    afterHidden() {
        return this._onHide;
    }
    isVisible() {
        return this._visibility === 'visible';
    }
    onCloseButtonClick() {
        this.triggerDirectiveRef?.hide();
    }
    _animationStart() {
        this._closeOnInteraction = false;
    }
    _animationDone(event) {
        const toState = event.toState;
        if (toState === 'hidden' && !this.isVisible()) {
            this._onHide.next();
        }
        if (toState === 'visible' || toState === 'hidden') {
            this._closeOnInteraction = !this.isPopover;
        }
    }
    _markForCheck() {
        this.cdr.markForCheck();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsTooltipComponent, selector: "rds-tooltip", host: { listeners: { "body:click": "closeOnBodyClick()" }, properties: { "attr.role": "this.role", "attr.id": "this.id", "attr.aria-modal": "this.isModal" } }, viewQueries: [{ propertyName: "closeButton", first: true, predicate: ["closeButton"], descendants: true, read: ElementRef }], ngImport: i0, template: "<div\n  [ngClass]=\"_tooltipClass\"\n  [className]=\"\n    'rds-tooltip rds-tooltip--' +\n    _position +\n    tooltipIconClass +\n    (isPopover ? ' rds-popover' : '')\n  \"\n  [@state]=\"_visibility\"\n  (@state.start)=\"_animationStart()\"\n  (@state.done)=\"_animationDone($event)\"\n>\n  @if (contentIsString) {\n    {{ _content }}\n  } @else {\n    <ng-container *ngTemplateOutlet=\"$any(_content)\" />\n  }\n  @if (isPopover && showCloseButton) {\n    <button\n      #closeButton\n      class=\"rds-popover-close-button\"\n      rds-icon-button\n      aria-label=\"close\"\n      (click)=\"onCloseButtonClick()\"\n    >\n      <rds-icon namespace=\"filled\" icon=\"close\" />\n    </button>\n  }\n</div>\n", styles: [".rds-tooltip{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;transform-origin:center bottom;border-radius:2px;padding:8px 12px;background:var(--rds-color-tooltip-bg);text-align:center;color:var(--rds-color-high-contrast-reversed)}.rds-tooltip:before{content:\"\";position:absolute;width:0;height:0}.rds-tooltip.rds-tooltip--top-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;left:12px}.rds-tooltip.rds-tooltip--top-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;left:calc(50% - 6px)}.rds-tooltip.rds-tooltip--top-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;right:12px}.rds-tooltip.rds-tooltip--right-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;top:12px}.rds-tooltip.rds-tooltip--right-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;top:calc(50% - 6px)}.rds-tooltip.rds-tooltip--right-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;bottom:12px}.rds-tooltip.rds-tooltip--bottom-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;right:12px}.rds-tooltip.rds-tooltip--bottom-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;left:calc(50% - 6px)}.rds-tooltip.rds-tooltip--bottom-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;left:12px}.rds-tooltip.rds-tooltip--left-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;bottom:12px}.rds-tooltip.rds-tooltip--left-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;top:calc(50% - 6px)}.rds-tooltip.rds-tooltip--left-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;top:12px}.rds-tooltip.rds-tooltip--hide-arrow:before{border:0}.rds-popover{box-shadow:0 0 2px #00000029,0 12px 40px #0000002b;background:var(--rds-color-high-contrast-reversed);padding:24px}.rds-popover .rds-popover-close-button{position:absolute;top:24px;right:24px}.rds-popover .rds-popover-header.rds-popover-with-close-button{margin-right:24px}.rds-popover.rds-tooltip--top-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--top-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--top-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }, { kind: "component", type: i3.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }], animations: [tooltipAnimation.tooltipState], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTooltipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-tooltip', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [tooltipAnimation.tooltipState], template: "<div\n  [ngClass]=\"_tooltipClass\"\n  [className]=\"\n    'rds-tooltip rds-tooltip--' +\n    _position +\n    tooltipIconClass +\n    (isPopover ? ' rds-popover' : '')\n  \"\n  [@state]=\"_visibility\"\n  (@state.start)=\"_animationStart()\"\n  (@state.done)=\"_animationDone($event)\"\n>\n  @if (contentIsString) {\n    {{ _content }}\n  } @else {\n    <ng-container *ngTemplateOutlet=\"$any(_content)\" />\n  }\n  @if (isPopover && showCloseButton) {\n    <button\n      #closeButton\n      class=\"rds-popover-close-button\"\n      rds-icon-button\n      aria-label=\"close\"\n      (click)=\"onCloseButtonClick()\"\n    >\n      <rds-icon namespace=\"filled\" icon=\"close\" />\n    </button>\n  }\n</div>\n", styles: [".rds-tooltip{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;transform-origin:center bottom;border-radius:2px;padding:8px 12px;background:var(--rds-color-tooltip-bg);text-align:center;color:var(--rds-color-high-contrast-reversed)}.rds-tooltip:before{content:\"\";position:absolute;width:0;height:0}.rds-tooltip.rds-tooltip--top-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;left:12px}.rds-tooltip.rds-tooltip--top-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;left:calc(50% - 6px)}.rds-tooltip.rds-tooltip--top-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-tooltip-bg);bottom:-6px;right:12px}.rds-tooltip.rds-tooltip--right-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;top:12px}.rds-tooltip.rds-tooltip--right-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;top:calc(50% - 6px)}.rds-tooltip.rds-tooltip--right-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-tooltip-bg);left:-6px;bottom:12px}.rds-tooltip.rds-tooltip--bottom-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;right:12px}.rds-tooltip.rds-tooltip--bottom-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;left:calc(50% - 6px)}.rds-tooltip.rds-tooltip--bottom-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-tooltip-bg);top:-6px;left:12px}.rds-tooltip.rds-tooltip--left-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;bottom:12px}.rds-tooltip.rds-tooltip--left-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;top:calc(50% - 6px)}.rds-tooltip.rds-tooltip--left-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-tooltip-bg);right:-6px;top:12px}.rds-tooltip.rds-tooltip--hide-arrow:before{border:0}.rds-popover{box-shadow:0 0 2px #00000029,0 12px 40px #0000002b;background:var(--rds-color-high-contrast-reversed);padding:24px}.rds-popover .rds-popover-close-button{position:absolute;top:24px;right:24px}.rds-popover .rds-popover-header.rds-popover-with-close-button{margin-right:24px}.rds-popover.rds-tooltip--top-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--top-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--top-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-top:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--right-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-right:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-right:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-center:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--bottom-left:before{border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-bottom:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-center:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}.rds-popover.rds-tooltip--left-top:before{border-top:8px solid transparent;border-bottom:8px solid transparent;border-left:8px solid var(--rds-color-high-contrast-reversed)}\n"] }]
        }], propDecorators: { closeButton: [{
                type: ViewChild,
                args: ['closeButton', { read: ElementRef }]
            }], role: [{
                type: HostBinding,
                args: ['attr.role']
            }], id: [{
                type: HostBinding,
                args: ['attr.id']
            }], isModal: [{
                type: HostBinding,
                args: ['attr.aria-modal']
            }], closeOnBodyClick: [{
                type: HostListener,
                args: ['body:click']
            }] } });
//# sourceMappingURL=data:application/json;base64,