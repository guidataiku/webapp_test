import { A, hasModifierKey, SPACE } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, ElementRef, EventEmitter, HostBinding, HostListener, inject, Input, Output, Renderer2, ViewChild, ViewEncapsulation, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { noop } from 'rxjs';
import { tap } from 'rxjs/operators';
import { RdsInputDirective } from '../input.directive';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
import * as i1 from "../../icons/icon.component";
import * as i2 from "@angular/forms";
import * as i3 from "../../button/icon-button.component";
import * as i4 from "../input.directive";
let uniqueId = 0;
export class RdsSelectSearchInputComponent {
    constructor() {
        this.renderer = inject(Renderer2);
        this.cdr = inject(ChangeDetectorRef);
        this.elementRef = inject(ElementRef);
        this.destroyRef = inject(DestroyRef);
        this.control = new FormControl('');
        this.size = 'm';
        this.id = `rds-select__search-input-${uniqueId++}`;
        this.placeholder = 'Search...';
        this.changed = new EventEmitter();
    }
    get cssClasses() {
        return [
            'rds-select__option',
            'rds-select__option--search-input',
            `rds-select__option--search-input--${this.size}`,
        ];
    }
    handleClick() {
        this.search.nativeElement.focus();
        this.renderer.addClass(this.elementRef.nativeElement, 'cdk-focused');
        this.renderer.addClass(this.elementRef.nativeElement, 'cdk-keyboard-focused');
        this.cdr.markForCheck();
    }
    stopPropagation($event) {
        if ($event.keyCode === SPACE ||
            ($event.keyCode === A && hasModifierKey($event, 'ctrlKey'))) {
            $event.stopPropagation();
        }
    }
    rect() {
        return this.elementRef.nativeElement.getBoundingClientRect();
    }
    isVisible() {
        return true;
    }
    ngAfterViewInit() {
        if (this.searchInput && this.searchInput.ngControl) {
            this.searchInput.ngControl.valueChanges
                ?.pipe(tap((v) => this.changed.emit(v)), takeUntilDestroyed(this.destroyRef))
                .subscribe({ next: noop, error: noop });
        }
        this.focus();
    }
    reset() {
        this.searchInput?.ngControl?.reset();
    }
    focus(origin, options) {
        const element = this.elementRef.nativeElement;
        if (typeof element.focus === 'function') {
            element.focus(options);
            this.handleClick();
        }
    }
    isDirtyValue() {
        return this.control.value !== '';
    }
    resetInput() {
        if (this.isDirtyValue()) {
            this.control.setValue('');
            this.search.nativeElement.focus();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSelectSearchInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.1", type: RdsSelectSearchInputComponent, selector: "rds-select-search-input", inputs: { size: "size", placeholder: "placeholder" }, outputs: { changed: "changed" }, host: { listeners: { "click": "handleClick()", "focus": "handleClick()", "keydown": "stopPropagation($event)" }, properties: { "class": "this.cssClasses" } }, viewQueries: [{ propertyName: "searchInput", first: true, predicate: RdsInputDirective, descendants: true }, { propertyName: "search", first: true, predicate: ["search"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: `
    <rds-icon
      class="rds-search-icon rds-select__option--search-input-prefix"
      namespace="filled"
      icon="search"
      aria-hidden="true"
    />
    <input
      [formControl]="control"
      #search
      rdsInput
      (search)="$event.preventDefault(); $event.stopPropagation()"
      [placeholder]="placeholder"
    />
    <button
      rds-icon-button
      [size]="'s'"
      [class.hidden]="!isDirtyValue()"
      (click)="resetInput(); $event.stopPropagation()"
      class="rds-search-reset-button rds-select__option--search-input-suffix"
    >
      <rds-icon namespace="filled" icon="close" aria-hidden="true" />
    </button>
  `, isInline: true, styles: [".rds-select__option--search-input{display:flex;flex-direction:row;border-radius:2px;border:1px solid var(--rds-color-stroke-enabled);align-items:center;margin:8px 16px}.rds-select__option--search-input--l{height:48px;padding:4px 15px}.rds-select__option--search-input--l rds-icon{height:24px;width:24px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--l input{font-size:18px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% - 6px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--l input:hover,.rds-select__option--search-input--l input:focus{outline:none}.rds-select__option--search-input--l input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:8px}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:0}.rds-select__option--search-input--m{height:36px;padding:4px 11px}.rds-select__option--search-input--m rds-icon{height:18px;width:18px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--m input{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% + -0px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--m input:hover,.rds-select__option--search-input--m input:focus{outline:none}.rds-select__option--search-input--m input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:4px}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:2px}.rds-select__option--search-input--s{height:28px;padding:4px 7px}.rds-select__option--search-input--s rds-icon{height:18px;width:18px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--s input{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% + -0px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--s input:hover,.rds-select__option--search-input--s input:focus{outline:none}.rds-select__option--search-input--s input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-prefix{margin-right:8px}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:0}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:-1px}.rds-select__option--search-input .rds-select__option--search-input-suffix.hidden{visibility:hidden}.rds-select__option--search-input:hover{border-color:var(--rds-color-stroke-hover)}\n"], dependencies: [{ kind: "component", type: i1.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }, { kind: "directive", type: i4.RdsInputDirective, selector: " input[rds-input], input[rdsInput], textarea[rds-input], textarea[rdsInput]", inputs: ["id", "disabled", "required", "readonly", "type", "placeholder", "value"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSelectSearchInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-select-search-input', template: `
    <rds-icon
      class="rds-search-icon rds-select__option--search-input-prefix"
      namespace="filled"
      icon="search"
      aria-hidden="true"
    />
    <input
      [formControl]="control"
      #search
      rdsInput
      (search)="$event.preventDefault(); $event.stopPropagation()"
      [placeholder]="placeholder"
    />
    <button
      rds-icon-button
      [size]="'s'"
      [class.hidden]="!isDirtyValue()"
      (click)="resetInput(); $event.stopPropagation()"
      class="rds-search-reset-button rds-select__option--search-input-suffix"
    >
      <rds-icon namespace="filled" icon="close" aria-hidden="true" />
    </button>
  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [".rds-select__option--search-input{display:flex;flex-direction:row;border-radius:2px;border:1px solid var(--rds-color-stroke-enabled);align-items:center;margin:8px 16px}.rds-select__option--search-input--l{height:48px;padding:4px 15px}.rds-select__option--search-input--l rds-icon{height:24px;width:24px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--l input{font-size:18px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% - 6px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--l input:hover,.rds-select__option--search-input--l input:focus{outline:none}.rds-select__option--search-input--l input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:8px}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:0}.rds-select__option--search-input--m{height:36px;padding:4px 11px}.rds-select__option--search-input--m rds-icon{height:18px;width:18px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--m input{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% + -0px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--m input:hover,.rds-select__option--search-input--m input:focus{outline:none}.rds-select__option--search-input--m input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:4px}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:2px}.rds-select__option--search-input--s{height:28px;padding:4px 7px}.rds-select__option--search-input--s rds-icon{height:18px;width:18px;color:var(--rds-color-low-contrast)}.rds-select__option--search-input--s input{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:calc(100% + -0px);border:none;box-shadow:none;background:transparent;color:var(--rds-color-high-contrast);caret-color:var(--rds-color-high-contrast)}.rds-select__option--search-input--s input:hover,.rds-select__option--search-input--s input:focus{outline:none}.rds-select__option--search-input--s input ::placeholder{color:var(--rds-color-low-contrast)}.rds-select__option--search-input .rds-select__option--search-input-prefix{margin-right:8px}.rds-select__option--search-input .rds-select__option--search-input-suffix{padding-right:0}.rds-select__option--search-input .rds-select__option--search-input-suffix rds-icon{margin-top:-1px}.rds-select__option--search-input .rds-select__option--search-input-suffix.hidden{visibility:hidden}.rds-select__option--search-input:hover{border-color:var(--rds-color-stroke-hover)}\n"] }]
        }], propDecorators: { size: [{
                type: Input
            }], searchInput: [{
                type: ViewChild,
                args: [RdsInputDirective]
            }], search: [{
                type: ViewChild,
                args: ['search', { static: true, read: ElementRef }]
            }], cssClasses: [{
                type: HostBinding,
                args: ['class']
            }], placeholder: [{
                type: Input
            }], changed: [{
                type: Output
            }], handleClick: [{
                type: HostListener,
                args: ['click']
            }, {
                type: HostListener,
                args: ['focus']
            }], stopPropagation: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LXNlYXJjaC1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2Zvcm0tZmllbGQvc2VsZWN0L3NlbGVjdC1zZWFyY2gtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxDQUFDLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2pFLE9BQU8sRUFFTCx1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVCxTQUFTLEVBQ1QsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzVCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7O0FBRWhFLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztBQWtDakIsTUFBTSxPQUFPLDZCQUE2QjtJQTlCMUM7UUErQnFCLGFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0IsUUFBRyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2xDLGVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEMsZUFBVSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMs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QUFDO0lBQ0gsQ0FBQzs4R0FoR1UsNkJBQTZCO2tHQUE3Qiw2QkFBNkIsa1dBYTdCLGlCQUFpQiw4R0FDZSxVQUFVLDJDQXpDM0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBdUJUOzsyRkFJVSw2QkFBNkI7a0JBOUJ6QyxTQUFTOytCQUVFLHlCQUF5QixZQUN6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1QlQsbUJBQ2dCLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUk7OEJBV3JDLElBQUk7c0JBREgsS0FBSztnQkFLd0IsV0FBVztzQkFBeEMsU0FBUzt1QkFBQyxpQkFBaUI7Z0JBQzZCLE1BQU07c0JBQTlELFNBQVM7dUJBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO2dCQUd6QyxVQUFVO3NCQUR2QixXQUFXO3VCQUFDLE9BQU87Z0JBVXBCLFdBQVc7c0JBRFYsS0FBSztnQkFJTixPQUFPO3NCQUROLE1BQU07Z0JBS1AsV0FBVztzQkFGVixZQUFZO3VCQUFDLE9BQU87O3NCQUNwQixZQUFZO3VCQUFDLE9BQU87Z0JBWXJCLGVBQWU7c0JBRGQsWUFBWTt1QkFBQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb2N1c09wdGlvbnMsIEZvY3VzT3JpZ2luIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgQSwgaGFzTW9kaWZpZXJLZXksIFNQQUNFIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2tleWNvZGVzJztcbmltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ29tcG9uZW50LFxuICBEZXN0cm95UmVmLFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIEhvc3RCaW5kaW5nLFxuICBIb3N0TGlzdGVuZXIsXG4gIGluamVjdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgUmVuZGVyZXIyLFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgbm9vcCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgUmRzSW5wdXREaXJlY3RpdmUgfSBmcm9tICcuLi9pbnB1dC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgdGFrZVVudGlsRGVzdHJveWVkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9yeGpzLWludGVyb3AnO1xuXG5sZXQgdW5pcXVlSWQgPSAwO1xuXG5leHBvcnQgdHlwZSBSZHNTZWxlY3RTZWFyY2hTaXplID0gJ3MnIHwgJ20nIHwgJ2wnO1xuXG5AQ29tcG9uZW50KHtcbiAgc3R5bGVVcmxzOiBbJ3NlbGVjdC1zZWFyY2gtaW5wdXQuY29tcG9uZW50LnNjc3MnXSxcbiAgc2VsZWN0b3I6ICdyZHMtc2VsZWN0LXNlYXJjaC1pbnB1dCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHJkcy1pY29uXG4gICAgICBjbGFzcz1cInJkcy1zZWFyY2gtaWNvbiByZHMtc2VsZWN0X19vcHRpb24tLXNlYXJjaC1pbnB1dC1wcmVmaXhcIlxuICAgICAgbmFtZXNwYWNlPVwiZmlsbGVkXCJcbiAgICAgIGljb249XCJzZWFyY2hcIlxuICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAvPlxuICAgIDxpbnB1dFxuICAgICAgW2Zvcm1Db250cm9sXT1cImNvbnRyb2xcIlxuICAgICAgI3NlYXJjaFxuICAgICAgcmRzSW5wdXRcbiAgICAgIChzZWFyY2gpPVwiJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7ICRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiXG4gICAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxuICAgIC8+XG4gICAgPGJ1dHRvblxuICAgICAgcmRzLWljb24tYnV0dG9uXG4gICAgICBbc2l6ZV09XCIncydcIlxuICAgICAgW2NsYXNzLmhpZGRlbl09XCIhaXNEaXJ0eVZhbHVlKClcIlxuICAgICAgKGNsaWNrKT1cInJlc2V0SW5wdXQoKTsgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCJcbiAgICAgIGNsYXNzPVwicmRzLXNlYXJjaC1yZXNldC1idXR0b24gcmRzLXNlbGVjdF9fb3B0aW9uLS1zZWFyY2gtaW5wdXQtc3VmZml4XCJcbiAgICA+XG4gICAgICA8cmRzLWljb24gbmFtZXNwYWNlPVwiZmlsbGVkXCIgaWNvbj1cImNsb3NlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgLz5cbiAgICA8L2J1dHRvbj5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFJkc1NlbGVjdFNlYXJjaElucHV0Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHByb3RlY3RlZCByZWFkb25seSByZW5kZXJlciA9IGluamVjdChSZW5kZXJlcjIpO1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgY2RyID0gaW5qZWN0KENoYW5nZURldGVjdG9yUmVmKTtcbiAgcHJpdmF0ZSByZWFkb25seSBlbGVtZW50UmVmID0gaW5qZWN0KEVsZW1lbnRSZWYpO1xuICBwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3lSZWYgPSBpbmplY3QoRGVzdHJveVJlZik7XG5cbiAgY29udHJvbCA9IG5ldyBGb3JtQ29udHJvbDxzdHJpbmc+KCcnKTtcblxuICBASW5wdXQoKVxuICBzaXplOiBSZHNTZWxlY3RTZWFyY2hTaXplID0gJ20nO1xuXG4gIGlkID0gYHJkcy1zZWxlY3RfX3NlYXJjaC1pbnB1dC0ke3VuaXF1ZUlkKyt9YDtcblxuICBAVmlld0NoaWxkKFJkc0lucHV0RGlyZWN0aXZlKSBzZWFyY2hJbnB1dDogUmRzSW5wdXREaXJlY3RpdmU7XG4gIEBWaWV3Q2hpbGQoJ3NlYXJjaCcsIHsgc3RhdGljOiB0cnVlLCByZWFkOiBFbGVtZW50UmVmIH0pIHNlYXJjaDogRWxlbWVudFJlZjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgcHJvdGVjdGVkIGdldCBjc3NDbGFzc2VzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gW1xuICAgICAgJ3Jkcy1zZWxlY3RfX29wdGlvbicsXG4gICAgICAncmRzLXNlbGVjdF9fb3B0aW9uLS1zZWFyY2gtaW5wdXQnLFxuICAgICAgYHJkcy1zZWxlY3RfX29wdGlvbi0tc2VhcmNoLWlucHV0LS0ke3RoaXMuc2l6ZX1gLFxuICAgIF07XG4gIH1cblxuICBASW5wdXQoKVxuICBwbGFjZWhvbGRlciA9ICdTZWFyY2guLi4nO1xuXG4gIEBPdXRwdXQoKVxuICBjaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICBASG9zdExpc3RlbmVyKCdmb2N1cycpXG4gIGhhbmRsZUNsaWNrKCk6IHZvaWQge1xuICAgIHRoaXMuc2VhcmNoLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAnY2RrLWZvY3VzZWQnKTtcbiAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKFxuICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsXG4gICAgICAnY2RrLWtleWJvYXJkLWZvY3VzZWQnLFxuICAgICk7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duJywgWyckZXZlbnQnXSlcbiAgc3RvcFByb3BhZ2F0aW9uKCRldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQge1xuICAgIGlmIChcbiAgICAgICRldmVudC5rZXlDb2RlID09PSBTUEFDRSB8fFxuICAgICAgKCRldmVudC5rZXlDb2RlID09PSBBICYmIGhhc01vZGlmaWVyS2V5KCRldmVudCwgJ2N0cmxLZXknKSlcbiAgICApIHtcbiAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gIH1cblxuICByZWN0KCk6IERPTVJlY3Qge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgfVxuXG4gIGlzVmlzaWJsZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zZWFyY2hJbnB1dCAmJiB0aGlzLnNlYXJjaElucHV0Lm5nQ29udHJvbCkge1xuICAgICAgdGhpcy5zZWFyY2hJbnB1dC5uZ0NvbnRyb2wudmFsdWVDaGFuZ2VzXG4gICAgICAgID8ucGlwZShcbiAgICAgICAgICB0YXAoKHYpID0+IHRoaXMuY2hhbmdlZC5lbWl0KHYpKSxcbiAgICAgICAgICB0YWtlVW50aWxEZXN0cm95ZWQodGhpcy5kZXN0cm95UmVmKSxcbiAgICAgICAgKVxuICAgICAgICAuc3Vic2NyaWJlKHsgbmV4dDogbm9vcCwgZXJyb3I6IG5vb3AgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5mb2N1cygpO1xuICB9XG5cbiAgcmVzZXQoKTogdm9pZCB7XG4gICAgdGhpcy5zZWFyY2hJbnB1dD8ubmdDb250cm9sPy5yZXNldCgpO1xuICB9XG5cbiAgZm9jdXMob3JpZ2luPzogRm9jdXNPcmlnaW4sIG9wdGlvbnM/OiBGb2N1c09wdGlvbnMpOiB2b2lkIHtcbiAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG5cbiAgICBpZiAodHlwZW9mIGVsZW1lbnQuZm9jdXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGVsZW1lbnQuZm9jdXMob3B0aW9ucyk7XG4gICAgICB0aGlzLmhhbmRsZUNsaWNrKCk7XG4gICAgfVxuICB9XG5cbiAgaXNEaXJ0eVZhbHVlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmNvbnRyb2wudmFsdWUgIT09ICcnO1xuICB9XG5cbiAgcmVzZXRJbnB1dCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pc0RpcnR5VmFsdWUoKSkge1xuICAgICAgdGhpcy5jb250cm9sLnNldFZhbHVlKCcnKTtcbiAgICAgIHRoaXMuc2VhcmNoLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==