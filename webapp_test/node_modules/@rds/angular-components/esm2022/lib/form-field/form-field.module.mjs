import { ObserversModule } from '@angular/cdk/observers';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RdsButtonModule } from '../button';
import { RdsCheckboxModule } from '../checkbox';
import { RdsIconComponent } from '../icons';
import { RdsListItemModule } from '../list-item';
import { RdsErrorDirective } from './error.directive';
import { RdsFormFieldComponent } from './form-field.component';
import { RdsHelperTextModule } from './helper-text.module';
import { RdsHintDirective } from './hint.directive';
import { RdsInputDirective } from './input.directive';
import { RdsLabelDirective } from './label.directive';
import { RdsPrefixSeparatorComponent } from './prefix-separator.component';
import { RdsPrefixDirective } from './prefix.directive';
import { RdsMultiSelectOptionComponent } from './select/multi-select-option.component';
import { RdsSelectAllOptionComponent } from './select/select-all-option.component';
import { RdsSelectOptionSeparatorComponent } from './select/select-option-separator.component';
import { RdsSelectSearchInputComponent } from './select/select-search-input.component';
import { RdsSelectComponent } from './select/select.component';
import { RdsSingleSelectOptionComponent } from './select/single-select-option.component';
import { RdsTriggerValuesComponent } from './select/trigger-values.component';
import { RdsSuffixSeparatorComponent } from './suffix-separator.component';
import { RdsSuffixDirective } from './suffix.directive';
import { RdsMultiSelectComponent } from './select/multi-select.component';
import { RdsLabelIconDirective } from './label-icon.directive';
import { RdsTextareaResizeDirective } from './textarea-resize.directive';
import { RdsChipsModule } from '../chips';
import { RdsInputWithChipsComponent } from './input-with-chips/input-with-chips.component';
import { RdsChipGridComponent } from './chip-grid/chip-grid.component';
import { RdsInputChipComponent } from './input-chip/input-chip.component';
import { RdsChipInputDirective } from './chip-input';
import { RdsBadgeComponent } from '../badge';
import * as i0 from "@angular/core";
export class RdsFormFieldModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.1", ngImport: i0, type: RdsFormFieldModule, declarations: [RdsFormFieldComponent,
            RdsInputDirective,
            RdsLabelDirective,
            RdsLabelIconDirective,
            RdsPrefixDirective,
            RdsPrefixSeparatorComponent,
            RdsSuffixDirective,
            RdsSuffixSeparatorComponent,
            RdsSelectComponent,
            RdsMultiSelectComponent,
            RdsTriggerValuesComponent,
            RdsSelectAllOptionComponent,
            RdsSelectSearchInputComponent,
            RdsSelectOptionSeparatorComponent,
            RdsSingleSelectOptionComponent,
            RdsMultiSelectOptionComponent,
            RdsTextareaResizeDirective,
            RdsInputWithChipsComponent,
            RdsInputChipComponent,
            RdsInputDirective,
            RdsChipGridComponent,
            RdsChipInputDirective], imports: [CommonModule,
            OverlayModule,
            ObserversModule,
            RdsCheckboxModule,
            RdsIconComponent,
            ReactiveFormsModule,
            RdsHelperTextModule,
            RdsListItemModule,
            RdsButtonModule,
            RdsChipsModule,
            RdsBadgeComponent], exports: [RdsErrorDirective,
            RdsFormFieldComponent,
            RdsLabelIconDirective,
            RdsHintDirective,
            RdsInputDirective,
            RdsLabelDirective,
            RdsPrefixDirective,
            RdsPrefixSeparatorComponent,
            RdsSuffixDirective,
            RdsSuffixSeparatorComponent,
            RdsSelectComponent,
            RdsMultiSelectComponent,
            RdsSelectAllOptionComponent,
            RdsSelectSearchInputComponent,
            RdsSelectOptionSeparatorComponent,
            RdsSingleSelectOptionComponent,
            RdsMultiSelectOptionComponent,
            RdsTextareaResizeDirective,
            RdsInputWithChipsComponent,
            RdsInputChipComponent,
            RdsInputDirective,
            RdsChipGridComponent,
            RdsChipInputDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsFormFieldModule, imports: [CommonModule,
            OverlayModule,
            ObserversModule,
            RdsCheckboxModule,
            ReactiveFormsModule,
            RdsHelperTextModule,
            RdsListItemModule,
            RdsButtonModule,
            RdsChipsModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsFormFieldModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        OverlayModule,
                        ObserversModule,
                        RdsCheckboxModule,
                        RdsIconComponent,
                        ReactiveFormsModule,
                        RdsHelperTextModule,
                        RdsListItemModule,
                        RdsButtonModule,
                        RdsChipsModule,
                        RdsBadgeComponent,
                    ],
                    declarations: [
                        RdsFormFieldComponent,
                        RdsInputDirective,
                        RdsLabelDirective,
                        RdsLabelIconDirective,
                        RdsPrefixDirective,
                        RdsPrefixSeparatorComponent,
                        RdsSuffixDirective,
                        RdsSuffixSeparatorComponent,
                        RdsSelectComponent,
                        RdsMultiSelectComponent,
                        RdsTriggerValuesComponent,
                        RdsSelectAllOptionComponent,
                        RdsSelectSearchInputComponent,
                        RdsSelectOptionSeparatorComponent,
                        RdsSingleSelectOptionComponent,
                        RdsMultiSelectOptionComponent,
                        RdsTextareaResizeDirective,
                        RdsInputWithChipsComponent,
                        RdsInputChipComponent,
                        RdsInputDirective,
                        RdsChipGridComponent,
                        RdsChipInputDirective,
                    ],
                    exports: [
                        RdsErrorDirective,
                        RdsFormFieldComponent,
                        RdsLabelIconDirective,
                        RdsHintDirective,
                        RdsInputDirective,
                        RdsLabelDirective,
                        RdsPrefixDirective,
                        RdsPrefixSeparatorComponent,
                        RdsSuffixDirective,
                        RdsSuffixSeparatorComponent,
                        RdsSelectComponent,
                        RdsMultiSelectComponent,
                        RdsSelectAllOptionComponent,
                        RdsSelectSearchInputComponent,
                        RdsSelectOptionSeparatorComponent,
                        RdsSingleSelectOptionComponent,
                        RdsMultiSelectOptionComponent,
                        RdsTextareaResizeDirective,
                        RdsInputWithChipsComponent,
                        RdsInputChipComponent,
                        RdsInputDirective,
                        RdsChipGridComponent,
                        RdsChipInputDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,