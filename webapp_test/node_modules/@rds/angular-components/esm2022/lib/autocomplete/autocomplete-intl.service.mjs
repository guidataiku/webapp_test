import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class RdsAutocompleteIntl {
    constructor() {
        this._change$ = new BehaviorSubject(RdsAutocompleteIntl.translations);
        this.change$ = this._change$.asObservable();
    }
    static { this.translations = {
        placeholder: 'Select an option',
        loadingText: 'Loading...',
        noDataText: 'No results found',
        newItemText: 'Create new',
    }; }
    setTranslation(key, value) {
        RdsAutocompleteIntl.translations[key] = value;
        this._change$.next({ ...RdsAutocompleteIntl.translations });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAutocompleteIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAutocompleteIntl, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAutocompleteIntl, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2NvbXBsZXRlLWludGwuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYW5ndWxhci1jb21wb25lbnRzL3NyYy9saWIvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1pbnRsLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQU12QyxNQUFNLE9BQU8sbUJBQW1CO0lBRGhDO1FBU21CLGFBQVEsR0FBRyxJQUFJLGVBQWUsQ0FDN0MsbUJBQW1CLENBQUMsWUFBWSxDQUNqQyxDQUFDO1FBQ08sWUFBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLENBQUM7S0FNakQ7YUFoQmlCLGlCQUFZLEdBQUc7UUFDN0IsV0FBVyxFQUFFLGtCQUFrQjtRQUMvQixXQUFXLEVBQUUsWUFBWTtRQUN6QixVQUFVLEVBQUUsa0JBQWtCO1FBQzlCLFdBQVcsRUFBRSxZQUFZO0tBQzFCLEFBTDJCLENBSzFCO0lBT0YsY0FBYyxDQUFDLEdBQTZCLEVBQUUsS0FBYTtRQUN6RCxtQkFBbUIsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQzlDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7OEdBaEJVLG1CQUFtQjtrSEFBbkIsbUJBQW1CLGNBRE4sTUFBTTs7MkZBQ25CLG1CQUFtQjtrQkFEL0IsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IHR5cGUgUmRzQXV0b2NvbXBsZXRlSW50bFRva2VuID1cbiAga2V5b2YgdHlwZW9mIFJkc0F1dG9jb21wbGV0ZUludGwudHJhbnNsYXRpb25zO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIFJkc0F1dG9jb21wbGV0ZUludGwge1xuICBzdGF0aWMgcmVhZG9ubHkgdHJhbnNsYXRpb25zID0ge1xuICAgIHBsYWNlaG9sZGVyOiAnU2VsZWN0IGFuIG9wdGlvbicsXG4gICAgbG9hZGluZ1RleHQ6ICdMb2FkaW5nLi4uJyxcbiAgICBub0RhdGFUZXh0OiAnTm8gcmVzdWx0cyBmb3VuZCcsXG4gICAgbmV3SXRlbVRleHQ6ICdDcmVhdGUgbmV3JyxcbiAgfTtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9jaGFuZ2UkID0gbmV3IEJlaGF2aW9yU3ViamVjdChcbiAgICBSZHNBdXRvY29tcGxldGVJbnRsLnRyYW5zbGF0aW9ucyxcbiAgKTtcbiAgcmVhZG9ubHkgY2hhbmdlJCA9IHRoaXMuX2NoYW5nZSQuYXNPYnNlcnZhYmxlKCk7XG5cbiAgc2V0VHJhbnNsYXRpb24oa2V5OiBSZHNBdXRvY29tcGxldGVJbnRsVG9rZW4sIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBSZHNBdXRvY29tcGxldGVJbnRsLnRyYW5zbGF0aW9uc1trZXldID0gdmFsdWU7XG4gICAgdGhpcy5fY2hhbmdlJC5uZXh0KHsgLi4uUmRzQXV0b2NvbXBsZXRlSW50bC50cmFuc2xhdGlvbnMgfSk7XG4gIH1cbn1cbiJdfQ==