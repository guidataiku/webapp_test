import { FocusMonitor } from '@angular/cdk/a11y';
import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, ElementRef, EventEmitter, HostBinding, HostListener, inject, Input, NgZone, Output, ViewChild, ViewEncapsulation, } from '@angular/core';
import { ContentObserver } from '@angular/cdk/observers';
import { take } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { RdsChipActionDirective } from '../chip-action';
import { BACKSPACE, DELETE, SPACE } from '@angular/cdk/keycodes';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../icons/icon.component";
import * as i3 from "../../button/icon-button.component";
import * as i4 from "../chip-action";
let nextId = 0;
export class RdsChipComponent {
    get hostClasses() {
        return {
            'rds-chips__chip': true,
            'rds-chips__chip--input': this.closable,
            [`rds-chips--size-${this.size}`]: true,
            [`rds-chips--type-${this.type}`]: true,
        };
    }
    set ariaLabelCloseButton(v) {
        this._ariaLabelCloseButton = v;
    }
    get ariaLabelCloseButton() {
        return this._ariaLabelCloseButton || 'close' + this.textContent;
    }
    set size(value) {
        if (this._size !== value) {
            this._size = value;
            if (this._initialized) {
                this.cdr.detectChanges();
            }
        }
    }
    get size() {
        return this._size;
    }
    set value(value) {
        const oldValue = this._value;
        this._value = value;
        if (this._value !== oldValue) {
            this.cdr.markForCheck();
        }
    }
    get value() {
        return this._value !== undefined ? this._value : this.innerText;
    }
    get innerText() {
        return this.elementRef.nativeElement.innerText;
    }
    get textContent() {
        return this.elementRef.nativeElement.textContent;
    }
    constructor() {
        this.elementRef = inject(ElementRef);
        this.focusMonitor = inject(FocusMonitor);
        this.contentObserver = inject(ContentObserver);
        this.ngZone = inject(NgZone);
        this.destroyRef = inject(DestroyRef);
        this.cdr = inject(ChangeDetectorRef);
        this.hasFocusInternal = false;
        this._pendingFocus = false;
        this._initialized = false;
        this.focus$ = new Subject();
        this.blur$ = new Subject();
        this.id = `rds-chip--${nextId++}`;
        this.type = 'blue';
        this.role = null;
        this.disabled = false;
        this.closable = false;
        this.closeChip = new EventEmitter();
        this.destroyed = new EventEmitter();
        this.monitorFocus();
    }
    ngAfterViewInit() {
        this.contentObserver
            .observe(this.elementRef)
            .pipe(takeUntilDestroyed(this.destroyRef))
            .subscribe(() => this.cdr.markForCheck());
        if (this._pendingFocus) {
            this._pendingFocus = false;
            this.focus();
        }
        this._initialized = true;
    }
    ngOnDestroy() {
        this.focusMonitor.stopMonitoring(this.elementRef);
        this.destroyed.emit({ source: this });
        this.destroyed.complete();
    }
    handleKeydown(event) {
        if (this.disabled ||
            // let action chips do their own thing
            event.target?.tagName.toLowerCase() === 'button') {
            return;
        }
        if ('keyCode' in event && event.keyCode !== SPACE) {
            if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {
                event.preventDefault();
                this.closeChip.emit();
            }
            return;
        }
        event.preventDefault();
        this.handlePrimaryActionInteraction();
    }
    focus() {
        if (!this.disabled) {
            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.
            // This can happen if the consumer tries to focus a chip immediately after it is added.
            // Queue the method to be called again on init.
            if (this.primaryAction) {
                this.primaryAction.focus();
            }
            else {
                this._pendingFocus = true;
            }
        }
    }
    onClose(e) {
        if (!this.disabled) {
            e.stopPropagation();
            this.closeChip.emit();
        }
    }
    hasFocus() {
        return this.hasFocusInternal;
    }
    /** Handles interactions with the primary action of the chip. */
    handlePrimaryActionInteraction() {
        // Empty here, but is overwritten in child classes.
    }
    getSourceAction(target) {
        return this.getActions().find((action) => {
            const element = action.nativeElement;
            return element === target || element.contains(target);
        });
    }
    getActions() {
        const result = [];
        if (this.primaryAction) {
            result.push(this.primaryAction);
        }
        if (this.closeAction) {
            result.push(this.closeAction);
        }
        return result;
    }
    monitorFocus() {
        this.focusMonitor.monitor(this.elementRef, true).subscribe((origin) => {
            const hasFocus = origin !== null;
            if (hasFocus !== this.hasFocusInternal) {
                this.hasFocusInternal = hasFocus;
                if (hasFocus) {
                    this.focus$.next({ source: this });
                }
                else {
                    // When animations are enabled, Angular may end up removing the chip from the DOM a little
                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list
                    // that moves focus not the next item. To work around the issue, we defer marking the chip
                    // as not focused until the next time the zone stabilizes.
                    this.ngZone.onStable
                        .pipe(take(1))
                        .subscribe(() => this.ngZone.run(() => this.blur$.next({ source: this })));
                }
            }
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsChipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsChipComponent, selector: "rds-chip, button[rds-chip], button[rdsChip]", inputs: { ariaLabelCloseButton: "ariaLabelCloseButton", size: "size", type: "type", role: "role", disabled: ["disabled", "disabled", booleanAttribute], closable: ["closable", "closable", booleanAttribute], value: "value" }, outputs: { closeChip: "closeChip", destroyed: "destroyed" }, host: { listeners: { "click": "handleKeydown($event)", "keydown": "handleKeydown($event)" }, properties: { "class": "this.hostClasses", "attr.id": "this.id", "attr.role": "this.role", "attr.aria-disabled": "this.disabled", "disabled": "this.disabled" } }, viewQueries: [{ propertyName: "primaryAction", first: true, predicate: ["primary"], descendants: true, read: RdsChipActionDirective }, { propertyName: "closeAction", first: true, predicate: ["closeButton"], descendants: true, read: RdsChipActionDirective }], ngImport: i0, template: "<div [ngClass]=\"['rds-chips-wrapper', 'rds-chips--size-' + size]\">\n  <span #primary rds-chip-action [disabled]=\"disabled\">\n    <ng-content\n      select=\"rds-icon[rdsChipLeadingIcon], rds-icon[rds-chip-leading-icon]\"\n    />\n    <ng-content select=\"img[rdsChipAvatar], img[rds-chip-avatar]\" />\n    <ng-content />\n  </span>\n  @if (closable) {\n    <button\n      #closeButton\n      class=\"rds-chip-close-button\"\n      rds-icon-button\n      rds-chip-action\n      [attr.aria-label]=\"ariaLabelCloseButton\"\n      [disabled]=\"disabled\"\n      (click)=\"onClose($event)\"\n      type=\"button\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"close\" class=\"rds-chip-close-icon\" />\n    </button>\n  } @else {\n    <ng-content\n      select=\"rds-icon[rdsChipTrailingIcon], rds-icon[rds-chip-trailing-icon]\"\n    />\n  }\n</div>\n", styles: [".rds-chips__chip{display:flex;align-items:center;justify-content:center;border-width:1px;border-style:solid;border-color:var(--rds-color-chips-1-stroke-enabled);border-radius:30px;width:fit-content;background-color:var(--rds-color-chips-bg-enabled);color:var(--rds-color-informative);-webkit-user-select:none;user-select:none}.rds-chips__chip:hover{cursor:default}.rds-chips__chip:active:not([disabled]){box-shadow:none}.rds-chips__chip.cdk-focused.cdk-keyboard-focused:not([aria-disabled=true],[disabled]):not(:has(.rds-chip-close-button:focus-visible)){outline:var(--rds-color-stroke-active-focus) solid 2px;outline-offset:-1px}.rds-chips__chip .rds-chip__avatar{border-radius:100vmax}.rds-chips__chip .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]){box-shadow:0 0 1px #00000052,0 2px 4px #0000001c;cursor:pointer;border-color:var(--rds-color-chips-1-stroke-hover);color:var(--rds-color-informative);background-color:var(--rds-color-chips-bg-enabled)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip .rds-chip-close-button>.rds-icon.rds-chip-close-icon{width:16px;height:16px}.rds-chips__chip .rds-avatar:hover .rds-avatar-overlay{display:none}.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-bg-pressed);color:var(--rds-color-chips-1-text-pressed);background:var(--rds-color-chips-1-bg-pressed)}.rds-chips__chip .rds-chip-action{display:inline-flex;align-items:center;outline:none}.rds-chips__chip.rds-chips--type-blue{border-color:var(--rds-color-chips-1-stroke-enabled);color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-stroke-hover);color:var(--rds-color-informative);background:var(--rds-color-chips-bg-enabled)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip.rds-chips--type-blue:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-bg-pressed);color:var(--rds-color-chips-1-text-pressed);background:var(--rds-color-chips-1-bg-pressed)}.rds-chips__chip.rds-chips--type-neutral{border-color:var(--rds-color-chips-2-stroke-enabled);color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral .rds-chip__leading-icon{color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral .rds-chip-close-button:not([disabled]){color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-2-stroke-hover);color:var(--rds-color-neutral);background:var(--rds-color-chips-bg-enabled)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip.rds-chips--type-neutral:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-2-bg-pressed);color:var(--rds-color-chips-2-text-pressed);background:var(--rds-color-chips-2-bg-pressed)}.rds-chips__chip .rds-chips--size-s{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:28px;padding:0 11px}.rds-chips__chip .rds-chips--size-s .rds-chip__leading-icon{margin:0 4px 0 -4px;width:18px;height:18px}.rds-chips__chip .rds-chips--size-s .rds-chip__avatar{margin:0 4px 0 -10px;width:24px;height:24px}.rds-chips__chip .rds-chips--size-s .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-s .rds-avatar .rds-avatar__container .rds-avatar-image{width:24px;height:24px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button{margin-inline:4px -4px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip .rds-chips--size-m{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:36px;padding:0 15px}.rds-chips__chip .rds-chips--size-m .rds-chip__leading-icon{margin:0 8px 0 -4px;width:18px;height:18px}.rds-chips__chip .rds-chips--size-m .rds-chip__avatar{margin:0 8px 0 -12px;width:28px;height:28px}.rds-chips__chip .rds-chips--size-m .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-m .rds-avatar .rds-avatar__container .rds-avatar-image{width:28px;height:28px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button{margin-inline:8px -4px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip .rds-chips--size-l{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:48px;padding:0 23px}.rds-chips__chip .rds-chips--size-l .rds-chip__leading-icon{margin:0 8px 0 -8px;width:24px;height:24px}.rds-chips__chip .rds-chips--size-l .rds-chip__avatar{margin:0 8px 0 -20px;width:40px;height:40px}.rds-chips__chip .rds-chips--size-l .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-l .rds-avatar .rds-avatar__container .rds-avatar-image{width:40px;height:40px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button{margin-inline:8px -8px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip[disabled],.rds-chips__chip[aria-disabled=true]{border-color:var(--rds-color-stroke-enabled);background-color:var(--rds-color-bg-disabled);color:var(--rds-color-disabled)}.rds-chips__chip[disabled] .rds-chip__avatar,.rds-chips__chip[aria-disabled=true] .rds-chip__avatar{opacity:.3}.rds-chips__chip[disabled] .rds-chip__leading-icon,.rds-chips__chip[aria-disabled=true] .rds-chip__leading-icon{color:var(--rds-color-disabled)}.rds-chips{display:flex;flex-wrap:wrap}.rds-chips.rds-chips--size-s{gap:8px}.rds-chips.rds-chips--size-m,.rds-chips.rds-chips--size-l{gap:12px}.rds-chips-wrapper{display:flex;align-items:center;justify-content:center}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i2.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "component", type: i3.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }, { kind: "directive", type: i4.RdsChipActionDirective, selector: "[rds-chip-action], [rdsChipAction]", inputs: ["tabIndex", "disabled"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsChipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-chip, button[rds-chip], button[rdsChip]', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div [ngClass]=\"['rds-chips-wrapper', 'rds-chips--size-' + size]\">\n  <span #primary rds-chip-action [disabled]=\"disabled\">\n    <ng-content\n      select=\"rds-icon[rdsChipLeadingIcon], rds-icon[rds-chip-leading-icon]\"\n    />\n    <ng-content select=\"img[rdsChipAvatar], img[rds-chip-avatar]\" />\n    <ng-content />\n  </span>\n  @if (closable) {\n    <button\n      #closeButton\n      class=\"rds-chip-close-button\"\n      rds-icon-button\n      rds-chip-action\n      [attr.aria-label]=\"ariaLabelCloseButton\"\n      [disabled]=\"disabled\"\n      (click)=\"onClose($event)\"\n      type=\"button\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"close\" class=\"rds-chip-close-icon\" />\n    </button>\n  } @else {\n    <ng-content\n      select=\"rds-icon[rdsChipTrailingIcon], rds-icon[rds-chip-trailing-icon]\"\n    />\n  }\n</div>\n", styles: [".rds-chips__chip{display:flex;align-items:center;justify-content:center;border-width:1px;border-style:solid;border-color:var(--rds-color-chips-1-stroke-enabled);border-radius:30px;width:fit-content;background-color:var(--rds-color-chips-bg-enabled);color:var(--rds-color-informative);-webkit-user-select:none;user-select:none}.rds-chips__chip:hover{cursor:default}.rds-chips__chip:active:not([disabled]){box-shadow:none}.rds-chips__chip.cdk-focused.cdk-keyboard-focused:not([aria-disabled=true],[disabled]):not(:has(.rds-chip-close-button:focus-visible)){outline:var(--rds-color-stroke-active-focus) solid 2px;outline-offset:-1px}.rds-chips__chip .rds-chip__avatar{border-radius:100vmax}.rds-chips__chip .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]){box-shadow:0 0 1px #00000052,0 2px 4px #0000001c;cursor:pointer;border-color:var(--rds-color-chips-1-stroke-hover);color:var(--rds-color-informative);background-color:var(--rds-color-chips-bg-enabled)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip .rds-chip-close-button>.rds-icon.rds-chip-close-icon{width:16px;height:16px}.rds-chips__chip .rds-avatar:hover .rds-avatar-overlay{display:none}.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-bg-pressed);color:var(--rds-color-chips-1-text-pressed);background:var(--rds-color-chips-1-bg-pressed)}.rds-chips__chip .rds-chip-action{display:inline-flex;align-items:center;outline:none}.rds-chips__chip.rds-chips--type-blue{border-color:var(--rds-color-chips-1-stroke-enabled);color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-stroke-hover);color:var(--rds-color-informative);background:var(--rds-color-chips-bg-enabled)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-informative)}.rds-chips__chip.rds-chips--type-blue.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip.rds-chips--type-blue:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-1-bg-pressed);color:var(--rds-color-chips-1-text-pressed);background:var(--rds-color-chips-1-bg-pressed)}.rds-chips__chip.rds-chips--type-neutral{border-color:var(--rds-color-chips-2-stroke-enabled);color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral .rds-chip__leading-icon{color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral .rds-chip-close-button:not([disabled]){color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-2-stroke-hover);color:var(--rds-color-neutral);background:var(--rds-color-chips-bg-enabled)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]) .rds-chip__leading-icon{color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral:hover:not([aria-disabled=true],[disabled]) .rds-chip-close-button:not([disabled]){color:var(--rds-color-neutral)}.rds-chips__chip.rds-chips--type-neutral.rds-chips__chip--selected:not([aria-disabled=true],[disabled]),.rds-chips__chip.rds-chips--type-neutral:active:not([aria-disabled=true],[disabled]){border-color:var(--rds-color-chips-2-bg-pressed);color:var(--rds-color-chips-2-text-pressed);background:var(--rds-color-chips-2-bg-pressed)}.rds-chips__chip .rds-chips--size-s{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:28px;padding:0 11px}.rds-chips__chip .rds-chips--size-s .rds-chip__leading-icon{margin:0 4px 0 -4px;width:18px;height:18px}.rds-chips__chip .rds-chips--size-s .rds-chip__avatar{margin:0 4px 0 -10px;width:24px;height:24px}.rds-chips__chip .rds-chips--size-s .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-s .rds-avatar .rds-avatar__container .rds-avatar-image{width:24px;height:24px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button{margin-inline:4px -4px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-s .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip .rds-chips--size-m{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:36px;padding:0 15px}.rds-chips__chip .rds-chips--size-m .rds-chip__leading-icon{margin:0 8px 0 -4px;width:18px;height:18px}.rds-chips__chip .rds-chips--size-m .rds-chip__avatar{margin:0 8px 0 -12px;width:28px;height:28px}.rds-chips__chip .rds-chips--size-m .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-m .rds-avatar .rds-avatar__container .rds-avatar-image{width:28px;height:28px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button{margin-inline:8px -4px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-m .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip .rds-chips--size-l{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;min-height:48px;padding:0 23px}.rds-chips__chip .rds-chips--size-l .rds-chip__leading-icon{margin:0 8px 0 -8px;width:24px;height:24px}.rds-chips__chip .rds-chips--size-l .rds-chip__avatar{margin:0 8px 0 -20px;width:40px;height:40px}.rds-chips__chip .rds-chips--size-l .rds-chip__avatar .rds-avatar__container,.rds-chips__chip .rds-chips--size-l .rds-avatar .rds-avatar__container .rds-avatar-image{width:40px;height:40px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button{margin-inline:8px -8px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:after,.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:before{border-radius:100vmax;width:20px;height:20px;inset:-1px 0 0 -1px}.rds-chips__chip .rds-chips--size-l .rds-chip-close-button:before{width:20px;height:20px}.rds-chips__chip[disabled],.rds-chips__chip[aria-disabled=true]{border-color:var(--rds-color-stroke-enabled);background-color:var(--rds-color-bg-disabled);color:var(--rds-color-disabled)}.rds-chips__chip[disabled] .rds-chip__avatar,.rds-chips__chip[aria-disabled=true] .rds-chip__avatar{opacity:.3}.rds-chips__chip[disabled] .rds-chip__leading-icon,.rds-chips__chip[aria-disabled=true] .rds-chip__leading-icon{color:var(--rds-color-disabled)}.rds-chips{display:flex;flex-wrap:wrap}.rds-chips.rds-chips--size-s{gap:8px}.rds-chips.rds-chips--size-m,.rds-chips.rds-chips--size-l{gap:12px}.rds-chips-wrapper{display:flex;align-items:center;justify-content:center}\n"] }]
        }], ctorParameters: () => [], propDecorators: { hostClasses: [{
                type: HostBinding,
                args: ['class']
            }], id: [{
                type: HostBinding,
                args: ['attr.id']
            }], ariaLabelCloseButton: [{
                type: Input
            }], size: [{
                type: Input
            }], type: [{
                type: Input
            }], role: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.role']
            }], disabled: [{
                type: HostBinding,
                args: ['attr.aria-disabled']
            }, {
                type: HostBinding,
                args: ['disabled']
            }, {
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], closable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], value: [{
                type: Input
            }], closeChip: [{
                type: Output
            }], destroyed: [{
                type: Output
            }], primaryAction: [{
                type: ViewChild,
                args: ['primary', { read: RdsChipActionDirective }]
            }], closeAction: [{
                type: ViewChild,
                args: ['closeButton', { read: RdsChipActionDirective }]
            }], handleKeydown: [{
                type: HostListener,
                args: ['click', ['$event']]
            }, {
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,