import { Directive, ElementRef, inject, Input } from '@angular/core';
import { RdsThemeService } from './theme.service';
import * as i0 from "@angular/core";
export class RdsThemeDirective {
    constructor() {
        this.themeService = inject(RdsThemeService);
        this.nativeElement = inject(ElementRef).nativeElement;
    }
    set theme(theme) {
        if (!!theme && this.themeService.get(this.nativeElement) !== theme) {
            this._theme = theme;
            this.themeService.set(this.theme, this.nativeElement);
        }
    }
    get theme() {
        return this._theme;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsThemeDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.1", type: RdsThemeDirective, isStandalone: true, selector: "[rds-theme], [rdsTheme]", inputs: { theme: ["rds-theme", "theme"] }, providers: [RdsThemeService], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsThemeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[rds-theme], [rdsTheme]',
                    standalone: true,
                    providers: [RdsThemeService],
                }]
        }], propDecorators: { theme: [{
                type: Input,
                args: ['rds-theme']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hbmd1bGFyLWNvbXBvbmVudHMvc3JjL2xpYi90aGVtZS90aGVtZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBUWxELE1BQU0sT0FBTyxpQkFBaUI7SUFMOUI7UUFNbUIsaUJBQVksR0FBRyxNQUFNLENBQXFCLGVBQWUsQ0FBQyxDQUFDO1FBQzNELGtCQUFhLEdBQzVCLE1BQU0sQ0FBc0IsVUFBVSxDQUFDLENBQUMsYUFBYSxDQUFDO0tBY3pEO0lBWkMsSUFBd0IsS0FBSyxDQUFDLEtBQVE7UUFDcEMsSUFBSSxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxLQUFLLEVBQUUsQ0FBQztZQUNuRSxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNwQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN4RCxDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDOzhHQWRVLGlCQUFpQjtrR0FBakIsaUJBQWlCLGlIQUZqQixDQUFDLGVBQWUsQ0FBQzs7MkZBRWpCLGlCQUFpQjtrQkFMN0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsU0FBUyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUM3Qjs4QkFNeUIsS0FBSztzQkFBNUIsS0FBSzt1QkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBpbmplY3QsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZHNUaGVtZVNlcnZpY2UgfSBmcm9tICcuL3RoZW1lLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmRzVGhlbWVOYW1lIH0gZnJvbSAnQHJkcy9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Jkcy10aGVtZV0sIFtyZHNUaGVtZV0nLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBwcm92aWRlcnM6IFtSZHNUaGVtZVNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBSZHNUaGVtZURpcmVjdGl2ZTxUIGV4dGVuZHMgc3RyaW5nID0gUmRzVGhlbWVOYW1lPiB7XG4gIHByaXZhdGUgcmVhZG9ubHkgdGhlbWVTZXJ2aWNlID0gaW5qZWN0PFJkc1RoZW1lU2VydmljZTxUPj4oUmRzVGhlbWVTZXJ2aWNlKTtcbiAgcHJpdmF0ZSByZWFkb25seSBuYXRpdmVFbGVtZW50ID1cbiAgICBpbmplY3Q8RWxlbWVudFJlZjxFbGVtZW50Pj4oRWxlbWVudFJlZikubmF0aXZlRWxlbWVudDtcblxuICBASW5wdXQoJ3Jkcy10aGVtZScpIHNldCB0aGVtZSh0aGVtZTogVCkge1xuICAgIGlmICghIXRoZW1lICYmIHRoaXMudGhlbWVTZXJ2aWNlLmdldCh0aGlzLm5hdGl2ZUVsZW1lbnQpICE9PSB0aGVtZSkge1xuICAgICAgdGhpcy5fdGhlbWUgPSB0aGVtZTtcbiAgICAgIHRoaXMudGhlbWVTZXJ2aWNlLnNldCh0aGlzLnRoZW1lLCB0aGlzLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIGdldCB0aGVtZSgpOiBUIHtcbiAgICByZXR1cm4gdGhpcy5fdGhlbWU7XG4gIH1cblxuICBwcml2YXRlIF90aGVtZTogVDtcbn1cbiJdfQ==