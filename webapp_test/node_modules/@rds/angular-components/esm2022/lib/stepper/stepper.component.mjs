import { animate, state, style, transition, trigger, } from '@angular/animations';
import { CdkStepper } from '@angular/cdk/stepper';
import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, forwardRef, HostBinding, inject, Input, Output, QueryList, ViewChildren, ViewEncapsulation, } from '@angular/core';
import { RdsStepHeaderComponent } from './step-header.component';
import { RdsStepComponent } from './step.component';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { Directionality } from '@angular/cdk/bidi';
import { ViewportRuler } from '@angular/cdk/scrolling';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./step-header.component";
export class RdsStepperComponent extends CdkStepper {
    get class() {
        const classList = ['rds-stepper'];
        if (this.orientation === 'horizontal') {
            classList.push('rds-stepper-horizontal');
        }
        else if (this.orientation === 'vertical') {
            classList.push('rds-stepper-vertical');
            if (this.sideBySide) {
                classList.push('rds-stepper-side-by-side');
            }
        }
        return classList;
    }
    constructor() {
        super(inject(Directionality), inject(ChangeDetectorRef), inject(ElementRef));
        this.cdr = inject(ChangeDetectorRef);
        this.viewportRuler = inject(ViewportRuler);
        this.hostRole = 'tablist';
        this.sideBySide = false;
        /** Event emitted when the current step is done transitioning in. */
        this.animationDone = new EventEmitter();
        this.steps = new QueryList(); // Steps that belong to current stepper, excluding from nested
        /** Stream of animation `done` events when the body expands/collapses. */
        this._animationDone = new Subject(); //
        this._horizontalLineStyle = {};
    }
    ngAfterContentInit() {
        super.ngAfterContentInit();
        // Mark the component for change detection whenever the content children query changes
        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._stateChanged();
        });
        this._animationDone.pipe(takeUntil(this._destroyed)).subscribe((event) => {
            if (event.toState === 'current') {
                this.animationDone.emit();
            }
        });
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        if (this._stepHeader.first) {
            Promise.resolve().then(() => {
                this.calculateHorizontalLineStyle();
            });
        }
        this.viewportRuler
            .change()
            .pipe(takeUntil(this._destroyed))
            .subscribe(() => this.calculateHorizontalLineStyle());
    }
    calculateHorizontalLineStyle() {
        const headerPadding = 8;
        const stepperGap = 32;
        const offsetWidth = this._stepHeader.first?._elementRef.nativeElement.offsetWidth || 0;
        this._horizontalLineStyle.minWidth = `calc(100% + ${offsetWidth}px)`;
        this._horizontalLineStyle.transform = `translateX(-${offsetWidth - headerPadding - stepperGap}px)`;
        this.cdr.detectChanges();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsStepperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsStepperComponent, selector: "rds-stepper, [rdsStepper], [rds-stepper]", inputs: { sideBySide: ["sideBySide", "sideBySide", booleanAttribute] }, outputs: { animationDone: "animationDone" }, host: { properties: { "class": "this.class", "attr.role": "this.hostRole" } }, providers: [{ provide: CdkStepper, useExisting: RdsStepperComponent }], queries: [{ propertyName: "_steps", predicate: i0.forwardRef(() => RdsStepComponent), descendants: true }], viewQueries: [{ propertyName: "_stepHeader", predicate: RdsStepHeaderComponent, descendants: true }], exportAs: ["rdsStepper"], usesInheritance: true, ngImport: i0, template: "<ng-container>\n  <ng-container>\n    <div class=\"rds-stepper-header-container\">\n      @for (step of steps; track step; let i = $index; let isLast = $last) {\n        @if (orientation !== 'vertical') {\n          <ng-container\n            [ngTemplateOutlet]=\"stepTemplate\"\n            [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n          />\n        }\n        @if (orientation === 'vertical') {\n          <div class=\"rds-content-wrapper\">\n            <div\n              [ngClass]=\"{\n                'rds-stepper-vertical-line-wrapper': !isLast,\n                'rds-stepper-content-container-vertical-selected':\n                  selectedIndex === i\n              }\"\n            >\n              <div class=\"rds-stepper-vertical-line\">\n                @if (!sideBySide) {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressVertical]=\"selectedIndex > i ? 'max' : 'void'\"\n                  ></div>\n                } @else {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressSideBySide]=\"\n                      selectedIndex > i ? 'max' : 'void'\n                    \"\n                  ></div>\n                }\n              </div>\n            </div>\n            <div>\n              <ng-container\n                [ngTemplateOutlet]=\"stepTemplate\"\n                [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n              />\n              @if (!sideBySide) {\n                <div\n                  class=\"rds-stepper-content-container rds-stepper-content-container-vertical\"\n                >\n                  <div\n                    role=\"tabpanel\"\n                    Class=\"rds-stepper-content\"\n                    [@stepTransitionVertical]=\"_getAnimationDirection(i)\"\n                    (@stepTransitionVertical.done)=\"_animationDone.next($event)\"\n                    [id]=\"_getStepContentId(i)\"\n                    [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n                    [attr.aria-expanded]=\"selectedIndex === i\"\n                  >\n                    <ng-container [ngTemplateOutlet]=\"step.content\" />\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        }\n        @if (!isLast && orientation === 'horizontal') {\n          <div class=\"rds-stepper-line-wrapper\">\n            <div\n              class=\"rds-stepper-line\"\n              [class.rds-stepper-line-selected-element-after]=\"\n                selectedIndex > i\n              \"\n              [ngStyle]=\"_horizontalLineStyle\"\n            >\n              <div\n                class=\"rds-stepper-line-progress\"\n                [@stepProgress]=\"selectedIndex > i ? 'max' : 'void'\"\n              ></div>\n            </div>\n          </div>\n        }\n      }\n    </div>\n\n    @if (orientation === 'vertical' && sideBySide) {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransitionSideBySide]=\"_getAnimationDirection(i)\"\n            (@stepTransitionSideBySide.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [ngStyle]=\"{\n              display: selectedIndex === i ? 'inherit' : 'none'\n            }\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n    @if (orientation === 'horizontal') {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransition]=\"_getAnimationDirection(i)\"\n            (@stepTransition.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n  </ng-container>\n</ng-container>\n\n<!-- Common step templating -->\n<ng-template let-step=\"step\" let-i=\"i\" #stepTemplate>\n  <rds-step-header\n    [class.rds-step-header-selected-element-after]=\"selectedIndex > i\"\n    (click)=\"step.select()\"\n    (keydown)=\"_onKeydown($event)\"\n    [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n    [id]=\"_getStepLabelId(i)\"\n    [attr.aria-posinset]=\"i + 1\"\n    [attr.aria-setsize]=\"steps.length\"\n    [attr.aria-controls]=\"_getStepContentId(i)\"\n    [attr.aria-selected]=\"selectedIndex === i\"\n    [attr.aria-label]=\"step.ariaLabel || null\"\n    [attr.aria-labelledby]=\"\n      !step.ariaLabel && step.ariaLabelledby ? step.ariaLabelledby : null\n    \"\n    [index]=\"i\"\n    [state]=\"_getIndicatorType(i, step.state)\"\n    [label]=\"step.stepLabel || step.label\"\n    [selected]=\"selectedIndex === i\"\n    [active]=\"step.completed || selectedIndex === i || !linear\"\n    [optional]=\"step.optional\"\n    [sideBySide]=\"sideBySide\"\n    [orientation]=\"orientation\"\n  />\n</ng-template>\n", styles: [".rds-stepper{display:block}.rds-stepper-horizontal .rds-stepper-header-container{position:relative;justify-content:center;display:flex;white-space:nowrap}@media (max-width: 767.999999px){.rds-stepper-horizontal .rds-stepper-header-container{gap:24px;align-items:center;padding-bottom:62px}}.rds-stepper-horizontal .rds-stepper-line-wrapper{position:relative;flex:auto;margin:26px 0 14px;border-top:2px solid transparent;min-width:32px;height:0}@media (max-width: 767.999999px){.rds-stepper-horizontal .rds-stepper-line-wrapper{display:none}}.rds-stepper-horizontal .rds-stepper-line{position:absolute;flex:auto;transform:translate(-75px);transition:border-color .2s cubic-bezier(.35,0,.25,1);border-top:1px solid var(--rds-color-grey-3);min-width:calc(100% + 150px);height:0}.rds-stepper-horizontal .rds-stepper-line .rds-stepper-line-progress{position:relative;transform:translateY(-1px);width:0;border-top:1px solid var(--rds-color-grey-3);border-color:var(--rds-color-brand)}.rds-stepper-horizontal .rds-stepper-content{outline:0}.rds-stepper-horizontal .rds-stepper-content[aria-expanded=false]{overflow:hidden;height:0}.rds-stepper-horizontal .rds-stepper-content-container{overflow:hidden;padding:0 24px 24px}.rds-content-wrapper{display:flex}@media (max-width: 767.999999px){.rds-content-wrapper{padding-top:30px}}.rds-stepper-vertical-line-wrapper{position:relative}@media (max-width: 767.999999px){.rds-stepper-vertical-line-wrapper{display:none}}.rds-stepper-vertical-line-wrapper .rds-stepper-vertical-line{position:absolute;left:24px;top:40px;bottom:-40px;z-index:2;border-left:1px solid;border-color:var(--rds-color-grey-3)}.rds-stepper-vertical-line-wrapper .rds-stepper-vertical-line .rds-stepper-vertical-line-progress{position:relative;width:0;z-index:3;border-left:1px solid;border-color:var(--rds-color-brand);transform:translate(-1px)}.rds-stepper-content-container-vertical{padding-left:52px;width:100%}@media (max-width: 767.999999px){.rds-stepper-content-container-vertical{padding-left:24px}}.rds-stepper-content-container-vertical .rds-stepper-content{overflow:hidden}.rds-stepper.rds-stepper-side-by-side{display:grid;gap:32px;grid-template-columns:1fr 4fr}.rds-stepper.rds-stepper-side-by-side .rds-stepper-header-container{position:sticky;align-self:flex-start;justify-content:flex-start;flex-direction:column;z-index:1}.rds-stepper.rds-stepper-side-by-side .rds-stepper-content-container{padding:24px 16px 0;flex:1;overflow:visible}.rds-stepper.rds-stepper-side-by-side .rds-stepper-vertical-line{top:32px;bottom:-32px}.rds-stepper.rds-stepper-side-by-side .rds-step-header.rds-step-header-side-by-side{position:relative;flex-direction:row;padding:16px 8px;align-items:flex-start}.rds-stepper.rds-stepper-side-by-side .rds-step-header.rds-step-header-side-by-side .rds-step-label{margin-top:4px}.rds-stepper.rds-stepper-side-by-side .rds-step-text-label{display:flex;flex-direction:column}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i2.RdsStepHeaderComponent, selector: "rds-step-header", inputs: ["orientation", "sideBySide", "state", "label", "index", "selected", "active", "optional", "stepNumberMobileFunc"] }], animations: [
            trigger('stepTransition', [
                state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),
                state('current', style({ transform: 'none', visibility: 'inherit' })),
                state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),
                transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
            ]),
            trigger('stepTransitionVertical', [
                state('previous', style({ height: '0px', visibility: 'hidden' })),
                state('next', style({ height: '0px', visibility: 'hidden' })),
                state('current', style({ height: '*', visibility: 'inherit' })),
                transition('* <=> current', animate('500ms cubic-bezier(0.4, 0.0, 0.2, 1)'), {}),
            ]),
            trigger('stepTransitionSideBySide', [
                state('previous', style({ opacity: '0' })),
                state('current', style({ opacity: '100%' })),
                state('next', style({ opacity: '0' })),
                transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
            ]),
            trigger('stepProgress', [
                state('void', style({ width: 0 })),
                state('max', style({ width: '100%' })),
                transition('* => *', animate('.3s linear')),
            ]),
            trigger('stepProgressVertical', [
                state('void', style({ height: 0 })),
                state('max', style({ height: '100%' })),
                transition('* => *', animate('.3s linear')),
            ]),
            trigger('stepProgressSideBySide', [
                state('void', style({ height: 0 })),
                state('max', style({ height: '100%' })),
                transition('* => *', animate('.3s linear')),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-stepper, [rdsStepper], [rds-stepper]', exportAs: 'rdsStepper', animations: [
                        trigger('stepTransition', [
                            state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),
                            state('current', style({ transform: 'none', visibility: 'inherit' })),
                            state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),
                            transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                        ]),
                        trigger('stepTransitionVertical', [
                            state('previous', style({ height: '0px', visibility: 'hidden' })),
                            state('next', style({ height: '0px', visibility: 'hidden' })),
                            state('current', style({ height: '*', visibility: 'inherit' })),
                            transition('* <=> current', animate('500ms cubic-bezier(0.4, 0.0, 0.2, 1)'), {}),
                        ]),
                        trigger('stepTransitionSideBySide', [
                            state('previous', style({ opacity: '0' })),
                            state('current', style({ opacity: '100%' })),
                            state('next', style({ opacity: '0' })),
                            transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                        ]),
                        trigger('stepProgress', [
                            state('void', style({ width: 0 })),
                            state('max', style({ width: '100%' })),
                            transition('* => *', animate('.3s linear')),
                        ]),
                        trigger('stepProgressVertical', [
                            state('void', style({ height: 0 })),
                            state('max', style({ height: '100%' })),
                            transition('* => *', animate('.3s linear')),
                        ]),
                        trigger('stepProgressSideBySide', [
                            state('void', style({ height: 0 })),
                            state('max', style({ height: '100%' })),
                            transition('* => *', animate('.3s linear')),
                        ]),
                    ], providers: [{ provide: CdkStepper, useExisting: RdsStepperComponent }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container>\n  <ng-container>\n    <div class=\"rds-stepper-header-container\">\n      @for (step of steps; track step; let i = $index; let isLast = $last) {\n        @if (orientation !== 'vertical') {\n          <ng-container\n            [ngTemplateOutlet]=\"stepTemplate\"\n            [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n          />\n        }\n        @if (orientation === 'vertical') {\n          <div class=\"rds-content-wrapper\">\n            <div\n              [ngClass]=\"{\n                'rds-stepper-vertical-line-wrapper': !isLast,\n                'rds-stepper-content-container-vertical-selected':\n                  selectedIndex === i\n              }\"\n            >\n              <div class=\"rds-stepper-vertical-line\">\n                @if (!sideBySide) {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressVertical]=\"selectedIndex > i ? 'max' : 'void'\"\n                  ></div>\n                } @else {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressSideBySide]=\"\n                      selectedIndex > i ? 'max' : 'void'\n                    \"\n                  ></div>\n                }\n              </div>\n            </div>\n            <div>\n              <ng-container\n                [ngTemplateOutlet]=\"stepTemplate\"\n                [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n              />\n              @if (!sideBySide) {\n                <div\n                  class=\"rds-stepper-content-container rds-stepper-content-container-vertical\"\n                >\n                  <div\n                    role=\"tabpanel\"\n                    Class=\"rds-stepper-content\"\n                    [@stepTransitionVertical]=\"_getAnimationDirection(i)\"\n                    (@stepTransitionVertical.done)=\"_animationDone.next($event)\"\n                    [id]=\"_getStepContentId(i)\"\n                    [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n                    [attr.aria-expanded]=\"selectedIndex === i\"\n                  >\n                    <ng-container [ngTemplateOutlet]=\"step.content\" />\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        }\n        @if (!isLast && orientation === 'horizontal') {\n          <div class=\"rds-stepper-line-wrapper\">\n            <div\n              class=\"rds-stepper-line\"\n              [class.rds-stepper-line-selected-element-after]=\"\n                selectedIndex > i\n              \"\n              [ngStyle]=\"_horizontalLineStyle\"\n            >\n              <div\n                class=\"rds-stepper-line-progress\"\n                [@stepProgress]=\"selectedIndex > i ? 'max' : 'void'\"\n              ></div>\n            </div>\n          </div>\n        }\n      }\n    </div>\n\n    @if (orientation === 'vertical' && sideBySide) {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransitionSideBySide]=\"_getAnimationDirection(i)\"\n            (@stepTransitionSideBySide.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [ngStyle]=\"{\n              display: selectedIndex === i ? 'inherit' : 'none'\n            }\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n    @if (orientation === 'horizontal') {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransition]=\"_getAnimationDirection(i)\"\n            (@stepTransition.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n  </ng-container>\n</ng-container>\n\n<!-- Common step templating -->\n<ng-template let-step=\"step\" let-i=\"i\" #stepTemplate>\n  <rds-step-header\n    [class.rds-step-header-selected-element-after]=\"selectedIndex > i\"\n    (click)=\"step.select()\"\n    (keydown)=\"_onKeydown($event)\"\n    [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n    [id]=\"_getStepLabelId(i)\"\n    [attr.aria-posinset]=\"i + 1\"\n    [attr.aria-setsize]=\"steps.length\"\n    [attr.aria-controls]=\"_getStepContentId(i)\"\n    [attr.aria-selected]=\"selectedIndex === i\"\n    [attr.aria-label]=\"step.ariaLabel || null\"\n    [attr.aria-labelledby]=\"\n      !step.ariaLabel && step.ariaLabelledby ? step.ariaLabelledby : null\n    \"\n    [index]=\"i\"\n    [state]=\"_getIndicatorType(i, step.state)\"\n    [label]=\"step.stepLabel || step.label\"\n    [selected]=\"selectedIndex === i\"\n    [active]=\"step.completed || selectedIndex === i || !linear\"\n    [optional]=\"step.optional\"\n    [sideBySide]=\"sideBySide\"\n    [orientation]=\"orientation\"\n  />\n</ng-template>\n", styles: [".rds-stepper{display:block}.rds-stepper-horizontal .rds-stepper-header-container{position:relative;justify-content:center;display:flex;white-space:nowrap}@media (max-width: 767.999999px){.rds-stepper-horizontal .rds-stepper-header-container{gap:24px;align-items:center;padding-bottom:62px}}.rds-stepper-horizontal .rds-stepper-line-wrapper{position:relative;flex:auto;margin:26px 0 14px;border-top:2px solid transparent;min-width:32px;height:0}@media (max-width: 767.999999px){.rds-stepper-horizontal .rds-stepper-line-wrapper{display:none}}.rds-stepper-horizontal .rds-stepper-line{position:absolute;flex:auto;transform:translate(-75px);transition:border-color .2s cubic-bezier(.35,0,.25,1);border-top:1px solid var(--rds-color-grey-3);min-width:calc(100% + 150px);height:0}.rds-stepper-horizontal .rds-stepper-line .rds-stepper-line-progress{position:relative;transform:translateY(-1px);width:0;border-top:1px solid var(--rds-color-grey-3);border-color:var(--rds-color-brand)}.rds-stepper-horizontal .rds-stepper-content{outline:0}.rds-stepper-horizontal .rds-stepper-content[aria-expanded=false]{overflow:hidden;height:0}.rds-stepper-horizontal .rds-stepper-content-container{overflow:hidden;padding:0 24px 24px}.rds-content-wrapper{display:flex}@media (max-width: 767.999999px){.rds-content-wrapper{padding-top:30px}}.rds-stepper-vertical-line-wrapper{position:relative}@media (max-width: 767.999999px){.rds-stepper-vertical-line-wrapper{display:none}}.rds-stepper-vertical-line-wrapper .rds-stepper-vertical-line{position:absolute;left:24px;top:40px;bottom:-40px;z-index:2;border-left:1px solid;border-color:var(--rds-color-grey-3)}.rds-stepper-vertical-line-wrapper .rds-stepper-vertical-line .rds-stepper-vertical-line-progress{position:relative;width:0;z-index:3;border-left:1px solid;border-color:var(--rds-color-brand);transform:translate(-1px)}.rds-stepper-content-container-vertical{padding-left:52px;width:100%}@media (max-width: 767.999999px){.rds-stepper-content-container-vertical{padding-left:24px}}.rds-stepper-content-container-vertical .rds-stepper-content{overflow:hidden}.rds-stepper.rds-stepper-side-by-side{display:grid;gap:32px;grid-template-columns:1fr 4fr}.rds-stepper.rds-stepper-side-by-side .rds-stepper-header-container{position:sticky;align-self:flex-start;justify-content:flex-start;flex-direction:column;z-index:1}.rds-stepper.rds-stepper-side-by-side .rds-stepper-content-container{padding:24px 16px 0;flex:1;overflow:visible}.rds-stepper.rds-stepper-side-by-side .rds-stepper-vertical-line{top:32px;bottom:-32px}.rds-stepper.rds-stepper-side-by-side .rds-step-header.rds-step-header-side-by-side{position:relative;flex-direction:row;padding:16px 8px;align-items:flex-start}.rds-stepper.rds-stepper-side-by-side .rds-step-header.rds-step-header-side-by-side .rds-step-label{margin-top:4px}.rds-stepper.rds-stepper-side-by-side .rds-step-text-label{display:flex;flex-direction:column}\n"] }]
        }], ctorParameters: () => [], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], hostRole: [{
                type: HostBinding,
                args: ['attr.role']
            }], _stepHeader: [{
                type: ViewChildren,
                args: [RdsStepHeaderComponent]
            }], _steps: [{
                type: ContentChildren,
                args: [forwardRef(() => RdsStepComponent), { descendants: true }]
            }], sideBySide: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], animationDone: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,