import { booleanAttribute, Directive, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class RdsCardSelectableDirective {
    constructor() {
        this.class = 'rds-card-selectable';
        this.isSelected = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsCardSelectableDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "16.1.0", version: "17.3.1", type: RdsCardSelectableDirective, isStandalone: true, selector: "rds-card-selectable, [rds-card-selectable], [rdsCardSelectable]", inputs: { isSelected: ["isSelected", "isSelected", booleanAttribute] }, host: { properties: { "class": "this.class", "class.rds-card-selected": "this.isSelected", "attr.aria-checked": "this.isSelected" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsCardSelectableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: `rds-card-selectable, [rds-card-selectable], [rdsCardSelectable]`,
                    standalone: true,
                }]
        }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], isSelected: [{
                type: HostBinding,
                args: ['class.rds-card-selected']
            }, {
                type: HostBinding,
                args: ['attr.aria-checked']
            }, {
                type: Input,
                args: [{ transform: booleanAttribute }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1zZWxlY3RhYmxlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYW5ndWxhci1jb21wb25lbnRzL3NyYy9saWIvY2FyZC9jYXJkLXNlbGVjdGFibGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFNaEYsTUFBTSxPQUFPLDBCQUEwQjtJQUp2QztRQUtpQyxVQUFLLEdBQUcscUJBQXFCLENBQUM7UUFLN0QsZUFBVSxHQUFHLEtBQUssQ0FBQztLQUNwQjs4R0FQWSwwQkFBMEI7a0dBQTFCLDBCQUEwQixzSkFLakIsZ0JBQWdCOzsyRkFMekIsMEJBQTBCO2tCQUp0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxpRUFBaUU7b0JBQzNFLFVBQVUsRUFBRSxJQUFJO2lCQUNqQjs4QkFFZ0MsS0FBSztzQkFBbkMsV0FBVzt1QkFBQyxPQUFPO2dCQUtwQixVQUFVO3NCQUhULFdBQVc7dUJBQUMseUJBQXlCOztzQkFDckMsV0FBVzt1QkFBQyxtQkFBbUI7O3NCQUMvQixLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYm9vbGVhbkF0dHJpYnV0ZSwgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBgcmRzLWNhcmQtc2VsZWN0YWJsZSwgW3Jkcy1jYXJkLXNlbGVjdGFibGVdLCBbcmRzQ2FyZFNlbGVjdGFibGVdYCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzQ2FyZFNlbGVjdGFibGVEaXJlY3RpdmUge1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzJykgcmVhZG9ubHkgY2xhc3MgPSAncmRzLWNhcmQtc2VsZWN0YWJsZSc7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5yZHMtY2FyZC1zZWxlY3RlZCcpXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLWNoZWNrZWQnKVxuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSlcbiAgaXNTZWxlY3RlZCA9IGZhbHNlO1xufVxuIl19