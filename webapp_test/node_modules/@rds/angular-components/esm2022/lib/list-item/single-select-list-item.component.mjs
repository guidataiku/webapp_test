import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation, } from '@angular/core';
import { RdsListItemComponent } from './list-item.component';
import { RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE } from './list-item.templates';
import { RdsAbstractSelectableListItemComponent } from './abstract-selectable-list-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../icons/icon.component";
export class RdsSingleSelectListItemComponent extends RdsAbstractSelectableListItemComponent {
    get checkedBindings() {
        return this.checked;
    }
    getSelectTypeClass() {
        return 'rds-single-select-list-item';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSingleSelectListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.1", type: RdsSingleSelectListItemComponent, selector: "button[rds-single-select-list-item], button[rdsSingleSelectListItem]", host: { properties: { "class.rds-list-item--checked": "this.checkedBindings", "attr.aria-selected": "this.checkedBindings" } }, providers: [
            {
                provide: RdsListItemComponent,
                useExisting: RdsSingleSelectListItemComponent,
            },
        ], usesInheritance: true, ngImport: i0, template: "<ng-content select=\"rds-avatar\"/>\n<ng-content select=\"rds-icon\"></ng-content>\n<span class=\"rds-list-item-text\">\n  <ng-content />\n</span>\n\n<rds-icon icon=\"checkmark\" class=\"rds-list-item-checkmark\"/>", isInline: true, dependencies: [{ kind: "component", type: i1.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSingleSelectListItemComponent, decorators: [{
            type: Component,
            args: [{
                    template: RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE,
                    selector: 'button[rds-single-select-list-item], button[rdsSingleSelectListItem]',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: RdsListItemComponent,
                            useExisting: RdsSingleSelectListItemComponent,
                        },
                    ],
                }]
        }], propDecorators: { checkedBindings: [{
                type: HostBinding,
                args: ['class.rds-list-item--checked']
            }, {
                type: HostBinding,
                args: ['attr.aria-selected']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXNlbGVjdC1saXN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hbmd1bGFyLWNvbXBvbmVudHMvc3JjL2xpYi9saXN0LWl0ZW0vc2luZ2xlLXNlbGVjdC1saXN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFdBQVcsRUFFWCxpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0UsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7OztBQWVuRyxNQUFNLE9BQU8sZ0NBQ1gsU0FBUSxzQ0FBc0M7SUFHOUMsSUFFYyxlQUFlO1FBQzNCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRWtCLGtCQUFrQjtRQUNuQyxPQUFPLDZCQUE2QixDQUFDO0lBQ3ZDLENBQUM7OEdBWlUsZ0NBQWdDO2tHQUFoQyxnQ0FBZ0MsK05BUGhDO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjtnQkFDN0IsV0FBVyxFQUFFLGdDQUFnQzthQUM5QztTQUNGOzsyRkFFVSxnQ0FBZ0M7a0JBYjVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9DQUFvQztvQkFDOUMsUUFBUSxFQUNOLHNFQUFzRTtvQkFDeEUsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLG9CQUFvQjs0QkFDN0IsV0FBVyxrQ0FBa0M7eUJBQzlDO3FCQUNGO2lCQUNGOzhCQU9lLGVBQWU7c0JBRjVCLFdBQVc7dUJBQUMsOEJBQThCOztzQkFDMUMsV0FBVzt1QkFBQyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBIb3N0QmluZGluZyxcbiAgT25DaGFuZ2VzLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZHNMaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSRFNfU0lOR0xFX1NFTEVDVF9MSVNUX0lURU1fVEVNUExBVEUgfSBmcm9tICcuL2xpc3QtaXRlbS50ZW1wbGF0ZXMnO1xuaW1wb3J0IHsgUmRzQWJzdHJhY3RTZWxlY3RhYmxlTGlzdEl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2Fic3RyYWN0LXNlbGVjdGFibGUtbGlzdC1pdGVtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogUkRTX1NJTkdMRV9TRUxFQ1RfTElTVF9JVEVNX1RFTVBMQVRFLFxuICBzZWxlY3RvcjpcbiAgICAnYnV0dG9uW3Jkcy1zaW5nbGUtc2VsZWN0LWxpc3QtaXRlbV0sIGJ1dHRvbltyZHNTaW5nbGVTZWxlY3RMaXN0SXRlbV0nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogUmRzTGlzdEl0ZW1Db21wb25lbnQsXG4gICAgICB1c2VFeGlzdGluZzogUmRzU2luZ2xlU2VsZWN0TGlzdEl0ZW1Db21wb25lbnQsXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzU2luZ2xlU2VsZWN0TGlzdEl0ZW1Db21wb25lbnRcbiAgZXh0ZW5kcyBSZHNBYnN0cmFjdFNlbGVjdGFibGVMaXN0SXRlbUNvbXBvbmVudFxuICBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlc1xue1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnJkcy1saXN0LWl0ZW0tLWNoZWNrZWQnKVxuICBASG9zdEJpbmRpbmcoJ2F0dHIuYXJpYS1zZWxlY3RlZCcpXG4gIHByb3RlY3RlZCBnZXQgY2hlY2tlZEJpbmRpbmdzKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmNoZWNrZWQ7XG4gIH1cblxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgZ2V0U2VsZWN0VHlwZUNsYXNzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdyZHMtc2luZ2xlLXNlbGVjdC1saXN0LWl0ZW0nO1xuICB9XG59XG4iXX0=