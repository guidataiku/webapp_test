import { ChangeDetectionStrategy, Component, HostBinding, ViewEncapsulation, } from '@angular/core';
import { RdsListItemComponent } from './list-item.component';
import { RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE } from './list-item.templates';
import { RdsAbstractSelectableListItemComponent } from './abstract-selectable-list-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../checkbox/pseudo-checkbox.component";
export class RdsMultiSelectListItemComponent extends RdsAbstractSelectableListItemComponent {
    get checkedBindings() {
        return this.checked;
    }
    getSelectTypeClass() {
        return 'rds-multi-select-list-item';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsMultiSelectListItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsMultiSelectListItemComponent, selector: "button[rds-multi-select-list-item], button[rdsMultiSelectListItem]", host: { properties: { "class.rds-list-item--checked": "this.checkedBindings", "attr.aria-checked": "this.checkedBindings" } }, providers: [
            {
                provide: RdsListItemComponent,
                useExisting: RdsMultiSelectListItemComponent,
            },
        ], usesInheritance: true, ngImport: i0, template: "<ng-content select=\"rds-avatar\"/>\n<ng-content select=\"rds-icon\"/>\n@if (!avatar && !icon) {\n    <rds-pseudo-checkbox\n      noSpacing\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n    />\n}\n<span class=\"rds-list-item-text\">\n  <ng-content/>\n</span>\n@if (avatar || icon) {\n    <rds-pseudo-checkbox\n      noSpacing\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      class=\"rds-list-item__checkbox-right\"\n    />\n}\n", isInline: true, dependencies: [{ kind: "component", type: i1.RdsPseudoCheckboxComponent, selector: "rds-pseudo-checkbox", inputs: ["checked", "disabled", "indeterminate", "noSpacing"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsMultiSelectListItemComponent, decorators: [{
            type: Component,
            args: [{
                    template: RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE,
                    selector: 'button[rds-multi-select-list-item], button[rdsMultiSelectListItem]',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: RdsListItemComponent,
                            useExisting: RdsMultiSelectListItemComponent,
                        },
                    ],
                }]
        }], propDecorators: { checkedBindings: [{
                type: HostBinding,
                args: ['class.rds-list-item--checked']
            }, {
                type: HostBinding,
                args: ['attr.aria-checked']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LWxpc3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2xpc3QtaXRlbS9tdWx0aS1zZWxlY3QtbGlzdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLDJDQUEyQyxDQUFDOzs7QUFlbkcsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLHNDQUFzQztJQUN6RixJQUVjLGVBQWU7UUFDM0IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFa0Isa0JBQWtCO1FBQ25DLE9BQU8sNEJBQTRCLENBQUM7SUFDdEMsQ0FBQzs4R0FUVSwrQkFBK0I7a0dBQS9CLCtCQUErQiw0TkFQL0I7WUFDVDtnQkFDRSxPQUFPLEVBQUUsb0JBQW9CO2dCQUM3QixXQUFXLEVBQUUsK0JBQStCO2FBQzdDO1NBQ0Y7OzJGQUVVLCtCQUErQjtrQkFiM0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUNBQW1DO29CQUM3QyxRQUFRLEVBQ04sb0VBQW9FO29CQUN0RSxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsb0JBQW9COzRCQUM3QixXQUFXLGlDQUFpQzt5QkFDN0M7cUJBQ0Y7aUJBQ0Y7OEJBSWUsZUFBZTtzQkFGNUIsV0FBVzt1QkFBQyw4QkFBOEI7O3NCQUMxQyxXQUFXO3VCQUFDLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEhvc3RCaW5kaW5nLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZHNMaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSRFNfTVVMVElfU0VMRUNUX0xJU1RfSVRFTV9URU1QTEFURSB9IGZyb20gJy4vbGlzdC1pdGVtLnRlbXBsYXRlcyc7XG5pbXBvcnQgeyBSZHNBYnN0cmFjdFNlbGVjdGFibGVMaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vYWJzdHJhY3Qtc2VsZWN0YWJsZS1saXN0LWl0ZW0uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBSRFNfTVVMVElfU0VMRUNUX0xJU1RfSVRFTV9URU1QTEFURSxcbiAgc2VsZWN0b3I6XG4gICAgJ2J1dHRvbltyZHMtbXVsdGktc2VsZWN0LWxpc3QtaXRlbV0sIGJ1dHRvbltyZHNNdWx0aVNlbGVjdExpc3RJdGVtXScsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBSZHNMaXN0SXRlbUNvbXBvbmVudCxcbiAgICAgIHVzZUV4aXN0aW5nOiBSZHNNdWx0aVNlbGVjdExpc3RJdGVtQ29tcG9uZW50LFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFJkc011bHRpU2VsZWN0TGlzdEl0ZW1Db21wb25lbnQgZXh0ZW5kcyBSZHNBYnN0cmFjdFNlbGVjdGFibGVMaXN0SXRlbUNvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MucmRzLWxpc3QtaXRlbS0tY2hlY2tlZCcpXG4gIEBIb3N0QmluZGluZygnYXR0ci5hcmlhLWNoZWNrZWQnKVxuICBwcm90ZWN0ZWQgZ2V0IGNoZWNrZWRCaW5kaW5ncygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jaGVja2VkO1xuICB9XG5cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGdldFNlbGVjdFR5cGVDbGFzcygpOiBzdHJpbmcge1xuICAgIHJldHVybiAncmRzLW11bHRpLXNlbGVjdC1saXN0LWl0ZW0nO1xuICB9XG59XG4iXX0=