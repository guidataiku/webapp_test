import { ENTER, hasModifierKey } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild, ViewEncapsulation, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../icons/icon.component";
import * as i2 from "../button/icon-button.component";
import * as i3 from "@angular/forms";
export class RdsHeaderSearchbarComponent {
    constructor() {
        this._defaultPlaceholder = 'Search for the products, page, document…';
        this.class = 'rds-header-search';
        this.searchValue = '';
        this.searchChange = new EventEmitter();
        this.closeSearch = new EventEmitter();
        this.search = new EventEmitter();
    }
    onInputChange(newValue) {
        this.searchValue = newValue;
        this.searchChange.next(this.searchValue);
    }
    onCloseSearch() {
        this.closeSearch.emit();
    }
    onKeyPress(event) {
        if (event.keyCode === ENTER && !hasModifierKey(event)) {
            this.emitValue();
        }
    }
    emitValue() {
        this.search.emit(this.searchValue);
    }
    focusSearch() {
        this.searchInput.nativeElement.focus();
    }
    getPlaceholder() {
        return this.placeholder || this._defaultPlaceholder;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsHeaderSearchbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.1", type: RdsHeaderSearchbarComponent, selector: "rds-header-searchbar", inputs: { placeholder: "placeholder", searchValue: "searchValue" }, outputs: { searchChange: "searchChange", closeSearch: "closeSearch", search: "search" }, host: { properties: { "class": "this.class" } }, viewQueries: [{ propertyName: "searchInput", first: true, predicate: ["input"], descendants: true, static: true }], ngImport: i0, template: `
    <button
      rds-icon-button
      size="m"
      class="rds-header-search-search-icon"
      (click)="emitValue()"
    >
      <rds-icon namespace="outlined" icon="search" />
    </button>
    <input
      #input
      [ngModel]="searchValue"
      (ngModelChange)="onInputChange($event)"
      (keydown)="onKeyPress($event)"
      class="rds-header-search-input"
      [placeholder]="getPlaceholder()"
    />
    <button
      rds-icon-button
      (click)="onCloseSearch()"
      class="rds-header-search-close-icon"
    >
      <rds-icon namespace="outlined" icon="close" />
    </button>
  `, isInline: true, dependencies: [{ kind: "component", type: i1.RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "component", type: i2.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsHeaderSearchbarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'rds-header-searchbar',
                    template: `
    <button
      rds-icon-button
      size="m"
      class="rds-header-search-search-icon"
      (click)="emitValue()"
    >
      <rds-icon namespace="outlined" icon="search" />
    </button>
    <input
      #input
      [ngModel]="searchValue"
      (ngModelChange)="onInputChange($event)"
      (keydown)="onKeyPress($event)"
      class="rds-header-search-input"
      [placeholder]="getPlaceholder()"
    />
    <button
      rds-icon-button
      (click)="onCloseSearch()"
      class="rds-header-search-close-icon"
    >
      <rds-icon namespace="outlined" icon="close" />
    </button>
  `,
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], placeholder: [{
                type: Input
            }], searchValue: [{
                type: Input
            }], searchChange: [{
                type: Output
            }], closeSearch: [{
                type: Output
            }], search: [{
                type: Output
            }], searchInput: [{
                type: ViewChild,
                args: ['input', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLXNlYXJjaGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2hlYWRlci9oZWFkZXItc2VhcmNoYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzlELE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixZQUFZLEVBQ1osV0FBVyxFQUNYLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFnQ3ZCLE1BQU0sT0FBTywyQkFBMkI7SUE5QnhDO1FBK0JtQix3QkFBbUIsR0FDbEMsMENBQTBDLENBQUM7UUFFdkIsVUFBSyxHQUFHLG1CQUFtQixDQUFDO1FBRXpDLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUMxQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDdkMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7S0E2Qi9DO0lBMUJDLGFBQWEsQ0FBQyxRQUFnQjtRQUM1QixJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQztRQUM1QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxVQUFVLENBQUMsS0FBb0I7UUFDN0IsSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLEtBQUssSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3RELElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuQixDQUFDO0lBQ0gsQ0FBQztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRUQsY0FBYztRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDdEQsQ0FBQzs4R0FyQ1UsMkJBQTJCO2tHQUEzQiwyQkFBMkIsOFhBNUI1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JUOzsyRkFJVSwyQkFBMkI7a0JBOUJ2QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JUO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBS3VCLEtBQUs7c0JBQTFCLFdBQVc7dUJBQUMsT0FBTztnQkFDWCxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0ksWUFBWTtzQkFBckIsTUFBTTtnQkFDRyxXQUFXO3NCQUFwQixNQUFNO2dCQUNHLE1BQU07c0JBQWYsTUFBTTtnQkFDK0IsV0FBVztzQkFBaEQsU0FBUzt1QkFBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU5URVIsIGhhc01vZGlmaWVyS2V5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2tleWNvZGVzJztcbmltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdyZHMtaGVhZGVyLXNlYXJjaGJhcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGJ1dHRvblxuICAgICAgcmRzLWljb24tYnV0dG9uXG4gICAgICBzaXplPVwibVwiXG4gICAgICBjbGFzcz1cInJkcy1oZWFkZXItc2VhcmNoLXNlYXJjaC1pY29uXCJcbiAgICAgIChjbGljayk9XCJlbWl0VmFsdWUoKVwiXG4gICAgPlxuICAgICAgPHJkcy1pY29uIG5hbWVzcGFjZT1cIm91dGxpbmVkXCIgaWNvbj1cInNlYXJjaFwiIC8+XG4gICAgPC9idXR0b24+XG4gICAgPGlucHV0XG4gICAgICAjaW5wdXRcbiAgICAgIFtuZ01vZGVsXT1cInNlYXJjaFZhbHVlXCJcbiAgICAgIChuZ01vZGVsQ2hhbmdlKT1cIm9uSW5wdXRDaGFuZ2UoJGV2ZW50KVwiXG4gICAgICAoa2V5ZG93bik9XCJvbktleVByZXNzKCRldmVudClcIlxuICAgICAgY2xhc3M9XCJyZHMtaGVhZGVyLXNlYXJjaC1pbnB1dFwiXG4gICAgICBbcGxhY2Vob2xkZXJdPVwiZ2V0UGxhY2Vob2xkZXIoKVwiXG4gICAgLz5cbiAgICA8YnV0dG9uXG4gICAgICByZHMtaWNvbi1idXR0b25cbiAgICAgIChjbGljayk9XCJvbkNsb3NlU2VhcmNoKClcIlxuICAgICAgY2xhc3M9XCJyZHMtaGVhZGVyLXNlYXJjaC1jbG9zZS1pY29uXCJcbiAgICA+XG4gICAgICA8cmRzLWljb24gbmFtZXNwYWNlPVwib3V0bGluZWRcIiBpY29uPVwiY2xvc2VcIiAvPlxuICAgIDwvYnV0dG9uPlxuICBgLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgUmRzSGVhZGVyU2VhcmNoYmFyQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSByZWFkb25seSBfZGVmYXVsdFBsYWNlaG9sZGVyID1cbiAgICAnU2VhcmNoIGZvciB0aGUgcHJvZHVjdHMsIHBhZ2UsIGRvY3VtZW504oCmJztcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJykgY2xhc3MgPSAncmRzLWhlYWRlci1zZWFyY2gnO1xuICBASW5wdXQoKSBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICBASW5wdXQoKSBzZWFyY2hWYWx1ZSA9ICcnO1xuICBAT3V0cHV0KCkgc2VhcmNoQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG4gIEBPdXRwdXQoKSBjbG9zZVNlYXJjaCA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIHNlYXJjaCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAVmlld0NoaWxkKCdpbnB1dCcsIHsgc3RhdGljOiB0cnVlIH0pIHNlYXJjaElucHV0OiBFbGVtZW50UmVmO1xuXG4gIG9uSW5wdXRDaGFuZ2UobmV3VmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuc2VhcmNoVmFsdWUgPSBuZXdWYWx1ZTtcbiAgICB0aGlzLnNlYXJjaENoYW5nZS5uZXh0KHRoaXMuc2VhcmNoVmFsdWUpO1xuICB9XG5cbiAgb25DbG9zZVNlYXJjaCgpOiB2b2lkIHtcbiAgICB0aGlzLmNsb3NlU2VhcmNoLmVtaXQoKTtcbiAgfVxuXG4gIG9uS2V5UHJlc3MoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gRU5URVIgJiYgIWhhc01vZGlmaWVyS2V5KGV2ZW50KSkge1xuICAgICAgdGhpcy5lbWl0VmFsdWUoKTtcbiAgICB9XG4gIH1cblxuICBlbWl0VmFsdWUoKTogdm9pZCB7XG4gICAgdGhpcy5zZWFyY2guZW1pdCh0aGlzLnNlYXJjaFZhbHVlKTtcbiAgfVxuXG4gIGZvY3VzU2VhcmNoKCk6IHZvaWQge1xuICAgIHRoaXMuc2VhcmNoSW5wdXQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICB9XG5cbiAgZ2V0UGxhY2Vob2xkZXIoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5wbGFjZWhvbGRlciB8fCB0aGlzLl9kZWZhdWx0UGxhY2Vob2xkZXI7XG4gIH1cbn1cbiJdfQ==