import { ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, HostBinding, inject, Input, ViewEncapsulation, } from '@angular/core';
import { filter, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i0 from "@angular/core";
export class RdsAnchorMenuItemComponent {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.destroyRef = inject(DestroyRef);
        this.classes = 'rds-anchor-menu-item';
        this.isActive = false;
        this.killItemSubscription$ = new Subject();
    }
    ngOnInit() {
        this.subscribeItem();
    }
    ngOnChanges(changes) {
        if (changes['item'] && !changes['item'].isFirstChange()) {
            this.killItemSubscription$.next();
            this.subscribeItem();
        }
    }
    ngOnDestroy() {
        this.killItemSubscription$.complete();
    }
    subscribeItem() {
        this.item?.isActive$
            .pipe(filter((v) => v !== this.isActive), takeUntil(this.killItemSubscription$), takeUntilDestroyed(this.destroyRef))
            .subscribe((v) => {
            this.isActive = v;
            this.cdr.markForCheck();
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAnchorMenuItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.1", type: RdsAnchorMenuItemComponent, selector: "a[rdsAnchorMenuItem], a[rds-anchor-menu-item]", inputs: { item: ["rdsAnchorMenuItem", "item"] }, host: { properties: { "class": "this.classes", "class.rds-anchor-menu-item-active": "this.isActive" } }, usesOnChanges: true, ngImport: i0, template: "<ng-content />\n", styles: [".rds-anchor-menu-item{--rds-anchor-menu-item-shadow-color: var(--rds-color-grey-1);font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:8px 16px;box-shadow:inset 1px 0 0 0 var(--rds-anchor-menu-item-shadow-color);text-decoration:none;color:var(--rds-color-low-contrast)}.rds-anchor-menu-item:hover{--rds-anchor-menu-item-shadow-color: var(--rds-color-informative);color:var(--rds-color-high-contrast)}.rds-anchor-menu-item:focus-visible{border-radius:2px;outline:2px solid var(--rds-color-stroke-active-focus);outline-offset:-2px}.rds-anchor-menu-item-active,.rds-anchor-menu-item-active:hover{--rds-anchor-menu-item-shadow-color: var(--rds-color-informative);color:var(--rds-color-informative)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAnchorMenuItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'a[rdsAnchorMenuItem], a[rds-anchor-menu-item]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<ng-content />\n", styles: [".rds-anchor-menu-item{--rds-anchor-menu-item-shadow-color: var(--rds-color-grey-1);font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.3px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:8px 16px;box-shadow:inset 1px 0 0 0 var(--rds-anchor-menu-item-shadow-color);text-decoration:none;color:var(--rds-color-low-contrast)}.rds-anchor-menu-item:hover{--rds-anchor-menu-item-shadow-color: var(--rds-color-informative);color:var(--rds-color-high-contrast)}.rds-anchor-menu-item:focus-visible{border-radius:2px;outline:2px solid var(--rds-color-stroke-active-focus);outline-offset:-2px}.rds-anchor-menu-item-active,.rds-anchor-menu-item-active:hover{--rds-anchor-menu-item-shadow-color: var(--rds-color-informative);color:var(--rds-color-informative)}\n"] }]
        }], propDecorators: { item: [{
                type: Input,
                args: ['rdsAnchorMenuItem']
            }], classes: [{
                type: HostBinding,
                args: ['class']
            }], isActive: [{
                type: HostBinding,
                args: ['class.rds-anchor-menu-item-active']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5jaG9yLW1lbnUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2FuY2hvci1tZW51L2FuY2hvci1tZW51LWl0ZW0vYW5jaG9yLW1lbnUtaXRlbS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2FuY2hvci1tZW51L2FuY2hvci1tZW51LWl0ZW0vYW5jaG9yLW1lbnUtaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUtMLGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBU2hFLE1BQU0sT0FBTywwQkFBMEI7SUFQdkM7UUFVbUIsUUFBRyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2hDLGVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFNOUIsWUFBTyxHQUFHLHNCQUFzQixDQUFDO1FBRzFDLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFViwwQkFBcUIsR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO0tBNkI5RDtJQTNCQyxRQUFRO1FBQ04sSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQztZQUN4RCxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDbEMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRU8sYUFBYTtRQUNuQixJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVM7YUFDakIsSUFBSSxDQUNILE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsRUFDbEMsU0FBUyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxFQUNyQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQ3BDO2FBQ0EsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDZixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQzs4R0EzQ1UsMEJBQTBCO2tHQUExQiwwQkFBMEIsb1FDMUJ2QyxrQkFDQTs7MkZEeUJhLDBCQUEwQjtrQkFQdEMsU0FBUzsrQkFDRSwrQ0FBK0MsbUJBR3hDLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUk7OEJBU3JDLElBQUk7c0JBREgsS0FBSzt1QkFBQyxtQkFBbUI7Z0JBSVAsT0FBTztzQkFEekIsV0FBVzt1QkFBQyxPQUFPO2dCQUlWLFFBQVE7c0JBRGpCLFdBQVc7dUJBQUMsbUNBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIERlc3Ryb3lSZWYsXG4gIEhvc3RCaW5kaW5nLFxuICBpbmplY3QsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE9uRGVzdHJveSxcbiAgT25Jbml0LFxuICBTaW1wbGVDaGFuZ2VzLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZHNBbmNob3JNZW51U2VjdGlvbkRhdGEgfSBmcm9tICcuLi9hbmNob3ItbWVudS50eXBlcyc7XG5pbXBvcnQgeyBmaWx0ZXIsIHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHRha2VVbnRpbERlc3Ryb3llZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvcnhqcy1pbnRlcm9wJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYVtyZHNBbmNob3JNZW51SXRlbV0sIGFbcmRzLWFuY2hvci1tZW51LWl0ZW1dJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FuY2hvci1tZW51LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hbmNob3ItbWVudS1pdGVtLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBSZHNBbmNob3JNZW51SXRlbUNvbXBvbmVudFxuICBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3lcbntcbiAgcHJpdmF0ZSByZWFkb25seSBjZHIgPSBpbmplY3QoQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICBwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3lSZWYgPSBpbmplY3QoRGVzdHJveVJlZik7XG5cbiAgQElucHV0KCdyZHNBbmNob3JNZW51SXRlbScpXG4gIGl0ZW06IFJkc0FuY2hvck1lbnVTZWN0aW9uRGF0YTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGNsYXNzZXMgPSAncmRzLWFuY2hvci1tZW51LWl0ZW0nO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MucmRzLWFuY2hvci1tZW51LWl0ZW0tYWN0aXZlJylcbiAgcHJvdGVjdGVkIGlzQWN0aXZlID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBraWxsSXRlbVN1YnNjcmlwdGlvbiQgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc3Vic2NyaWJlSXRlbSgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzWydpdGVtJ10gJiYgIWNoYW5nZXNbJ2l0ZW0nXS5pc0ZpcnN0Q2hhbmdlKCkpIHtcbiAgICAgIHRoaXMua2lsbEl0ZW1TdWJzY3JpcHRpb24kLm5leHQoKTtcbiAgICAgIHRoaXMuc3Vic2NyaWJlSXRlbSgpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMua2lsbEl0ZW1TdWJzY3JpcHRpb24kLmNvbXBsZXRlKCk7XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZUl0ZW0oKTogdm9pZCB7XG4gICAgdGhpcy5pdGVtPy5pc0FjdGl2ZSRcbiAgICAgIC5waXBlKFxuICAgICAgICBmaWx0ZXIoKHYpID0+IHYgIT09IHRoaXMuaXNBY3RpdmUpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5raWxsSXRlbVN1YnNjcmlwdGlvbiQpLFxuICAgICAgICB0YWtlVW50aWxEZXN0cm95ZWQodGhpcy5kZXN0cm95UmVmKSxcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoKHYpID0+IHtcbiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IHY7XG4gICAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgICAgfSk7XG4gIH1cbn1cbiIsIjxuZy1jb250ZW50IC8+XG4iXX0=