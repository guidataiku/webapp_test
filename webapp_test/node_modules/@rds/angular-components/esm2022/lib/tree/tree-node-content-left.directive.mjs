import { Directive, HostBinding, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
export class RdsTreeNodeContentLeftDirective {
    constructor() {
        this.contentLeftClass = true;
    }
    onClick(event) {
        event.stopPropagation();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTreeNodeContentLeftDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.1", type: RdsTreeNodeContentLeftDirective, selector: "[rdsTreeNodeContentLeft], [rds-tree-node-content-left]", host: { listeners: { "keydown.space": "onClick($event)", "click": "onClick($event)" }, properties: { "class.rds-tree-node--content-left": "this.contentLeftClass" } }, exportAs: ["rdsTreeNodeContentLeft"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTreeNodeContentLeftDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[rdsTreeNodeContentLeft], [rds-tree-node-content-left]',
                    exportAs: 'rdsTreeNodeContentLeft',
                }]
        }], propDecorators: { contentLeftClass: [{
                type: HostBinding,
                args: ['class.rds-tree-node--content-left']
            }], onClick: [{
                type: HostListener,
                args: ['keydown.space', ['$event']]
            }, {
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLWNvbnRlbnQtbGVmdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL3RyZWUvdHJlZS1ub2RlLWNvbnRlbnQtbGVmdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQU1yRSxNQUFNLE9BQU8sK0JBQStCO0lBSjVDO1FBS29ELHFCQUFnQixHQUFHLElBQUksQ0FBQztLQU8zRTtJQUhDLE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMxQixDQUFDOzhHQVBVLCtCQUErQjtrR0FBL0IsK0JBQStCOzsyRkFBL0IsK0JBQStCO2tCQUozQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx3REFBd0Q7b0JBQ2xFLFFBQVEsRUFBRSx3QkFBd0I7aUJBQ25DOzhCQUVtRCxnQkFBZ0I7c0JBQWpFLFdBQVc7dUJBQUMsbUNBQW1DO2dCQUloRCxPQUFPO3NCQUZOLFlBQVk7dUJBQUMsZUFBZSxFQUFFLENBQUMsUUFBUSxDQUFDOztzQkFDeEMsWUFBWTt1QkFBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Jkc1RyZWVOb2RlQ29udGVudExlZnRdLCBbcmRzLXRyZWUtbm9kZS1jb250ZW50LWxlZnRdJyxcbiAgZXhwb3J0QXM6ICdyZHNUcmVlTm9kZUNvbnRlbnRMZWZ0Jyxcbn0pXG5leHBvcnQgY2xhc3MgUmRzVHJlZU5vZGVDb250ZW50TGVmdERpcmVjdGl2ZSB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MucmRzLXRyZWUtbm9kZS0tY29udGVudC1sZWZ0JykgY29udGVudExlZnRDbGFzcyA9IHRydWU7XG5cbiAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bi5zcGFjZScsIFsnJGV2ZW50J10pXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgb25DbGljayhldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxufVxuIl19