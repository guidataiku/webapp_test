import { Directive, HostBinding, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
export class RdsTreeNodeContentRightDirective {
    constructor() {
        this.contentRightClass = true;
    }
    onClick(event) {
        event.stopPropagation();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTreeNodeContentRightDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.3.1", type: RdsTreeNodeContentRightDirective, selector: "[rdsTreeNodeContentRight], [rds-tree-node-content-right]", host: { listeners: { "keydown.space": "onClick($event)", "click": "onClick($event)" }, properties: { "class.rds-tree-node--content-right": "this.contentRightClass" } }, exportAs: ["rdsTreeNodeContentRight"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTreeNodeContentRightDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[rdsTreeNodeContentRight], [rds-tree-node-content-right]',
                    exportAs: 'rdsTreeNodeContentRight',
                }]
        }], propDecorators: { contentRightClass: [{
                type: HostBinding,
                args: ['class.rds-tree-node--content-right']
            }], onClick: [{
                type: HostListener,
                args: ['keydown.space', ['$event']]
            }, {
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLWNvbnRlbnQtcmlnaHQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hbmd1bGFyLWNvbXBvbmVudHMvc3JjL2xpYi90cmVlL3RyZWUtbm9kZS1jb250ZW50LXJpZ2h0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTXJFLE1BQU0sT0FBTyxnQ0FBZ0M7SUFKN0M7UUFLcUQsc0JBQWlCLEdBQUcsSUFBSSxDQUFDO0tBTzdFO0lBSEMsT0FBTyxDQUFDLEtBQVk7UUFDbEIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzFCLENBQUM7OEdBUFUsZ0NBQWdDO2tHQUFoQyxnQ0FBZ0M7OzJGQUFoQyxnQ0FBZ0M7a0JBSjVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBEQUEwRDtvQkFDcEUsUUFBUSxFQUFFLHlCQUF5QjtpQkFDcEM7OEJBRW9ELGlCQUFpQjtzQkFBbkUsV0FBVzt1QkFBQyxvQ0FBb0M7Z0JBSWpELE9BQU87c0JBRk4sWUFBWTt1QkFBQyxlQUFlLEVBQUUsQ0FBQyxRQUFRLENBQUM7O3NCQUN4QyxZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbcmRzVHJlZU5vZGVDb250ZW50UmlnaHRdLCBbcmRzLXRyZWUtbm9kZS1jb250ZW50LXJpZ2h0XScsXG4gIGV4cG9ydEFzOiAncmRzVHJlZU5vZGVDb250ZW50UmlnaHQnLFxufSlcbmV4cG9ydCBjbGFzcyBSZHNUcmVlTm9kZUNvbnRlbnRSaWdodERpcmVjdGl2ZSB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MucmRzLXRyZWUtbm9kZS0tY29udGVudC1yaWdodCcpIGNvbnRlbnRSaWdodENsYXNzID0gdHJ1ZTtcblxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duLnNwYWNlJywgWyckZXZlbnQnXSlcbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICBvbkNsaWNrKGV2ZW50OiBFdmVudCk6IHZvaWQge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG59XG4iXX0=