import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, inject, ViewChild, ViewEncapsulation, } from '@angular/core';
import { BasePortalOutlet, CdkPortalOutlet, } from '@angular/cdk/portal';
import { ConfigurableFocusTrapFactory, } from '@angular/cdk/a11y';
import { animate, state, style, transition, trigger, } from '@angular/animations';
import { DOCUMENT } from '@angular/common';
import { RdsDialogConfig } from './model';
import { TAB_INDEX_NOT_FOCUSABLE } from '../utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/portal";
const animations = {
    dialogComponent: trigger('dialogContainer', [
        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),
        state('enter', style({ transform: 'none' })),
        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),
        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),
    ]),
};
export class RdsDialogContainerComponent extends BasePortalOutlet {
    constructor() {
        super(...arguments);
        this.elementRef = inject(ElementRef);
        this.focusTrapFactory = inject(ConfigurableFocusTrapFactory);
        this.cdr = inject(ChangeDetectorRef);
        this.document = inject(DOCUMENT);
        this.config = inject(RdsDialogConfig);
        this.ariaLabelledBy = this.config.ariaLabelledBy || null;
        this.animationState = 'enter';
        this.animationStateChanged = new EventEmitter();
        this.hostClass = 'rds-dialog';
        this.hostTabindex = TAB_INDEX_NOT_FOCUSABLE;
        this.hostAriaDialog = true;
        this.attachDomPortal = (portal) => {
            if (this.portalOutlet.hasAttached()) {
                this.throwCannotAttachError();
            }
            this.setupFocusTrap();
            return this.portalOutlet.attachDomPortal(portal);
        };
    }
    get hostId() {
        return this.id;
    }
    get hostSize() {
        return this.config.size;
    }
    get hostRole() {
        return this.config.role;
    }
    get hostAriaLabelledby() {
        return this.config.ariaLabel ? null : this.ariaLabelledBy;
    }
    get hostAriaLabel() {
        return this.config.ariaLabel || null;
    }
    get hostAriaDescribedby() {
        return this.config.ariaDescribedBy || null;
    }
    get hostDialogContainer() {
        return this.animationState;
    }
    onAnimationStart($event) {
        this.animationStateChanged.emit($event);
    }
    onAnimationDone(event) {
        if (event.toState === 'enter') {
            this.trapFocus();
        }
        else if (event.toState === 'exit') {
            this.restoreFocus();
        }
        this.animationStateChanged.emit(event);
    }
    attachComponentPortal(portal) {
        if (this.portalOutlet.hasAttached()) {
            this.throwCannotAttachError();
        }
        this.setupFocusTrap();
        return this.portalOutlet.attachComponentPortal(portal);
    }
    attachTemplatePortal(portal) {
        if (this.portalOutlet.hasAttached()) {
            this.throwCannotAttachError();
        }
        this.setupFocusTrap();
        return this.portalOutlet.attachTemplatePortal(portal);
    }
    startExitAnimation() {
        this.animationState = 'exit';
        this.cdr.markForCheck();
    }
    recaptureFocus() {
        if (!this.isFocusInsideDialog()) {
            const focusContainer = !this.focusTrap.focusInitialElement();
            if (focusContainer) {
                this.elementRef.nativeElement.focus();
            }
        }
    }
    trapFocus() {
        this.focusTrap.focusInitialElementWhenReady();
    }
    restoreFocus() {
        const elementToFocus = this.elementFocusedBeforeDialogWasOpened;
        // extra check, because IE can set the `activeElement` to null
        if (elementToFocus && typeof elementToFocus.focus === 'function') {
            const activeElement = this.document.activeElement;
            const hostNativeElement = this.elementRef.nativeElement;
            // Make sure that focus is still inside the dialog or is on the body
            if (!activeElement ||
                activeElement === this.document.body ||
                activeElement === hostNativeElement ||
                hostNativeElement.contains(activeElement)) {
                elementToFocus.focus();
            }
        }
        if (this.focusTrap) {
            this.focusTrap.destroy();
        }
    }
    setupFocusTrap() {
        if (!this.focusTrap) {
            this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);
        }
        if (this.document) {
            this.elementFocusedBeforeDialogWasOpened = this.document
                .activeElement;
        }
    }
    isFocusInsideDialog() {
        const element = this.elementRef.nativeElement;
        const activeElement = this.document.activeElement;
        return element === activeElement || element.contains(activeElement);
    }
    throwCannotAttachError() {
        throw Error('Attempting to attach dialog content after content is already attached');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsDialogContainerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.1", type: RdsDialogContainerComponent, selector: "rds-dialog", host: { listeners: { "@dialogContainer.start": "onAnimationStart($event)", "@dialogContainer.done": "onAnimationDone($event)" }, properties: { "class": "this.hostClass", "tabIndex": "this.hostTabindex", "attr.aria-dialog": "this.hostAriaDialog", "attr.id": "this.hostId", "attr.size": "this.hostSize", "attr.role": "this.hostRole", "attr.aria-labelledby": "this.hostAriaLabelledby", "attr.aria-label": "this.hostAriaLabel", "attr.aria-describedby": "this.hostAriaDescribedby", "@dialogContainer": "this.hostDialogContainer" } }, viewQueries: [{ propertyName: "portalOutlet", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: ` <ng-template cdkPortalOutlet /> `, isInline: true, styles: [".rds-dialog{background-color:var(--rds-color-bg-base-elevated);border-radius:2px;position:relative;width:100%;outline:none;margin:64px;overflow:hidden}.rds-dialog .rds-dialog__header{font-size:20px;font-weight:600;line-height:28px;text-transform:none;letter-spacing:0;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:flex;justify-content:space-between;padding:24px;row-gap:16px;color:var(--rds-color-high-contrast)}.rds-dialog .rds-dialog__icon-placeholder{top:24px;right:0;position:absolute;align-items:center;justify-content:flex-end;display:inline-flex;margin-right:24px;background:transparent;color:var(--rds-color-low-contrast)}.rds-dialog .rds-dialog__icon-placeholder .rds-button{margin-right:16px}.rds-dialog .rds-dialog__icon-placeholder .rds-button:last-of-type{margin-right:0}.rds-dialog .rds-dialog__content{padding-inline:24px;padding-block:0 24px;overflow-y:auto;color:var(--rds-color-high-contrast)}@media (max-width: 767.999999px){.rds-dialog .rds-dialog__content{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 768px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1024px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1440px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1672px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}.rds-dialog .rds-dialog__actions-container{display:flex;justify-content:flex-end;gap:16px;width:100%;padding:24px}.rds-dialog.rds-dialog--scrollable .rds-dialog__content{padding-right:12px}.rds-dialog.rds-dialog--scrollable .rds-dialog__actions-container{border-top:1px solid var(--rds-color-grey-2)}@media (max-width: 767.999999px){.rds-dialog{margin:16px}}\n"], dependencies: [{ kind: "directive", type: i1.CdkPortalOutlet, selector: "[cdkPortalOutlet]", inputs: ["cdkPortalOutlet"], outputs: ["attached"], exportAs: ["cdkPortalOutlet"] }], animations: [animations.dialogComponent], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsDialogContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-dialog', template: ` <ng-template cdkPortalOutlet /> `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [animations.dialogComponent], styles: [".rds-dialog{background-color:var(--rds-color-bg-base-elevated);border-radius:2px;position:relative;width:100%;outline:none;margin:64px;overflow:hidden}.rds-dialog .rds-dialog__header{font-size:20px;font-weight:600;line-height:28px;text-transform:none;letter-spacing:0;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:flex;justify-content:space-between;padding:24px;row-gap:16px;color:var(--rds-color-high-contrast)}.rds-dialog .rds-dialog__icon-placeholder{top:24px;right:0;position:absolute;align-items:center;justify-content:flex-end;display:inline-flex;margin-right:24px;background:transparent;color:var(--rds-color-low-contrast)}.rds-dialog .rds-dialog__icon-placeholder .rds-button{margin-right:16px}.rds-dialog .rds-dialog__icon-placeholder .rds-button:last-of-type{margin-right:0}.rds-dialog .rds-dialog__content{padding-inline:24px;padding-block:0 24px;overflow-y:auto;color:var(--rds-color-high-contrast)}@media (max-width: 767.999999px){.rds-dialog .rds-dialog__content{font-size:14px;font-weight:200;line-height:20px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 768px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1024px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1440px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1672px){.rds-dialog .rds-dialog__content{font-size:16px;font-weight:200;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}.rds-dialog .rds-dialog__actions-container{display:flex;justify-content:flex-end;gap:16px;width:100%;padding:24px}.rds-dialog.rds-dialog--scrollable .rds-dialog__content{padding-right:12px}.rds-dialog.rds-dialog--scrollable .rds-dialog__actions-container{border-top:1px solid var(--rds-color-grey-2)}@media (max-width: 767.999999px){.rds-dialog{margin:16px}}\n"] }]
        }], propDecorators: { portalOutlet: [{
                type: ViewChild,
                args: [CdkPortalOutlet, { static: true }]
            }], hostClass: [{
                type: HostBinding,
                args: ['class']
            }], hostTabindex: [{
                type: HostBinding,
                args: ['tabIndex']
            }], hostAriaDialog: [{
                type: HostBinding,
                args: ['attr.aria-dialog']
            }], hostId: [{
                type: HostBinding,
                args: ['attr.id']
            }], hostSize: [{
                type: HostBinding,
                args: ['attr.size']
            }], hostRole: [{
                type: HostBinding,
                args: ['attr.role']
            }], hostAriaLabelledby: [{
                type: HostBinding,
                args: ['attr.aria-labelledby']
            }], hostAriaLabel: [{
                type: HostBinding,
                args: ['attr.aria-label']
            }], hostAriaDescribedby: [{
                type: HostBinding,
                args: ['attr.aria-describedby']
            }], hostDialogContainer: [{
                type: HostBinding,
                args: ['@dialogContainer']
            }], onAnimationStart: [{
                type: HostListener,
                args: ['@dialogContainer.start', ['$event']]
            }], onAnimationDone: [{
                type: HostListener,
                args: ['@dialogContainer.done', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,