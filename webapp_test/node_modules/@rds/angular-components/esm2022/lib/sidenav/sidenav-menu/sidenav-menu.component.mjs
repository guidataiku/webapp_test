import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, EventEmitter, HostBinding, inject, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation, } from '@angular/core';
import { RdsSidenavMenuitemComponent } from '../sidenav-menuitem/sidenav-menuitem.component';
import { FocusKeyManager } from '@angular/cdk/a11y';
import { RDS_SIDENAV_MENU_PANEL, } from '../sidenav.types';
import { merge, Subject, Subscription } from 'rxjs';
import { startWith, switchMap } from 'rxjs/operators';
import { DOWN_ARROW, ESCAPE, hasModifierKey, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, } from '@angular/cdk/keycodes';
import { RdsSidenavService } from '../sidenav.service';
import { rdsSidenavExpansionAnimations } from './sidenav-menu-expansion.animation';
import { RdsSidenavMenuHeaderComponent } from '../sidenav-menu-header/sidenav-menu-header.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
let menuPanelUid = 0;
export class RdsSidenavMenuComponent {
    constructor() {
        this.sidenav = inject(RdsSidenavService);
        this.cdr = inject(ChangeDetectorRef);
        this._hovered = new Subject();
        this.hovered = this._hovered.asObservable();
        this.attrAriaLabel = null;
        this.attrAriaLabelledBy = null;
        this.attrAriaDescribedBy = null;
        this._directDescendantItems = new QueryList();
        this._tabSubscription = Subscription.EMPTY;
        this._classList = {};
        this._panelAnimationState = 'void';
        this._animationDone = new Subject();
        this.expandedState = 'collapsed';
        this._isOpened = false;
        this.overlayPanelClass = '';
        this.backdropClass = 'cdk-overlay-transparent-backdrop';
        this.ariaLabel = null;
        this.ariaLabelledby = null;
        this.ariaDescribedby = null;
        this.openOnInit = false;
        this.closed = new EventEmitter();
        this.panelId = `rds-menu-panel-${menuPanelUid++}`;
        this.isMinimal$ = this.sidenav.isMinimal$;
    }
    get isOpened() {
        return this._isOpened;
    }
    set isOpened(value) {
        if (this._isOpened !== value) {
            this._isOpened = value;
            this.cdr.markForCheck();
        }
    }
    set title(v) {
        if (v !== this._title) {
            this._title = v;
            this.cdr.markForCheck();
        }
    }
    get title() {
        return this._title;
    }
    ngOnInit() {
        this.setPositionClasses();
    }
    ngAfterContentInit() {
        this._updateDirectDescendants();
        this._keyManager = new FocusKeyManager(this._directDescendantItems)
            .withWrap()
            .withTypeAhead()
            .withHomeAndEnd();
        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));
        this._directDescendantItems.changes
            .pipe(startWith(this._directDescendantItems), switchMap((items) => merge(...items.map((item) => item._focused))))
            .subscribe((focusedItem) => this._keyManager.updateActiveItem(focusedItem));
    }
    ngOnDestroy() {
        this._directDescendantItems.destroy();
        this._tabSubscription.unsubscribe();
        this.closed.complete();
    }
    _handleKeydown(event) {
        event.stopPropagation();
        const keyCode = event.keyCode;
        const manager = this._keyManager;
        switch (keyCode) {
            case ESCAPE:
                if (!hasModifierKey(event)) {
                    event.preventDefault();
                    this.closed.emit('keydown');
                }
                break;
            case LEFT_ARROW:
                if (this.direction === 'ltr') {
                    this.closed.emit('keydown');
                }
                break;
            case RIGHT_ARROW:
                if (this.direction === 'rtl') {
                    this.closed.emit('keydown');
                }
                break;
            default:
                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {
                    manager.setFocusOrigin('keyboard');
                }
                manager.onKeydown(event);
        }
    }
    focusFirstItem(origin = 'program') {
        if (!this.sidenav.isMinimal) {
            setTimeout(() => this._focusFirstItem(origin));
            return;
        }
        this._focusFirstItem(origin);
    }
    _focusFirstItem(origin) {
        const manager = this._keyManager;
        manager.setFocusOrigin(origin).setFirstItemActive();
        if (!manager.activeItem && this._directDescendantItems.length) {
            let element = this._directDescendantItems.first.nativeElement.parentElement;
            while (element) {
                if (element.getAttribute('role') === 'menu') {
                    element.focus();
                    break;
                }
                else {
                    element = element.parentElement;
                }
            }
        }
    }
    resetActiveItem() {
        this._keyManager.setActiveItem(-1);
    }
    setPositionClasses(posX = 'after', posY = 'below') {
        const classes = this._classList;
        classes['rds-menu-before'] = posX === 'before';
        classes['rds-menu-after'] = posX === 'after';
        classes['rds-menu-above'] = posY === 'above';
        classes['rds-menu-below'] = posY === 'below';
    }
    _startAnimation() {
        this._panelAnimationState = 'enter';
        this.expandedState = 'expanded';
    }
    _resetAnimation() {
        this._panelAnimationState = 'void';
        this.expandedState = 'collapsed';
    }
    _onAnimationDone(event) {
        this._animationDone.next(event);
        this._isAnimating = false;
    }
    _updateDirectDescendants() {
        this._allItems.changes
            .pipe(startWith(this._allItems))
            .subscribe((items) => {
            const results = items.filter((item) => item._parentMenu === this);
            if (this.menuHeader) {
                results.push(this.menuHeader);
            }
            this._directDescendantItems.reset(results);
            this._directDescendantItems.notifyOnChanges();
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSidenavMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsSidenavMenuComponent, selector: "rds-sidenav-menu", inputs: { ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], ariaDescribedby: ["aria-describedby", "ariaDescribedby"], openOnInit: ["openOnInit", "openOnInit", booleanAttribute] }, outputs: { closed: "closed" }, host: { properties: { "attr.aria-label": "this.attrAriaLabel", "attr.aria-labelledby": "this.attrAriaLabelledBy", "attr.aria-describedby": "this.attrAriaDescribedBy" } }, providers: [
            { provide: RDS_SIDENAV_MENU_PANEL, useExisting: RdsSidenavMenuComponent },
        ], queries: [{ propertyName: "menuHeader", first: true, predicate: RdsSidenavMenuHeaderComponent, descendants: true }, { propertyName: "_allItems", predicate: RdsSidenavMenuitemComponent, descendants: true }], viewQueries: [{ propertyName: "templateRef", first: true, predicate: ["panel"], descendants: true }], exportAs: ["rdsSidenavMenu"], ngImport: i0, template: "<ng-template #panel>\n  <div\n    class=\"rds-sidenav-menu-panel\"\n    [id]=\"panelId\"\n    [ngClass]=\"_classList\"\n    (click)=\"closed.emit('click')\"\n    (mouseenter)=\"_hovered.next(true)\"\n    (mouseleave)=\"_hovered.next(false)\"\n    tabindex=\"-1\"\n    role=\"menu\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\n    [attr.aria-describedby]=\"ariaDescribedby || null\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n</ng-template>\n<ng-template #content>\n  <div class=\"rds-sidenav-menu-content\" (keydown)=\"_handleKeydown($event)\">\n    @if (menuHeader) {\n      <ng-content select=\".rds-sidenav-menu-header\" />\n    } @else {\n      <div class=\"rds-sidenav-menu-header\">\n        {{ title }}\n      </div>\n    }\n    <ng-content />\n  </div>\n</ng-template>\n@if ((isMinimal$ | async) === false) {\n  <div\n    class=\"rds-sidenav-expansion-body\"\n    [class.rds-sidenav-expansion-body-collapsed]=\"expandedState === 'collapsed'\"\n    role=\"menu\"\n    tabindex=\"-1\"\n    [@bodyExpansion]=\"expandedState\"\n    (@bodyExpansion.done)=\"_onAnimationDone($event)\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n}\n", styles: ["rds-sidenav-menu{display:none}.rds-sidenav-full rds-sidenav-menu{display:block}.rds-sidenav-menu-panel{box-shadow:0 0 1px #0000003d,0 8px 20px #00000026;overflow:scroll;border-radius:1px;width:20rem;max-height:calc(100vh - 40px);min-height:88px;padding:24px 16px;background:var(--rds-color-bg-base-1);outline:0}.rds-sidenav-menu-panel.ng-animating{pointer-events:none}.rds-sidenav-menu-header{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;align-items:center;gap:8px;display:flex;margin:0 0 8px;min-height:40px;padding:8px 16px;color:var(--rds-color-high-contrast);text-decoration:none;border-radius:6px}a.rds-sidenav-menu-header:hover{background-color:var(--rds-color-bg-solid-hover-select)}a.rds-sidenav-menu-header:focus-visible{outline:1px solid var(--rds-color-stroke-active-focus)}a.rds-sidenav-menu-header:hover rds-icon,a.rds-sidenav-menu-header:active rds-icon,a.rds-sidenav-menu-header:focus-visible rds-icon{color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menu-header{display:none}.rds-sidenav-expansion-body{overflow:hidden}.rds-sidenav-expansion-body.rds-sidenav-expansion-body-collapsed{transition:visibility 0ms .35s;visibility:hidden}.rds-sidenav-expansion-body .rds-sidenav-menuitem{position:relative;margin-left:8px;width:calc(100% - 9px);padding-left:24px}.rds-sidenav-expansion-body .rds-sidenav-menuitem:before{content:\"\";position:absolute;left:0;top:0;height:100%;width:1px;background-color:var(--rds-color-grey-2)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:hover{outline:none;color:var(--rds-color-high-contrast)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:hover:before{background-color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:active,.rds-sidenav-expansion-body .rds-sidenav-menuitem.rds-sidenav-menuitem-active{outline:none;color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:active:before,.rds-sidenav-expansion-body .rds-sidenav-menuitem.rds-sidenav-menuitem-active:before{background-color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:focus-visible{outline:none;box-shadow:inset 0 0 0 2px var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:focus-visible:before{background-color:transparent}.rds-sidenav-expansion-body .rds-sidenav-menuitem+.rds-sidenav-menuitem{margin-top:0}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], animations: [rdsSidenavExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSidenavMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-sidenav-menu', exportAs: 'rdsSidenavMenu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [
                        { provide: RDS_SIDENAV_MENU_PANEL, useExisting: RdsSidenavMenuComponent },
                    ], animations: [rdsSidenavExpansionAnimations.bodyExpansion], template: "<ng-template #panel>\n  <div\n    class=\"rds-sidenav-menu-panel\"\n    [id]=\"panelId\"\n    [ngClass]=\"_classList\"\n    (click)=\"closed.emit('click')\"\n    (mouseenter)=\"_hovered.next(true)\"\n    (mouseleave)=\"_hovered.next(false)\"\n    tabindex=\"-1\"\n    role=\"menu\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\n    [attr.aria-describedby]=\"ariaDescribedby || null\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n</ng-template>\n<ng-template #content>\n  <div class=\"rds-sidenav-menu-content\" (keydown)=\"_handleKeydown($event)\">\n    @if (menuHeader) {\n      <ng-content select=\".rds-sidenav-menu-header\" />\n    } @else {\n      <div class=\"rds-sidenav-menu-header\">\n        {{ title }}\n      </div>\n    }\n    <ng-content />\n  </div>\n</ng-template>\n@if ((isMinimal$ | async) === false) {\n  <div\n    class=\"rds-sidenav-expansion-body\"\n    [class.rds-sidenav-expansion-body-collapsed]=\"expandedState === 'collapsed'\"\n    role=\"menu\"\n    tabindex=\"-1\"\n    [@bodyExpansion]=\"expandedState\"\n    (@bodyExpansion.done)=\"_onAnimationDone($event)\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n}\n", styles: ["rds-sidenav-menu{display:none}.rds-sidenav-full rds-sidenav-menu{display:block}.rds-sidenav-menu-panel{box-shadow:0 0 1px #0000003d,0 8px 20px #00000026;overflow:scroll;border-radius:1px;width:20rem;max-height:calc(100vh - 40px);min-height:88px;padding:24px 16px;background:var(--rds-color-bg-base-1);outline:0}.rds-sidenav-menu-panel.ng-animating{pointer-events:none}.rds-sidenav-menu-header{font-size:18px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;align-items:center;gap:8px;display:flex;margin:0 0 8px;min-height:40px;padding:8px 16px;color:var(--rds-color-high-contrast);text-decoration:none;border-radius:6px}a.rds-sidenav-menu-header:hover{background-color:var(--rds-color-bg-solid-hover-select)}a.rds-sidenav-menu-header:focus-visible{outline:1px solid var(--rds-color-stroke-active-focus)}a.rds-sidenav-menu-header:hover rds-icon,a.rds-sidenav-menu-header:active rds-icon,a.rds-sidenav-menu-header:focus-visible rds-icon{color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menu-header{display:none}.rds-sidenav-expansion-body{overflow:hidden}.rds-sidenav-expansion-body.rds-sidenav-expansion-body-collapsed{transition:visibility 0ms .35s;visibility:hidden}.rds-sidenav-expansion-body .rds-sidenav-menuitem{position:relative;margin-left:8px;width:calc(100% - 9px);padding-left:24px}.rds-sidenav-expansion-body .rds-sidenav-menuitem:before{content:\"\";position:absolute;left:0;top:0;height:100%;width:1px;background-color:var(--rds-color-grey-2)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:hover{outline:none;color:var(--rds-color-high-contrast)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:hover:before{background-color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:active,.rds-sidenav-expansion-body .rds-sidenav-menuitem.rds-sidenav-menuitem-active{outline:none;color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:active:before,.rds-sidenav-expansion-body .rds-sidenav-menuitem.rds-sidenav-menuitem-active:before{background-color:var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:focus-visible{outline:none;box-shadow:inset 0 0 0 2px var(--rds-color-informative)}.rds-sidenav-expansion-body .rds-sidenav-menuitem:focus-visible:before{background-color:transparent}.rds-sidenav-expansion-body .rds-sidenav-menuitem+.rds-sidenav-menuitem{margin-top:0}\n"] }]
        }], propDecorators: { menuHeader: [{
                type: ContentChild,
                args: [RdsSidenavMenuHeaderComponent]
            }], _allItems: [{
                type: ContentChildren,
                args: [RdsSidenavMenuitemComponent, { descendants: true }]
            }], attrAriaLabel: [{
                type: HostBinding,
                args: ['attr.aria-label']
            }], attrAriaLabelledBy: [{
                type: HostBinding,
                args: ['attr.aria-labelledby']
            }], attrAriaDescribedBy: [{
                type: HostBinding,
                args: ['attr.aria-describedby']
            }], ariaLabel: [{
                type: Input,
                args: ['aria-label']
            }], ariaLabelledby: [{
                type: Input,
                args: ['aria-labelledby']
            }], ariaDescribedby: [{
                type: Input,
                args: ['aria-describedby']
            }], openOnInit: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], templateRef: [{
                type: ViewChild,
                args: ['panel']
            }], closed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,