import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, inject, Input, Output, } from '@angular/core';
import { RdsButtonModule } from '../button';
import { RdsIconComponent } from '../icons';
import * as i0 from "@angular/core";
import * as i1 from "../button/icon-button.component";
const TYPE_TO_ICON = Object.freeze({
    info: 'info',
    warning: 'warning_triangle',
    error: 'close_circle',
    success: 'checkmark_circle',
});
export class RdsAlertComponent {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.closeAlert = new EventEmitter();
        this.icon = 'info';
        this._type = 'info';
        this._opened = true;
        this.showIcon = true;
        this.closable = false;
    }
    set type(value) {
        this._type = value;
        this.icon = TYPE_TO_ICON[this._type];
        this.cdr.markForCheck();
    }
    get type() {
        return this._type;
    }
    set opened(value) {
        const newValue = booleanAttribute(value);
        if (this._opened !== newValue) {
            this._opened = newValue;
            if (!this._opened) {
                this.closeAlert.emit();
            }
        }
    }
    get opened() {
        return this._opened;
    }
    onClose() {
        this.opened = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAlertComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsAlertComponent, isStandalone: true, selector: "rds-alert", inputs: { type: "type", opened: "opened", showIcon: ["showIcon", "showIcon", booleanAttribute], closable: ["closable", "closable", booleanAttribute] }, outputs: { closeAlert: "closeAlert" }, ngImport: i0, template: "@if (opened) {\n  <div [className]=\"'rds-alert rds-alert-' + type\">\n    @if (showIcon) {\n      <rds-icon class=\"rds-alert-icon\" namespace=\"outlined\" [icon]=\"icon\" />\n    }\n    <div class=\"rds-alert-content\">\n      <ng-content />\n    </div>\n    @if (closable) {\n      <button\n        rds-icon-button\n        size=\"s\"\n        class=\"rds-alert-close\"\n        (click)=\"onClose()\"\n      >\n        <rds-icon namespace=\"outlined\" icon=\"close\" />\n      </button>\n    }\n  </div>\n}\n", styles: [".rds-alert{display:flex;align-items:center;border-radius:2px;padding:16px}@media (max-width: 767.999999px){.rds-alert{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 768px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1024px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1440px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1672px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}.rds-alert .rds-alert-icon{align-self:flex-start;margin-right:12px;width:24px;min-width:24px;max-width:24px;height:24px;min-height:24px;max-height:24px}.rds-alert-info{border-left:4px solid var(--rds-color-informative);background-color:var(--rds-color-alert-informative-bg)}.rds-alert-info .rds-alert-icon{color:var(--rds-color-informative)}.rds-alert-warning{border-left:4px solid var(--rds-color-warning);background-color:var(--rds-color-alert-warning-bg)}.rds-alert-warning .rds-alert-icon{color:var(--rds-color-warning)}.rds-alert-error{border-left:4px solid var(--rds-color-error);background-color:var(--rds-color-alert-error-bg)}.rds-alert-error .rds-alert-icon{color:var(--rds-color-error)}.rds-alert-success{border-left:4px solid var(--rds-color-success);background-color:var(--rds-color-alert-success-bg)}.rds-alert-success .rds-alert-icon{color:var(--rds-color-success)}.rds-alert .rds-alert-content{color:var(--rds-color-high-contrast);width:calc(100% - 12px)}.rds-alert .rds-alert-close{display:flex;justify-self:flex-end;margin-left:16px}\n"], dependencies: [{ kind: "component", type: RdsIconComponent, selector: "rds-icon", inputs: ["namespace", "icon"] }, { kind: "ngmodule", type: RdsButtonModule }, { kind: "component", type: i1.RdsIconButtonComponent, selector: "\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  ", inputs: ["size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsAlertComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-alert', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [RdsIconComponent, RdsButtonModule], template: "@if (opened) {\n  <div [className]=\"'rds-alert rds-alert-' + type\">\n    @if (showIcon) {\n      <rds-icon class=\"rds-alert-icon\" namespace=\"outlined\" [icon]=\"icon\" />\n    }\n    <div class=\"rds-alert-content\">\n      <ng-content />\n    </div>\n    @if (closable) {\n      <button\n        rds-icon-button\n        size=\"s\"\n        class=\"rds-alert-close\"\n        (click)=\"onClose()\"\n      >\n        <rds-icon namespace=\"outlined\" icon=\"close\" />\n      </button>\n    }\n  </div>\n}\n", styles: [".rds-alert{display:flex;align-items:center;border-radius:2px;padding:16px}@media (max-width: 767.999999px){.rds-alert{font-size:14px;font-weight:400;line-height:20px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 768px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1024px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1440px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}@media (min-width: 1672px){.rds-alert{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}}.rds-alert .rds-alert-icon{align-self:flex-start;margin-right:12px;width:24px;min-width:24px;max-width:24px;height:24px;min-height:24px;max-height:24px}.rds-alert-info{border-left:4px solid var(--rds-color-informative);background-color:var(--rds-color-alert-informative-bg)}.rds-alert-info .rds-alert-icon{color:var(--rds-color-informative)}.rds-alert-warning{border-left:4px solid var(--rds-color-warning);background-color:var(--rds-color-alert-warning-bg)}.rds-alert-warning .rds-alert-icon{color:var(--rds-color-warning)}.rds-alert-error{border-left:4px solid var(--rds-color-error);background-color:var(--rds-color-alert-error-bg)}.rds-alert-error .rds-alert-icon{color:var(--rds-color-error)}.rds-alert-success{border-left:4px solid var(--rds-color-success);background-color:var(--rds-color-alert-success-bg)}.rds-alert-success .rds-alert-icon{color:var(--rds-color-success)}.rds-alert .rds-alert-content{color:var(--rds-color-high-contrast);width:calc(100% - 12px)}.rds-alert .rds-alert-close{display:flex;justify-self:flex-end;margin-left:16px}\n"] }]
        }], propDecorators: { closeAlert: [{
                type: Output
            }], type: [{
                type: Input
            }], opened: [{
                type: Input
            }], showIcon: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], closable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hbmd1bGFyLWNvbXBvbmVudHMvc3JjL2xpYi9hbGVydC9hbGVydC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2FsZXJ0L2FsZXJ0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxnQkFBZ0IsRUFDaEIsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFTNUMsTUFBTSxZQUFZLEdBQ2hCLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDWixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxrQkFBa0I7SUFDM0IsS0FBSyxFQUFFLGNBQWM7SUFDckIsT0FBTyxFQUFFLGtCQUFrQjtDQUM1QixDQUFDLENBQUM7QUFVTCxNQUFNLE9BQU8saUJBQWlCO0lBUjlCO1FBU21CLFFBQUcsR0FBRyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUV2QyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUV0QyxTQUFJLEdBQWlCLE1BQU0sQ0FBQztRQWE5QixVQUFLLEdBQWlCLE1BQU0sQ0FBQztRQW1CN0IsWUFBTyxHQUFHLElBQUksQ0FBQztRQUVpQixhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGFBQVEsR0FBRyxLQUFLLENBQUM7S0FLMUQ7SUF0Q0MsSUFDSSxJQUFJLENBQUMsS0FBbUI7UUFDMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBSUQsSUFDSSxNQUFNLENBQUMsS0FBbUI7UUFDNUIsTUFBTSxRQUFRLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFekMsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFFBQVEsRUFBRSxDQUFDO1lBQzlCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDO1lBRXhCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7Z0JBQ2xCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDekIsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFPRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQzs4R0E1Q1UsaUJBQWlCO2tHQUFqQixpQkFBaUIsMEhBdUNSLGdCQUFnQixzQ0FDaEIsZ0JBQWdCLG9FQzdFdEMsaWdCQW9CQSw2dUVEZVksZ0JBQWdCLG1GQUFFLGVBQWU7OzJGQUVoQyxpQkFBaUI7a0JBUjdCLFNBQVM7K0JBQ0UsV0FBVyxtQkFHSix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksV0FDUCxDQUFDLGdCQUFnQixFQUFFLGVBQWUsQ0FBQzs4QkFLbEMsVUFBVTtzQkFBbkIsTUFBTTtnQkFLSCxJQUFJO3NCQURQLEtBQUs7Z0JBY0YsTUFBTTtzQkFEVCxLQUFLO2dCQW1Ca0MsUUFBUTtzQkFBL0MsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFDRSxRQUFRO3NCQUEvQyxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9vbGVhbklucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbmltcG9ydCB7XG4gIGJvb2xlYW5BdHRyaWJ1dGUsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIGluamVjdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZHNCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgUmRzSWNvbkNvbXBvbmVudCB9IGZyb20gJy4uL2ljb25zJztcblxuZXhwb3J0IHR5cGUgUmRzQWxlcnRUeXBlID0gJ2luZm8nIHwgJ3dhcm5pbmcnIHwgJ2Vycm9yJyB8ICdzdWNjZXNzJztcbnR5cGUgUmRzQWxlcnRJY29uID1cbiAgfCAnaW5mbydcbiAgfCAnd2FybmluZ190cmlhbmdsZSdcbiAgfCAnY2xvc2VfY2lyY2xlJ1xuICB8ICdjaGVja21hcmtfY2lyY2xlJztcblxuY29uc3QgVFlQRV9UT19JQ09OOiBSZWFkb25seTxSZWNvcmQ8UmRzQWxlcnRUeXBlLCBSZHNBbGVydEljb24+PiA9XG4gIE9iamVjdC5mcmVlemUoe1xuICAgIGluZm86ICdpbmZvJyxcbiAgICB3YXJuaW5nOiAnd2FybmluZ190cmlhbmdsZScsXG4gICAgZXJyb3I6ICdjbG9zZV9jaXJjbGUnLFxuICAgIHN1Y2Nlc3M6ICdjaGVja21hcmtfY2lyY2xlJyxcbiAgfSk7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Jkcy1hbGVydCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hbGVydC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FsZXJ0LmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbUmRzSWNvbkNvbXBvbmVudCwgUmRzQnV0dG9uTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzQWxlcnRDb21wb25lbnQge1xuICBwcml2YXRlIHJlYWRvbmx5IGNkciA9IGluamVjdChDaGFuZ2VEZXRlY3RvclJlZik7XG5cbiAgQE91dHB1dCgpIGNsb3NlQWxlcnQgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgcHJvdGVjdGVkIGljb246IFJkc0FsZXJ0SWNvbiA9ICdpbmZvJztcblxuICBASW5wdXQoKVxuICBzZXQgdHlwZSh2YWx1ZTogUmRzQWxlcnRUeXBlKSB7XG4gICAgdGhpcy5fdHlwZSA9IHZhbHVlO1xuICAgIHRoaXMuaWNvbiA9IFRZUEVfVE9fSUNPTlt0aGlzLl90eXBlXTtcbiAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIGdldCB0eXBlKCk6IFJkc0FsZXJ0VHlwZSB7XG4gICAgcmV0dXJuIHRoaXMuX3R5cGU7XG4gIH1cblxuICBwcml2YXRlIF90eXBlOiBSZHNBbGVydFR5cGUgPSAnaW5mbyc7XG5cbiAgQElucHV0KClcbiAgc2V0IG9wZW5lZCh2YWx1ZTogQm9vbGVhbklucHV0KSB7XG4gICAgY29uc3QgbmV3VmFsdWUgPSBib29sZWFuQXR0cmlidXRlKHZhbHVlKTtcblxuICAgIGlmICh0aGlzLl9vcGVuZWQgIT09IG5ld1ZhbHVlKSB7XG4gICAgICB0aGlzLl9vcGVuZWQgPSBuZXdWYWx1ZTtcblxuICAgICAgaWYgKCF0aGlzLl9vcGVuZWQpIHtcbiAgICAgICAgdGhpcy5jbG9zZUFsZXJ0LmVtaXQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBnZXQgb3BlbmVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9vcGVuZWQ7XG4gIH1cblxuICBwcml2YXRlIF9vcGVuZWQgPSB0cnVlO1xuXG4gIEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KSBzaG93SWNvbiA9IHRydWU7XG4gIEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KSBjbG9zYWJsZSA9IGZhbHNlO1xuXG4gIG9uQ2xvc2UoKTogdm9pZCB7XG4gICAgdGhpcy5vcGVuZWQgPSBmYWxzZTtcbiAgfVxufVxuIiwiQGlmIChvcGVuZWQpIHtcbiAgPGRpdiBbY2xhc3NOYW1lXT1cIidyZHMtYWxlcnQgcmRzLWFsZXJ0LScgKyB0eXBlXCI+XG4gICAgQGlmIChzaG93SWNvbikge1xuICAgICAgPHJkcy1pY29uIGNsYXNzPVwicmRzLWFsZXJ0LWljb25cIiBuYW1lc3BhY2U9XCJvdXRsaW5lZFwiIFtpY29uXT1cImljb25cIiAvPlxuICAgIH1cbiAgICA8ZGl2IGNsYXNzPVwicmRzLWFsZXJ0LWNvbnRlbnRcIj5cbiAgICAgIDxuZy1jb250ZW50IC8+XG4gICAgPC9kaXY+XG4gICAgQGlmIChjbG9zYWJsZSkge1xuICAgICAgPGJ1dHRvblxuICAgICAgICByZHMtaWNvbi1idXR0b25cbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICBjbGFzcz1cInJkcy1hbGVydC1jbG9zZVwiXG4gICAgICAgIChjbGljayk9XCJvbkNsb3NlKClcIlxuICAgICAgPlxuICAgICAgICA8cmRzLWljb24gbmFtZXNwYWNlPVwib3V0bGluZWRcIiBpY29uPVwiY2xvc2VcIiAvPlxuICAgICAgPC9idXR0b24+XG4gICAgfVxuICA8L2Rpdj5cbn1cbiJdfQ==