import { A11yModule } from '@angular/cdk/a11y';
import { OverlayModule } from '@angular/cdk/overlay';
import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { CdkScrollableModule } from '@angular/cdk/scrolling';
import { RdsCalendarComponent, RdsCalendarHeaderComponent, } from './calendar.component';
import { RdsCalendarBodyComponent } from './calendar-body.component';
import { RdsDatepickerComponent } from './datepicker.component';
import { RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, RdsDatepickerContentComponent, } from './datepicker-base';
import { RdsDatepickerInputDirective } from './datepicker-input';
import { RdsDatepickerIntl } from './datepicker.intl';
import { RdsDatepickerToggleComponent, RdsDatepickerToggleIconDirective, } from './datepicker-toggle.component';
import { RdsMonthViewComponent } from './month-view.component';
import { RdsMultiYearViewComponent } from './multi-year-view.component';
import { RdsYearViewComponent } from './year-view.component';
import { RdsDateRangeInputComponent } from './date-range-input.component';
import { RdsEndDateDirective, RdsStartDateDirective, } from './date-range-input.parts';
import { RdsDateRangePickerComponent } from './date-range-picker.component';
import { RdsDatepickerActionsComponent, RdsDatepickerApplyDirective, RdsDatepickerCancelDirective, } from './datepicker-actions.component';
import { RdsButtonModule } from '../button';
import { RdsDialogModule } from '../dialog';
import { RdsIconComponent } from '../icons';
import { RdsToggleButtonModule } from '../toggle-button';
import * as i0 from "@angular/core";
const ELEMENTS = [
    RdsCalendarComponent,
    RdsCalendarHeaderComponent,
    RdsCalendarBodyComponent,
    RdsDatepickerComponent,
    RdsDatepickerContentComponent,
    RdsDatepickerInputDirective,
    RdsDatepickerToggleComponent,
    RdsDatepickerToggleIconDirective,
    RdsMonthViewComponent,
    RdsYearViewComponent,
    RdsMultiYearViewComponent,
    RdsDateRangeInputComponent,
    RdsStartDateDirective,
    RdsEndDateDirective,
    RdsDateRangePickerComponent,
    RdsDatepickerActionsComponent,
    RdsDatepickerCancelDirective,
    RdsDatepickerApplyDirective,
];
export class RdsDatepickerModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.1", ngImport: i0, type: RdsDatepickerModule, declarations: [RdsCalendarComponent,
            RdsCalendarHeaderComponent,
            RdsCalendarBodyComponent,
            RdsDatepickerComponent,
            RdsDatepickerContentComponent,
            RdsDatepickerInputDirective,
            RdsDatepickerToggleComponent,
            RdsDatepickerToggleIconDirective,
            RdsMonthViewComponent,
            RdsYearViewComponent,
            RdsMultiYearViewComponent,
            RdsDateRangeInputComponent,
            RdsStartDateDirective,
            RdsEndDateDirective,
            RdsDateRangePickerComponent,
            RdsDatepickerActionsComponent,
            RdsDatepickerCancelDirective,
            RdsDatepickerApplyDirective], imports: [CommonModule,
            RdsButtonModule,
            RdsDialogModule,
            OverlayModule,
            A11yModule,
            PortalModule,
            RdsIconComponent,
            RdsToggleButtonModule], exports: [CdkScrollableModule, OverlayModule, RdsCalendarComponent,
            RdsCalendarHeaderComponent,
            RdsCalendarBodyComponent,
            RdsDatepickerComponent,
            RdsDatepickerContentComponent,
            RdsDatepickerInputDirective,
            RdsDatepickerToggleComponent,
            RdsDatepickerToggleIconDirective,
            RdsMonthViewComponent,
            RdsYearViewComponent,
            RdsMultiYearViewComponent,
            RdsDateRangeInputComponent,
            RdsStartDateDirective,
            RdsEndDateDirective,
            RdsDateRangePickerComponent,
            RdsDatepickerActionsComponent,
            RdsDatepickerCancelDirective,
            RdsDatepickerApplyDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsDatepickerModule, providers: [
            RdsDatepickerIntl,
            RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,
        ], imports: [CommonModule,
            RdsButtonModule,
            RdsDialogModule,
            OverlayModule,
            A11yModule,
            PortalModule,
            RdsToggleButtonModule, CdkScrollableModule, OverlayModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsDatepickerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        RdsButtonModule,
                        RdsDialogModule,
                        OverlayModule,
                        A11yModule,
                        PortalModule,
                        RdsIconComponent,
                        RdsToggleButtonModule,
                    ],
                    exports: [CdkScrollableModule, OverlayModule, ...ELEMENTS],
                    declarations: [...ELEMENTS],
                    providers: [
                        RdsDatepickerIntl,
                        RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDN0QsT0FBTyxFQUNMLG9CQUFvQixFQUNwQiwwQkFBMEIsR0FDM0IsTUFBTSxzQkFBc0IsQ0FBQztBQUM5QixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNoRSxPQUFPLEVBQ0wsK0NBQStDLEVBQy9DLDZCQUE2QixHQUM5QixNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3RELE9BQU8sRUFDTCw0QkFBNEIsRUFDNUIsZ0NBQWdDLEdBQ2pDLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDeEUsT0FBTyxFQUFFLG9C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ZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcbmltcG9ydCB7IE92ZXJsYXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBQb3J0YWxNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RrU2Nyb2xsYWJsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zY3JvbGxpbmcnO1xuaW1wb3J0IHtcbiAgUmRzQ2FsZW5kYXJDb21wb25lbnQsXG4gIFJkc0NhbGVuZGFySGVhZGVyQ29tcG9uZW50LFxufSBmcm9tICcuL2NhbGVuZGFyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZHNDYWxlbmRhckJvZHlDb21wb25lbnQgfSBmcm9tICcuL2NhbGVuZGFyLWJvZHkuY29tcG9uZW50JztcbmltcG9ydCB7IFJkc0RhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIFJEU19EQVRFUElDS0VSX1NDUk9MTF9TVFJBVEVHWV9GQUNUT1JZX1BST1ZJREVSLFxuICBSZHNEYXRlcGlja2VyQ29udGVudENvbXBvbmVudCxcbn0gZnJvbSAnLi9kYXRlcGlja2VyLWJhc2UnO1xuaW1wb3J0IHsgUmRzRGF0ZXBpY2tlcklucHV0RGlyZWN0aXZlIH0gZnJvbSAnLi9kYXRlcGlja2VyLWlucHV0JztcbmltcG9ydCB7IFJkc0RhdGVwaWNrZXJJbnRsIH0gZnJvbSAnLi9kYXRlcGlja2VyLmludGwnO1xuaW1wb3J0IHtcbiAgUmRzRGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgUmRzRGF0ZXBpY2tlclRvZ2dsZUljb25EaXJlY3RpdmUsXG59IGZyb20gJy4vZGF0ZXBpY2tlci10b2dnbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFJkc01vbnRoVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbW9udGgtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmRzTXVsdGlZZWFyVmlld0NvbXBvbmVudCB9IGZyb20gJy4vbXVsdGkteWVhci12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZHNZZWFyVmlld0NvbXBvbmVudCB9IGZyb20gJy4veWVhci12aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZHNEYXRlUmFuZ2VJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS1yYW5nZS1pbnB1dC5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgUmRzRW5kRGF0ZURpcmVjdGl2ZSxcbiAgUmRzU3RhcnREYXRlRGlyZWN0aXZlLFxufSBmcm9tICcuL2RhdGUtcmFuZ2UtaW5wdXQucGFydHMnO1xuaW1wb3J0IHsgUmRzRGF0ZVJhbmdlUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRlLXJhbmdlLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgUmRzRGF0ZXBpY2tlckFjdGlvbnNDb21wb25lbnQsXG4gIFJkc0RhdGVwaWNrZXJBcHBseURpcmVjdGl2ZSxcbiAgUmRzRGF0ZXBpY2tlckNhbmNlbERpcmVjdGl2ZSxcbn0gZnJvbSAnLi9kYXRlcGlja2VyLWFjdGlvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IFJkc0J1dHRvbk1vZHVsZSB9IGZyb20gJy4uL2J1dHRvbic7XG5pbXBvcnQgeyBSZHNEaWFsb2dNb2R1bGUgfSBmcm9tICcuLi9kaWFsb2cnO1xuaW1wb3J0IHsgUmRzSWNvbkNvbXBvbmVudCB9IGZyb20gJy4uL2ljb25zJztcbmltcG9ydCB7IFJkc1RvZ2dsZUJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uL3RvZ2dsZS1idXR0b24nO1xuXG5jb25zdCBFTEVNRU5UUyA9IFtcbiAgUmRzQ2FsZW5kYXJDb21wb25lbnQsXG4gIFJkc0NhbGVuZGFySGVhZGVyQ29tcG9uZW50LFxuICBSZHNDYWxlbmRhckJvZHlDb21wb25lbnQsXG4gIFJkc0RhdGVwaWNrZXJDb21wb25lbnQsXG4gIFJkc0RhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxuICBSZHNEYXRlcGlja2VySW5wdXREaXJlY3RpdmUsXG4gIFJkc0RhdGVwaWNrZXJUb2dnbGVDb21wb25lbnQsXG4gIFJkc0RhdGVwaWNrZXJUb2dnbGVJY29uRGlyZWN0aXZlLFxuICBSZHNNb250aFZpZXdDb21wb25lbnQsXG4gIFJkc1llYXJWaWV3Q29tcG9uZW50LFxuICBSZHNNdWx0aVllYXJWaWV3Q29tcG9uZW50LFxuICBSZHNEYXRlUmFuZ2VJbnB1dENvbXBvbmVudCxcbiAgUmRzU3RhcnREYXRlRGlyZWN0aXZlLFxuICBSZHNFbmREYXRlRGlyZWN0aXZlLFxuICBSZHNEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnQsXG4gIFJkc0RhdGVwaWNrZXJBY3Rpb25zQ29tcG9uZW50LFxuICBSZHNEYXRlcGlja2VyQ2FuY2VsRGlyZWN0aXZlLFxuICBSZHNEYXRlcGlja2VyQXBwbHlEaXJlY3RpdmUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJkc0J1dHRvbk1vZHVsZSxcbiAgICBSZHNEaWFsb2dNb2R1bGUsXG4gICAgT3ZlcmxheU1vZHVsZSxcbiAgICBBMTF5TW9kdWxlLFxuICAgIFBvcnRhbE1vZHVsZSxcbiAgICBSZHNJY29uQ29tcG9uZW50LFxuICAgIFJkc1RvZ2dsZUJ1dHRvbk1vZHVsZSxcbiAgXSxcbiAgZXhwb3J0czogW0Nka1Njcm9sbGFibGVNb2R1bGUsIE92ZXJsYXlNb2R1bGUsIC4uLkVMRU1FTlRTXSxcbiAgZGVjbGFyYXRpb25zOiBbLi4uRUxFTUVOVFNdLFxuICBwcm92aWRlcnM6IFtcbiAgICBSZHNEYXRlcGlja2VySW50bCxcbiAgICBSRFNfREFURVBJQ0tFUl9TQ1JPTExfU1RSQVRFR1lfRkFDVE9SWV9QUk9WSURFUixcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzRGF0ZXBpY2tlck1vZHVsZSB7fVxuIl19