import { FocusMonitor } from '@angular/cdk/a11y';
import { Directionality } from '@angular/cdk/bidi';
import { DOWN_ARROW, END, hasModifierKey, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, } from '@angular/cdk/keycodes';
import { Attribute, booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, ElementRef, EventEmitter, forwardRef, HostBinding, HostListener, inject, Input, NgZone, numberAttribute, Output, ViewChild, ViewEncapsulation, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';
import { normalizePassiveListenerOptions } from '@angular/cdk/platform';
import { DOCUMENT } from '@angular/common';
import { noop, timer } from 'rxjs';
import { delay, tap } from 'rxjs/operators';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const activeEventOptions = normalizePassiveListenerOptions({ passive: false });
const MIN_AUTO_TICK_SEPARATION = 30;
const DISABLED_THUMB_GAP = 7;
const MIN_VALUE_NONACTIVE_THUMB_GAP = 7;
const MIN_VALUE_ACTIVE_THUMB_GAP = 10;
export const RDS_SLIDER_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => RdsSliderComponent),
    multi: true,
};
export class RdsSliderChange {
}
const ANIMATION_TIME = 400;
export class RdsSliderComponent {
    set tabIndex(value) {
        this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);
    }
    get tabIndex() {
        return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;
    }
    set max(v) {
        this._max = numberAttribute(v, this._max);
        this._percent = this._calculatePercentage(this._value);
    }
    get max() {
        return this._max;
    }
    set min(v) {
        this._min = numberAttribute(v, this._min);
        this._percent = this._calculatePercentage(this._value);
    }
    get min() {
        return this._min;
    }
    set step(v) {
        this._step = numberAttribute(v, this._step);
        const step = this._step.toString().split('.').pop();
        if (this._step % 1 !== 0 && step) {
            this._roundToDecimal = step.length;
        }
    }
    get step() {
        return this._step;
    }
    get tickInterval() {
        return this._tickInterval;
    }
    set tickInterval(value) {
        if (value === 'auto') {
            this._tickInterval = 'auto';
        }
        else if (typeof value === 'number' || typeof value === 'string') {
            this._tickInterval = numberAttribute(value, this._tickInterval);
        }
        else {
            this._tickInterval = 0;
        }
    }
    get value() {
        if (this._value === null) {
            this.value = this.min;
        }
        return this._value;
    }
    set value(v) {
        if (v !== this._value) {
            let value = numberAttribute(v, 0);
            if (this._roundToDecimal && value !== this.min && value !== this.max) {
                value = parseFloat(value.toFixed(this._roundToDecimal));
            }
            if (value !== this._value) {
                this._value = value;
                this._percent = this._calculatePercentage(this._value);
                this.cdr.markForCheck();
            }
        }
    }
    get valueTextAttr() {
        return this.valueText === null || this.valueText === undefined
            ? String(this.displayValue)
            : this.valueText;
    }
    get ariaOrientationAttr() {
        return this.vertical ? 'vertical' : 'horizontal';
    }
    get rdsSliderHorizontal() {
        return !this.vertical;
    }
    get rdsSliderAxisInvertedClass() {
        return this._shouldInvertAxis();
    }
    get rdsSliderInvertMouseCoords() {
        return this._shouldInvertMouseCoords();
    }
    get hideLastTick() {
        return (this.disabled ||
            (this._isMinValue() &&
                this._getThumbGap() > 0 &&
                this._shouldInvertAxis()));
    }
    get noAnimation() {
        return this.animationMode === 'NoopAnimations';
    }
    get percent() {
        return this._clamp(this._percent);
    }
    get displayValue() {
        if (this.displayWith) {
            return this.displayWith(this.value);
        }
        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {
            return this.value.toFixed(this._roundToDecimal);
        }
        return this.value || 0;
    }
    focus(options) {
        this._focusHostElement(options);
    }
    blur() {
        this._blurHostElement();
    }
    _shouldInvertAxis() {
        return this.vertical ? !this.invert : this.invert;
    }
    _isMinValue() {
        return this.percent === 0;
    }
    _getThumbGap() {
        if (this.disabled) {
            return DISABLED_THUMB_GAP;
        }
        if (this._isMinValue() && !this.thumbLabel) {
            return this._isActive
                ? MIN_VALUE_ACTIVE_THUMB_GAP
                : MIN_VALUE_NONACTIVE_THUMB_GAP;
        }
        return 0;
    }
    _getTrackFillStyles() {
        const percent = this.percent;
        const style = {};
        if (this.vertical) {
            style.height = `${(this._getSliderDimensions()?.height || 0) * percent}px`;
            if (this._shouldInvertMouseCoords()) {
                style.bottom = '0';
            }
            else {
                style.top = '0';
            }
        }
        else {
            style.width = `${(this._getSliderDimensions()?.width || 0) * percent}px`;
            if (this._shouldInvertMouseCoords()) {
                style.right = '0';
            }
            else {
                style.left = '0';
            }
        }
        return {
            ...style,
            display: percent === 0 ? 'none' : '',
        };
    }
    _getTicksContainerStyles() {
        const axis = this.vertical ? 'Y' : 'X';
        const sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';
        const offset = (this._tickIntervalPercent / 2) * 100;
        return {
            transform: `translate${axis}(${sign}${offset}%)`,
        };
    }
    _getTicksStyles() {
        const tickSize = this._tickIntervalPercent * 100;
        const backgroundSize = this.vertical
            ? `3px ${tickSize}%`
            : `${tickSize}% 3px`;
        const axis = this.vertical ? 'Y' : 'X';
        const sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';
        const rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';
        const styles = {
            backgroundSize: backgroundSize,
            transform: `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`,
        };
        if (this._isMinValue() && this._getThumbGap()) {
            const shouldInvertAxis = this._shouldInvertAxis();
            let side;
            if (this.vertical) {
                side = shouldInvertAxis ? 'Bottom' : 'Top';
            }
            else {
                side = shouldInvertAxis ? 'Right' : 'Left';
            }
            styles[`padding${side}`] = `${this._getThumbGap()}px`;
        }
        return styles;
    }
    _getThumbContainerStyles() {
        const shouldInvertAxis = this._shouldInvertAxis();
        const axis = this.vertical ? 'Y' : 'X';
        const invertOffset = this._getDirection() == 'rtl' && !this.vertical
            ? !shouldInvertAxis
            : shouldInvertAxis;
        const offset = (invertOffset ? this.percent : 1 - this.percent) * 100;
        return {
            transform: `translate${axis}(-${offset}%)`,
        };
    }
    _shouldInvertMouseCoords() {
        const shouldInvertAxis = this._shouldInvertAxis();
        return this._getDirection() == 'rtl' && !this.vertical
            ? !shouldInvertAxis
            : shouldInvertAxis;
    }
    _getDirection() {
        return this.dir && this.dir.value == 'rtl' ? 'rtl' : 'ltr';
    }
    constructor(tabIndex) {
        this.elementRef = inject(ElementRef);
        this.destroyRef = inject(DestroyRef);
        this.focusMonitor = inject(FocusMonitor);
        this.cdr = inject(ChangeDetectorRef);
        this.dir = inject(Directionality, { optional: true });
        this.ngZone = inject(NgZone);
        this.document = inject(DOCUMENT);
        this.animationMode = inject(ANIMATION_MODULE_TYPE, {
            optional: true,
        });
        this.class = 'rds-slider rds-focus-indicator';
        this.role = 'slider';
        this.disabled = false;
        this._tabIndex = TAB_INDEX_DEFAULT;
        this.invert = false;
        this._max = 100;
        this._min = 0;
        this._step = 1;
        this.thumbLabel = false;
        this._tickInterval = 0;
        this._value = null;
        this.vertical = false;
        this.onTouched = noop;
        this._percent = 0;
        this._isSliding = null;
        this._isActive = false;
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.change = new EventEmitter();
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.input = new EventEmitter();
        this.valueChange = new EventEmitter();
        this._tickIntervalPercent = 0;
        this._sliderDimensions = null;
        this._controlValueAccessorChangeFn = noop;
        this._pointerDown = (event) => {
            if (this.disabled ||
                this._isSliding ||
                (!isTouchEvent(event) && event.button !== 0)) {
                return;
            }
            this.ngZone.run(() => {
                this._touchId = isTouchEvent(event)
                    ? getTouchIdForSlider(event, this.elementRef.nativeElement)
                    : undefined;
                const pointerPosition = getPointerPositionOnPage(event, this._touchId);
                if (pointerPosition) {
                    const oldValue = this.value;
                    this._isSliding = 'pointer';
                    this._lastPointerEvent = event;
                    event.preventDefault();
                    this._focusHostElement();
                    this._onMouseenter();
                    this._bindGlobalEvents(event);
                    this._focusHostElement();
                    this._updateValueFromPosition(pointerPosition);
                    this._valueOnSlideStart = oldValue;
                    if (oldValue != this.value) {
                        this._emitInputEvent();
                    }
                }
            });
        };
        this._pointerMove = (event) => {
            if (this._isSliding === 'pointer') {
                const pointerPosition = getPointerPositionOnPage(event, this._touchId);
                if (pointerPosition) {
                    event.preventDefault();
                    const oldValue = this.value;
                    this._lastPointerEvent = event;
                    this._updateValueFromPosition(pointerPosition);
                    if (oldValue != this.value) {
                        this._emitInputEvent();
                    }
                }
            }
        };
        this._pointerUp = (event) => {
            if (this._isSliding === 'pointer') {
                if (!isTouchEvent(event) ||
                    typeof this._touchId !== 'number' ||
                    findMatchingTouch(event.changedTouches, this._touchId)) {
                    event.preventDefault();
                    this._removeGlobalEvents();
                    this._isSliding = null;
                    this._touchId = undefined;
                    if (this._valueOnSlideStart != this.value && !this.disabled) {
                        this._emitChangeEvent();
                    }
                    this._valueOnSlideStart = this._lastPointerEvent = null;
                }
            }
        };
        this._windowBlur = () => {
            if (this._lastPointerEvent) {
                this._pointerUp(this._lastPointerEvent);
            }
        };
        this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);
        this.ngZone.runOutsideAngular(() => {
            const element = this.elementRef.nativeElement;
            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);
            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);
        });
    }
    ngAfterViewInit() {
        this.focusMonitor
            .monitor(this.elementRef, true)
            .subscribe((origin) => {
            this._isActive = !!origin && origin !== 'keyboard';
            this.cdr.detectChanges();
        });
        if (this.dir) {
            this.dir.change
                .pipe(takeUntilDestroyed(this.destroyRef))
                .subscribe(() => this.cdr.markForCheck());
        }
        timer(1)
            .pipe(tap(() => this.cdr.markForCheck()), delay(ANIMATION_TIME - 1), takeUntilDestroyed(this.destroyRef))
            .subscribe(() => this.cdr.markForCheck());
    }
    ngOnDestroy() {
        const element = this.elementRef.nativeElement;
        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);
        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);
        this._lastPointerEvent = null;
        this._removeGlobalEvents();
        this.focusMonitor.stopMonitoring(this.elementRef);
    }
    _onMouseenter() {
        if (this.disabled) {
            return;
        }
        this._sliderDimensions = this._getSliderDimensions();
        this._updateTickIntervalPercent();
    }
    _onFocus() {
        this._sliderDimensions = this._getSliderDimensions();
        this._updateTickIntervalPercent();
    }
    _onBlur() {
        this.onTouched();
    }
    _onSelectStart($event) {
        $event.preventDefault();
    }
    _onKeydown(event) {
        if (this.disabled ||
            hasModifierKey(event) ||
            (this._isSliding && this._isSliding !== 'keyboard')) {
            return;
        }
        const oldValue = this.value;
        switch (event.keyCode) {
            case PAGE_UP:
                this._increment(10);
                break;
            case PAGE_DOWN:
                this._increment(-10);
                break;
            case END:
                this.value = this.max;
                break;
            case HOME:
                this.value = this.min;
                break;
            case LEFT_ARROW:
                this._increment(this._getDirection() == 'rtl' ? 1 : -1);
                break;
            case UP_ARROW:
                this._increment(1);
                break;
            case RIGHT_ARROW:
                this._increment(this._getDirection() == 'rtl' ? -1 : 1);
                break;
            case DOWN_ARROW:
                this._increment(-1);
                break;
            default:
                return;
        }
        if (oldValue != this.value) {
            this._emitInputEvent();
            this._emitChangeEvent();
        }
        this._isSliding = 'keyboard';
        event.preventDefault();
    }
    _onKeyup() {
        if (this._isSliding === 'keyboard') {
            this._isSliding = null;
        }
    }
    _getWindow() {
        return this.document.defaultView || window;
    }
    _bindGlobalEvents(triggerEvent) {
        const document = this.document;
        const isTouch = isTouchEvent(triggerEvent);
        const moveEventName = isTouch ? 'touchmove' : 'mousemove';
        const endEventName = isTouch ? 'touchend' : 'mouseup';
        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);
        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);
        if (isTouch) {
            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);
        }
        const window = this._getWindow();
        if (typeof window !== 'undefined' && window) {
            window.addEventListener('blur', this._windowBlur);
        }
    }
    _removeGlobalEvents() {
        const document = this.document;
        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);
        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);
        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);
        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);
        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);
        const window = this._getWindow();
        if (typeof window !== 'undefined' && window) {
            window.removeEventListener('blur', this._windowBlur);
        }
    }
    _increment(numSteps) {
        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);
    }
    _updateValueFromPosition(pos) {
        if (!this._sliderDimensions) {
            return;
        }
        const offset = this.vertical
            ? this._sliderDimensions.top
            : this._sliderDimensions.left;
        const size = this.vertical
            ? this._sliderDimensions.height
            : this._sliderDimensions.width;
        const posComponent = this.vertical ? pos.y : pos.x;
        let percent = this._clamp((posComponent - offset) / size);
        if (this._shouldInvertMouseCoords()) {
            percent = 1 - percent;
        }
        if (percent === 0) {
            this.value = this.min;
        }
        else if (percent === 1) {
            this.value = this.max;
        }
        else {
            const exactValue = this._calculateValue(percent);
            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;
            this.value = this._clamp(closestValue, this.min, this.max);
        }
    }
    _emitChangeEvent() {
        this._controlValueAccessorChangeFn(this.value);
        this.valueChange.emit(this.value);
        this.change.emit(this._createChangeEvent());
    }
    _emitInputEvent() {
        this.input.emit(this._createChangeEvent());
    }
    _updateTickIntervalPercent() {
        if (!this.tickInterval || !this._sliderDimensions) {
            return;
        }
        if (this.tickInterval == 'auto') {
            const trackSize = this.vertical
                ? this._sliderDimensions.height
                : this._sliderDimensions.width;
            const pixelsPerStep = (trackSize * this.step) / (this.max - this.min);
            const stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);
            const pixelsPerTick = stepsPerTick * this.step;
            this._tickIntervalPercent = pixelsPerTick / trackSize;
        }
        else {
            this._tickIntervalPercent =
                (this.tickInterval * this.step) / (this.max - this.min);
        }
    }
    _createChangeEvent(value = this.value) {
        const event = new RdsSliderChange();
        event.source = this;
        event.value = value;
        return event;
    }
    _calculatePercentage(value) {
        return ((value || 0) - this.min) / (this.max - this.min);
    }
    _calculateValue(percentage) {
        return this.min + percentage * (this.max - this.min);
    }
    _clamp(value, min = 0, max = 1) {
        return Math.max(min, Math.min(value, max));
    }
    _getSliderDimensions() {
        return this._sliderWrapper
            ? this._sliderWrapper.nativeElement.getBoundingClientRect()
            : null;
    }
    _focusHostElement(options) {
        this.elementRef.nativeElement.focus(options);
    }
    _blurHostElement() {
        this.elementRef.nativeElement.blur();
    }
    writeValue(value) {
        this.value = value;
    }
    registerOnChange(fn) {
        this._controlValueAccessorChangeFn = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        if (this.disabled !== isDisabled) {
            this.disabled = isDisabled;
            this.cdr.markForCheck();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSliderComponent, deps: [{ token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "16.1.0", version: "17.3.1", type: RdsSliderComponent, selector: "rds-slider", inputs: { disabled: ["disabled", "disabled", booleanAttribute], tabIndex: "tabIndex", invert: ["invert", "invert", booleanAttribute], max: "max", min: "min", step: "step", thumbLabel: ["thumbLabel", "thumbLabel", booleanAttribute], tickInterval: "tickInterval", value: "value", displayWith: "displayWith", valueText: "valueText", vertical: ["vertical", "vertical", booleanAttribute] }, outputs: { change: "change", input: "input", valueChange: "valueChange" }, host: { listeners: { "mouseenter": "_onMouseenter()", "focus": "_onFocus()", "blur": "_onBlur()", "selectstart": "_onSelectStart($event)", "keydown": "_onKeydown($event)", "keyup": "_onKeyup()" }, properties: { "class": "this.class", "attr.role": "this.role", "attr.aria-disabled": "this.disabled", "class.rds-slider-disabled": "this.disabled", "tabIndex": "this.tabIndex", "attr.aria-valuemax": "this.max", "attr.aria-valuemin": "this.min", "class.rds-slider-thumb-label-showing": "this.thumbLabel", "class.rds-slider-has-ticks": "this.tickInterval", "attr.aria-valuenow": "this.value", "attr.aria-valuetext": "this.valueTextAttr", "attr.aria-orientation": "this.ariaOrientationAttr", "class.rds-slider-horizontal": "this.rdsSliderHorizontal", "class.rds-slider-vertical": "this.vertical", "class.rds-slider-axis-inverted": "this.rdsSliderAxisInvertedClass", "class.rds-slider-invert-mouse-coords": "this.rdsSliderInvertMouseCoords", "class.rds-slider-hide-last-tick": "this.hideLastTick", "class._rds-animation-noopable": "this.noAnimation", "class.rds-slider-sliding": "this._isSliding" } }, providers: [RDS_SLIDER_VALUE_ACCESSOR], viewQueries: [{ propertyName: "_sliderWrapper", first: true, predicate: ["sliderWrapper"], descendants: true }], exportAs: ["rdsSlider"], ngImport: i0, template: "<div class=\"rds-slider-wrapper\" #sliderWrapper>\n  <div class=\"rds-slider-track-wrapper\">\n    <div class=\"rds-slider-track-background\"></div>\n    <div class=\"rds-slider-track-fill\" [ngStyle]=\"_getTrackFillStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-ticks-container\"\n    [ngStyle]=\"_getTicksContainerStyles()\"\n  >\n    <div class=\"rds-slider-ticks\" [ngStyle]=\"_getTicksStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-thumb-container\"\n    [ngStyle]=\"_getThumbContainerStyles()\"\n  >\n    <div class=\"rds-slider-focus-ring\"></div>\n    <div class=\"rds-slider-thumb\">\n      <div class=\"rds-slider-thumb-hover\"></div>\n    </div>\n    <div class=\"rds-slider-thumb-label\">\n      <span class=\"rds-slider-thumb-label-text\">{{ displayValue }}</span>\n    </div>\n  </div>\n</div>\n", styles: [".rds-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.rds-slider:not(.rds-slider-disabled):active,.rds-slider.rds-slider-sliding:not(.rds-slider-disabled){cursor:grabbing}.rds-slider-wrapper{-webkit-print-color-adjust:exact;print-color-adjust:exact;position:absolute}.rds-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.rds-slider-track-fill{position:absolute;border-radius:1.5px;transform-origin:0 0}.rds-slider-track-background{position:absolute;border-radius:1.5px;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.rds-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-focus-ring{position:absolute;width:24px;height:24px;border-radius:50%;opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider.cdk-keyboard-focused .rds-slider-focus-ring,.rds-slider.cdk-program-focused .rds-slider-focus-ring{transform:scale(1);opacity:1}.rds-slider-thumb{box-shadow:0 0 1px #00000052,0 2px 4px #0000001c;position:absolute;right:-6px;bottom:-6px;box-sizing:border-box;width:12px;height:12px;border-radius:50%}.rds-slider:not(.rds-slider-disabled):not(.rds-slider-sliding) .rds-slider-thumb{cursor:grab}.rds-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;height:20px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.rds-slider:not(.rds-slider-disabled):not(.rds-slider-sliding) .rds-slider-thumb-label{cursor:grab}.rds-slider-thumb-label-text{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-sliding .rds-slider-track-fill,.rds-slider-sliding .rds-slider-track-background,.rds-slider-sliding .rds-slider-thumb-container{transition-duration:0ms}.rds-slider-has-ticks .rds-slider-wrapper:after{content:\"\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-has-ticks.cdk-focused:not(.rds-slider-hide-last-tick) .rds-slider-wrapper:after,.rds-slider-has-ticks:hover:not(.rds-slider-hide-last-tick) .rds-slider-wrapper:after{opacity:1}.rds-slider-has-ticks.cdk-focused:not(.rds-slider-disabled) .rds-slider-ticks,.rds-slider-has-ticks:hover:not(.rds-slider-disabled) .rds-slider-ticks{opacity:1}.rds-slider-thumb-label-showing .rds-slider-focus-ring{display:none}.rds-slider-thumb-label-showing .rds-slider-thumb-label{display:flex}.rds-slider-axis-inverted .rds-slider-track-fill{transform-origin:100% 100%}.rds-slider-axis-inverted .rds-slider-track-background{transform-origin:0 0}.rds-slider:not(.rds-slider-disabled).cdk-focused .rds-slider-thumb-label{padding:0 4px;border-radius:10px}.rds-slider:not(.rds-slider-disabled).cdk-focused .rds-slider-thumb-label-text{opacity:1}.rds-slider-disabled .rds-slider-focus-ring{transform:scale(0);opacity:0}.rds-slider-disabled .rds-slider-thumb{border-width:4px}.rds-slider-disabled .rds-slider-thumb-label{display:none}.rds-slider-horizontal{height:48px;min-width:128px}.rds-slider-horizontal .rds-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.rds-slider-horizontal .rds-slider-wrapper:after{height:2px;border-left-width:2px;right:0;top:0}.rds-slider-horizontal .rds-slider-track-wrapper,.rds-slider-horizontal .rds-slider-track-fill{height:2px;width:100%}.rds-slider-horizontal .rds-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.rds-slider-horizontal .rds-slider-ticks-container,.rds-slider-horizontal .rds-slider-ticks{height:2px;width:100%}.rds-slider-horizontal .rds-slider-thumb-container{width:100%;height:0;top:50%}.rds-slider-horizontal .rds-slider-focus-ring{top:-12px;right:-12px}.rds-slider-horizontal .rds-slider-thumb-label{right:0;top:-38px;transform:translateY(28px) translate(50%) scale(.01)}.rds-slider-horizontal.cdk-focused .rds-slider-thumb-label{transform:translate(50%)}.rds-slider-vertical{width:48px;min-height:128px}.rds-slider-vertical .rds-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.rds-slider-vertical .rds-slider-wrapper:after{width:2px;border-top-width:2px;bottom:0;left:0}.rds-slider-vertical .rds-slider-track-wrapper,.rds-slider-vertical .rds-slider-track-fill{height:100%;width:2px}.rds-slider-vertical .rds-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.rds-slider-vertical .rds-slider-ticks-container{width:2px;height:100%}.rds-slider-vertical .rds-slider-focus-ring{bottom:-12px;left:-12px}.rds-slider-vertical .rds-slider-ticks{width:2px;height:100%}.rds-slider-vertical .rds-slider-thumb-container{height:100%;width:0;left:50%}.rds-slider-vertical .rds-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.rds-slider-vertical .rds-slider-thumb-label{bottom:0;left:0;transform:translateY(50%) scale(.01)}.rds-slider-vertical.cdk-focused .rds-slider-thumb-label{transform:translateY(50%) translate(calc(-100% - 18px))}[dir=rtl] .rds-slider-wrapper:after{left:0;right:auto}[dir=rtl] .rds-slider-horizontal .rds-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .rds-slider-horizontal .rds-slider-track-background,[dir=rtl] .rds-slider-horizontal.rds-slider-axis-inverted .rds-slider-track-fill{transform-origin:0 0}[dir=rtl] .rds-slider-horizontal.rds-slider-axis-inverted .rds-slider-track-background{transform-origin:100% 100%}.rds-slider._rds-animation-noopable .rds-slider-track-fill,.rds-slider._rds-animation-noopable .rds-slider-track-background,.rds-slider._rds-animation-noopable .rds-slider-ticks,.rds-slider._rds-animation-noopable .rds-slider-thumb-container,.rds-slider._rds-animation-noopable .rds-slider-focus-ring,.rds-slider._rds-animation-noopable .rds-slider-thumb,.rds-slider._rds-animation-noopable .rds-slider-thumb-label,.rds-slider._rds-animation-noopable .rds-slider-thumb-label-text,.rds-slider._rds-animation-noopable .rds-slider-has-ticks .rds-slider-wrapper:after{transition:none}.rds-slider-track-background{background-color:var(--rds-color-track)}.rds-slider .rds-slider-track-fill,.rds-slider .rds-slider-thumb{background:var(--rds-color-informative)}.rds-slider .rds-slider-thumb .rds-slider-thumb-hover{display:none;position:relative;top:-6px;left:-6px;height:24px;width:24px;border-radius:50%;background-color:var(--rds-color-bg-transparent-hover-select);border:2px solid transparent}.rds-slider .rds-slider-thumb-label{background:var(--rds-color-informative)}.rds-slider .rds-slider-thumb-label-text{font-size:14px;font-weight:400;line-height:20px;text-transform:uppercase;letter-spacing:1px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:var(--rds-color-high-contrast-reversed)}.rds-slider .rds-slider-focus-ring{background-color:var(--rds-color-bg-transparent-hover-select)}.rds-slider:hover .rds-slider-track-background,.rds-slider.cdk-focused .rds-slider-track-background{background-color:var(--rds-color-track)}.rds-slider-thumb:hover .rds-slider-thumb-hover{display:block}.rds-slider.cdk-keyboard-focused .rds-slider-thumb .rds-slider-thumb-hover{display:block;border-color:var(--rds-color-informative)}.rds-slider.cdk-mouse-focused.rds-slider-sliding .rds-slider-thumb .rds-slider-thumb-hover{display:block;background-color:var(--rds-color-bg-transparent-pressed)}.rds-slider-disabled .rds-slider-track-background{background:var(--rds-color-grey-2)}.rds-slider-disabled .rds-slider-track-fill,.rds-slider-disabled .rds-slider-thumb{background:var(--rds-color-disabled)}.rds-slider-disabled .rds-slider-thumb .rds-slider-thumb-hover{background:transparent}.rds-slider-disabled.rds-slider:hover .rds-slider-track-background,.rds-slider-disabled.rds-slider.cdk-focused .rds-slider-track-background{background-color:var(--rds-color-grey-2)}.rds-slider-has-ticks .rds-slider-wrapper:after{border-color:var(--rds-color-informative)}.rds-slider-horizontal .rds-slider-ticks{background-image:repeating-linear-gradient(to right,var(--rds-color-informative),var(--rds-color-informative) 2px,transparent 0,transparent)}.rds-slider-vertical .rds-slider-ticks{background-image:repeating-linear-gradient(to bottom,var(--rds-color-informative),var(--rds-color-informative) 2px,transparent 0,transparent)}\n"], dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsSliderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-slider', exportAs: 'rdsSlider', providers: [RDS_SLIDER_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"rds-slider-wrapper\" #sliderWrapper>\n  <div class=\"rds-slider-track-wrapper\">\n    <div class=\"rds-slider-track-background\"></div>\n    <div class=\"rds-slider-track-fill\" [ngStyle]=\"_getTrackFillStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-ticks-container\"\n    [ngStyle]=\"_getTicksContainerStyles()\"\n  >\n    <div class=\"rds-slider-ticks\" [ngStyle]=\"_getTicksStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-thumb-container\"\n    [ngStyle]=\"_getThumbContainerStyles()\"\n  >\n    <div class=\"rds-slider-focus-ring\"></div>\n    <div class=\"rds-slider-thumb\">\n      <div class=\"rds-slider-thumb-hover\"></div>\n    </div>\n    <div class=\"rds-slider-thumb-label\">\n      <span class=\"rds-slider-thumb-label-text\">{{ displayValue }}</span>\n    </div>\n  </div>\n</div>\n", styles: [".rds-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.rds-slider:not(.rds-slider-disabled):active,.rds-slider.rds-slider-sliding:not(.rds-slider-disabled){cursor:grabbing}.rds-slider-wrapper{-webkit-print-color-adjust:exact;print-color-adjust:exact;position:absolute}.rds-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.rds-slider-track-fill{position:absolute;border-radius:1.5px;transform-origin:0 0}.rds-slider-track-background{position:absolute;border-radius:1.5px;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.rds-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-focus-ring{position:absolute;width:24px;height:24px;border-radius:50%;opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider.cdk-keyboard-focused .rds-slider-focus-ring,.rds-slider.cdk-program-focused .rds-slider-focus-ring{transform:scale(1);opacity:1}.rds-slider-thumb{box-shadow:0 0 1px #00000052,0 2px 4px #0000001c;position:absolute;right:-6px;bottom:-6px;box-sizing:border-box;width:12px;height:12px;border-radius:50%}.rds-slider:not(.rds-slider-disabled):not(.rds-slider-sliding) .rds-slider-thumb{cursor:grab}.rds-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;height:20px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.rds-slider:not(.rds-slider-disabled):not(.rds-slider-sliding) .rds-slider-thumb-label{cursor:grab}.rds-slider-thumb-label-text{font-size:12px;font-weight:400;line-height:16px;text-transform:none;letter-spacing:.5px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-sliding .rds-slider-track-fill,.rds-slider-sliding .rds-slider-track-background,.rds-slider-sliding .rds-slider-thumb-container{transition-duration:0ms}.rds-slider-has-ticks .rds-slider-wrapper:after{content:\"\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.rds-slider-has-ticks.cdk-focused:not(.rds-slider-hide-last-tick) .rds-slider-wrapper:after,.rds-slider-has-ticks:hover:not(.rds-slider-hide-last-tick) .rds-slider-wrapper:after{opacity:1}.rds-slider-has-ticks.cdk-focused:not(.rds-slider-disabled) .rds-slider-ticks,.rds-slider-has-ticks:hover:not(.rds-slider-disabled) .rds-slider-ticks{opacity:1}.rds-slider-thumb-label-showing .rds-slider-focus-ring{display:none}.rds-slider-thumb-label-showing .rds-slider-thumb-label{display:flex}.rds-slider-axis-inverted .rds-slider-track-fill{transform-origin:100% 100%}.rds-slider-axis-inverted .rds-slider-track-background{transform-origin:0 0}.rds-slider:not(.rds-slider-disabled).cdk-focused .rds-slider-thumb-label{padding:0 4px;border-radius:10px}.rds-slider:not(.rds-slider-disabled).cdk-focused .rds-slider-thumb-label-text{opacity:1}.rds-slider-disabled .rds-slider-focus-ring{transform:scale(0);opacity:0}.rds-slider-disabled .rds-slider-thumb{border-width:4px}.rds-slider-disabled .rds-slider-thumb-label{display:none}.rds-slider-horizontal{height:48px;min-width:128px}.rds-slider-horizontal .rds-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.rds-slider-horizontal .rds-slider-wrapper:after{height:2px;border-left-width:2px;right:0;top:0}.rds-slider-horizontal .rds-slider-track-wrapper,.rds-slider-horizontal .rds-slider-track-fill{height:2px;width:100%}.rds-slider-horizontal .rds-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.rds-slider-horizontal .rds-slider-ticks-container,.rds-slider-horizontal .rds-slider-ticks{height:2px;width:100%}.rds-slider-horizontal .rds-slider-thumb-container{width:100%;height:0;top:50%}.rds-slider-horizontal .rds-slider-focus-ring{top:-12px;right:-12px}.rds-slider-horizontal .rds-slider-thumb-label{right:0;top:-38px;transform:translateY(28px) translate(50%) scale(.01)}.rds-slider-horizontal.cdk-focused .rds-slider-thumb-label{transform:translate(50%)}.rds-slider-vertical{width:48px;min-height:128px}.rds-slider-vertical .rds-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.rds-slider-vertical .rds-slider-wrapper:after{width:2px;border-top-width:2px;bottom:0;left:0}.rds-slider-vertical .rds-slider-track-wrapper,.rds-slider-vertical .rds-slider-track-fill{height:100%;width:2px}.rds-slider-vertical .rds-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.rds-slider-vertical .rds-slider-ticks-container{width:2px;height:100%}.rds-slider-vertical .rds-slider-focus-ring{bottom:-12px;left:-12px}.rds-slider-vertical .rds-slider-ticks{width:2px;height:100%}.rds-slider-vertical .rds-slider-thumb-container{height:100%;width:0;left:50%}.rds-slider-vertical .rds-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.rds-slider-vertical .rds-slider-thumb-label{bottom:0;left:0;transform:translateY(50%) scale(.01)}.rds-slider-vertical.cdk-focused .rds-slider-thumb-label{transform:translateY(50%) translate(calc(-100% - 18px))}[dir=rtl] .rds-slider-wrapper:after{left:0;right:auto}[dir=rtl] .rds-slider-horizontal .rds-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .rds-slider-horizontal .rds-slider-track-background,[dir=rtl] .rds-slider-horizontal.rds-slider-axis-inverted .rds-slider-track-fill{transform-origin:0 0}[dir=rtl] .rds-slider-horizontal.rds-slider-axis-inverted .rds-slider-track-background{transform-origin:100% 100%}.rds-slider._rds-animation-noopable .rds-slider-track-fill,.rds-slider._rds-animation-noopable .rds-slider-track-background,.rds-slider._rds-animation-noopable .rds-slider-ticks,.rds-slider._rds-animation-noopable .rds-slider-thumb-container,.rds-slider._rds-animation-noopable .rds-slider-focus-ring,.rds-slider._rds-animation-noopable .rds-slider-thumb,.rds-slider._rds-animation-noopable .rds-slider-thumb-label,.rds-slider._rds-animation-noopable .rds-slider-thumb-label-text,.rds-slider._rds-animation-noopable .rds-slider-has-ticks .rds-slider-wrapper:after{transition:none}.rds-slider-track-background{background-color:var(--rds-color-track)}.rds-slider .rds-slider-track-fill,.rds-slider .rds-slider-thumb{background:var(--rds-color-informative)}.rds-slider .rds-slider-thumb .rds-slider-thumb-hover{display:none;position:relative;top:-6px;left:-6px;height:24px;width:24px;border-radius:50%;background-color:var(--rds-color-bg-transparent-hover-select);border:2px solid transparent}.rds-slider .rds-slider-thumb-label{background:var(--rds-color-informative)}.rds-slider .rds-slider-thumb-label-text{font-size:14px;font-weight:400;line-height:20px;text-transform:uppercase;letter-spacing:1px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:var(--rds-color-high-contrast-reversed)}.rds-slider .rds-slider-focus-ring{background-color:var(--rds-color-bg-transparent-hover-select)}.rds-slider:hover .rds-slider-track-background,.rds-slider.cdk-focused .rds-slider-track-background{background-color:var(--rds-color-track)}.rds-slider-thumb:hover .rds-slider-thumb-hover{display:block}.rds-slider.cdk-keyboard-focused .rds-slider-thumb .rds-slider-thumb-hover{display:block;border-color:var(--rds-color-informative)}.rds-slider.cdk-mouse-focused.rds-slider-sliding .rds-slider-thumb .rds-slider-thumb-hover{display:block;background-color:var(--rds-color-bg-transparent-pressed)}.rds-slider-disabled .rds-slider-track-background{background:var(--rds-color-grey-2)}.rds-slider-disabled .rds-slider-track-fill,.rds-slider-disabled .rds-slider-thumb{background:var(--rds-color-disabled)}.rds-slider-disabled .rds-slider-thumb .rds-slider-thumb-hover{background:transparent}.rds-slider-disabled.rds-slider:hover .rds-slider-track-background,.rds-slider-disabled.rds-slider.cdk-focused .rds-slider-track-background{background-color:var(--rds-color-grey-2)}.rds-slider-has-ticks .rds-slider-wrapper:after{border-color:var(--rds-color-informative)}.rds-slider-horizontal .rds-slider-ticks{background-image:repeating-linear-gradient(to right,var(--rds-color-informative),var(--rds-color-informative) 2px,transparent 0,transparent)}.rds-slider-vertical .rds-slider-ticks{background-image:repeating-linear-gradient(to bottom,var(--rds-color-informative),var(--rds-color-informative) 2px,transparent 0,transparent)}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Attribute,
                    args: ['tabindex']
                }] }], propDecorators: { class: [{
                type: HostBinding,
                args: ['class']
            }], role: [{
                type: HostBinding,
                args: ['attr.role']
            }], disabled: [{
                type: HostBinding,
                args: ['attr.aria-disabled']
            }, {
                type: HostBinding,
                args: ['class.rds-slider-disabled']
            }, {
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tabIndex: [{
                type: HostBinding,
                args: ['tabIndex']
            }, {
                type: Input
            }], invert: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], max: [{
                type: HostBinding,
                args: ['attr.aria-valuemax']
            }, {
                type: Input
            }], min: [{
                type: HostBinding,
                args: ['attr.aria-valuemin']
            }, {
                type: Input
            }], step: [{
                type: Input
            }], thumbLabel: [{
                type: HostBinding,
                args: ['class.rds-slider-thumb-label-showing']
            }, {
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tickInterval: [{
                type: HostBinding,
                args: ['class.rds-slider-has-ticks']
            }, {
                type: Input
            }], value: [{
                type: HostBinding,
                args: ['attr.aria-valuenow']
            }, {
                type: Input
            }], valueTextAttr: [{
                type: HostBinding,
                args: ['attr.aria-valuetext']
            }], displayWith: [{
                type: Input
            }], valueText: [{
                type: Input
            }], ariaOrientationAttr: [{
                type: HostBinding,
                args: ['attr.aria-orientation']
            }], rdsSliderHorizontal: [{
                type: HostBinding,
                args: ['class.rds-slider-horizontal']
            }], vertical: [{
                type: HostBinding,
                args: ['class.rds-slider-vertical']
            }, {
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], rdsSliderAxisInvertedClass: [{
                type: HostBinding,
                args: ['class.rds-slider-axis-inverted']
            }], rdsSliderInvertMouseCoords: [{
                type: HostBinding,
                args: ['class.rds-slider-invert-mouse-coords']
            }], hideLastTick: [{
                type: HostBinding,
                args: ['class.rds-slider-hide-last-tick']
            }], noAnimation: [{
                type: HostBinding,
                args: ['class._rds-animation-noopable']
            }], _isSliding: [{
                type: HostBinding,
                args: ['class.rds-slider-sliding']
            }], change: [{
                type: Output
            }], input: [{
                type: Output
            }], valueChange: [{
                type: Output
            }], _sliderWrapper: [{
                type: ViewChild,
                args: ['sliderWrapper']
            }], _onMouseenter: [{
                type: HostListener,
                args: ['mouseenter']
            }], _onFocus: [{
                type: HostListener,
                args: ['focus']
            }], _onBlur: [{
                type: HostListener,
                args: ['blur']
            }], _onSelectStart: [{
                type: HostListener,
                args: ['selectstart', ['$event']]
            }], _onKeydown: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }], _onKeyup: [{
                type: HostListener,
                args: ['keyup']
            }] } });
function isTouchEvent(event) {
    return event.type[0] === 't';
}
function getPointerPositionOnPage(event, id) {
    let point;
    if (isTouchEvent(event)) {
        if (typeof id === 'number') {
            point =
                findMatchingTouch(event.touches, id) ||
                    findMatchingTouch(event.changedTouches, id);
        }
        else {
            point = event.touches[0] || event.changedTouches[0];
        }
    }
    else {
        point = event;
    }
    return point ? { x: point.clientX, y: point.clientY } : undefined;
}
function findMatchingTouch(touches, id) {
    for (let i = 0; i < touches.length; i++) {
        if (touches[i].identifier === id) {
            return touches[i];
        }
    }
    return undefined;
}
function getTouchIdForSlider(event, sliderHost) {
    for (let i = 0; i < event.touches.length; i++) {
        const target = event.touches[i].target;
        if (sliderHost === target || sliderHost.contains(target)) {
            return event.touches[i].identifier;
        }
    }
    return undefined;
}
//# sourceMappingURL=data:application/json;base64,