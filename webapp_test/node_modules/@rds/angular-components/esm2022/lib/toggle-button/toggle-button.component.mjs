import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, inject, Input, Output, ViewEncapsulation, } from '@angular/core';
import { FocusMonitor } from '@angular/cdk/a11y';
import { TAB_INDEX_NOT_FOCUSABLE } from '../utils';
import * as i0 from "@angular/core";
export class RdsToggleButtonComponent {
    constructor() {
        this.cdr = inject(ChangeDetectorRef);
        this.elementRef = inject(ElementRef);
        this.focusMonitor = inject(FocusMonitor);
        this._showSeparator = false;
        this.tabindex = 0;
        this.hostTabindex = TAB_INDEX_NOT_FOCUSABLE;
        this.checked = false;
        this.disabled = false;
        this.changed = new EventEmitter();
    }
    get showSeparator() {
        return this._showSeparator;
    }
    set showSeparator(value) {
        this._showSeparator = booleanAttribute(value);
        this.cdr.markForCheck();
    }
    ngAfterViewInit() {
        this.focusMonitor.monitor(this.elementRef, true);
    }
    ngOnDestroy() {
        this.focusMonitor.stopMonitoring(this.elementRef);
    }
    focus(origin = 'program', options) {
        this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);
    }
    onButtonClick() {
        this.changed.emit({
            buttonToggle: this,
            checked: !this.checked,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsToggleButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.1", type: RdsToggleButtonComponent, selector: "rds-toggle-button", inputs: { ariaLabel: ["aria-label", "ariaLabel"], ariaLabelledby: ["aria-labelledby", "ariaLabelledby"], value: "value", checked: ["checked", "checked", booleanAttribute], disabled: ["disabled", "disabled", booleanAttribute] }, outputs: { changed: "changed" }, host: { properties: { "tabIndex": "this.hostTabindex" } }, ngImport: i0, template: `
    <button
      class="rds-toggle__button"
      [class.rds-toggle__button--checked]="checked"
      type="button"
      [attr.disabled]="disabled ? 'disabled' : null"
      [attr.tabindex]="disabled ? -1 : tabindex"
      [attr.aria-pressed]="checked"
      [attr.aria-label]="ariaLabel"
      [attr.aria-labelledby]="ariaLabelledby"
      (click)="onButtonClick()"
    >
      <ng-content />
    </button>
    @if (showSeparator) {
      <div class="rds-toggle__separator"></div>
    }
  `, isInline: true, styles: [".rds-toggle{position:relative;flex-direction:row;display:inline-flex;height:36px;border-radius:2px;border-width:1px;border-style:solid;border-color:var(--rds-color-stroke-enabled);background:transparent}.rds-toggle rds-toggle-button{position:relative;display:flex;margin-top:-1px;margin-bottom:-1px;border-radius:2px}.rds-toggle rds-toggle-button:first-child{margin-left:-1px}.rds-toggle rds-toggle-button:last-child{margin-right:-1px}.rds-toggle rds-toggle-button:focus{outline:none}.rds-toggle rds-toggle-button .rds-toggle__separator{position:absolute;right:0;top:0;height:20px;margin-top:8px;border-left:1px solid var(--rds-color-grey-2)}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]){z-index:2;outline:2px solid var(--rds-color-stroke-active-focus)}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]) .rds-toggle__separator{border-left-color:transparent}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]) .rds-toggle__button{border-color:var(--rds-color-stroke-enabled)}.rds-toggle .rds-toggle__button{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;align-items:center;align-self:stretch;display:flex;outline:none;border:1px solid transparent;border-radius:2px;padding:8px 15px;background:transparent;color:var(--rds-color-high-contrast)}.rds-toggle .rds-toggle__button[disabled]{color:var(--rds-color-disabled)}.rds-toggle .rds-toggle__button[disabled]:hover{cursor:not-allowed}.rds-toggle:not(.rds-toggle--disabled) .rds-toggle__button:hover:not([disabled]){cursor:pointer;color:var(--rds-color-informative)}.rds-toggle:not(.rds-toggle--disabled) .rds-toggle__button--checked:not([disabled]){background:transparent;color:var(--rds-color-informative);border-color:var(--rds-color-informative)}.rds-toggle.rds-toggle--disabled{background:var(--rds-color-bg-disabled);border-color:var(--rds-color-disabled)}.rds-toggle.rds-toggle--disabled .rds-toggle__button{color:var(--rds-color-disabled)}.rds-toggle.rds-toggle--disabled .rds-toggle__button:hover{cursor:not-allowed}.rds-toggle.rds-toggle--disabled .rds-toggle__button--checked{background:var(--rds-color-bg-solid-pressed);border-color:var(--rds-color-stroke-selected-disabled)}.rds-toggle.rds-toggle--basic{border:none}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused{outline:none}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused .rds-toggle__button{outline:2px solid var(--rds-color-stroke-active-focus);outline-offset:2px}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused .rds-toggle__separator{border-left-color:var(--rds-color-grey-2)}.rds-toggle.rds-toggle--basic rds-toggle-button .rds-toggle__button{padding-left:0;padding-right:0;border:none}.rds-toggle.rds-toggle--basic .rds-toggle__separator{position:relative;margin-left:16px;padding-left:16px}.rds-toggle.rds-toggle--basic.rds-toggle--disabled{background:transparent}.rds-toggle.rds-toggle--basic.rds-toggle--disabled .rds-toggle__button--checked{background:transparent;color:var(--rds-color-low-contrast)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsToggleButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'rds-toggle-button', template: `
    <button
      class="rds-toggle__button"
      [class.rds-toggle__button--checked]="checked"
      type="button"
      [attr.disabled]="disabled ? 'disabled' : null"
      [attr.tabindex]="disabled ? -1 : tabindex"
      [attr.aria-pressed]="checked"
      [attr.aria-label]="ariaLabel"
      [attr.aria-labelledby]="ariaLabelledby"
      (click)="onButtonClick()"
    >
      <ng-content />
    </button>
    @if (showSeparator) {
      <div class="rds-toggle__separator"></div>
    }
  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [".rds-toggle{position:relative;flex-direction:row;display:inline-flex;height:36px;border-radius:2px;border-width:1px;border-style:solid;border-color:var(--rds-color-stroke-enabled);background:transparent}.rds-toggle rds-toggle-button{position:relative;display:flex;margin-top:-1px;margin-bottom:-1px;border-radius:2px}.rds-toggle rds-toggle-button:first-child{margin-left:-1px}.rds-toggle rds-toggle-button:last-child{margin-right:-1px}.rds-toggle rds-toggle-button:focus{outline:none}.rds-toggle rds-toggle-button .rds-toggle__separator{position:absolute;right:0;top:0;height:20px;margin-top:8px;border-left:1px solid var(--rds-color-grey-2)}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]){z-index:2;outline:2px solid var(--rds-color-stroke-active-focus)}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]) .rds-toggle__separator{border-left-color:transparent}.rds-toggle rds-toggle-button.cdk-focused.cdk-keyboard-focused:not([disabled]) .rds-toggle__button{border-color:var(--rds-color-stroke-enabled)}.rds-toggle .rds-toggle__button{font-size:16px;font-weight:400;line-height:24px;text-transform:none;letter-spacing:.2px;font-family:roche-sans;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;align-items:center;align-self:stretch;display:flex;outline:none;border:1px solid transparent;border-radius:2px;padding:8px 15px;background:transparent;color:var(--rds-color-high-contrast)}.rds-toggle .rds-toggle__button[disabled]{color:var(--rds-color-disabled)}.rds-toggle .rds-toggle__button[disabled]:hover{cursor:not-allowed}.rds-toggle:not(.rds-toggle--disabled) .rds-toggle__button:hover:not([disabled]){cursor:pointer;color:var(--rds-color-informative)}.rds-toggle:not(.rds-toggle--disabled) .rds-toggle__button--checked:not([disabled]){background:transparent;color:var(--rds-color-informative);border-color:var(--rds-color-informative)}.rds-toggle.rds-toggle--disabled{background:var(--rds-color-bg-disabled);border-color:var(--rds-color-disabled)}.rds-toggle.rds-toggle--disabled .rds-toggle__button{color:var(--rds-color-disabled)}.rds-toggle.rds-toggle--disabled .rds-toggle__button:hover{cursor:not-allowed}.rds-toggle.rds-toggle--disabled .rds-toggle__button--checked{background:var(--rds-color-bg-solid-pressed);border-color:var(--rds-color-stroke-selected-disabled)}.rds-toggle.rds-toggle--basic{border:none}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused{outline:none}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused .rds-toggle__button{outline:2px solid var(--rds-color-stroke-active-focus);outline-offset:2px}.rds-toggle.rds-toggle--basic rds-toggle-button.cdk-focused.cdk-keyboard-focused .rds-toggle__separator{border-left-color:var(--rds-color-grey-2)}.rds-toggle.rds-toggle--basic rds-toggle-button .rds-toggle__button{padding-left:0;padding-right:0;border:none}.rds-toggle.rds-toggle--basic .rds-toggle__separator{position:relative;margin-left:16px;padding-left:16px}.rds-toggle.rds-toggle--basic.rds-toggle--disabled{background:transparent}.rds-toggle.rds-toggle--basic.rds-toggle--disabled .rds-toggle__button--checked{background:transparent;color:var(--rds-color-low-contrast)}\n"] }]
        }], propDecorators: { hostTabindex: [{
                type: HostBinding,
                args: ['tabIndex']
            }], ariaLabel: [{
                type: Input,
                args: ['aria-label']
            }], ariaLabelledby: [{
                type: Input,
                args: ['aria-labelledby']
            }], value: [{
                type: Input
            }], checked: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], disabled: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], changed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FuZ3VsYXItY29tcG9uZW50cy9zcmMvbGliL3RvZ2dsZS1idXR0b24vdG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLGdCQUFnQixFQUNoQix1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUVMLE1BQU0sRUFDTixpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFtQixZQUFZLEVBQWUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxVQUFVLENBQUM7O0FBMEJuRCxNQUFNLE9BQU8sd0JBQXdCO0lBeEJyQztRQTJCbUIsUUFBRyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2hDLGVBQVUsR0FBRyxNQUFNLENBQTBCLFVBQVUsQ0FBQyxDQUFDO1FBQ3pELGlCQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRTdDLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQy9CLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFFcUIsaUJBQVksR0FBRyx1QkFBdUIsQ0FBQztRQWdCakMsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXRDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztLQW9CM0U7SUFoQ0MsSUFBSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFJLGFBQWEsQ0FBQyxLQUFjO1FBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBT0QsZUFBZTtRQUNiLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELEtBQUssQ0FBQyxTQUFzQixTQUFTLEVBQUUsT0FBc0I7UUFDM0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7WUFDaEIsWUFBWSxFQUFFLElBQUk7WUFDbEIsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU87U0FDdkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs4R0FoRFUsd0JBQXdCO2tHQUF4Qix3QkFBd0IsMExBMEJmLGdCQUFnQixzQ0FDaEIsZ0JBQWdCLHlIQWpEMUI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJUOzsyRkFLVSx3QkFBd0I7a0JBeEJwQyxTQUFTOytCQUNFLG1CQUFtQixZQUNuQjs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQlQsbUJBRWdCLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUk7OEJBWUgsWUFBWTtzQkFBN0MsV0FBVzt1QkFBQyxVQUFVO2dCQUVGLFNBQVM7c0JBQTdCLEtBQUs7dUJBQUMsWUFBWTtnQkFDTyxjQUFjO3NCQUF2QyxLQUFLO3VCQUFDLGlCQUFpQjtnQkFFZixLQUFLO3NCQUFiLEtBQUs7Z0JBV2tDLE9BQU87c0JBQTlDLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBQ0UsUUFBUTtzQkFBL0MsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFFbkIsT0FBTztzQkFBekIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIGJvb2xlYW5BdHRyaWJ1dGUsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIEhvc3RCaW5kaW5nLFxuICBpbmplY3QsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE91dHB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmRzVG9nZ2xlQ2hhbmdlZEV2ZW50IH0gZnJvbSAnLi9tb2RlbC90b2dnbGUtY2hhbmdlZC1ldmVudCc7XG5pbXBvcnQgeyBGb2N1c2FibGVPcHRpb24sIEZvY3VzTW9uaXRvciwgRm9jdXNPcmlnaW4gfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBUQUJfSU5ERVhfTk9UX0ZPQ1VTQUJMRSB9IGZyb20gJy4uL3V0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncmRzLXRvZ2dsZS1idXR0b24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwicmRzLXRvZ2dsZV9fYnV0dG9uXCJcbiAgICAgIFtjbGFzcy5yZHMtdG9nZ2xlX19idXR0b24tLWNoZWNrZWRdPVwiY2hlY2tlZFwiXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIFthdHRyLmRpc2FibGVkXT1cImRpc2FibGVkID8gJ2Rpc2FibGVkJyA6IG51bGxcIlxuICAgICAgW2F0dHIudGFiaW5kZXhdPVwiZGlzYWJsZWQgPyAtMSA6IHRhYmluZGV4XCJcbiAgICAgIFthdHRyLmFyaWEtcHJlc3NlZF09XCJjaGVja2VkXCJcbiAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCJcbiAgICAgIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJhcmlhTGFiZWxsZWRieVwiXG4gICAgICAoY2xpY2spPVwib25CdXR0b25DbGljaygpXCJcbiAgICA+XG4gICAgICA8bmctY29udGVudCAvPlxuICAgIDwvYnV0dG9uPlxuICAgIEBpZiAoc2hvd1NlcGFyYXRvcikge1xuICAgICAgPGRpdiBjbGFzcz1cInJkcy10b2dnbGVfX3NlcGFyYXRvclwiPjwvZGl2PlxuICAgIH1cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4vdG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzVG9nZ2xlQnV0dG9uQ29tcG9uZW50PFQ+XG4gIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBGb2N1c2FibGVPcHRpb25cbntcbiAgcHJpdmF0ZSByZWFkb25seSBjZHIgPSBpbmplY3QoQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICBwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnRSZWYgPSBpbmplY3Q8RWxlbWVudFJlZjxIVE1MRWxlbWVudD4+KEVsZW1lbnRSZWYpO1xuICBwcml2YXRlIHJlYWRvbmx5IGZvY3VzTW9uaXRvciA9IGluamVjdChGb2N1c01vbml0b3IpO1xuXG4gIHByaXZhdGUgX3Nob3dTZXBhcmF0b3IgPSBmYWxzZTtcbiAgdGFiaW5kZXggPSAwO1xuXG4gIEBIb3N0QmluZGluZygndGFiSW5kZXgnKSByZWFkb25seSBob3N0VGFiaW5kZXggPSBUQUJfSU5ERVhfTk9UX0ZPQ1VTQUJMRTtcblxuICBASW5wdXQoJ2FyaWEtbGFiZWwnKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCdhcmlhLWxhYmVsbGVkYnknKSBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIHZhbHVlOiBUO1xuXG4gIGdldCBzaG93U2VwYXJhdG9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9zaG93U2VwYXJhdG9yO1xuICB9XG5cbiAgc2V0IHNob3dTZXBhcmF0b3IodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zaG93U2VwYXJhdG9yID0gYm9vbGVhbkF0dHJpYnV0ZSh2YWx1ZSk7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgY2hlY2tlZCA9IGZhbHNlO1xuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBAT3V0cHV0KCkgcmVhZG9ubHkgY2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXI8UmRzVG9nZ2xlQ2hhbmdlZEV2ZW50PFQ+PigpO1xuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmZvY3VzTW9uaXRvci5tb25pdG9yKHRoaXMuZWxlbWVudFJlZiwgdHJ1ZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmZvY3VzTW9uaXRvci5zdG9wTW9uaXRvcmluZyh0aGlzLmVsZW1lbnRSZWYpO1xuICB9XG5cbiAgZm9jdXMob3JpZ2luOiBGb2N1c09yaWdpbiA9ICdwcm9ncmFtJywgb3B0aW9ucz86IEZvY3VzT3B0aW9ucyk6IHZvaWQge1xuICAgIHRoaXMuZm9jdXNNb25pdG9yLmZvY3VzVmlhKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCBvcmlnaW4sIG9wdGlvbnMpO1xuICB9XG5cbiAgb25CdXR0b25DbGljaygpOiB2b2lkIHtcbiAgICB0aGlzLmNoYW5nZWQuZW1pdCh7XG4gICAgICBidXR0b25Ub2dnbGU6IHRoaXMsXG4gICAgICBjaGVja2VkOiAhdGhpcy5jaGVja2VkLFxuICAgIH0pO1xuICB9XG59XG4iXX0=