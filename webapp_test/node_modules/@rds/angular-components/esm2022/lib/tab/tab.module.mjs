import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RdsTabsComponent } from './tabs.component';
import { RdsTabComponent } from './tab.component';
import { RdsTabLabelDirective } from './tab-label.directive';
import { PortalModule } from '@angular/cdk/portal';
import { A11yModule } from '@angular/cdk/a11y';
import { RdsTabLabelWrapperDirective } from './tab-label-wrapper.directive';
import { ObserversModule } from '@angular/cdk/observers';
import * as i0 from "@angular/core";
const componentsToExpert = [
    RdsTabsComponent,
    RdsTabComponent,
    RdsTabLabelDirective,
    RdsTabLabelWrapperDirective,
];
export class RdsTabModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTabModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.1", ngImport: i0, type: RdsTabModule, declarations: [RdsTabsComponent,
            RdsTabComponent,
            RdsTabLabelDirective,
            RdsTabLabelWrapperDirective], imports: [CommonModule, PortalModule, A11yModule, ObserversModule], exports: [RdsTabsComponent,
            RdsTabComponent,
            RdsTabLabelDirective,
            RdsTabLabelWrapperDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTabModule, imports: [CommonModule, PortalModule, A11yModule, ObserversModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.1", ngImport: i0, type: RdsTabModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...componentsToExpert],
                    exports: [...componentsToExpert],
                    imports: [CommonModule, PortalModule, A11yModule, ObserversModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYW5ndWxhci1jb21wb25lbnRzL3NyYy9saWIvdGFiL3RhYi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUV6RCxNQUFNLGtCQUFrQixHQUFHO0lBQ3pCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2Ysb0JBQW9CO0lBQ3BCLDJCQUEyQjtDQUM1QixDQUFDO0FBT0YsTUFBTSxPQUFPLFlBQVk7OEdBQVosWUFBWTsrR0FBWixZQUFZLGlCQVh2QixnQkFBZ0I7WUFDaEIsZUFBZTtZQUNmLG9CQUFvQjtZQUNwQiwyQkFBMkIsYUFNakIsWUFBWSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsZUFBZSxhQVRqRSxnQkFBZ0I7WUFDaEIsZUFBZTtZQUNmLG9CQUFvQjtZQUNwQiwyQkFBMkI7K0dBUWhCLFlBQVksWUFGYixZQUFZLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxlQUFlOzsyRkFFdEQsWUFBWTtrQkFMeEIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxHQUFHLGtCQUFrQixDQUFDO29CQUNyQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLGtCQUFrQixDQUFDO29CQUNoQyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxlQUFlLENBQUM7aUJBQ25FIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSZHNUYWJzQ29tcG9uZW50IH0gZnJvbSAnLi90YWJzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZHNUYWJDb21wb25lbnQgfSBmcm9tICcuL3RhYi5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmRzVGFiTGFiZWxEaXJlY3RpdmUgfSBmcm9tICcuL3RhYi1sYWJlbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XG5pbXBvcnQgeyBBMTF5TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgUmRzVGFiTGFiZWxXcmFwcGVyRGlyZWN0aXZlIH0gZnJvbSAnLi90YWItbGFiZWwtd3JhcHBlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgT2JzZXJ2ZXJzTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL29ic2VydmVycyc7XG5cbmNvbnN0IGNvbXBvbmVudHNUb0V4cGVydCA9IFtcbiAgUmRzVGFic0NvbXBvbmVudCxcbiAgUmRzVGFiQ29tcG9uZW50LFxuICBSZHNUYWJMYWJlbERpcmVjdGl2ZSxcbiAgUmRzVGFiTGFiZWxXcmFwcGVyRGlyZWN0aXZlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbLi4uY29tcG9uZW50c1RvRXhwZXJ0XSxcbiAgZXhwb3J0czogWy4uLmNvbXBvbmVudHNUb0V4cGVydF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFBvcnRhbE1vZHVsZSwgQTExeU1vZHVsZSwgT2JzZXJ2ZXJzTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgUmRzVGFiTW9kdWxlIHt9XG4iXX0=