{"version":3,"file":"rds-angular-components.mjs","sources":["../../../../libs/angular-components/src/lib/accordion/accordion-base.ts","../../../../libs/angular-components/src/lib/accordion/expansion.animations.ts","../../../../libs/angular-components/src/lib/accordion/expansion-panel-content.directive.ts","../../../../libs/angular-components/src/lib/accordion/expansion-panel.component.ts","../../../../libs/angular-components/src/lib/utils/constant.util.ts","../../../../libs/angular-components/src/lib/utils/focus.util.ts","../../../../libs/angular-components/src/lib/utils/breakpoint.util.ts","../../../../libs/angular-components/src/lib/utils/hover.util.ts","../../../../libs/angular-components/src/lib/utils/scroll.util.ts","../../../../libs/angular-components/src/lib/utils/resize-observer.util.ts","../../../../libs/angular-components/src/lib/core/error-state-matcher.ts","../../../../libs/angular-components/src/lib/core/version.ts","../../../../libs/angular-components/src/lib/utils/form-control.util.ts","../../../../libs/angular-components/src/lib/icons/icon-loader-errors.ts","../../../../libs/angular-components/src/lib/icons/icon-types.ts","../../../../libs/angular-components/src/lib/icons/icon-loader.ts","../../../../libs/angular-components/src/lib/icons/icon.component.ts","../../../../libs/angular-components/src/lib/accordion/expansion-panel-header.component.ts","../../../../libs/angular-components/src/lib/icons/rds-icons.module.ts","../../../../libs/angular-components/src/lib/accordion/accordion.directive.ts","../../../../libs/angular-components/src/lib/accordion/accordion.module.ts","../../../../libs/angular-components/src/lib/core/errors.ts","../../../../libs/angular-components/src/lib/button/button-base.ts","../../../../libs/angular-components/src/lib/button/button.component.ts","../../../../libs/angular-components/src/lib/button/button-error.ts","../../../../libs/angular-components/src/lib/button/icon-button.component.ts","../../../../libs/angular-components/src/lib/button/fab-button.component.ts","../../../../libs/angular-components/src/lib/button/text-button.component.ts","../../../../libs/angular-components/src/lib/button/button-module.ts","../../../../libs/angular-components/src/lib/alert/alert.component.ts","../../../../libs/angular-components/src/lib/alert/alert.component.html","../../../../libs/angular-components/src/lib/alert/alert.module.ts","../../../../libs/angular-components/src/lib/avatar/avatar-description.directive.ts","../../../../libs/angular-components/src/lib/avatar/avatar-group-max-items.ts","../../../../libs/angular-components/src/lib/avatar/avatar-icon.directive.ts","../../../../libs/angular-components/src/lib/avatar/avatar-image.directive.ts","../../../../libs/angular-components/src/lib/avatar/avatar-initials.directive.ts","../../../../libs/angular-components/src/lib/avatar/avatar-label.directive.ts","../../../../libs/angular-components/src/lib/avatar/avatar.component.ts","../../../../libs/angular-components/src/lib/avatar/avatar-group.component.ts","../../../../libs/angular-components/src/lib/avatar/avatar.module.ts","../../../../libs/angular-components/src/lib/list-item/header-list-item.directive.ts","../../../../libs/angular-components/src/lib/list-item/list-item.templates.ts","../../../../libs/angular-components/src/lib/list-item/list-item.component.ts","../../../../libs/angular-components/src/lib/checkbox/checkbox-change.event.ts","../../../../libs/angular-components/src/lib/checkbox/checkbox.component.ts","../../../../libs/angular-components/src/lib/checkbox/pseudo-checkbox.component.ts","../../../../libs/angular-components/src/lib/form-field/hint.directive.ts","../../../../libs/angular-components/src/lib/form-field/error.directive.ts","../../../../libs/angular-components/src/lib/form-field/helper-text.module.ts","../../../../libs/angular-components/src/lib/checkbox/checkbox.module.ts","../../../../libs/angular-components/src/lib/list-item/abstract-selectable-list-item.component.ts","../../../../libs/angular-components/src/lib/list-item/multi-select-list-item.component.ts","../../../../libs/angular-components/src/lib/list-item/nestable-list-item.component.ts","../../../../libs/angular-components/src/lib/list-item/list-item-container.directive.ts","../../../../libs/angular-components/src/lib/list-item/single-select-list-item.component.ts","../../../../libs/angular-components/src/lib/list-item/list-item.module.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete-intl.service.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete-highlight.directive.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete.config.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete-option.directive.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete-container.component.ts","../../../../libs/angular-components/src/lib/form-field/abstract-form-field-control.ts","../../../../libs/angular-components/src/lib/form-field/label.directive.ts","../../../../libs/angular-components/src/lib/form-field/prefix.directive.ts","../../../../libs/angular-components/src/lib/form-field/select/select.animations.ts","../../../../libs/angular-components/src/lib/form-field/select/abstract-focusable-option.ts","../../../../libs/angular-components/src/lib/form-field/input-value-accessor.ts","../../../../libs/angular-components/src/lib/form-field/input.directive.ts","../../../../libs/angular-components/src/lib/form-field/select/select-search-input.component.ts","../../../../libs/angular-components/src/lib/form-field/select/select-types.ts","../../../../libs/angular-components/src/lib/form-field/select/abstract-select.component.ts","../../../../libs/angular-components/src/lib/form-field/select/trigger-values.component.ts","../../../../libs/angular-components/src/lib/form-field/select/select.component.ts","../../../../libs/angular-components/src/lib/form-field/suffix.directive.ts","../../../../libs/angular-components/src/lib/form-field/form-field.component.ts","../../../../libs/angular-components/src/lib/form-field/prefix-separator.component.ts","../../../../libs/angular-components/src/lib/form-field/select/select-option-selection-changed.event.ts","../../../../libs/angular-components/src/lib/form-field/select/multi-select-option.component.ts","../../../../libs/angular-components/src/lib/form-field/select/select-all-changed.event.ts","../../../../libs/angular-components/src/lib/form-field/select/select-all-option.component.ts","../../../../libs/angular-components/src/lib/form-field/select/select-option-separator.component.ts","../../../../libs/angular-components/src/lib/form-field/select/single-select-option.component.ts","../../../../libs/angular-components/src/lib/form-field/suffix-separator.component.ts","../../../../libs/angular-components/src/lib/chips/chip-avatar.directive.ts","../../../../libs/angular-components/src/lib/chips/chip-leading-icon.directive.ts","../../../../libs/angular-components/src/lib/chips/chip.tokens.ts","../../../../libs/angular-components/src/lib/chips/chip-action.ts","../../../../libs/angular-components/src/lib/chips/chip/chip.component.ts","../../../../libs/angular-components/src/lib/chips/chip/chip.component.html","../../../../libs/angular-components/src/lib/chips/chip-set.ts","../../../../libs/angular-components/src/lib/chips/chip-selectable/chip-selectable.component.ts","../../../../libs/angular-components/src/lib/chips/chip-selectable/chip-selectable.component.html","../../../../libs/angular-components/src/lib/chips/chip-list/chip-list.component.ts","../../../../libs/angular-components/src/lib/chips/chip-edit-input.ts","../../../../libs/angular-components/src/lib/chips/chips.module.ts","../../../../libs/angular-components/src/lib/badge/badge.types.ts","../../../../libs/angular-components/src/lib/badge/badge.component.ts","../../../../libs/angular-components/src/lib/badge/badge.component.html","../../../../libs/angular-components/src/lib/form-field/select/multi-select.component.ts","../../../../libs/angular-components/src/lib/form-field/label-icon.directive.ts","../../../../libs/angular-components/src/lib/form-field/textarea-resize.directive.ts","../../../../libs/angular-components/src/lib/form-field/input-chip/input-chip.component.ts","../../../../libs/angular-components/src/lib/form-field/input-chip/input-chip.component.html","../../../../libs/angular-components/src/lib/form-field/chip-grid/chip-grid.component.ts","../../../../libs/angular-components/src/lib/form-field/chip-input.ts","../../../../libs/angular-components/src/lib/form-field/input-with-chips/input-with-chips.component.ts","../../../../libs/angular-components/src/lib/badge/badge.directive.ts","../../../../libs/angular-components/src/lib/badge/badge.module.ts","../../../../libs/angular-components/src/lib/form-field/form-field.module.ts","../../../../libs/angular-components/src/lib/autocomplete/abstract-autocomplete.component.ts","../../../../libs/angular-components/src/lib/progress-spinner/progress-spinner.component.ts","../../../../libs/angular-components/src/lib/progress-spinner/progress-spinner.module.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete.component.ts","../../../../libs/angular-components/src/lib/autocomplete/autocomplete.validators.ts","../../../../libs/angular-components/src/lib/autocomplete/multi-autocomplete.component.ts","../../../../libs/angular-components/src/lib/breadcrumbs/breadcrumb-item.component.ts","../../../../libs/angular-components/src/lib/breadcrumbs/breadcrumbs.component.ts","../../../../libs/angular-components/src/lib/breadcrumbs/breadcrumbs.component.html","../../../../libs/angular-components/src/lib/breadcrumbs/breadcrumbs.module.ts","../../../../libs/angular-components/src/lib/card/card-content.directive.ts","../../../../libs/angular-components/src/lib/card/card-header.component.ts","../../../../libs/angular-components/src/lib/card/card-header.component.html","../../../../libs/angular-components/src/lib/card/card-image.directive.ts","../../../../libs/angular-components/src/lib/card/card-overline.directive.ts","../../../../libs/angular-components/src/lib/card/card-title.directive.ts","../../../../libs/angular-components/src/lib/card/card.component.ts","../../../../libs/angular-components/src/lib/card/card.component.html","../../../../libs/angular-components/src/lib/card/card-bottom-text.directive.ts","../../../../libs/angular-components/src/lib/card/card-label.directive.ts","../../../../libs/angular-components/src/lib/card/card-selectable.directive.ts","../../../../libs/angular-components/src/lib/card/dashboard-card/dashboard-card.component.ts","../../../../libs/angular-components/src/lib/card/dashboard-card/dashboard-card.component.html","../../../../libs/angular-components/src/lib/card/basic-card/basic-card.component.ts","../../../../libs/angular-components/src/lib/card/basic-card/basic-card.component.html","../../../../libs/angular-components/src/lib/card/visual-card/visual-card.component.ts","../../../../libs/angular-components/src/lib/card/visual-card/visual-card.component.html","../../../../libs/angular-components/src/lib/card/story-teaser-card/story-teaser-card.component.ts","../../../../libs/angular-components/src/lib/card/story-teaser-card/story-teaser-card.component.html","../../../../libs/angular-components/src/lib/card/teaser-card/teaser-card.component.ts","../../../../libs/angular-components/src/lib/card/teaser-card/teaser-card.component.html","../../../../libs/angular-components/src/lib/card/card-extra-content.directive.ts","../../../../libs/angular-components/src/lib/card/card.module.ts","../../../../libs/angular-components/src/lib/carousel/carousel-item.directive.ts","../../../../libs/angular-components/src/lib/carousel/carousel.component.ts","../../../../libs/angular-components/src/lib/carousel/carousel.module.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/date-adapter.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/date-formats.ts","../../../../libs/angular-components/src/lib/datepicker/calendar.types.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/native-date-adapter.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/native-date-formats.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/native-date.module.ts","../../../../libs/angular-components/src/lib/datepicker/adapter/rds-native-date.module.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-errors.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker.intl.ts","../../../../libs/angular-components/src/lib/datepicker/calendar-body.component.ts","../../../../libs/angular-components/src/lib/datepicker/calendar-body.component.html","../../../../libs/angular-components/src/lib/datepicker/date-selection.model.ts","../../../../libs/angular-components/src/lib/datepicker/date-range-selection.strategy.ts","../../../../libs/angular-components/src/lib/datepicker/month-view.component.ts","../../../../libs/angular-components/src/lib/datepicker/month-view.component.html","../../../../libs/angular-components/src/lib/datepicker/multi-year-view.component.ts","../../../../libs/angular-components/src/lib/datepicker/multi-year-view.component.html","../../../../libs/angular-components/src/lib/datepicker/year-view.component.ts","../../../../libs/angular-components/src/lib/datepicker/year-view.component.html","../../../../libs/angular-components/src/lib/toggle-button/toggle-button.component.ts","../../../../libs/angular-components/src/lib/toggle-button/toggle.directive.ts","../../../../libs/angular-components/src/lib/datepicker/calendar.component.ts","../../../../libs/angular-components/src/lib/datepicker/calendar.component.html","../../../../libs/angular-components/src/lib/datepicker/calendar-header.component.html","../../../../libs/angular-components/src/lib/dialog/model/dialog.config.ts","../../../../libs/angular-components/src/lib/dialog/model/dialog.ref.ts","../../../../libs/angular-components/src/lib/dialog/dialog-actions-container.directive.ts","../../../../libs/angular-components/src/lib/dialog/get-closet-dialog.ts","../../../../libs/angular-components/src/lib/dialog/dialog-container.component.ts","../../../../libs/angular-components/src/lib/dialog/tokens.ts","../../../../libs/angular-components/src/lib/dialog/dialog.service.ts","../../../../libs/angular-components/src/lib/dialog/dialog-close.directive.ts","../../../../libs/angular-components/src/lib/dialog/dialog-icon-placeholder.directive.ts","../../../../libs/angular-components/src/lib/dialog/dialog-content.directive.ts","../../../../libs/angular-components/src/lib/dialog/dialog-header.directive.ts","../../../../libs/angular-components/src/lib/dialog/dialog.module.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-base.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-content.html","../../../../libs/angular-components/src/lib/datepicker/datepicker.component.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-input.base.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-input.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-toggle.component.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-toggle.component.html","../../../../libs/angular-components/src/lib/datepicker/date-range-input.parts.ts","../../../../libs/angular-components/src/lib/datepicker/date-range-input.component.ts","../../../../libs/angular-components/src/lib/datepicker/date-range-input.component.html","../../../../libs/angular-components/src/lib/datepicker/date-range-picker.component.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker-actions.component.ts","../../../../libs/angular-components/src/lib/toggle-button/toggle-button.module.ts","../../../../libs/angular-components/src/lib/datepicker/datepicker.module.ts","../../../../libs/angular-components/src/lib/divider/divider.component.ts","../../../../libs/angular-components/src/lib/divider/divider.module.ts","../../../../libs/angular-components/src/lib/drawer/drawer-actions.directive.ts","../../../../libs/angular-components/src/lib/drawer/drawer-animations.ts","../../../../libs/angular-components/src/lib/drawer/drawer.component.ts","../../../../libs/angular-components/src/lib/drawer/drawer.component.html","../../../../libs/angular-components/src/lib/drawer/drawer-container.component.ts","../../../../libs/angular-components/src/lib/drawer/drawer-container.component.html","../../../../libs/angular-components/src/lib/drawer/drawer-content.component.ts","../../../../libs/angular-components/src/lib/drawer/drawer-header.directive.ts","../../../../libs/angular-components/src/lib/drawer/drawer.module.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown-toggle.directive.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown-menu.directive.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown-container.component.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown.directive.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown-toggle-button.component.ts","../../../../libs/angular-components/src/lib/dropdown/dropdown.module.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state-button.directive.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state-icon.directive.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state-image.directive.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state-subtitle.directive.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state-title.directive.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state.component.ts","../../../../libs/angular-components/src/lib/empty-state/empty-state.component.html","../../../../libs/angular-components/src/lib/empty-state/empty-state.module.ts","../../../../libs/angular-components/src/lib/footer/footer-caption.directive.ts","../../../../libs/angular-components/src/lib/footer/footer-custom-content.directive.ts","../../../../libs/angular-components/src/lib/footer/footer-disclaimer.directive.ts","../../../../libs/angular-components/src/lib/link/link.component.ts","../../../../libs/angular-components/src/lib/link/link.module.ts","../../../../libs/angular-components/src/lib/footer/footer-link.component.ts","../../../../libs/angular-components/src/lib/footer/footer-navigation.directive.ts","../../../../libs/angular-components/src/lib/footer/footer-sitemap.directive.ts","../../../../libs/angular-components/src/lib/footer/footer-title.directive.ts","../../../../libs/angular-components/src/lib/footer/footer.intl.ts","../../../../libs/angular-components/src/lib/footer/footer.component.ts","../../../../libs/angular-components/src/lib/footer/footer.component.html","../../../../libs/angular-components/src/lib/footer/footer.module.ts","../../../../libs/angular-components/src/lib/header/header-actions.directive.ts","../../../../libs/angular-components/src/lib/header/header-app-name.directive.ts","../../../../libs/angular-components/src/lib/header/header-link.component.ts","../../../../libs/angular-components/src/lib/header/header-navigation-primary.directive.ts","../../../../libs/angular-components/src/lib/header/header-navigation-secondary.directive.ts","../../../../libs/angular-components/src/lib/header/header-searchbar.component.ts","../../../../libs/angular-components/src/lib/header/header-search-animations.ts","../../../../libs/angular-components/src/lib/search/search.intl.ts","../../../../libs/angular-components/src/lib/search/abstract-search.component.ts","../../../../libs/angular-components/src/lib/search/search.component.ts","../../../../libs/angular-components/src/lib/search/search.component.html","../../../../libs/angular-components/src/lib/header/header.component.ts","../../../../libs/angular-components/src/lib/header/header.component.html","../../../../libs/angular-components/src/lib/search/global-search.component.ts","../../../../libs/angular-components/src/lib/search/global-search.component.html","../../../../libs/angular-components/src/lib/search/search.module.ts","../../../../libs/angular-components/src/lib/header/header-start-divider.directive.ts","../../../../libs/angular-components/src/lib/header/header-end-divider.directive.ts","../../../../libs/angular-components/src/lib/header/header.module.ts","../../../../libs/angular-components/src/lib/menu/menu-animations.ts","../../../../libs/angular-components/src/lib/menu/menu-content.directive.ts","../../../../libs/angular-components/src/lib/menu/menu-error.ts","../../../../libs/angular-components/src/lib/menu/menu-panel.ts","../../../../libs/angular-components/src/lib/menu/menu-item.component.ts","../../../../libs/angular-components/src/lib/menu/menu.component.ts","../../../../libs/angular-components/src/lib/menu/menu-trigger.directive.ts","../../../../libs/angular-components/src/lib/menu/menu-separator.directive.ts","../../../../libs/angular-components/src/lib/menu/menu-header.directive.ts","../../../../libs/angular-components/src/lib/menu/menu.module.ts","../../../../libs/angular-components/src/lib/paginator/paginator-intl.ts","../../../../libs/angular-components/src/lib/tooltip/tokens.ts","../../../../libs/angular-components/src/lib/tooltip/tooltip.animations.ts","../../../../libs/angular-components/src/lib/tooltip/tooltip.component.ts","../../../../libs/angular-components/src/lib/tooltip/tooltip.component.html","../../../../libs/angular-components/src/lib/tooltip/tooltip.directive.ts","../../../../libs/angular-components/src/lib/paginator/paginator-basic/paginator-basic.component.ts","../../../../libs/angular-components/src/lib/paginator/paginator-basic/paginator-basic.component.html","../../../../libs/angular-components/src/lib/paginator/paginator.component.ts","../../../../libs/angular-components/src/lib/paginator/paginator.component.html","../../../../libs/angular-components/src/lib/tooltip/tooltip.module.ts","../../../../libs/angular-components/src/lib/paginator/paginator-basic/paginator-basic.module.ts","../../../../libs/angular-components/src/lib/paginator/paginator.module.ts","../../../../libs/angular-components/src/lib/popover/popover.directive.ts","../../../../libs/angular-components/src/lib/popover/popover.tokens.ts","../../../../libs/angular-components/src/lib/popover/popover-text-content/popover-header.directive.ts","../../../../libs/angular-components/src/lib/popover/popover-text-content/popover-paragraph.directive.ts","../../../../libs/angular-components/src/lib/popover/popover-text-content/popover-text-content.component.ts","../../../../libs/angular-components/src/lib/popover/popover-text-content/popover-text-content.component.html","../../../../libs/angular-components/src/lib/popover/popover.module.ts","../../../../libs/angular-components/src/lib/progress-bar/progress-bar.component.ts","../../../../libs/angular-components/src/lib/progress-bar/progress-bar.module.ts","../../../../libs/angular-components/src/lib/radio-button/radio-button-changed-event.ts","../../../../libs/angular-components/src/lib/radio-button/radio-button-group.directive.ts","../../../../libs/angular-components/src/lib/radio-button/radio-button.component.ts","../../../../libs/angular-components/src/lib/radio-button/radio-button.module.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav.service.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav.types.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-item.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menuitem/sidenav-menuitem.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menuitem/sidenav-menuitem.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-menu/sidenav-menu-expansion.animation.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menu-header/sidenav-menu-header.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menu-header/sidenav-menu-header.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-menu/sidenav-menu.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menu/sidenav-menu.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-menuitem-trigger/sidenav-menu-trigger.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-menuitem-trigger/sidenav-menu-trigger.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-footer/sidenav-footer.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-footer/sidenav-footer.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-group/sidenav-group.component.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav-group/sidenav-group.component.html","../../../../libs/angular-components/src/lib/sidenav/sidenav-group/sidenav-group-title.directive.ts","../../../../libs/angular-components/src/lib/sidenav/sidenav.module.ts","../../../../libs/angular-components/src/lib/slider/slider.component.ts","../../../../libs/angular-components/src/lib/slider/slider.component.html","../../../../libs/angular-components/src/lib/slider/slider.module.ts","../../../../libs/angular-components/src/lib/stepper/step-label.directive.ts","../../../../libs/angular-components/src/lib/stepper/step-content.directive.ts","../../../../libs/angular-components/src/lib/stepper/step-header.component.ts","../../../../libs/angular-components/src/lib/stepper/stepper.component.ts","../../../../libs/angular-components/src/lib/stepper/stepper.component.html","../../../../libs/angular-components/src/lib/stepper/step.component.ts","../../../../libs/angular-components/src/lib/stepper/stepper-next.directive.ts","../../../../libs/angular-components/src/lib/stepper/stepper-previous.directive.ts","../../../../libs/angular-components/src/lib/stepper/stepper.module.ts","../../../../libs/angular-components/src/lib/switch/switch.component.ts","../../../../libs/angular-components/src/lib/switch/switch.component.html","../../../../libs/angular-components/src/lib/switch/switch-required-validator.ts","../../../../libs/angular-components/src/lib/switch/switch.module.ts","../../../../libs/angular-components/src/lib/tab/tab-label.directive.ts","../../../../libs/angular-components/src/lib/tab/tab.component.ts","../../../../libs/angular-components/src/lib/tab/tab-label-wrapper.directive.ts","../../../../libs/angular-components/src/lib/tab/tabs.component.ts","../../../../libs/angular-components/src/lib/tab/tab.module.ts","../../../../libs/angular-components/src/lib/table/async-selection.model.ts","../../../../libs/angular-components/src/lib/table/cell.ts","../../../../libs/angular-components/src/lib/table/row.ts","../../../../libs/angular-components/src/lib/table/sort.directive.ts","../../../../libs/angular-components/src/lib/table/sort-header.ts","../../../../libs/angular-components/src/lib/table/sort-header.html","../../../../libs/angular-components/src/lib/table/table-data-source.ts","../../../../libs/angular-components/src/lib/table/text-column.component.ts","../../../../libs/angular-components/src/lib/table/table.component.ts","../../../../libs/angular-components/src/lib/table/table-drag-handle.directive.ts","../../../../libs/angular-components/src/lib/table/table-draggable.helpers.ts","../../../../libs/angular-components/src/lib/table/table-draggable.directive.ts","../../../../libs/angular-components/src/lib/table/table.module.ts","../../../../libs/angular-components/src/lib/table/table-row-expansion.animation.ts","../../../../libs/angular-components/src/lib/theme/theme.config.ts","../../../../libs/angular-components/src/lib/theme/theme.service.ts","../../../../libs/angular-components/src/lib/theme/theme.directive.ts","../../../../libs/angular-components/src/lib/theme/theme.module.ts","../../../../libs/angular-components/src/lib/toast/portal/rds-component-portal.ts","../../../../libs/angular-components/src/lib/toast/portal/rds-dom-portal-host.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.package.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.component.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.component.html","../../../../libs/angular-components/src/lib/toast/rds-toast.config.ts","../../../../libs/angular-components/src/lib/toast/rds-toast-container.directive.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.module.ts","../../../../libs/angular-components/src/lib/toast/overlay/rds-toast-overlay-container.service.ts","../../../../libs/angular-components/src/lib/toast/overlay/rds-toast-overlay-ref.ts","../../../../libs/angular-components/src/lib/toast/overlay/rds-toast-overlay.service.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.injector.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.ref.ts","../../../../libs/angular-components/src/lib/toast/rds-toast.service.ts","../../../../libs/angular-components/src/lib/tree/data-source/tree-control.ts","../../../../libs/angular-components/src/lib/tree/data-source/tree-data-source.ts","../../../../libs/angular-components/src/lib/tree/data-source/tree-flattener.ts","../../../../libs/angular-components/src/lib/tree/tree-node-outlet.directive.ts","../../../../libs/angular-components/src/lib/tree/tree.component.ts","../../../../libs/angular-components/src/lib/tree/tree-node.directive.ts","../../../../libs/angular-components/src/lib/tree/tree-node-toggle.directive.ts","../../../../libs/angular-components/src/lib/tree/tree-node-def.directive.ts","../../../../libs/angular-components/src/lib/tree/tree-node-content-left.directive.ts","../../../../libs/angular-components/src/lib/tree/tree-node-content-right.directive.ts","../../../../libs/angular-components/src/lib/tree/tree-node-text.component.ts","../../../../libs/angular-components/src/lib/tree/tree.module.ts","../../../../libs/angular-components/src/lib/tree/tree-selection-model.ts","../../../../libs/angular-components/src/lib/timeline/timeline-event/timeline-event-icon-marker.directive.ts","../../../../libs/angular-components/src/lib/timeline/timeline-event/timeline-event-opposite.directive.ts","../../../../libs/angular-components/src/lib/timeline/timeline-event/timeline-event.component.ts","../../../../libs/angular-components/src/lib/timeline/timeline.component.ts","../../../../libs/angular-components/src/lib/timeline/timeline.component.html","../../../../libs/angular-components/src/lib/timeline/timeline.module.ts","../../../../libs/angular-components/src/lib/upload/file-item.class.ts","../../../../libs/angular-components/src/lib/upload/upload.filters.ts","../../../../libs/angular-components/src/lib/upload/http-client-wrapper.ts","../../../../libs/angular-components/src/lib/upload/uploader.ts","../../../../libs/angular-components/src/lib/upload/rds-upload-intl.service.ts","../../../../libs/angular-components/src/lib/upload/upload-error.directive.ts","../../../../libs/angular-components/src/lib/upload/upload.directive.ts","../../../../libs/angular-components/src/lib/upload/upload-drop-zone.directive.ts","../../../../libs/angular-components/src/lib/upload/file-size.pipe.ts","../../../../libs/angular-components/src/lib/upload/upload-list-item/upload-list-item.component.ts","../../../../libs/angular-components/src/lib/upload/upload-list-item/upload-list-item.component.html","../../../../libs/angular-components/src/lib/upload/upload.component.ts","../../../../libs/angular-components/src/lib/upload/upload.component.html","../../../../libs/angular-components/src/lib/upload/upload.module.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu.component.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu.component.html","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu-item/anchor-menu-item.component.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu-item/anchor-menu-item.component.html","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu-section.directive.ts","../../../../libs/angular-components/src/lib/utils/intersection-observer.util.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu-sections-container.directive.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu-title.directive.ts","../../../../libs/angular-components/src/lib/anchor-menu/anchor-menu.module.ts","../../../../libs/angular-components/src/index.ts","../../../../libs/angular-components/src/rds-angular-components.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { CdkAccordion } from '@angular/cdk/accordion';\nimport { RdsExpansionPanelHeaderComponent } from './expansion-panel-header.component';\n\nexport type RdsAccordionTogglePosition = 'before' | 'after';\n\nexport type RdsAccordionSize = 's' | 'm';\n\nexport interface RdsAccordionBase extends CdkAccordion {\n  togglePosition: RdsAccordionTogglePosition;\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\n  _handleHeaderFocus: (header: RdsExpansionPanelHeaderComponent) => void;\n}\n\nexport const RDS_ACCORDION = new InjectionToken<RdsAccordionBase>(\n  'RDS_ACCORDION',\n);\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n// export const EXPANSION_PANEL_ANIMATION_TIMING = `225ms cubic-bezier(0.4,0.0,0.2,1)`;\nexport const EXPANSION_PANEL_ANIMATION_TIMING = `350ms ease`;\n\nexport const rdsExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n    state('expanded', style({ transform: 'rotate(180deg)' })),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ),\n  ]),\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n    state('expanded', style({ height: '*', visibility: 'visible' })),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ),\n  ]),\n};\n","import { Directive, TemplateRef, inject } from '@angular/core';\n\n@Directive({\n  selector:\n    'ng-template[rdsExpansionPanelContent], ng-template[rds-expansion-panel-content]',\n})\nexport class RdsExpansionPanelContentDirective {\n  public readonly _template = inject<TemplateRef<HTMLElement>>(TemplateRef);\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, startWith, take } from 'rxjs/operators';\nimport {\n  RDS_ACCORDION,\n  RdsAccordionBase,\n  RdsAccordionTogglePosition,\n} from './accordion-base';\nimport { rdsExpansionAnimations } from './expansion.animations';\nimport { RdsExpansionPanelContentDirective } from './expansion-panel-content.directive';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\nexport type RdsExpansionPanelState = 'expanded' | 'collapsed';\n\nlet uniqueId = 0;\n\n@Component({\n  styleUrls: ['./expansion-panel.component.scss'],\n  selector: 'rds-expansion-panel',\n  exportAs: 'rdsExpansionPanel',\n  template: ` <ng-content select=\"rds-expansion-panel-header\" />\n    <div\n      class=\"rds-expansion-panel-content\"\n      role=\"region\"\n      [@bodyExpansion]=\"_getExpandedState()\"\n      (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\"\n      [attr.aria-labelledby]=\"_headerId\"\n      [id]=\"id\"\n      #body\n    >\n      <div class=\"rds-expansion-panel-body\">\n        <ng-content />\n        <ng-template [cdkPortalOutlet]=\"_portal\" />\n      </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [rdsExpansionAnimations.bodyExpansion],\n  providers: [{ provide: RDS_ACCORDION, useValue: undefined }],\n})\nexport class RdsExpansionPanelComponent\n  extends CdkAccordionItem\n  implements AfterContentInit, FocusableOption, OnChanges, OnDestroy\n{\n  override readonly accordion = inject(RDS_ACCORDION, {\n    optional: true,\n    skipSelf: true,\n  }) as RdsAccordionBase;\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly document = inject(DOCUMENT);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly elementRef = inject(ElementRef);\n  private _togglePosition: RdsAccordionTogglePosition;\n\n  @HostBinding('class') class = 'rds-expansion-panel';\n\n  @Input()\n  get togglePosition(): RdsAccordionTogglePosition {\n    return (\n      this._togglePosition || (this.accordion && this.accordion.togglePosition)\n    );\n  }\n\n  set togglePosition(value: RdsAccordionTogglePosition) {\n    this._togglePosition = value;\n  }\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-disabled')\n  override disabled: boolean;\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-expanded')\n  override set expanded(value: boolean) {\n    super.expanded = value;\n  }\n\n  override get expanded(): boolean {\n    return super.expanded;\n  }\n\n  @Output() readonly afterExpand = new EventEmitter<void>();\n  @Output() readonly afterCollapse = new EventEmitter<void>();\n  @Output() override readonly opened = new EventEmitter<void>();\n  @Output() override readonly closed = new EventEmitter<void>();\n  @Output() override readonly expandedChange = new EventEmitter<boolean>();\n\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  @ContentChild(RdsExpansionPanelContentDirective)\n  _lazyContent: RdsExpansionPanelContentDirective;\n  @ViewChild('body') _body: ElementRef<HTMLElement>;\n  _portal: TemplatePortal;\n  _headerId = `rds-expansion-panel-header-${uniqueId++}`;\n\n  readonly _bodyAnimationDone = new Subject<AnimationEvent>();\n\n  constructor() {\n    super(\n      inject(RDS_ACCORDION, {\n        optional: true,\n        skipSelf: true,\n      }) as RdsAccordionBase,\n      inject(ChangeDetectorRef),\n      inject(UniqueSelectionDispatcher),\n    );\n    this._bodyAnimationDone\n      .pipe(\n        distinctUntilChanged((x, y) => {\n          return x.fromState === y.fromState && x.toState === y.toState;\n        }),\n      )\n      .subscribe((event) => {\n        if (event.fromState !== 'void') {\n          if (event.toState === 'expanded') {\n            this.afterExpand.emit();\n          } else if (event.toState === 'collapsed') {\n            this.afterCollapse.emit();\n          }\n        }\n      });\n  }\n\n  _getExpandedState(): RdsExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n\n  override toggle(): void {\n    this.expanded = !this.expanded;\n  }\n\n  override close(): void {\n    this.expanded = false;\n  }\n\n  override open(): void {\n    this.expanded = true;\n  }\n\n  ngAfterContentInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true);\n\n    if (this._lazyContent) {\n      this.opened\n        .pipe(\n          startWith(null),\n          filter(() => this.expanded && !this._portal),\n          take(1),\n        )\n        .subscribe(() => {\n          this._portal = new TemplatePortal(\n            this._lazyContent._template,\n            this.viewContainerRef,\n          );\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._inputChanges.next(changes);\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this._bodyAnimationDone.complete();\n    this._inputChanges.complete();\n  }\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this.focusMonitor.focusVia(this.elementRef, origin, options);\n    } else {\n      this.elementRef.nativeElement.focus(options);\n    }\n  }\n\n  _containsFocus(): boolean {\n    if (this._body) {\n      const focusedElement = this.document.activeElement;\n      const bodyElement = this._body.nativeElement;\n\n      return (\n        focusedElement === bodyElement || bodyElement.contains(focusedElement)\n      );\n    }\n\n    return false;\n  }\n}\n","export const TAB_INDEX_DEFAULT = 0;\nexport const TAB_INDEX_NOT_FOCUSABLE = -1;\n","export function getFirstFocusableChild(el: HTMLElement): HTMLElement | null {\n  return el.querySelector(\n    'button, a, input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n  );\n}\n","export enum Breakpoint {\n  S = 0,\n  M = 768,\n  L = 1024,\n  XL = 1440,\n  XXL = 1672,\n}\n\nexport class BreakpointUtil {\n  static isMobile(): boolean {\n    return window.outerWidth < Breakpoint.M;\n  }\n}\n","export function isHoverSupported(): boolean {\n  return window && window.matchMedia('(hover: hover)').matches;\n}\n","import { ElementRef } from '@angular/core';\nimport { coerceElement } from '@angular/cdk/coercion';\n\nexport function getScrollingAncestor(\n  elOrElRef: HTMLElement | ElementRef<HTMLElement>,\n): HTMLElement | null {\n  const el = coerceElement(elOrElRef);\n  let scrollingAncestor: HTMLElement | null = null;\n  let parent = el.parentElement;\n\n  while (parent && !scrollingAncestor) {\n    if (parent.clientHeight > 0 && parent.scrollHeight > parent.clientHeight) {\n      scrollingAncestor = parent;\n    } else {\n      parent = parent.parentElement;\n    }\n  }\n\n  return scrollingAncestor;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  BooleanInput,\n  coerceElement,\n  NumberInput,\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Injectable,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Observable, Observer, Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ResizeObserverFactory {\n  create(callback: ResizeObserverCallback): ResizeObserver | null {\n    return typeof ResizeObserver === 'undefined'\n      ? null\n      : new ResizeObserver(callback);\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DimensionsObserver implements OnDestroy {\n  private readonly resizeObserverFactory = inject(ResizeObserverFactory);\n\n  private _observedElements = new Map<\n    Element,\n    {\n      observer: ResizeObserver | null;\n      readonly stream: Subject<ResizeObserverEntry[]>;\n      count: number;\n    }\n  >();\n\n  ngOnDestroy(): void {\n    this._observedElements.forEach((_, element) =>\n      this._cleanupObserver(element),\n    );\n  }\n\n  observe(element: Element): Observable<ResizeObserverEntry[]>;\n  observe(element: ElementRef<Element>): Observable<ResizeObserverEntry[]>;\n  observe(\n    elementOrRef: Element | ElementRef<Element>,\n  ): Observable<ResizeObserverEntry[]> {\n    const element = coerceElement(elementOrRef);\n\n    return new Observable((observer: Observer<ResizeObserverEntry[]>) => {\n      const stream = this._observeElement(element);\n      const subscription = stream.subscribe(observer);\n\n      return () => {\n        subscription.unsubscribe();\n        this._unobserveElement(element);\n      };\n    });\n  }\n\n  private _observeElement(element: Element): Subject<ResizeObserverEntry[]> {\n    if (!this._observedElements.has(element)) {\n      const stream = new Subject<ResizeObserverEntry[]>();\n      const observer = this.resizeObserverFactory.create((mutations) =>\n        stream.next(mutations),\n      );\n\n      if (observer) {\n        observer.observe(element);\n      }\n\n      this._observedElements.set(element, { observer, stream, count: 1 });\n    } else {\n      this._observedElements.get(element)!.count++;\n    }\n\n    return this._observedElements.get(element)!.stream;\n  }\n\n  private _unobserveElement(element: Element): void {\n    if (this._observedElements.has(element)) {\n      this._observedElements.get(element)!.count--;\n\n      if (!this._observedElements.get(element)!.count) {\n        this._cleanupObserver(element);\n      }\n    }\n  }\n\n  private _cleanupObserver(element: Element): void {\n    if (this._observedElements.has(element)) {\n      const { observer, stream } = this._observedElements.get(element)!;\n\n      if (observer) {\n        observer.disconnect();\n      }\n\n      stream.complete();\n      this._observedElements.delete(element);\n    }\n  }\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\n@Directive({\n  selector: '[rdsObserveResize]',\n  exportAs: 'rdsObserveResize',\n  standalone: true,\n})\nexport class RdsObserveResizeDirective implements AfterContentInit, OnDestroy {\n  private readonly dimensionsObserver = inject(DimensionsObserver);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  @Output()\n  readonly rdsObserveResize = new EventEmitter<ResizeObserverEntry[]>();\n\n  @Input('rdsObserveResizeDisabled')\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled = false;\n\n  @Input()\n  set debounce(value: NumberInput) {\n    this._debounce = numberAttribute(value);\n    this._subscribe();\n  }\n\n  get debounce(): number {\n    return this._debounce;\n  }\n\n  private _debounce: number;\n\n  private _currentSubscription: Subscription | null = null;\n\n  ngAfterContentInit(): void {\n    if (!this._currentSubscription && !this.disabled) {\n      this._subscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._unsubscribe();\n  }\n\n  private _subscribe(): void {\n    this._unsubscribe();\n    const stream = this.dimensionsObserver.observe(this.elementRef);\n\n    this._currentSubscription = (\n      this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream\n    ).subscribe(this.rdsObserveResize);\n  }\n\n  private _unsubscribe(): void {\n    this._currentSubscription?.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, AbstractControl } from '@angular/forms';\nimport { isErrorState } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n  isErrorState(\n    control: AbstractControl | null,\n    form: FormGroupDirective | NgForm | null,\n  ): boolean {\n    return isErrorState(control, form);\n  }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! ANY CHANGES WILL BE OVERWRITTEN DURING BUILD PROCESS\nexport const RDS_VERSION = '4.9.1';\nexport const RDS_VERSION_AS_FILENAME_SUFFIX = '--v4_9_1';\n","import { AbstractControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '../core';\n\nexport const updateErrorState = (\n  errorState: boolean,\n  parentFormGroup: FormGroupDirective | null,\n  parentForm: NgForm | null,\n  control: AbstractControl | null,\n  matcher?: ErrorStateMatcher,\n): boolean => {\n  const oldState = errorState;\n  const parent = parentFormGroup || parentForm;\n  const newState =\n    matcher instanceof ErrorStateMatcher\n      ? matcher.isErrorState(control, parent)\n      : isErrorState(control, parent);\n\n  if (newState !== oldState) {\n    return newState;\n  }\n\n  return oldState;\n};\n\nexport const isErrorState = (\n  control: AbstractControl | null,\n  form: FormGroupDirective | NgForm | null,\n): boolean => {\n  return !!(\n    control &&\n    control.invalid &&\n    (control.touched || (form && form.submitted))\n  );\n};\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport class IconLoaderErrors {\n  static noHttpProviderError(): Error {\n    return Error(\n      'Could not find HttpClient provider for use with Rds Icons. ' +\n        'Please provide the HttpClient by `provideHttpClient()` method in the providers for' +\n        ' standalone application or include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.',\n    );\n  }\n\n  static iconUrlFailedToSanitize(url: SafeResourceUrl): Error {\n    return Error(\n      `The URL provided to RdsIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`,\n    );\n  }\n\n  static invalidNamespaceOrIconNameError(\n    namespace: string,\n    iconName: string,\n  ): Error {\n    return Error(\n      `Cannot find icon when namespace or iconName is invalid. Attempted namespace was <${namespace}> and iconName was <${iconName}>`,\n    );\n  }\n\n  static svgTagNotFound(): Error {\n    return Error('<svg> tag not found in svg string');\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface RdsIconLoaderConfig {\n  preloadSelected?: 'all' | Record<RdsIconNamespace, RdsIconName[]>;\n}\n\nexport const RDS_ICON_LOADER_CONFIG = new InjectionToken<RdsIconLoaderConfig>(\n  'RDS_ICON_LOADER_CONFIG',\n);\n\nexport type RdsIconNamespace = 'filled' | 'outlined';\n\n// add icon name when adding new icon, remember to add new icon in filled and outlined version\nexport type RdsIconName =\n  | 'add_circle'\n  | 'administration'\n  | 'alarm'\n  | 'alarm_add'\n  | 'align_center'\n  | 'align_justified'\n  | 'align_left'\n  | 'align_right'\n  | 'app_launcher'\n  | 'archive'\n  | 'arrow_down'\n  | 'arrow_left'\n  | 'arrow_right'\n  | 'arrow_up'\n  | 'attachment'\n  | 'attach_file'\n  | 'audio'\n  | 'autoqc_pack'\n  | 'barcode'\n  | 'basket'\n  | 'billing'\n  | 'blood'\n  | 'bluetooth'\n  | 'bluetooth_off'\n  | 'bold'\n  | 'book'\n  | 'bookmark'\n  | 'border_dash'\n  | 'border_weight'\n  | 'buffer'\n  | 'building'\n  | 'bulleted_list'\n  | 'calendar'\n  | 'calendar_add'\n  | 'calendar_schedule'\n  | 'calibration'\n  | 'call'\n  | 'call_add'\n  | 'call_support'\n  | 'camera'\n  | 'cap'\n  | 'card_view'\n  | 'caret_down'\n  | 'caret_left'\n  | 'caret_right'\n  | 'caret_up'\n  | 'carousel'\n  | 'certificate'\n  | 'chat'\n  | 'checkmark'\n  | 'checkmark_circle'\n  | 'chevron_down'\n  | 'chevron_left'\n  | 'chevron_right'\n  | 'chevron_up'\n  | 'clean'\n  | 'clock'\n  | 'close'\n  | 'close_circle'\n  | 'cloud'\n  | 'cloud_done'\n  | 'cloud_download'\n  | 'cloud_storage'\n  | 'cloud_upload'\n  | 'coaguchek_pro_ii'\n  | 'cobas_b101'\n  | 'cobas_b123'\n  | 'cobas_liat'\n  | 'cobas_pulse'\n  | 'code'\n  | 'code_branch'\n  | 'colour_reset'\n  | 'comment'\n  | 'comment_alarm'\n  | 'compare'\n  | 'compressed'\n  | 'connected'\n  | 'copy'\n  | 'corresponding'\n  | 'create_file'\n  | 'create_folder'\n  | 'cut'\n  | 'dashboard'\n  | 'data'\n  | 'delete'\n  | 'delta'\n  | 'demographics'\n  | 'dictionary'\n  | 'dislike'\n  | 'doctor_physician'\n  | 'document'\n  | 'door_lock_control'\n  | 'double_chevron_left'\n  | 'double_chevron_right'\n  | 'download'\n  | 'drag'\n  | 'drive'\n  | 'drug_and_syringe'\n  | 'earth'\n  | 'edit'\n  | 'email'\n  | 'event_off'\n  | 'event_on'\n  | 'export'\n  | 'external_link'\n  | 'facebook'\n  | 'factor_parallelism'\n  | 'file_excel'\n  | 'file_pdf'\n  | 'file_word'\n  | 'fill_color'\n  | 'filter'\n  | 'first_page'\n  | 'fit_to_page'\n  | 'fit_to_width'\n  | 'flag'\n  | 'fluid_pack'\n  | 'folder'\n  | 'format_clear'\n  | 'fullscreen'\n  | 'fullscreen_exit'\n  | 'globe'\n  | 'google_plus'\n  | 'grid_overview'\n  | 'group_work'\n  | 'guide_me'\n  | 'hard_drive'\n  | 'heart'\n  | 'help'\n  | 'hide'\n  | 'highlight'\n  | 'high_priority'\n  | 'history'\n  | 'home'\n  | 'horizontal_align_center'\n  | 'horizontal_align_left'\n  | 'horizontal_align_right'\n  | 'hospital'\n  | 'image'\n  | 'images'\n  | 'import'\n  | 'inbox'\n  | 'indent_decrease'\n  | 'indent_increase'\n  | 'info'\n  | 'insert_table'\n  | 'instagram'\n  | 'install'\n  | 'instrument'\n  | 'iso_on_off'\n  | 'iso_pause'\n  | 'iso_start_of_action'\n  | 'iso_stop'\n  | 'iso_stop_of_action'\n  | 'italic'\n  | 'keyboard'\n  | 'label'\n  | 'laptop'\n  | 'last_page'\n  | 'launch'\n  | 'layers'\n  | 'library'\n  | 'life_ring'\n  | 'like'\n  | 'line'\n  | 'line_and_paragraph_spacing'\n  | 'line_spacing'\n  | 'link'\n  | 'linkedin'\n  | 'link_broken'\n  | 'liquid_waste_container'\n  | 'list'\n  | 'list_view_simple'\n  | 'list_view_tiled'\n  | 'location'\n  | 'lock'\n  | 'logoff'\n  | 'logon'\n  | 'low_priority'\n  | 'magazine'\n  | 'maintenance'\n  | 'manual'\n  | 'map'\n  | 'materials'\n  | 'menu'\n  | 'message'\n  | 'mic'\n  | 'mic_off'\n  | 'minus'\n  | 'missing_order'\n  | 'mobile'\n  | 'moon'\n  | 'more_horizontal'\n  | 'more_vertical'\n  | 'mouse'\n  | 'mute'\n  | 'my_workplace'\n  | 'network_connection'\n  | 'network_drive'\n  | 'no'\n  | 'noniso_open_close'\n  | 'note'\n  | 'notification'\n  | 'notification_alarm'\n  | 'notification_slash'\n  | 'notification_warning'\n  | 'number'\n  | 'numbered_list'\n  | 'oil'\n  | 'on_off'\n  | 'open_close'\n  | 'order'\n  | 'organism_female'\n  | 'organism_male'\n  | 'page_number'\n  | 'panel'\n  | 'paper_status'\n  | 'parameter'\n  | 'parameters'\n  | 'paste'\n  | 'patient'\n  | 'patient_info'\n  | 'pause'\n  | 'payment'\n  | 'pharmacy'\n  | 'photo_library'\n  | 'pie_chart'\n  | 'pin'\n  | 'pinned'\n  | 'pin_slash'\n  | 'plate_management'\n  | 'play'\n  | 'plus'\n  | 'poc_devices'\n  | 'positive_result'\n  | 'power_standby'\n  | 'previous_folder'\n  | 'print'\n  | 'processing'\n  | 'process_ended'\n  | 'process_planned'\n  | 'process_progress'\n  | 'programmable_timer'\n  | 'project'\n  | 'qc'\n  | 'qr_code'\n  | 'quote'\n  | 'rack'\n  | 'read'\n  | 'redo'\n  | 'refresh'\n  | 'remote_access_connected'\n  | 'remote_access_disabled'\n  | 'repeat'\n  | 'repeat_exclamation'\n  | 'report'\n  | 'rerun'\n  | 'reset'\n  | 'result'\n  | 'rfid'\n  | 'robotic_arm'\n  | 'rotate_left'\n  | 'rotate_right'\n  | 'routine'\n  | 'sample'\n  | 'sampling_stop'\n  | 'save'\n  | 'save_and_create'\n  | 'save_as'\n  | 'save_mobile'\n  | 'screen'\n  | 'search'\n  | 'secure'\n  | 'secured'\n  | 'secure_alert'\n  | 'secure_slash'\n  | 'send'\n  | 'sensor_cartridge'\n  | 'sequencer'\n  | 'server'\n  | 'service'\n  | 'settings'\n  | 'shape'\n  | 'share'\n  | 'shared_folder'\n  | 'show'\n  | 'skip_backward'\n  | 'skip_forward'\n  | 'slideshow'\n  | 'sort_ascending'\n  | 'sort_by_relevance'\n  | 'sort_descending'\n  | 'star'\n  | 'start_of_action'\n  | 'star_half'\n  | 'stat'\n  | 'stop'\n  | 'stop_of_action'\n  | 'strike_through'\n  | 'structure'\n  | 'subtract_circle'\n  | 'sun'\n  | 'support_technical'\n  | 'syringe'\n  | 'system_update'\n  | 'table_of_content'\n  | 'table_view'\n  | 'tablet'\n  | 'tabs'\n  | 'target'\n  | 'task'\n  | 'taxonomy'\n  | 'test'\n  | 'test_result_interpretation_normal'\n  | 'test_result_interpretation_very_high'\n  | 'test_result_interpretation_very_low'\n  | 'text_align_bottom'\n  | 'text_align_center'\n  | 'text_align_top'\n  | 'text_box'\n  | 'text_colour'\n  | 'text_size'\n  | 'thermal_block'\n  | 'thermometer'\n  | 'thermometer_levels'\n  | 'time_critical'\n  | 'time_decreased'\n  | 'time_elapsed'\n  | 'time_increased'\n  | 'time_remaining'\n  | 'tip'\n  | 'to_the_bottom'\n  | 'to_the_top'\n  | 'troubleshooter'\n  | 'twitter'\n  | 'underline'\n  | 'undo'\n  | 'unlock'\n  | 'unsorted'\n  | 'upload'\n  | 'upper_and_lower_limits'\n  | 'upper_limit'\n  | 'usb'\n  | 'user'\n  | 'user_add'\n  | 'user_group'\n  | 'validation_range'\n  | 'vertical_align_bottom'\n  | 'vertical_align_center'\n  | 'vertical_align_top'\n  | 'video'\n  | 'video_add'\n  | 'viewics_app_package'\n  | 'viewics_code_manage'\n  | 'viewics_data_integration'\n  | 'viewics_data_science'\n  | 'viewics_monitor_add'\n  | 'viewics_monitor_code'\n  | 'viewics_monitor_settings'\n  | 'viewics_pie_settings'\n  | 'view_absolute_numbers'\n  | 'view_absorbance'\n  | 'view_columns'\n  | 'view_histogram'\n  | 'view_line_chart'\n  | 'view_monitoring'\n  | 'view_relative_numbers'\n  | 'virtual_target'\n  | 'volume'\n  | 'volume_up'\n  | 'warning_circle'\n  | 'warning_hex'\n  | 'warning_triangle'\n  | 'waste_container'\n  | 'water_fluid'\n  | 'wechat'\n  | 'whatsapp'\n  | 'wifi_off'\n  | 'wifi_on'\n  | 'write'\n  | 'youtube'\n  | 'zoom_in'\n  | 'zoom_out';\n","import { inject, Injectable, OnDestroy, SecurityContext } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\nimport { finalize, map, share, tap } from 'rxjs/operators';\nimport { IconLoaderErrors } from './icon-loader-errors';\nimport {\n  RDS_ICON_LOADER_CONFIG,\n  RdsIconLoaderConfig,\n  RdsIconName,\n  RdsIconNamespace,\n} from './icon-types';\nimport { RDS_VERSION_AS_FILENAME_SUFFIX } from '../core';\n\n// in case of change remember to modify create-svg-symbols.js accordingly\nconst getAllIconsFilename = (namespace: RdsIconNamespace): RdsIconName =>\n  `_all-${namespace}` as RdsIconName;\n\nclass IconConfig {\n  url = '';\n  svgElement: SVGElement;\n\n  constructor(data: string | SVGElement) {\n    if (isSVGElement(data)) {\n      this.svgElement = data;\n    } else {\n      this.url = data;\n    }\n  }\n}\n\nfunction isSVGElement(data: string | SVGElement): data is SVGElement {\n  return typeof data !== 'string' && 'nodeName' in data;\n}\n\nexport function getSvgHref(\n  namespace: RdsIconNamespace,\n  name: RdsIconName,\n): string {\n  return `/assets/icons/${namespace}/${name}${RDS_VERSION_AS_FILENAME_SUFFIX}.svg#${name}`;\n}\n\n/**\n * Service to load icons used by the `<rds-icon>` component.\n * Icons are get from, assets/icons/{namespace}/{iconName}\n */\n@Injectable({ providedIn: 'root' })\nexport class RdsIconLoader implements OnDestroy {\n  private readonly config = inject(RDS_ICON_LOADER_CONFIG, { optional: true });\n  private readonly httpClient = inject(HttpClient, { optional: true });\n  private readonly document = inject(DOCUMENT, { optional: true }) as Document;\n  private readonly domSanitizer = inject(DomSanitizer);\n\n  // Keys are of in the format namespace:icon\n  private static BASE_URL = '/';\n  private static BASE_URL_FETCHED = false;\n  private readonly iconConfigsCache = new Map<string, IconConfig>();\n  private readonly iconFetchesInProgress = new Map<\n    string,\n    Observable<string>\n  >();\n  private allIcons: { filled?: SVGElement; outlined?: SVGElement } = {};\n  private preloadAll = false;\n\n  private static _getBaseUrl(): string {\n    if (!RdsIconLoader.BASE_URL_FETCHED) {\n      const baseTag = document.getElementsByTagName('base')[0];\n\n      if (!baseTag || !baseTag.href || baseTag.href === '') {\n        RdsIconLoader.BASE_URL = '/';\n      } else {\n        RdsIconLoader.BASE_URL = baseTag.href;\n      }\n\n      RdsIconLoader.BASE_URL_FETCHED = true;\n    }\n\n    return RdsIconLoader.BASE_URL;\n  }\n\n  constructor() {\n    this.handleConfig(this.config);\n  }\n\n  preloadSelectedIcons(\n    selectedIcons: Record<RdsIconNamespace, RdsIconName[]>,\n  ): void {\n    Object.entries(selectedIcons).forEach(([namespace, icons]) => {\n      for (const iconName of icons) {\n        this.getSvgIcon(iconName, namespace as RdsIconNamespace).subscribe();\n      }\n    });\n  }\n\n  /**\n   * Returns an Observable with the icon (as an `<svg>` SVGelement) for the given name\n   * and namespace.\n   * @param name Name of the icon to be retrieved.\n   * @param namespace Namespace in which to look for the icon.\n   */\n  getSvgIcon(\n    name: RdsIconName,\n    namespace: RdsIconNamespace,\n  ): Observable<SVGElement> {\n    if (this.preloadAll) {\n      return this.getFromAllIconsFile(name, namespace);\n    }\n\n    const iconConfig = this.getOrCreateIconConfig(name, namespace);\n\n    return this._getSvgElementFromIconConfig(iconConfig);\n  }\n\n  ngOnDestroy(): void {\n    this.iconConfigsCache.clear();\n  }\n\n  private getFromAllIconsFile(\n    name: RdsIconName,\n    namespace: RdsIconNamespace,\n  ): Observable<SVGElement> {\n    if (this.allIcons[namespace]) {\n      return of(this.buildFromSymbol(name, namespace));\n    }\n\n    const iconConfig = this.getOrCreateIconConfig(name, namespace);\n\n    return this._fetchIcon(iconConfig).pipe(\n      tap((svgText) => {\n        this.allIcons[namespace] = this._convertSVGStringToSvgElement(svgText);\n      }),\n      map(() => this.buildFromSymbol(name, namespace)),\n    );\n  }\n\n  private getOrCreateIconConfig(\n    name: RdsIconName,\n    namespace: RdsIconNamespace,\n  ): IconConfig {\n    const keyName = this.preloadAll ? getAllIconsFilename(namespace) : name;\n    const key = iconKey(namespace, keyName);\n\n    return (\n      this.iconConfigsCache.get(key) ||\n      this._addIconConfigToCache(namespace, name)\n    );\n  }\n\n  private _addIconConfigToCache(\n    namespace: RdsIconNamespace,\n    iconName: RdsIconName,\n  ): IconConfig {\n    if (!namespace || !iconName) {\n      throw IconLoaderErrors.invalidNamespaceOrIconNameError(\n        namespace,\n        iconName,\n      );\n    }\n\n    const url = this._buildIconUrl(namespace, iconName);\n    const iconConfig = new IconConfig(url);\n\n    this.iconConfigsCache.set(iconKey(namespace, iconName), iconConfig);\n\n    return iconConfig;\n  }\n\n  private _buildIconUrl(\n    namespace: RdsIconNamespace,\n    iconName: RdsIconName,\n  ): string {\n    if (this.preloadAll) {\n      iconName = getAllIconsFilename(namespace);\n    }\n\n    const safeResourceUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\n      RdsIconLoader._getBaseUrl() +\n        `assets/icons/${namespace}/${iconName}${RDS_VERSION_AS_FILENAME_SUFFIX}.svg`,\n    );\n\n    const url = this.domSanitizer.sanitize(\n      SecurityContext.RESOURCE_URL,\n      safeResourceUrl,\n    );\n\n    if (!url) {\n      throw IconLoaderErrors.iconUrlFailedToSanitize(safeResourceUrl);\n    }\n\n    return url;\n  }\n\n  private _getSvgElementFromIconConfig(\n    iconConfig: IconConfig,\n  ): Observable<SVGElement> {\n    const svgElement = iconConfig.svgElement;\n\n    if (svgElement) {\n      // We already have the SVG element for this icon, return a copy.\n      return of(cloneSvg(svgElement));\n    } else {\n      // Fetch the icon from the iconConfig's URL, cache it, and return a copy.\n      return this._fetchIcon(iconConfig).pipe(\n        map((svgText) => this._buildSvgElement(svgText)),\n        tap((builtSvgElement) => (iconConfig.svgElement = builtSvgElement)),\n        map((builtSvgElement) => cloneSvg(builtSvgElement)),\n      );\n    }\n  }\n\n  private _fetchIcon(iconConfig: IconConfig): Observable<string> {\n    const { url } = iconConfig;\n\n    if (!this.httpClient) {\n      throw IconLoaderErrors.noHttpProviderError();\n    }\n\n    const inProgressFetch = this.iconFetchesInProgress.get(url);\n\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n\n    const req = this.httpClient.get(url, { responseType: 'text' }).pipe(\n      finalize(() => this.iconFetchesInProgress.delete(url)),\n      share(),\n    );\n\n    this.iconFetchesInProgress.set(url, req);\n\n    return req;\n  }\n\n  private _buildSvgElement(responseText: string): SVGElement {\n    const svgElement = this._convertSVGStringToSvgElement(responseText);\n    this._setDefaultSvgAttributes(svgElement);\n\n    return svgElement;\n  }\n\n  private buildFromSymbol(\n    name: RdsIconName,\n    namespace: RdsIconNamespace,\n  ): SVGElement {\n    const symbol = this.allIcons[namespace]?.querySelector(`#${name}`);\n    const svgString = symbol\n      ? `<svg ${symbol.outerHTML.slice(7, -9)}</svg>`\n      : '<svg></svg>';\n\n    return this._convertSVGStringToSvgElement(svgString);\n  }\n\n  private _convertSVGStringToSvgElement(svgString: string): SVGElement {\n    const div = this.document.createElement('DIV');\n    div.innerHTML = svgString;\n    const svg = div.querySelector('svg') as SVGElement;\n\n    if (svg) {\n      return svg;\n    }\n\n    throw IconLoaderErrors.svgTagNotFound();\n  }\n\n  private _setDefaultSvgAttributes(svg: SVGElement): SVGElement {\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n    svg.setAttribute('viewBox', '0 0 24 24');\n\n    return svg;\n  }\n\n  private handleConfig(config: RdsIconLoaderConfig | null): void {\n    if (config?.preloadSelected) {\n      config.preloadSelected === 'all'\n        ? (this.preloadAll = true)\n        : this.preloadSelectedIcons(config.preloadSelected);\n    }\n  }\n}\n\nfunction cloneSvg(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n\nfunction iconKey(namespace: RdsIconNamespace, name: RdsIconName): string {\n  return namespace + ':' + name;\n}\n","import {\n  Component,\n  ElementRef,\n  ErrorHandler,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsIconLoader } from './icon-loader';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { RdsIconName, RdsIconNamespace } from './icon-types';\n\n@Component({\n  selector: 'rds-icon',\n  template: '',\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n})\nexport class RdsIconComponent implements OnChanges, OnDestroy {\n  private readonly elementRef = inject(ElementRef);\n  private readonly iconLoader = inject(RdsIconLoader);\n  private readonly errorHandler = inject(ErrorHandler);\n\n  @Input() namespace: RdsIconNamespace = 'filled';\n  @Input() icon: RdsIconName | null = null;\n\n  @HostBinding('class') hostClass = 'rds-icon';\n  @HostBinding('attr.aria-hidden') hostAriaHidden = 'true';\n\n  private currentIconFetch = Subscription.EMPTY;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const namespaceChanges = changes['namespace'];\n    const iconChanges = changes['icon'];\n\n    // Update the inline SVG if the icon or namespace inputs changed, to avoid unnecessary DOM operations.\n    if (iconChanges || namespaceChanges) {\n      this.currentIconFetch.unsubscribe();\n\n      if (this.icon) {\n        this.currentIconFetch = this.iconLoader\n          .getSvgIcon(this.icon, this.namespace)\n          .pipe(take(1))\n          .subscribe({\n            next: (svg) => this._setSvgIcon(svg),\n            error: (err: Error) => {\n              const errorMessage = `Error retrieving icon ${this.namespace}:${this.icon}! ${err.message}`;\n              this.errorHandler.handleError(new Error(errorMessage));\n            },\n          });\n      } else if (iconChanges.previousValue) {\n        this._removeSvgIcon();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.currentIconFetch.unsubscribe();\n  }\n\n  private _setSvgIcon(svgElement: SVGElement): void {\n    this._removeSvgIcon();\n    this.elementRef.nativeElement.appendChild(svgElement);\n  }\n\n  private _removeSvgIcon(): void {\n    const layoutElement: HTMLElement = this.elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n        layoutElement.removeChild(child);\n      }\n    }\n  }\n}\n","import { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { EMPTY, merge, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { rdsExpansionAnimations } from './expansion.animations';\nimport { RdsExpansionPanelComponent } from './expansion-panel.component';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Component({\n  selector: 'rds-expansion-panel-header',\n  template: `<span class=\"rds-content\">\n      <ng-content select=\"rds-panel-title\" />\n      <ng-content />\n    </span>\n    <rds-icon\n      [@indicatorRotate]=\"panel._getExpandedState()\"\n      class=\"rds-expansion-indicator\"\n      namespace=\"filled\"\n      icon=\"chevron_down\"\n    />`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [rdsExpansionAnimations.indicatorRotate],\n})\nexport class RdsExpansionPanelHeaderComponent\n  implements AfterViewInit, OnDestroy, FocusableOption\n{\n  public readonly panel = inject(RdsExpansionPanelComponent, { host: true });\n  private readonly element = inject(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private _parentChangeSubscription = Subscription.EMPTY;\n  private _tabIndex = TAB_INDEX_DEFAULT;\n\n  @HostBinding('class') class =\n    'rds-expansion-panel-header rds-focus-indicator';\n  @HostBinding('attr.role') role = 'button';\n\n  @HostBinding('attr.id')\n  get attrId(): string {\n    return this.panel._headerId;\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get attrDisabled(): boolean {\n    return this.panel.disabled;\n  }\n\n  @Input()\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  set tabIndex(value: number) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get disabled(): boolean {\n    return this.panel.disabled;\n  }\n\n  @HostBinding('attr.aria-expanded')\n  @HostBinding('class.rds-expanded')\n  get _isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  @HostBinding('class.rds-expansion-toggle-indicator-after')\n  get _isAfterTogglePosition(): boolean {\n    return this.panel.togglePosition === 'after';\n  }\n\n  @HostBinding('class.rds-expansion-toggle-indicator-before')\n  get _isBeforeTogglePosition(): boolean {\n    return this.panel.togglePosition === 'before';\n  }\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    const accordionHideToggleChange = this.panel.accordion\n      ? this.panel.accordion._stateChanges.pipe(\n          filter((changes) => !!changes['togglePosition']),\n        )\n      : EMPTY;\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n\n    this._parentChangeSubscription = merge(\n      this.panel.opened,\n      this.panel.closed,\n      accordionHideToggleChange,\n      this.panel._inputChanges.pipe(\n        filter((changes) => {\n          return !!(changes['disabled'] || changes['togglePosition']);\n        }),\n      ),\n    ).subscribe(() => this.cdr.markForCheck());\n\n    this.panel.closed\n      .pipe(filter(() => this.panel._containsFocus()))\n      .subscribe(() => this.focusMonitor.focusVia(this.element, 'program'));\n  }\n\n  @HostListener('click')\n  _toggle(): void {\n    if (!this.disabled) {\n      this.panel.toggle();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  _keydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this.focusMonitor.focusVia(this.element, origin, options);\n    } else {\n      this.element.nativeElement.focus(options);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.element).subscribe((origin) => {\n      if (origin && this.panel.accordion) {\n        this.panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._parentChangeSubscription.unsubscribe();\n    this.focusMonitor.stopMonitoring(this.element);\n  }\n}\n\n@Directive({\n  selector: 'rds-panel-title',\n})\nexport class RdsExpansionPanelTitleDirective {\n  @HostBinding('class') class = 'rds-expansion-panel-header-title';\n}\n","import { NgModule } from '@angular/core';\nimport { RdsIconComponent } from './icon.component';\n\n@NgModule({\n  imports: [RdsIconComponent],\n  exports: [RdsIconComponent],\n})\nexport class RdsIconsModule {}\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ContentChildren,\n  Directive,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith } from 'rxjs/operators';\nimport {\n  RDS_ACCORDION,\n  RdsAccordionBase,\n  RdsAccordionSize,\n  RdsAccordionTogglePosition,\n} from './accordion-base';\nimport { RdsExpansionPanelHeaderComponent } from './expansion-panel-header.component';\nimport { Subject } from 'rxjs';\nimport { CdkAccordion } from '@angular/cdk/accordion';\n\nlet nextId = 0;\n\n@Directive({\n  selector: 'rds-accordion',\n  exportAs: 'rdsAccordion',\n  providers: [\n    {\n      provide: RDS_ACCORDION,\n      useExisting: RdsAccordionDirective,\n    },\n  ],\n})\nexport class RdsAccordionDirective\n  extends CdkAccordion\n  implements RdsAccordionBase, AfterContentInit, OnDestroy\n{\n  override readonly _stateChanges = new Subject<SimpleChanges>();\n  override readonly _openCloseAllActions = new Subject<boolean>();\n  override readonly id = `rds-accordion-${nextId++}`;\n  private _ownHeaders = new QueryList<RdsExpansionPanelHeaderComponent>();\n  private _keyManager: FocusKeyManager<RdsExpansionPanelHeaderComponent>;\n\n  @ContentChildren(RdsExpansionPanelHeaderComponent, { descendants: true })\n  _headers: QueryList<RdsExpansionPanelHeaderComponent>;\n\n  @Input()\n  size: RdsAccordionSize = 'm';\n\n  @HostBinding('class') get class(): string[] {\n    return ['rds-accordion', `rds-accordion-size-${this.size}`];\n  }\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-accordion-multi')\n  override multi: boolean;\n\n  @Input() togglePosition: RdsAccordionTogglePosition = 'after';\n\n  ngAfterContentInit(): void {\n    this._headers.changes\n      .pipe(startWith(this._headers))\n      .subscribe((headers: QueryList<RdsExpansionPanelHeaderComponent>) => {\n        this._ownHeaders.reset(\n          headers.filter((header) => header.panel.accordion === this),\n        );\n        this._ownHeaders.notifyOnChanges();\n      });\n\n    this._keyManager = new FocusKeyManager(this._ownHeaders)\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._ownHeaders.destroy();\n  }\n\n  _handleHeaderKeydown(event: KeyboardEvent): void {\n    this._keyManager.onKeydown(event);\n  }\n\n  _handleHeaderFocus(header: RdsExpansionPanelHeaderComponent): void {\n    this._keyManager.updateActiveItem(header);\n  }\n}\n","import { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsExpansionPanelComponent } from './expansion-panel.component';\nimport { RdsExpansionPanelContentDirective } from './expansion-panel-content.directive';\nimport {\n  RdsExpansionPanelHeaderComponent,\n  RdsExpansionPanelTitleDirective,\n} from './expansion-panel-header.component';\nimport { RdsIconComponent } from '../icons';\nimport { RdsAccordionDirective } from './accordion.directive';\n\nconst ELEMENTS = [\n  RdsAccordionDirective,\n  RdsExpansionPanelComponent,\n  RdsExpansionPanelHeaderComponent,\n  RdsExpansionPanelTitleDirective,\n  RdsExpansionPanelContentDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, CdkAccordionModule, PortalModule, RdsIconComponent],\n  exports: [...ELEMENTS],\n  declarations: [...ELEMENTS],\n})\nexport class RdsAccordionModule {}\n","/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function throwInvalidSizeError(type: any, size: string): void {\n  throw new Error(`${getClassName(type)}: does not have '${size}' size`);\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function throwInvalidSizePropertyErrorForType(type: any): void {\n  throwInvalidSizePropertyError(getClassName(type));\n}\n\nexport function throwInvalidSizePropertyError(forValue: string): void {\n  throw new Error(`${forValue}: does not have size property`);\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function getClassName(type: any): string {\n  if (type && type.constructor && type.constructor.name) {\n    return type.constructor.name;\n  } else {\n    throw new Error(`${type} is does not have a constructor`);\n  }\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { RdsIconComponent } from '../icons';\nimport { throwInvalidSizeError } from '../core/errors';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nexport type RdsButtonSize = 's' | 'm' | 'l';\n\n@Component({\n  template: '',\n})\nexport class RdsButtonBaseComponent\n  implements AfterContentInit, AfterViewInit, OnDestroy, FocusableOption\n{\n  protected readonly elementRef =\n    inject<ElementRef<HTMLButtonElement>>(ElementRef);\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly contentObserver = inject(ContentObserver);\n\n  protected buttonHostAttributesToClassMapper: { [key: string]: string } = {};\n  protected _defaultSize: RdsButtonSize = 'm';\n\n  protected _size = this._defaultSize;\n  protected _hasIcon = false;\n  protected _hasFirstIcon = false;\n  protected _hasLastIcon = false;\n  protected _hasOnlyIcon = false;\n  protected _pressed = false;\n\n  @Input()\n  get size(): RdsButtonSize {\n    return this._size;\n  }\n\n  set size(size: RdsButtonSize) {\n    if (size !== 's' && size !== 'm' && size !== 'l') {\n      throwInvalidSizeError(this, size);\n    }\n\n    this._size = size;\n  }\n\n  @HostBinding('class.rds-button-active')\n  @Input()\n  set pressed(isPressed: BooleanInput) {\n    const value = this.pressed;\n    this._pressed = booleanAttribute(isPressed);\n\n    if (this.toggle && value !== this._pressed) {\n      this.pressedChange.next(this._pressed);\n    }\n  }\n\n  get pressed(): boolean {\n    return this.toggle && this._pressed;\n  }\n\n  @HostBinding('attr.aria-pressed')\n  get attrToggle(): boolean | null {\n    return this.toggle ? this.pressed : null;\n  }\n\n  @Input({ transform: booleanAttribute })\n  toggle = false;\n\n  get disabled(): boolean {\n    return !!this.elementRef.nativeElement.getAttribute('disabled');\n  }\n\n  @HostBinding('class') get buttonClasses(): string[] {\n    const classesMappedFromHostAttributes = Object.entries(\n      this.buttonHostAttributesToClassMapper,\n    )\n      .filter(([hostAttribute]) => this.hostElement.hasAttribute(hostAttribute))\n      .map(([, buttonClass]) => buttonClass);\n\n    const additionalClasses = [];\n\n    if (this._hasFirstIcon) {\n      additionalClasses.push('rds-button--with-left-icon');\n    }\n\n    if (this._hasLastIcon) {\n      additionalClasses.push('rds-button--with-right-icon');\n    }\n\n    if (this._hasOnlyIcon) {\n      additionalClasses.push('rds-button--with-only-icon');\n    }\n\n    return [\n      'rds-button',\n      `rds-button-${this.size}`,\n      ...classesMappedFromHostAttributes,\n      ...additionalClasses,\n    ];\n  }\n\n  @HostBinding('class.rds-button--with-icon') get hasIcon(): boolean {\n    return this._hasIcon;\n  }\n\n  @ContentChildren(RdsIconComponent) icons: QueryList<RdsIconComponent>;\n\n  @Output()\n  pressedChange = new EventEmitter<boolean>();\n\n  ngAfterContentInit(): void {\n    this.checkIcons();\n    this.icons.changes.subscribe(() => this.checkIcons());\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true);\n    this.contentObserver\n      .observe(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.onContentChange());\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  @HostListener('click')\n  changeToggle(): void {\n    if (this.toggle && !this.disabled) {\n      this.pressed = !this.pressed;\n    }\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.hostElement, origin, options);\n  }\n\n  get hostElement(): HTMLButtonElement {\n    return this.elementRef.nativeElement as HTMLButtonElement;\n  }\n\n  protected checkIcons(): void {\n    this._hasIcon = this.icons.length > 0;\n\n    if (this.hasIcon) {\n      const btnContent = this.elementRef.nativeElement;\n      const firstChild = this._getChild('first');\n      const lastChild = this._getChild('last');\n\n      if (firstChild && firstChild.nodeName) {\n        this._hasFirstIcon = firstChild.nodeName.toUpperCase() === 'RDS-ICON';\n      } else {\n        this._hasFirstIcon = false;\n      }\n\n      if (lastChild && lastChild.nodeName) {\n        this._hasLastIcon =\n          btnContent.lastChild?.nodeName.toUpperCase() === 'RDS-ICON';\n      } else {\n        this._hasLastIcon = false;\n      }\n\n      if (firstChild && firstChild === lastChild) {\n        this._hasOnlyIcon = true;\n        this._hasLastIcon = false;\n        this._hasFirstIcon = false;\n      } else {\n        this._hasOnlyIcon = false;\n      }\n    } else {\n      this._hasLastIcon = false;\n      this._hasLastIcon = false;\n      this._hasOnlyIcon = false;\n    }\n  }\n\n  protected _getButtonClassName(): string {\n    return this.constructor.name;\n  }\n\n  protected onContentChange(): void {\n    this.checkIcons();\n  }\n\n  private _getChild(firstOrLast: 'first' | 'last'): ChildNode | null {\n    let currentChild =\n      firstOrLast === 'first'\n        ? this.elementRef.nativeElement.firstChild\n        : this.elementRef.nativeElement.lastChild;\n\n    while (\n      !currentChild ||\n      currentChild.nodeName.toUpperCase() === '#COMMENT'\n    ) {\n      if (!currentChild) {\n        return null;\n      }\n\n      currentChild =\n        firstOrLast === 'first'\n          ? currentChild.nextSibling\n          : currentChild.previousSibling;\n    }\n\n    return currentChild;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsButtonBaseComponent } from './button-base';\n\n@Component({\n  selector: `\n    button[rds-primary-button],\n    button[rds-warning-button],\n    button[rds-secondary-button],\n    button[rds-secondary-warning-button],\n    button[rdsPrimaryButton],\n    button[rdsWarningButton],\n    button[rdsSecondaryButton],\n    button[rdsSecondaryWarningButton],\n  `,\n  template: '<ng-content />',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsButtonComponent extends RdsButtonBaseComponent {\n  protected override buttonHostAttributesToClassMapper = {\n    'rds-primary-button': 'rds-button--primary',\n    'rds-warning-button': 'rds-button--warning',\n    'rds-secondary-button': 'rds-button--secondary',\n    'rds-secondary-warning-button': 'rds-button--secondary-warning',\n    rdsPrimaryButton: 'rds-button--primary',\n    rdsWarningButton: 'rds-button--warning',\n    rdsSecondaryButton: 'rds-button--secondary',\n    rdsSecondaryWarningButton: 'rds-button--secondary-warning',\n  };\n}\n","export function throwRdsButtonInvalidIconOnlyError(buttonType: string): void {\n  throw Error(`${buttonType}: does not have icon only variant`);\n}\n\nexport function throwRdsButtonInvalidOtherIconOnlyError(\n  buttonType: string,\n): void {\n  throw Error(`${buttonType}: does have icon only variant`);\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsButtonBaseComponent, RdsButtonSize } from './button-base';\nimport { throwRdsButtonInvalidOtherIconOnlyError } from './button-error';\nimport { throwInvalidSizeError } from '../core/errors';\n\n@Component({\n  selector: `\n    button[rds-icon-button],\n    button[rdsIconButton],\n    button[rds-icon-warning-button],\n    button[rdsIconWarningButton],\n  `,\n  template: `<ng-content />`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsIconButtonComponent extends RdsButtonBaseComponent {\n  protected override buttonHostAttributesToClassMapper = {\n    'rds-icon-button': 'rds-button--icon',\n    rdsIconButton: 'rds-button--icon',\n    'rds-icon-warning-button': 'rds-button--icon-warning',\n    rdsnIconWarningButton: 'rds-button--icon-warning',\n  };\n\n  override _defaultSize: RdsButtonSize = 's';\n  override _size = this._defaultSize;\n\n  @Input()\n  override get size(): RdsButtonSize {\n    return this._size;\n  }\n\n  override set size(size: RdsButtonSize) {\n    if (size !== 's' && size !== 'm') {\n      throwInvalidSizeError(this, size);\n    }\n\n    this._size = size;\n  }\n\n  protected override checkIcons(): void {\n    super.checkIcons();\n\n    if (this.hasIcon && !this._hasOnlyIcon) {\n      this.cleanIconProperties();\n      throwRdsButtonInvalidOtherIconOnlyError(this._getButtonClassName());\n    }\n\n    this.cleanIconProperties();\n  }\n\n  private cleanIconProperties(): void {\n    this._hasFirstIcon = false;\n    this._hasLastIcon = false;\n    this._hasOnlyIcon = false;\n    this._hasIcon = false;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsButtonBaseComponent } from './button-base';\n\n@Component({\n  selector: `\n    button[rds-fab-button],\n    button[rdsFabButton],\n  `,\n  template: '<ng-content />',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsFabButtonComponent extends RdsButtonBaseComponent {\n  protected override buttonHostAttributesToClassMapper = {\n    'rds-fab-button': 'rds-button--fab',\n    rdsFabButton: 'rds-button--fab',\n  };\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsButtonBaseComponent, RdsButtonSize } from './button-base';\nimport { throwRdsButtonInvalidIconOnlyError } from './button-error';\nimport { throwInvalidSizeError } from '../core/errors';\n\n@Component({\n  selector: `\n    button[rds-text-button],\n    button[rdsTextButton],\n    button[rds-text-warning-button],\n    button[rdsTextWarningButton],\n  `,\n  template: '<ng-content />',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsTextButtonComponent extends RdsButtonBaseComponent {\n  protected override buttonHostAttributesToClassMapper = {\n    'rds-text-button': 'rds-button--text',\n    rdsTextButton: 'rds-button--text',\n    'rds-text-warning-button': 'rds-button--text-warning',\n    rdsTextWarningButton: 'rds-button--text-warning',\n  };\n\n  @Input()\n  override get size(): RdsButtonSize {\n    return this._size;\n  }\n\n  override set size(size: RdsButtonSize) {\n    if (size !== 's' && size !== 'm' && size !== 'l') {\n      throwInvalidSizeError(this, size);\n    }\n\n    this._size = size;\n  }\n\n  protected override checkIcons(): void {\n    super.checkIcons();\n\n    if (this._hasOnlyIcon) {\n      throwRdsButtonInvalidIconOnlyError(this._getButtonClassName());\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsButtonComponent } from './button.component';\nimport { RdsIconComponent } from '../icons';\nimport { RdsIconButtonComponent } from './icon-button.component';\nimport { RdsButtonBaseComponent } from './button-base';\nimport { RdsFabButtonComponent } from './fab-button.component';\nimport { RdsTextButtonComponent } from './text-button.component';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nconst ELEMENTS = [\n  RdsButtonComponent,\n  RdsIconButtonComponent,\n  RdsFabButtonComponent,\n  RdsTextButtonComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, ObserversModule, RdsIconComponent],\n  declarations: [RdsButtonBaseComponent, ...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsButtonModule {}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { RdsButtonModule } from '../button';\nimport { RdsIconComponent } from '../icons';\n\nexport type RdsAlertType = 'info' | 'warning' | 'error' | 'success';\ntype RdsAlertIcon =\n  | 'info'\n  | 'warning_triangle'\n  | 'close_circle'\n  | 'checkmark_circle';\n\nconst TYPE_TO_ICON: Readonly<Record<RdsAlertType, RdsAlertIcon>> =\n  Object.freeze({\n    info: 'info',\n    warning: 'warning_triangle',\n    error: 'close_circle',\n    success: 'checkmark_circle',\n  });\n\n@Component({\n  selector: 'rds-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [RdsIconComponent, RdsButtonModule],\n})\nexport class RdsAlertComponent {\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  @Output() closeAlert = new EventEmitter<void>();\n\n  protected icon: RdsAlertIcon = 'info';\n\n  @Input()\n  set type(value: RdsAlertType) {\n    this._type = value;\n    this.icon = TYPE_TO_ICON[this._type];\n    this.cdr.markForCheck();\n  }\n\n  get type(): RdsAlertType {\n    return this._type;\n  }\n\n  private _type: RdsAlertType = 'info';\n\n  @Input()\n  set opened(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (this._opened !== newValue) {\n      this._opened = newValue;\n\n      if (!this._opened) {\n        this.closeAlert.emit();\n      }\n    }\n  }\n\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  private _opened = true;\n\n  @Input({ transform: booleanAttribute }) showIcon = true;\n  @Input({ transform: booleanAttribute }) closable = false;\n\n  onClose(): void {\n    this.opened = false;\n  }\n}\n","@if (opened) {\n  <div [className]=\"'rds-alert rds-alert-' + type\">\n    @if (showIcon) {\n      <rds-icon class=\"rds-alert-icon\" namespace=\"outlined\" [icon]=\"icon\" />\n    }\n    <div class=\"rds-alert-content\">\n      <ng-content />\n    </div>\n    @if (closable) {\n      <button\n        rds-icon-button\n        size=\"s\"\n        class=\"rds-alert-close\"\n        (click)=\"onClose()\"\n      >\n        <rds-icon namespace=\"outlined\" icon=\"close\" />\n      </button>\n    }\n  </div>\n}\n","import { NgModule } from '@angular/core';\nimport { RdsAlertComponent } from './alert.component';\n\n@NgModule({\n  exports: [RdsAlertComponent],\n  imports: [RdsAlertComponent],\n})\nexport class RdsAlertModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector:\n    'rds-avatar-description, [rds-avatar-description], [rdsAvatarDescription]',\n  standalone: true,\n})\nexport class RdsAvatarDescriptionDirective {\n  @HostBinding('class') class = 'rds-avatar-description';\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const MAX_VISIBLE_AVATARS_IN_GROUP = 3;\nexport const RDS_AVATAR_MAX_IN_GROUP = new InjectionToken<number>(\n  'RDS_AVATAR_MAX_IN_GROUP',\n  {\n    providedIn: 'root',\n    factory: () => MAX_VISIBLE_AVATARS_IN_GROUP,\n  },\n);\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-icon[rds-avatar-icon], rds-icon[rdsAvatarIcon]',\n  standalone: true,\n})\nexport class RdsAvatarIconDirective {\n  @HostBinding('class') class = 'rds-avatar-icon';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'img[rds-avatar-image], img[rdsAvatarImage]',\n  standalone: true,\n})\nexport class RdsAvatarImageDirective {\n  @HostBinding('class') class = 'rds-avatar-image';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-avatar-initials], [rdsAvatarInitials]',\n  standalone: true,\n})\nexport class RdsAvatarInitialsDirective {\n  @HostBinding('class') class = 'rds-avatar-initials';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-avatar-label, [rds-avatar-label], [rdsAvatarLabel]',\n  standalone: true,\n})\nexport class RdsAvatarLabelDirective {\n  @HostBinding('class') class = 'rds-avatar-label';\n}\n","import { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterViewInit,\n  Attribute,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsAvatarDescriptionDirective } from './avatar-description.directive';\nimport { RdsAvatarIconDirective } from './avatar-icon.directive';\nimport { RdsAvatarImageDirective } from './avatar-image.directive';\nimport { RdsAvatarInitialsDirective } from './avatar-initials.directive';\nimport { RdsAvatarLabelDirective } from './avatar-label.directive';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\nimport { RdsIconComponent } from '../icons';\n\nexport type RdsAvatarSize = 'xs' | 's' | 'm' | 'l' | 'xl';\n\n@Component({\n  selector: 'rds-avatar',\n  template: `\n    <div class=\"rds-avatar__container\">\n      <div class=\"rds-avatar-overlay\"></div>\n      <ng-content select=\"img[rds-avatar-image], img[rdsAvatarImage]\" />\n      @if (!avatarImage) {\n        <ng-content\n          select=\"rds-icon[rds-avatar-icon], rds-icon[rdsAvatarIcon]\"\n        />\n      }\n      @if (!avatarImage && !avatarIcon) {\n        <ng-content select=\"[rds-avatar-initials], [rdsAvatarInitials]\" />\n      }\n    </div>\n    <div [class.rds-avatar__name-wrapper]=\"avatarLabel || avatarDescription\">\n      <ng-content\n        select=\"rds-avatar-label, [rds-avatar-label], [rdsAvatarLabel]\"\n      />\n      <ng-content\n        select=\"rds-avatar-description, [rds-avatar-description], [rdsAvatarDescription]\"\n      />\n    </div>\n  `,\n  styleUrls: ['./avatar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [RdsIconComponent],\n})\nexport class RdsAvatarComponent\n  implements AfterViewInit, OnDestroy, FocusableOption\n{\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly elementRef = inject(ElementRef);\n  private readonly renderer = inject(Renderer2);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly destroyRef = inject(DestroyRef);\n\n  @ContentChild(RdsAvatarImageDirective) avatarImage: RdsAvatarImageDirective;\n  @ContentChild(RdsAvatarIconDirective) avatarIcon: RdsAvatarIconDirective;\n  @ContentChild(RdsAvatarInitialsDirective)\n  avatarInitials: RdsAvatarInitialsDirective;\n  @ContentChild(RdsAvatarLabelDirective) avatarLabel: RdsAvatarLabelDirective;\n  @ContentChild(RdsAvatarDescriptionDirective)\n  avatarDescription: RdsAvatarDescriptionDirective;\n\n  @HostBinding('tabIndex')\n  get attrTabIndex(): number {\n    return this.disableInteractions ? TAB_INDEX_NOT_FOCUSABLE : this.tabIndex;\n  }\n\n  @Input({ transform: (v: unknown) => numberAttribute(v, TAB_INDEX_DEFAULT) })\n  tabIndex = TAB_INDEX_DEFAULT;\n\n  @HostBinding('class') get class(): string[] {\n    const classes = ['rds-avatar', `rds-avatar-${this.size}`];\n\n    if (this.disableInteractions) {\n      classes.push('rds-avatar-disable-interactions');\n    }\n\n    return classes;\n  }\n\n  @Input() size: RdsAvatarSize = 'm';\n\n  @Input({ transform: booleanAttribute })\n  disableInteractions = false;\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, false);\n    this.contentObserver\n      .observe(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n  }\n\n  _hasHiddenStyle(): boolean {\n    return this.elementRef.nativeElement.style.display === 'none';\n  }\n\n  _setHiddenStyles(): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n  }\n\n  _clearHiddenStyles(): void {\n    this.renderer.removeStyle(this.elementRef.nativeElement, 'display');\n  }\n}\n","import { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, Subject } from 'rxjs';\nimport { RDS_AVATAR_MAX_IN_GROUP } from './avatar-group-max-items';\nimport { RdsAvatarComponent, RdsAvatarSize } from './avatar.component';\nimport { startWith } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'rds-avatar-group',\n  template: `\n    <ng-content select=\"rds-avatar\" />\n    @if (hiddenElements) {\n      <rds-avatar [size]=\"size\" [disableInteractions]=\"disableInteractions\">\n        <span rds-avatar-initials>+{{ hiddenElements }}</span>\n      </rds-avatar>\n    }\n  `,\n  styleUrls: ['./avatar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [RdsAvatarComponent],\n})\nexport class RdsAvatarGroupComponent implements AfterContentInit, OnDestroy {\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly elementRef = inject(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly defaultMaxInGroup = inject(RDS_AVATAR_MAX_IN_GROUP);\n  private readonly _stateChanges = new Subject<void>();\n\n  @HostBinding('class') class = 'rds-avatar-group';\n\n  hiddenElements = 0;\n\n  @Input() size: RdsAvatarSize = 'm';\n\n  @Input()\n  set disableInteractions(value: BooleanInput) {\n    this._disableInteractions = booleanAttribute(value);\n    this.checkChildInputs();\n  }\n\n  get disableInteractions(): boolean {\n    return this._disableInteractions;\n  }\n\n  private _disableInteractions = false;\n\n  @Input()\n  set maxInGroup(maxInGroup: NumberInput) {\n    const value = numberAttribute(maxInGroup, -1);\n    const previousValue = this._maxInGroup;\n    this._maxInGroup = value >= 0 ? value : this.defaultMaxInGroup;\n\n    if (this._maxInGroup !== previousValue) {\n      this._stateChanges.next();\n    }\n  }\n\n  get maxInGroup(): number {\n    return this._maxInGroup;\n  }\n\n  private _maxInGroup = this.defaultMaxInGroup;\n\n  @ContentChildren(RdsAvatarComponent)\n  avatarList: QueryList<RdsAvatarComponent>;\n\n  ngAfterContentInit(): void {\n    merge(\n      this._stateChanges,\n      this.avatarList.changes,\n      this.contentObserver.observe(this.elementRef),\n    )\n      .pipe(startWith(null), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        const visibilityChanged = this.checkVisibility();\n\n        if (visibilityChanged) {\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  private checkVisibility(): boolean {\n    let visibilityChanged = this.checkHiddenElements();\n\n    this.avatarList.forEach((item, index) => {\n      if (index < this.maxInGroup) {\n        if (item._hasHiddenStyle()) {\n          item._clearHiddenStyles();\n          visibilityChanged = true;\n        }\n      } else if (!item._hasHiddenStyle()) {\n        item._setHiddenStyles();\n        visibilityChanged = true;\n      }\n    });\n\n    this.checkChildInputs();\n\n    return visibilityChanged;\n  }\n\n  private checkChildInputs(): void {\n    Promise.resolve().then(() => {\n      this.avatarList\n        .filter((i) => i.size !== this.size)\n        .forEach((i) => (i.size = this.size));\n      this.avatarList\n        .filter((i) => i.disableInteractions !== this.disableInteractions)\n        .forEach((i) => (i.disableInteractions = this.disableInteractions));\n    });\n  }\n\n  private checkHiddenElements(): boolean {\n    const previous = this.hiddenElements;\n    this.hiddenElements =\n      this.avatarList?.length > this.maxInGroup\n        ? this.avatarList.length - this.maxInGroup\n        : 0;\n\n    return previous !== this.hiddenElements;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RdsAvatarDescriptionDirective } from './avatar-description.directive';\nimport { RdsAvatarGroupComponent } from './avatar-group.component';\nimport { RdsAvatarIconDirective } from './avatar-icon.directive';\nimport { RdsAvatarImageDirective } from './avatar-image.directive';\nimport { RdsAvatarInitialsDirective } from './avatar-initials.directive';\nimport { RdsAvatarLabelDirective } from './avatar-label.directive';\nimport { RdsAvatarComponent } from './avatar.component';\n\nexport const RDS_AVATAR_DIRECTIVES = [\n  RdsAvatarComponent,\n  RdsAvatarDescriptionDirective,\n  RdsAvatarGroupComponent,\n  RdsAvatarImageDirective,\n  RdsAvatarIconDirective,\n  RdsAvatarInitialsDirective,\n  RdsAvatarLabelDirective,\n] as const;\n\n@NgModule({\n  imports: [...RDS_AVATAR_DIRECTIVES],\n  exports: [...RDS_AVATAR_DIRECTIVES],\n})\nexport class RdsAvatarModule {}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { RdsListItemSize } from './list-item.component';\n\n@Directive({\n  selector: 'rds-header-list-item, [rds-header-list-item], [rdsHeaderListItem]',\n})\nexport class RdsHeaderListItemDirective {\n  @Input() size: RdsListItemSize = 'l';\n\n  @HostBinding('class')\n  protected get class(): string {\n    return `rds-header-list-item rds-header-list-item--${this.size}`;\n  }\n}\n","export const RDS_LIST_ITEM_TEMPLATE = `<ng-content select=\"rds-icon\"></ng-content>\n<span class=\"rds-list-item-text\">\n  <ng-content />\n</span>\n`;\n\nexport const RDS_NESTABLE_LIST_ITEM_TEMPLATE = `${RDS_LIST_ITEM_TEMPLATE}\n@if (hasChildItems) {\n  <rds-icon\n    namespace=\"outlined\"\n    icon=\"chevron_right\"\n    class=\"rds-list-item__has-child-items\"\n  />\n}`;\n\nexport const RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE = `<ng-content select=\"rds-avatar\"/>\n${RDS_LIST_ITEM_TEMPLATE}\n<rds-icon icon=\"checkmark\" class=\"rds-list-item-checkmark\"/>`;\n\nexport const RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE = `<ng-content select=\"rds-avatar\"/>\n<ng-content select=\"rds-icon\"/>\n@if (!avatar && !icon) {\n    <rds-pseudo-checkbox\n      noSpacing\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n    />\n}\n<span class=\"rds-list-item-text\">\n  <ng-content/>\n</span>\n@if (avatar || icon) {\n    <rds-pseudo-checkbox\n      noSpacing\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      class=\"rds-list-item__checkbox-right\"\n    />\n}\n`;\n","import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { RdsIconComponent } from '../icons';\nimport { RDS_LIST_ITEM_TEMPLATE } from './list-item.templates';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\nexport type RdsListItemSize = 's' | 'm' | 'l';\n\n@Component({\n  template: RDS_LIST_ITEM_TEMPLATE,\n  selector: 'button[rds-list-item], button[rdsListItem]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsListItemComponent implements FocusableOption {\n  protected readonly elementRef =\n    inject<ElementRef<HTMLButtonElement>>(ElementRef);\n  protected readonly renderer = inject(Renderer2);\n\n  @ContentChild(RdsIconComponent) protected icon: RdsIconComponent;\n\n  readonly _focused = new Subject<RdsListItemComponent>();\n\n  @Input() size: RdsListItemSize = 'm';\n\n  @Input()\n  @HostBinding('attr.role')\n  role: 'menuitem' | 'option' = 'menuitem';\n\n  @HostBinding('tabIndex')\n  protected readonly tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @HostBinding('class')\n  protected get cssClasses(): string[] {\n    return [\n      'rds-list-item',\n      `rds-list-item--${this.size}`,\n      'rds-focus-indicator',\n    ];\n  }\n\n  @HostBinding('class.rds-list-item--disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n\n  @HostBinding('attr.aria-disabled')\n  protected get attrAriaDisabled(): string {\n    return this.disabled.toString();\n  }\n\n  @HostBinding('attr.disabled')\n  protected get attrDisabled(): 'disabled' | null {\n    return this.disabled ? 'disabled' : null;\n  }\n\n  @HostListener('focus')\n  focus(origin?: FocusOrigin): void {\n    if (origin === 'keyboard') {\n      this.renderer.addClass(this.elementRef.nativeElement, 'cdk-focused');\n      this.renderer.addClass(\n        this.elementRef.nativeElement,\n        'cdk-keyboard-focused',\n      );\n    }\n\n    this._focused.next(this);\n  }\n\n  @HostListener('blur')\n  blur(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement, 'cdk-focused');\n    this.renderer.removeClass(\n      this.elementRef.nativeElement,\n      'cdk-keyboard-focused',\n    );\n    this.markAsInactive();\n  }\n\n  click(): void {\n    this.elementRef.nativeElement.click();\n  }\n\n  getLabel(): string {\n    const clone = this.elementRef.nativeElement.cloneNode(true) as HTMLElement;\n    this.removeNodes(clone.querySelectorAll('rds-icon'));\n    this.removeNodes(clone.querySelectorAll('rds-avatar'));\n    this.removeNodes(clone.querySelectorAll('rds-pseudo-checkbox'));\n\n    return clone.textContent?.trim() || '';\n  }\n\n  markAsActive(): void {\n    this.renderer.addClass(\n      this.elementRef.nativeElement,\n      'rds-list-item-active',\n    );\n  }\n\n  markAsInactive(): void {\n    this.renderer.removeClass(\n      this.elementRef.nativeElement,\n      'rds-list-item-active',\n    );\n  }\n\n  private removeNodes(nodes: NodeListOf<Element>): void {\n    for (let i = 0; i < nodes.length; i++) {\n      nodes[i].remove();\n    }\n  }\n}\n","import { RdsCheckboxComponent } from './checkbox.component';\n\nexport class RdsCheckboxChangeEvent {\n  source: RdsCheckboxComponent;\n  checked: boolean;\n}\n","import { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  numberAttribute,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlContainer,\n  ControlValueAccessor,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { noop } from 'rxjs';\nimport { RdsCheckboxChangeEvent } from './checkbox-change.event';\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  TAB_INDEX_DEFAULT,\n  TAB_INDEX_NOT_FOCUSABLE,\n  updateErrorState,\n} from '../utils';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextUniqueId = 0;\n\nexport const rdsCheckboxAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('200ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n\nexport type RdsCheckboxSize = 's' | 'm' | 'l';\n\nexport const enum TransitionCheckState {\n  Init,\n  Checked,\n  Unchecked,\n  Indeterminate,\n}\n\n@Component({\n  selector: 'rds-checkbox',\n  template: `\n    <div class=\"rds-checkbox__wrapper\">\n      <label [attr.for]=\"inputId\" class=\"rds-checkbox__container\" #label>\n        <div class=\"rds-checkbox__checkbox-container\">\n          <input\n            #input\n            class=\"rds-checkbox__native-checkbox cdk-visually-hidden\"\n            type=\"checkbox\"\n            [id]=\"inputId\"\n            [required]=\"required\"\n            [checked]=\"checked\"\n            [attr.value]=\"value\"\n            [disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            [tabIndex]=\"tabIndex\"\n            [attr.aria-label]=\"ariaLabel || null\"\n            [attr.aria-labelledby]=\"ariaLabelledby\"\n            [attr.aria-checked]=\"ariaChecked\"\n            [attr.aria-describedby]=\"ariaDescribedby\"\n            (click)=\"onInputClick($event)\"\n          />\n          <div class=\"rds-checkbox__overlay\"></div>\n          <div class=\"rds-checkbox__frame\"></div>\n          <div class=\"rds-checkbox__background\">\n            <svg\n              focusable=\"false\"\n              class=\"rds-checkbox__checkmark\"\n              viewBox=\"0 0 24 24\"\n              xml:space=\"preserve\"\n            >\n              <path\n                class=\"rds-checkbox__checkmark-path\"\n                fill=\"none\"\n                d=\"M4.1,12.7 9,17.6 20.3,6.3\"\n              />\n            </svg>\n            <div class=\"rds-checkbox__indeterminate-mark\"></div>\n          </div>\n        </div>\n        <span\n          class=\"rds-checkbox__label\"\n          [ngClass]=\"'rds-checkbox__label--' + size\"\n          #checkboxLabel\n          (cdkObserveContent)=\"onLabelTextChange()\"\n        >\n          @if (required && !disabled) {\n            <span class=\"rds-asterisk\">&#32;* </span>\n          }\n          <!-- Add an invisible span so JAWS can read the label -->\n          <span style=\"display:none\">&nbsp;</span>\n          <ng-content />\n        </span>\n      </label>\n    </div>\n    <div class=\"rds-checkbox__subscript-wrapper\">\n      @switch (isErrorMessageVisible) {\n        @case (true) {\n          <div\n            class=\"rds-checkbox__subscript rds-checkbox__subscript--error\"\n            [@transitionMessages]=\"subscriptAnimationState\"\n          >\n            <ng-content select=\"rds-control-error\" />\n          </div>\n        }\n        @case (false) {\n          <div\n            class=\"rds-checkbox__subscript rds-checkbox__subscript--hint\"\n            [@transitionMessages]=\"subscriptAnimationState\"\n          >\n            <ng-content select=\"rds-control-hint\" />\n          </div>\n        }\n      }\n    </div>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RdsCheckboxComponent),\n      multi: true,\n    },\n  ],\n  styleUrls: ['./checkbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [rdsCheckboxAnimations.transitionMessages],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsCheckboxComponent\n  implements\n    ControlValueAccessor,\n    AfterViewInit,\n    AfterContentInit,\n    DoCheck,\n    OnDestroy,\n    OnInit,\n    FocusableOption\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly ngZone = inject(NgZone);\n  private readonly parentForm = inject(NgForm, { optional: true });\n  private readonly parentFormGroup = inject(FormGroupDirective, {\n    optional: true,\n  });\n  private readonly controlContainer = inject(ControlContainer, {\n    optional: true,\n    host: true,\n    skipSelf: true,\n  });\n\n  private _required: boolean;\n  private _uniqueId = `rds-checkbox-${++nextUniqueId}`;\n  private _currentAnimationClass = '';\n  private _errorState = false;\n  private _tabIndex = TAB_INDEX_DEFAULT;\n  private _indeterminate = false;\n  private _control: AbstractControl | null | undefined;\n\n  private _currentCheckState = TransitionCheckState.Init;\n\n  subscriptAnimationState: '' | 'enter' = '';\n\n  @ViewChild('checkboxLabel') checkboxLabel: ElementRef;\n\n  @HostBinding('class') readonly hostClass = 'rds-checkbox';\n  @HostBinding('tabIndex') readonly hostTabindex: string;\n\n  @HostBinding('attr.id') get getHostId(): string {\n    return this._uniqueId;\n  }\n\n  @HostBinding('class.rds-checkbox--indeterminate')\n  get hostIndeterminate(): boolean {\n    return this.indeterminate;\n  }\n\n  @HostBinding('class.rds-checkbox--checked') get hostChecked(): boolean {\n    return this.checked;\n  }\n\n  @HostBinding('class.rds-checkbox--disabled') get hostDisabled(): boolean {\n    return this.disabled;\n  }\n\n  @HostBinding('class.rds-checkbox--invalid')\n  get errorState(): boolean {\n    return this._errorState;\n  }\n\n  @Input() id = this._uniqueId;\n  @Input() value: string;\n  @Input() name: string;\n  @Input() size: RdsCheckboxSize = 'l';\n\n  @Input('aria-label') ariaLabel = '';\n  @Input('aria-labelledby') ariaLabelledby: string;\n  @Input('aria-describedby') ariaDescribedby: string;\n  @Input() formControlName: string;\n\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  @Input({ transform: booleanAttribute }) checked = false;\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @Input()\n  set indeterminate(value: BooleanInput) {\n    this._indeterminate = booleanAttribute(value);\n\n    if (this.indeterminate) {\n      this.transitionCheckState(TransitionCheckState.Indeterminate);\n    } else {\n      this.transitionCheckState(\n        this.checked\n          ? TransitionCheckState.Checked\n          : TransitionCheckState.Unchecked,\n      );\n    }\n\n    this.syncIndeterminate(this.indeterminate);\n  }\n\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    if (this._control && this._control?.hasValidator(Validators.required)) {\n      return this._control?.hasValidator(Validators.required) ?? null;\n    }\n\n    return this._required ?? null;\n  }\n\n  @Input()\n  set required(value: BooleanInput) {\n    this._required = booleanAttribute(value);\n  }\n\n  get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  @Output() readonly changed = new EventEmitter<RdsCheckboxChangeEvent>();\n\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  _onChange: (value: boolean) => void = noop;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  _onTouched: () => any = noop;\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n  get ariaChecked(): 'true' | 'false' | 'mixed' {\n    if (this.checked) {\n      return 'true';\n    }\n\n    return this.indeterminate ? 'mixed' : 'false';\n  }\n\n  ngOnInit(): void {\n    if (this.controlContainer) {\n      if (this.formControlName) {\n        this._control = this.controlContainer.control?.get(\n          this.formControlName,\n        );\n      } else {\n        // Missing FormControlName directive from host element of the component\n      }\n    } else {\n      // Can't find parent FormGroup directive\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this._control) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this._errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this._control,\n      );\n    }\n  }\n\n  ngAfterContentInit(): void {\n    const control = this._control;\n\n    if (control && control.valueChanges) {\n      control.valueChanges\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          control?.markAsDirty();\n          control?.markAsTouched();\n          this.cdr.markForCheck();\n        });\n    }\n\n    const parent = this.parentFormGroup || this.parentForm;\n\n    if (parent) {\n      parent.ngSubmit\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.checkboxLabel.nativeElement.innerText) {\n      this.elementRef.nativeElement.classList.add('rds-checkbox-with-label');\n    }\n\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .subscribe((focusOrigin) => {\n        if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state change\n          // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n          // telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => {\n            this._onTouched();\n            this.cdr.markForCheck();\n          });\n        }\n      });\n\n    this.subscriptAnimationState = 'enter'; // Avoid animations on load.\n    this.cdr.detectChanges();\n\n    this.syncIndeterminate(this.indeterminate);\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  get isErrorMessageVisible(): boolean {\n    return this.errorState;\n  }\n\n  onLabelTextChange(): void {\n    if (this.checkboxLabel.nativeElement.innerText) {\n      this.elementRef.nativeElement.classList.add('rds-checkbox-with-label');\n    } else {\n      this.elementRef.nativeElement.classList.remove('rds-checkbox-with-label');\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  // start ControlValueAccessor - part\n  writeValue(value: boolean): void {\n    this.checked = value;\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this._onChange = fn;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.disabled !== isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n\n  // end ControlValueAccessor - part\n\n  onInputClick(event: Event): void {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n\n    if (this.disabled) {\n      return;\n    }\n\n    Promise.resolve().then(() => (this.indeterminate = false));\n\n    this.toggle();\n    this.transitionCheckState(\n      this.checked\n        ? TransitionCheckState.Checked\n        : TransitionCheckState.Unchecked,\n    );\n    this.emitChangedEvent();\n  }\n\n  focus(origin: FocusOrigin = 'keyboard', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this._inputElement, origin, options);\n  }\n\n  private getAnimationClassForCheckStateTransition(\n    oldState: TransitionCheckState,\n    newState: TransitionCheckState,\n  ): string {\n    let animSuffix = '';\n\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        if (newState === TransitionCheckState.Checked) {\n          animSuffix = 'unchecked-checked';\n        } else if (newState === TransitionCheckState.Indeterminate) {\n          animSuffix = 'unchecked-indeterminate';\n        } else {\n          return '';\n        }\n\n        break;\n      case TransitionCheckState.Unchecked:\n        animSuffix =\n          newState === TransitionCheckState.Checked\n            ? 'unchecked-checked'\n            : 'unchecked-indeterminate';\n        break;\n      case TransitionCheckState.Checked:\n        animSuffix =\n          newState === TransitionCheckState.Unchecked\n            ? 'checked-unchecked'\n            : 'checked-indeterminate';\n        break;\n      case TransitionCheckState.Indeterminate:\n        animSuffix =\n          newState === TransitionCheckState.Checked\n            ? 'indeterminate-checked'\n            : 'indeterminate-unchecked';\n        break;\n    }\n\n    return `rds-checkbox-animation--${animSuffix}`;\n  }\n\n  private transitionCheckState(newState: TransitionCheckState): void {\n    const oldState = this._currentCheckState;\n    const element: HTMLElement = this.elementRef.nativeElement;\n\n    if (oldState === newState) {\n      return;\n    }\n\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n\n    this._currentAnimationClass = this.getAnimationClassForCheckStateTransition(\n      oldState,\n      newState,\n    );\n    this._currentCheckState = newState;\n\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n\n  private toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  private emitChangedEvent(): void {\n    const event = new RdsCheckboxChangeEvent();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._onChange(this.checked);\n    this.changed.emit(event);\n  }\n\n  private syncIndeterminate(value: boolean): void {\n    const nativeCheckbox = this._inputElement;\n\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'rds-pseudo-checkbox',\n  template: `\n    <div class=\"rds-pseudo-checkbox__container\">\n      <div class=\"rds-pseudo-checkbox__checkbox-container\">\n        <div class=\"rds-pseudo-checkbox__frame\"></div>\n        <div class=\"rds-pseudo-checkbox__background\">\n          <svg\n            focusable=\"false\"\n            class=\"rds-pseudo-checkbox__checkmark\"\n            viewBox=\"0 0 24 24\"\n            xml:space=\"preserve\"\n          >\n            <path\n              class=\"rds-pseudo-checkbox__checkmark-path\"\n              fill=\"none\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"\n            />\n          </svg>\n          <div class=\"rds-pseudo-checkbox__indeterminate-mark\"></div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./pseudo-checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsPseudoCheckboxComponent {\n  @HostBinding('class') readonly hostClass = 'rds-pseudo-checkbox';\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-pseudo-checkbox--checked')\n  checked = false;\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-pseudo-checkbox--disabled')\n  disabled = false;\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-pseudo-checkbox--indeterminate')\n  indeterminate = false;\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-pseudo-checkbox--no-spacing')\n  noSpacing = false;\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nlet nextUniqueId = 0;\n\n@Directive({\n  selector: 'rds-control-hint',\n})\nexport class RdsHintDirective {\n  private _id = `rds-control-hint-${nextUniqueId++}`;\n\n  @Input()\n  @HostBinding('attr.id')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    this._id = newId;\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nlet nextUniqueId = 0;\n\n@Directive({\n  selector: 'rds-control-error',\n})\nexport class RdsErrorDirective {\n  private _id = `rds-control-error-${nextUniqueId++}`;\n\n  @HostBinding('attr.role') readonly hostRole = 'alert';\n\n  @Input()\n  @HostBinding('attr.id')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    this._id = newId;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RdsHintDirective } from './hint.directive';\nimport { RdsErrorDirective } from './error.directive';\n\n@NgModule({\n  declarations: [RdsErrorDirective, RdsHintDirective],\n  exports: [RdsErrorDirective, RdsHintDirective],\n})\nexport class RdsHelperTextModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsCheckboxComponent } from './checkbox.component';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { RdsPseudoCheckboxComponent } from './pseudo-checkbox.component';\nimport { RdsHelperTextModule } from '../form-field/helper-text.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ObserversModule,\n    RdsHelperTextModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [RdsCheckboxComponent, RdsPseudoCheckboxComponent],\n  exports: [RdsCheckboxComponent, RdsPseudoCheckboxComponent],\n})\nexport class RdsCheckboxModule {}\n","import { FocusOrigin } from '@angular/cdk/a11y';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { RdsAvatarComponent, RdsAvatarSize } from '../avatar';\nimport { RdsListItemComponent, RdsListItemSize } from './list-item.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst RDS_LIST_ITEM_SIZE_TO_AVATAR_SIZE_MAP: Record<\n  RdsListItemSize,\n  RdsAvatarSize\n> = {\n  s: 'xs',\n  m: 's',\n  l: 'm',\n};\n\n@Component({ template: '' })\nexport abstract class RdsAbstractSelectableListItemComponent\n  extends RdsListItemComponent\n  implements AfterViewInit, OnChanges\n{\n  private readonly destroyRef = inject(DestroyRef);\n  protected readonly contentObserver = inject(ContentObserver);\n  protected readonly cdr = inject(ChangeDetectorRef);\n\n  @ContentChild(RdsAvatarComponent) protected avatar: RdsAvatarComponent;\n\n  @Output() readonly checkedChanged = new EventEmitter<boolean>();\n\n  @Input()\n  @HostBinding('attr.role')\n  override role: 'menuitem' | 'option' = 'option';\n\n  @HostBinding('class')\n  protected override get cssClasses(): string[] {\n    return [...super.cssClasses, this.getSelectTypeClass()];\n  }\n\n  @HostBinding('class.rds-list-item--checked')\n  @Input({ transform: booleanAttribute })\n  checked = false;\n\n  ngAfterViewInit(): void {\n    this.contentObserver\n      .observe(this.elementRef.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.avatar) {\n          this.avatar.disableInteractions = true;\n          this.adjustAvatarSize();\n        }\n\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['size']) {\n      this.adjustAvatarSize();\n    }\n  }\n\n  @HostListener('click')\n  toggle(): void {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.checkedChanged.emit(this.checked);\n      this.cdr.markForCheck();\n    }\n  }\n\n  protected abstract getSelectTypeClass(): string;\n\n  private adjustAvatarSize(): void {\n    if (\n      this.avatar &&\n      this.avatar.size !== RDS_LIST_ITEM_SIZE_TO_AVATAR_SIZE_MAP[this.size]\n    ) {\n      this.avatar.size = RDS_LIST_ITEM_SIZE_TO_AVATAR_SIZE_MAP[this.size];\n    }\n  }\n\n  override focus(origin?: FocusOrigin): void {\n    this.renderer.addClass(this.elementRef.nativeElement, 'cdk-focused');\n\n    if (origin === 'keyboard') {\n      this.renderer.addClass(\n        this.elementRef.nativeElement,\n        'cdk-keyboard-focused',\n      );\n    }\n\n    this.cdr.markForCheck();\n    this._focused.next(this);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsListItemComponent } from './list-item.component';\nimport { RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE } from './list-item.templates';\nimport { RdsAbstractSelectableListItemComponent } from './abstract-selectable-list-item.component';\n\n@Component({\n  template: RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE,\n  selector:\n    'button[rds-multi-select-list-item], button[rdsMultiSelectListItem]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RdsListItemComponent,\n      useExisting: RdsMultiSelectListItemComponent,\n    },\n  ],\n})\nexport class RdsMultiSelectListItemComponent extends RdsAbstractSelectableListItemComponent {\n  @HostBinding('class.rds-list-item--checked')\n  @HostBinding('attr.aria-checked')\n  protected get checkedBindings(): boolean {\n    return this.checked;\n  }\n\n  protected override getSelectTypeClass(): string {\n    return 'rds-multi-select-list-item';\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsListItemComponent } from './list-item.component';\nimport { RDS_NESTABLE_LIST_ITEM_TEMPLATE } from './list-item.templates';\n\n@Component({\n  template: RDS_NESTABLE_LIST_ITEM_TEMPLATE,\n  selector: 'button[rds-nestable-list-item], button[rdsNestableListItem]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RdsListItemComponent,\n      useExisting: RdsNestableListItemComponent,\n    },\n  ],\n})\nexport class RdsNestableListItemComponent extends RdsListItemComponent {\n  @HostBinding('class')\n  protected override get cssClasses(): string[] {\n    const classes = [...super.cssClasses, 'rds-nestable-list-item'];\n\n    if (!this.disabled && this.activated) {\n      classes.push('rds-nestable-list-item-activated');\n    }\n\n    return classes;\n  }\n\n  @Input({ transform: booleanAttribute }) hasChildItems = false;\n  @Input({ transform: booleanAttribute }) activated = false;\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { merge } from 'rxjs';\nimport { RdsListItemComponent } from './list-item.component';\nimport { startWith, switchMap, tap } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { DOWN_ARROW, ENTER, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\nimport { RdsMultiSelectListItemComponent } from './multi-select-list-item.component';\nimport { RdsAbstractSelectableListItemComponent } from './abstract-selectable-list-item.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Directive({\n  selector: '[rds-list-item-container], [rdsListItemContainer]',\n})\nexport class RdsListItemContainerDirective\n  implements OnChanges, OnDestroy, AfterContentInit\n{\n  private readonly destroyRef = inject(DestroyRef);\n\n  @ContentChildren(RdsListItemComponent, { descendants: true })\n  protected _allItems: QueryList<RdsListItemComponent>;\n  private _directDescendantItems = new QueryList<RdsListItemComponent>();\n  private _keyManager: FocusKeyManager<RdsListItemComponent>;\n\n  @Input()\n  role: 'menu' | 'listbox';\n\n  @HostBinding('attr.role')\n  protected attrRole: 'menu' | 'listbox' = 'menu';\n\n  @HostBinding('tabIndex')\n  protected tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @HostBinding('attr.aria-multiselectable')\n  protected ariaMultiSelectable = false;\n\n  @HostBinding('attr.aria-activedescendant')\n  protected ariaActiveDescendant: string | null = null;\n\n  @HostBinding('class')\n  protected readonly class = 'rds-list-item-container';\n\n  ngAfterContentInit(): void {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems)\n      .skipPredicate((i) => i.disabled)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n    this._directDescendantItems.changes\n      .pipe(\n        startWith(this._directDescendantItems),\n        tap(() => {\n          this.tabIndex = this._directDescendantItems.filter((i) => !i.disabled)\n            ? TAB_INDEX_DEFAULT\n            : TAB_INDEX_NOT_FOCUSABLE;\n          this.setRoleTagsIfParentNotSetAndChildrenHasSameValue();\n          this.checkRoleTags();\n        }),\n        switchMap((items) =>\n          merge(...items.map((item: RdsListItemComponent) => item._focused)),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((focusedItem) =>\n        this._keyManager.updateActiveItem(focusedItem as RdsListItemComponent),\n      );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['role'] && changes['role'].currentValue) {\n      this.attrRole = this.role;\n      this.checkRoleTags();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._directDescendantItems.destroy();\n  }\n\n  @HostListener('focus')\n  focus(): void {\n    if (!this._keyManager.activeItem) {\n      this._keyManager.setFirstItemActive();\n    }\n\n    if (this._keyManager.activeItem) {\n      const firstSelected = this._directDescendantItems\n        .toArray()\n        .findIndex(\n          (i) => (i as RdsAbstractSelectableListItemComponent).checked,\n        );\n\n      if (firstSelected) {\n        this._directDescendantItems.get(firstSelected)?.focus('keyboard');\n      }\n\n      this._keyManager.activeItem.focus('keyboard');\n      this.ariaActiveDescendant = this._keyManager.activeItem.getLabel();\n    }\n  }\n\n  @HostListener('blur')\n  blur(): void {\n    this._keyManager.activeItem?.blur();\n    this.ariaActiveDescendant = null;\n  }\n\n  @HostListener('keydown', ['$event'])\n  protected handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n      this._keyManager.setFocusOrigin('keyboard');\n    }\n\n    const lastActiveItem = this._keyManager.activeItem;\n    this._keyManager.onKeydown(event);\n\n    if (this._keyManager.activeItem !== lastActiveItem) {\n      lastActiveItem?.blur();\n    }\n\n    if (this._keyManager.activeItem) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        this._keyManager.activeItem.click();\n        this._keyManager.activeItem.markAsActive();\n      }\n\n      this.ariaActiveDescendant = this._keyManager.activeItem.getLabel();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  protected handleKeyup(event: KeyboardEvent): void {\n    if (\n      (event.keyCode === ENTER || event.keyCode === SPACE) &&\n      this._keyManager.activeItem\n    ) {\n      this._keyManager.activeItem.markAsInactive();\n    }\n  }\n\n  private _updateDirectDescendants(): void {\n    this._allItems.changes\n      .pipe(startWith(this._allItems), takeUntilDestroyed(this.destroyRef))\n      .subscribe((items: QueryList<RdsListItemComponent>) => {\n        this._directDescendantItems.reset(items.toArray());\n        this._directDescendantItems.notifyOnChanges();\n      });\n  }\n\n  private setRoleTagsIfParentNotSetAndChildrenHasSameValue(): void {\n    if (!this.role) {\n      const childRoles = this._directDescendantItems.reduce(\n        (acc, curr) => {\n          if (!acc.includes(curr.role)) {\n            acc.push(curr.role);\n          }\n\n          return acc;\n        },\n        [] as ('menuitem' | 'option')[],\n      );\n\n      if (childRoles.length === 1) {\n        this.attrRole = childRoles[0] === 'menuitem' ? 'menu' : 'listbox';\n      }\n    }\n  }\n\n  private checkRoleTags(): void {\n    this.ariaMultiSelectable =\n      this._directDescendantItems.filter(\n        (i) => !(i instanceof RdsMultiSelectListItemComponent),\n      ).length === 0;\n\n    if (isDevMode()) {\n      if (this.attrRole === 'menu') {\n        const hasOptionsInsideMenu = this._directDescendantItems.some(\n          (i) => i.role !== 'menuitem',\n        );\n\n        if (hasOptionsInsideMenu) {\n          throw new Error(\n            `Defining role other than 'menuitem' for 'menu' parent is forbidden.`,\n          );\n        }\n      } else if (this.attrRole === 'listbox') {\n        const hasMenuitemInsideListbox = this._directDescendantItems.some(\n          (i) => i.role !== 'option',\n        );\n\n        if (hasMenuitemInsideListbox) {\n          throw new Error(\n            `Defining role other than 'option' for 'listbox' parent is forbidden.`,\n          );\n        }\n      }\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  OnChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsListItemComponent } from './list-item.component';\nimport { RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE } from './list-item.templates';\nimport { RdsAbstractSelectableListItemComponent } from './abstract-selectable-list-item.component';\n\n@Component({\n  template: RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE,\n  selector:\n    'button[rds-single-select-list-item], button[rdsSingleSelectListItem]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RdsListItemComponent,\n      useExisting: RdsSingleSelectListItemComponent,\n    },\n  ],\n})\nexport class RdsSingleSelectListItemComponent\n  extends RdsAbstractSelectableListItemComponent\n  implements AfterViewInit, OnChanges\n{\n  @HostBinding('class.rds-list-item--checked')\n  @HostBinding('attr.aria-selected')\n  protected get checkedBindings(): boolean {\n    return this.checked;\n  }\n\n  protected override getSelectTypeClass(): string {\n    return 'rds-single-select-list-item';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsCheckboxModule } from '../checkbox';\nimport { RdsIconComponent } from '../icons';\nimport { RdsHeaderListItemDirective } from './header-list-item.directive';\nimport { RdsListItemComponent } from './list-item.component';\nimport { RdsMultiSelectListItemComponent } from './multi-select-list-item.component';\nimport { RdsNestableListItemComponent } from './nestable-list-item.component';\nimport { RdsListItemContainerDirective } from './list-item-container.directive';\nimport { RdsSingleSelectListItemComponent } from './single-select-list-item.component';\n\nconst COMPONENTS = [\n  RdsHeaderListItemDirective,\n  RdsNestableListItemComponent,\n  RdsListItemComponent,\n  RdsListItemContainerDirective,\n  RdsMultiSelectListItemComponent,\n  RdsSingleSelectListItemComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, RdsIconComponent, RdsCheckboxModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class RdsListItemModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport type RdsAutocompleteIntlToken =\n  keyof typeof RdsAutocompleteIntl.translations;\n\n@Injectable({ providedIn: 'root' })\nexport class RdsAutocompleteIntl {\n  static readonly translations = {\n    placeholder: 'Select an option',\n    loadingText: 'Loading...',\n    noDataText: 'No results found',\n    newItemText: 'Create new',\n  };\n\n  private readonly _change$ = new BehaviorSubject(\n    RdsAutocompleteIntl.translations,\n  );\n  readonly change$ = this._change$.asObservable();\n\n  setTranslation(key: RdsAutocompleteIntlToken, value: string): void {\n    RdsAutocompleteIntl.translations[key] = value;\n    this._change$.next({ ...RdsAutocompleteIntl.translations });\n  }\n}\n","import {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  inject,\n  Input,\n  OnChanges,\n  Renderer2,\n  SecurityContext,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst INVERSE_CLASSNAME = 'rds-autocomplate-highlight-inverse';\n\n@Directive({\n  selector: '[rdsAutocomplateHighlight], [rds-autocomplate-highlight]',\n  standalone: true,\n})\nexport class RdsAutocompleteHighlightDirective implements OnChanges {\n  private readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n  private readonly sanitizer = inject(DomSanitizer);\n  private readonly renderer = inject(Renderer2);\n\n  @Input('rdsAutocomplateHighlight') searchTerm: string;\n  @Input({\n    alias: 'rdsAutocomplateHighlightCaseSensitive',\n    transform: booleanAttribute,\n  })\n  caseSensitive = false;\n  @Input('rdsAutocomplateHighlightCustomClasses') customClasses = '';\n  @Input({\n    alias: 'rdsAutocomplateHighlightInverse',\n    transform: booleanAttribute,\n  })\n  inverse = false;\n  @Input({\n    alias: 'rdsAutocomplateHighlightDisabled',\n    transform: booleanAttribute,\n  })\n  disabled = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.nativeElement && changes['inverse']) {\n      this.applyInversion();\n    }\n\n    if (\n      this.nativeElement &&\n      (changes['searchTerm'] || changes['caseSensitive'] || changes['disabled'])\n    ) {\n      const text = this.nativeElement.textContent || '';\n\n      if (this.searchTerm === '' || this.disabled) {\n        this.nativeElement.innerHTML = text;\n      } else {\n        const regex = new RegExp(\n          this.searchTerm,\n          this.caseSensitive ? 'g' : 'gi',\n        );\n        const newText = text.replace(\n          regex,\n          (match) =>\n            `<mark class=\"rds-autocomplete-highlight${\n              ' ' + this.customClasses\n            }\">${match}</mark>`,\n        );\n\n        this.nativeElement.innerHTML =\n          this.sanitizer.sanitize(SecurityContext.HTML, newText) || '';\n      }\n    }\n  }\n\n  private applyInversion(): void {\n    if (\n      this.inverse &&\n      !this.nativeElement.classList.contains(INVERSE_CLASSNAME)\n    ) {\n      this.renderer.addClass(this.nativeElement, INVERSE_CLASSNAME);\n    } else if (\n      !this.inverse &&\n      this.nativeElement.classList.contains(INVERSE_CLASSNAME)\n    ) {\n      this.renderer.removeClass(this.nativeElement, INVERSE_CLASSNAME);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface RdsAutocompleteConfig {\n  debounce: number;\n  minSearchChars: number;\n  optionsContainerMaxHeight: number;\n  optionsContainerMinWidth: number;\n  multiMinimumInputWidth: number;\n  multiMinimumInputWidthOffset: number;\n}\n\nexport const RDS_AUTOCOMPLETE_DEFAULT_CONFIG =\n  Object.freeze<RdsAutocompleteConfig>({\n    debounce: 1000,\n    minSearchChars: 3,\n    optionsContainerMaxHeight: 190,\n    optionsContainerMinWidth: 170,\n    multiMinimumInputWidth: 50,\n    multiMinimumInputWidthOffset: 10,\n  });\n\nexport const RDS_AUTOCOMPLETE_CONFIG =\n  new InjectionToken<RdsAutocompleteConfig>('RDS_AUTOCOMPLETE_CONFIG');\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { RdsAbstractAutocompleteComponent } from './abstract-autocomplete.component';\n\n@Directive({\n  selector:\n    'rds-autocomplete-option, [rds-autocomplete-option], [rdsAutocompleteOption]',\n  exportAs: 'rdsAutocompleteOption',\n  standalone: true,\n})\nexport class RdsAutocompleteOptionDirective<T, ArrayOfFlatType extends T | T[]>\n  implements OnInit, OnDestroy\n{\n  private readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n  private readonly renderer = inject(Renderer2);\n\n  @Input({ required: true, alias: 'rdsAutocompleteOption' })\n  autocomplete: RdsAbstractAutocompleteComponent<T, ArrayOfFlatType>;\n\n  @Input({ required: true })\n  set keyboardFocusedItem(\n    keyboardFocusedItem: RdsAutocompleteOptionDirective<\n      T,\n      ArrayOfFlatType\n    > | null,\n  ) {\n    this._keyboardFocusedItem = keyboardFocusedItem;\n\n    if (this === keyboardFocusedItem) {\n      this.renderer.addClass(this.nativeElement, 'cdk-focused');\n      this.renderer.addClass(this.nativeElement, 'cdk-keyboard-focused');\n    } else {\n      this.renderer.removeClass(this.nativeElement, 'cdk-focused');\n      this.renderer.removeClass(this.nativeElement, 'cdk-keyboard-focused');\n    }\n  }\n\n  get keyboardFocusedItem(): RdsAutocompleteOptionDirective<\n    T,\n    ArrayOfFlatType\n  > | null {\n    return this._keyboardFocusedItem;\n  }\n\n  private _keyboardFocusedItem: RdsAutocompleteOptionDirective<\n    T,\n    ArrayOfFlatType\n  > | null;\n\n  @HostBinding('class') protected readonly class = 'rds-autocomplete-option';\n\n  ngOnInit(): void {\n    this.autocomplete._addOption(this.nativeElement, this);\n  }\n\n  ngOnDestroy(): void {\n    this.autocomplete._deleteOption(this.nativeElement);\n  }\n}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  inject,\n  Input,\n  OnInit,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { AsyncPipe, NgTemplateOutlet } from '@angular/common';\nimport { RdsListItemModule, RdsListItemSize } from '../list-item';\nimport { RdsIconComponent } from '../icons';\nimport { RdsAutocompleteIntl } from './autocomplete-intl.service';\nimport { RdsAutocompleteHighlightDirective } from './autocomplete-highlight.directive';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { RdsAbstractAutocompleteComponent } from './abstract-autocomplete.component';\nimport {\n  RDS_AUTOCOMPLETE_CONFIG,\n  RDS_AUTOCOMPLETE_DEFAULT_CONFIG,\n} from './autocomplete.config';\nimport { RdsAutocompleteOptionDirective } from './autocomplete-option.directive';\n\nexport type RdsAutocompleteType = 'single' | 'multi';\n\n@Component({\n  selector: 'rds-autocomplete-container',\n  template: `\n    <div class=\"rds-autocomplete-container\" #autocompleteContainer>\n      @if (autocomplete.loading | async) {\n        @if (autocomplete.loadingTemplate) {\n          <ng-container\n            [ngTemplateOutlet]=\"autocomplete.loadingTemplate\"\n            [ngTemplateOutletContext]=\"{\n              $implicit: autocomplete,\n              autocomplete\n            }\"\n          />\n        } @else {\n          <button\n            class=\"rds-autocomplete-loading\"\n            rds-list-item\n            [size]=\"size\"\n            disabled\n          >\n            {{ autocomplete.loadingText || loadingText }}\n          </button>\n        }\n      } @else {\n        @for (option of selectedOptions; track trackBy($index, option)) {\n          <ng-container\n            [ngTemplateOutlet]=\"\n              autocomplete.optionTemplate || defaultOptionTemplate\n            \"\n            [ngTemplateOutletContext]=\"{\n              option,\n              keyboardFocusedItem,\n              $implicit: autocomplete,\n              autocomplete\n            }\"\n          />\n        }\n        @if (\n          selectedOptions.length > 0 &&\n          (availableOptions.length > 0 ||\n            shouldShowCreateNewOption() ||\n            (options.length === 0 && !shouldShowCreateNewOption()))\n        ) {\n          <div class=\"rds-autocomplete-separator\"></div>\n        }\n        @if (shouldShowCreateNewOption()) {\n          @if (autocomplete.newItemTemplate) {\n            <ng-container\n              [ngTemplateOutlet]=\"autocomplete.newItemTemplate\"\n              [ngTemplateOutletContext]=\"{\n                $implicit: autocomplete,\n                autocomplete,\n                keyboardFocusedItem\n              }\"\n            />\n          } @else {\n            <button\n              [rdsAutocompleteOption]=\"autocomplete\"\n              [keyboardFocusedItem]=\"keyboardFocusedItem\"\n              #option=\"rdsAutocompleteOption\"\n              class=\"rds-autocomplete-option-new-item\"\n              rds-list-item\n              [size]=\"size\"\n              (click)=\"autocomplete.selectNewItem()\"\n            >\n              <span class=\"rds-autocomplete-text\">{{ newItemText }}</span>\n              {{ autocomplete.getSearchQuery() }}\n            </button>\n          }\n        }\n        @for (option of availableOptions; track trackBy($index, option)) {\n          <ng-container\n            [ngTemplateOutlet]=\"\n              autocomplete.optionTemplate || defaultOptionTemplate\n            \"\n            [ngTemplateOutletContext]=\"{\n              option,\n              keyboardFocusedItem,\n              $implicit: autocomplete,\n              autocomplete\n            }\"\n          />\n        }\n        <ng-template #defaultOptionTemplate let-o=\"option\">\n          @if (type === 'single') {\n            <button\n              [rdsAutocompleteOption]=\"autocomplete\"\n              [keyboardFocusedItem]=\"keyboardFocusedItem\"\n              #option=\"rdsAutocompleteOption\"\n              rds-single-select-list-item\n              [size]=\"size\"\n              [checked]=\"autocomplete.isSelected(o)\"\n              (click)=\"autocomplete.toggle(o)\"\n            >\n              <span\n                [innerHTML]=\"autocomplete.getDisplayProperty(o)\"\n                [rdsAutocomplateHighlight]=\"autocomplete.getSearchQuery()\"\n                [rdsAutocomplateHighlightDisabled]=\"\n                  autocomplete.highlightQuery === false\n                \"\n                [rdsAutocomplateHighlightInverse]=\"\n                  autocomplete.highlightQuery === 'inverse'\n                \"\n              ></span>\n            </button>\n          }\n          @if (type === 'multi') {\n            <button\n              [rdsAutocompleteOption]=\"autocomplete\"\n              [keyboardFocusedItem]=\"keyboardFocusedItem\"\n              #option=\"rdsAutocompleteOption\"\n              rds-multi-select-list-item\n              [size]=\"size\"\n              [checked]=\"autocomplete.isSelected(o)\"\n              (click)=\"autocomplete.toggle(o)\"\n            >\n              <span\n                [innerHTML]=\"autocomplete.getDisplayProperty(o)\"\n                [rdsAutocomplateHighlight]=\"autocomplete.getSearchQuery()\"\n                [rdsAutocomplateHighlightDisabled]=\"\n                  autocomplete.highlightQuery === false\n                \"\n                [rdsAutocomplateHighlightInverse]=\"\n                  autocomplete.highlightQuery === 'inverse'\n                \"\n              ></span>\n            </button>\n          }\n        </ng-template>\n      }\n      @if (\n        (autocomplete.loading | async) === false &&\n        options.length === 0 &&\n        !shouldShowCreateNewOption()\n      ) {\n        @if (autocomplete.noDataTemplate) {\n          <ng-container\n            [ngTemplateOutlet]=\"autocomplete.noDataTemplate\"\n            [ngTemplateOutletContext]=\"{\n              $implicit: autocomplete,\n              autocomplete\n            }\"\n          />\n        } @else {\n          <button\n            class=\"rds-autocomplete-option-no-data\"\n            rds-list-item\n            [size]=\"size\"\n            disabled\n          >\n            <rds-icon namespace=\"outlined\" icon=\"warning_circle\" />\n            {{ autocomplete.noDataText || noDataText }}\n          </button>\n        }\n      }\n    </div>\n  `,\n  styleUrls: ['./autocomplete-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    RdsListItemModule,\n    NgTemplateOutlet,\n    RdsIconComponent,\n    RdsAutocompleteHighlightDirective,\n    RdsAutocompleteOptionDirective,\n  ],\n})\nexport class RdsAutocompleteContainerComponent<\n    T,\n    ArrayOfFlatType extends T | T[],\n  >\n  implements AfterContentChecked, OnInit\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly intl = inject(RdsAutocompleteIntl);\n  private readonly observer = inject(ContentObserver);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject(ElementRef);\n  protected readonly config = {\n    ...RDS_AUTOCOMPLETE_DEFAULT_CONFIG,\n    ...inject(RDS_AUTOCOMPLETE_CONFIG, { optional: true }),\n  };\n\n  autocomplete: RdsAbstractAutocompleteComponent<T, ArrayOfFlatType>;\n  @Input() size: RdsListItemSize = 's';\n  @Input({ required: true }) type: RdsAutocompleteType;\n\n  @Input()\n  set options(options: T[]) {\n    this._options = options;\n    this.selectedOptions = options.filter((o) =>\n      this.autocomplete.isSelected(o),\n    );\n    this.availableOptions = options.filter(\n      (o) => !this.autocomplete.isSelected(o),\n    );\n    this.lastSelectedValue =\n      this.autocomplete.values.length > 0\n        ? this.autocomplete.values[this.autocomplete.values.length - 1]\n        : null;\n  }\n\n  get options(): T[] {\n    return this._options;\n  }\n\n  protected _options: T[] = [];\n  protected selectedOptions: T[] = [];\n  protected availableOptions: T[] = [];\n  protected lastSelectedValue: T | null = null;\n  protected loadingText = RdsAutocompleteIntl.translations.loadingText;\n  protected noDataText = RdsAutocompleteIntl.translations.noDataText;\n  protected newItemText = RdsAutocompleteIntl.translations.newItemText;\n  protected keyboardFocusedItem: RdsAutocompleteOptionDirective<\n    T,\n    ArrayOfFlatType\n  > | null;\n  private autocompleteOptions = new Map<\n    HTMLElement,\n    RdsAutocompleteOptionDirective<T, ArrayOfFlatType>\n  >();\n  private optionElements: RdsAutocompleteOptionDirective<T, ArrayOfFlatType>[] =\n    [];\n\n  @ViewChild('autocompleteContainer')\n  protected autocompleteContainer: ElementRef<HTMLElement>;\n\n  protected trackBy: TrackByFunction<T> = (_i: number, a: T) =>\n    this.autocomplete.getUniqProperty(a);\n\n  ngOnInit(): void {\n    this.intl.change$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((t) => {\n        this.loadingText = this.autocomplete.loadingText || t.loadingText;\n        this.noDataText = this.autocomplete.noDataText || t.noDataText;\n        this.newItemText = this.autocomplete.newItemText || t.newItemText;\n        this.cdr.markForCheck();\n      });\n    this.observer\n      .observe(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.autocomplete.updatePosition());\n  }\n\n  _addOption(\n    option: HTMLElement,\n    component: RdsAutocompleteOptionDirective<T, ArrayOfFlatType>,\n  ): void {\n    this.autocompleteOptions.set(option, component);\n  }\n\n  _deleteOption(option: HTMLElement): void {\n    this.autocompleteOptions.delete(option);\n  }\n\n  ngAfterContentChecked(): void {\n    this.optionElements = [];\n\n    for (\n      let i = 0;\n      i < this.autocompleteContainer?.nativeElement.children.length;\n      i++\n    ) {\n      const record = this.autocompleteOptions.get(\n        this.autocompleteContainer.nativeElement.children.item(\n          i,\n        ) as HTMLElement,\n      );\n\n      if (record) {\n        this.optionElements.push(record);\n      }\n    }\n  }\n\n  onKeydown(event: KeyboardEvent): void {\n    if (['Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.key === 'Enter') {\n        this.onEnter();\n      } else if (event.key === 'ArrowUp') {\n        this.onUpArrow();\n      } else if (event.key === 'ArrowDown') {\n        this.onDownArrow();\n      }\n    }\n  }\n\n  protected shouldShowCreateNewOption(): boolean {\n    if (\n      this.autocomplete.isInputFilled() &&\n      typeof this.autocomplete.newItem === 'function'\n    ) {\n      const newItem = this.autocomplete.getNewItem() as T;\n\n      return !this.getSelectedFirstOptions().some((o) =>\n        this.autocomplete.compareItem(o, newItem),\n      );\n    } else {\n      return false;\n    }\n  }\n\n  protected getSelectedFirstOptions(): T[] {\n    return [...this.selectedOptions, ...this.availableOptions];\n  }\n\n  private onDownArrow(): void {\n    if (!this.keyboardFocusedItem) {\n      this.selectFirstItem();\n    } else {\n      const index = this.optionElements.findIndex(\n        (e) => e === this.keyboardFocusedItem,\n      );\n      const nextIndex = (index + 1) % this.optionElements.length;\n\n      this.keyboardFocusedItem = this.optionElements[nextIndex];\n    }\n\n    this.scrollToSelectedItem();\n    this.cdr.markForCheck();\n  }\n\n  private onUpArrow(): void {\n    if (!this.keyboardFocusedItem) {\n      this.selectFirstItem();\n    } else {\n      const index = this.optionElements.findIndex(\n        (e) => e === this.keyboardFocusedItem,\n      );\n      const nextIndex =\n        index - 1 < 0 ? this.optionElements.length - 1 : index - 1;\n\n      this.keyboardFocusedItem = this.optionElements[nextIndex];\n    }\n\n    this.scrollToSelectedItem();\n    this.cdr.markForCheck();\n  }\n\n  private onEnter(): void {\n    if (this.optionElements) {\n      const index = this.optionElements.findIndex(\n        (v) => v === this.keyboardFocusedItem,\n      );\n\n      if (index >= 0) {\n        for (const [element, option] of this.autocompleteOptions) {\n          if (this.optionElements[index] === option) {\n            element.dispatchEvent(new MouseEvent('click'));\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  private scrollToSelectedItem(): void {\n    let optionElement: HTMLElement | undefined;\n\n    for (const [element, option] of this.autocompleteOptions) {\n      if (this.keyboardFocusedItem === option) {\n        optionElement = element;\n        break;\n      }\n    }\n\n    if (this.keyboardFocusedItem) {\n      const itemHeight = optionElement?.offsetHeight || 0;\n      const scrollContainerHeight =\n        this.autocompleteContainer.nativeElement.scrollHeight;\n      const panelHeight = Math.min(\n        scrollContainerHeight,\n        this.config.optionsContainerMaxHeight,\n      );\n      const divider = 2;\n      const maxScroll = scrollContainerHeight - panelHeight;\n      const scrollBuffer = panelHeight / divider;\n      const optionOffsetFormScrollTop =\n        this.optionElements.findIndex((el) => el === this.keyboardFocusedItem) *\n        itemHeight;\n      const halfOptionHeight = itemHeight / divider;\n\n      const optimalScrollPosition =\n        optionOffsetFormScrollTop - scrollBuffer + halfOptionHeight;\n      this.autocompleteContainer.nativeElement.scrollTop = Math.min(\n        Math.max(0, optimalScrollPosition),\n        maxScroll,\n      );\n    }\n  }\n\n  private selectFirstItem(): void {\n    if (this.optionElements[0]) {\n      this.keyboardFocusedItem = this.optionElements[0];\n    }\n  }\n}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, EventEmitter, inject } from '@angular/core';\nimport {\n  FormGroupDirective,\n  NgControl,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { RdsControlType } from './control.type';\n\nexport abstract class RdsAbstractFormFieldControl<T> {\n  public readonly ngControl = inject(NgControl, { optional: true, self: true });\n  public readonly parentForm = inject(NgForm, { optional: true });\n  public readonly parentFormGroup = inject(FormGroupDirective, {\n    optional: true,\n  });\n\n  prefixed: boolean;\n  suffixed: boolean;\n\n  readonly stateChanges = new EventEmitter<void>();\n\n  protected _value: T;\n  protected _id: string;\n  protected _disabled = false;\n  protected _focused = false;\n  protected _errorState = false;\n  protected _required: boolean | undefined;\n\n  abstract get errorState(): boolean;\n  abstract get controlType(): RdsControlType;\n  abstract get empty(): boolean;\n  abstract get shouldLabelFloat(): boolean;\n  abstract setDescribedByIds(ids: string[]): void;\n  abstract onContainerClick(event: MouseEvent): void;\n\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  set value(newId: T) {\n    this._value = newId;\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(isDisabled: BooleanInput) {\n    this._disabled = booleanAttribute(isDisabled);\n  }\n\n  get required(): boolean {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(Validators.required) ??\n      false\n    );\n  }\n\n  set required(isRequired: BooleanInput) {\n    this._required = booleanAttribute(isRequired);\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newId: string) {\n    this._id = newId;\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-control-label',\n})\nexport class RdsLabelDirective {\n  @HostBinding('class') class = 'rds-control-label';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-control-prefix], [rdsControlPrefix]',\n})\nexport class RdsPrefixDirective {\n  @HostBinding('class') readonly hostClass = 'rds-form-field__control-prefix';\n}\n","import {\n  animate,\n  animateChild,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const SelectAnimations = [\n  trigger('transformPanelWrap', [\n    transition(\n      '* => void',\n      query('@transformPanel', [animateChild()], { optional: true }),\n    ),\n  ]),\n  trigger('transformPanel', [\n    state(\n      'void',\n      style({\n        transform: 'scaleY(0.8)',\n        minWidth: '100%',\n        opacity: 0,\n      }),\n    ),\n    state(\n      'showing',\n      style({\n        opacity: 1,\n        minWidth: '100%', // 32px = 2 * 16px padding\n        transform: 'scaleY(1)',\n      }),\n    ),\n    transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition(\n      '* => void',\n      animate('100ms 25ms linear', style({ opacity: 0 })),\n    ),\n  ]),\n];\n","import { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';\n\nexport abstract class AbstractFocusableOption implements FocusableOption {\n  abstract id: string;\n\n  abstract focus(origin?: FocusOrigin): void;\n\n  abstract handleClick(): void;\n\n  abstract rect(): DOMRect;\n\n  abstract setActiveStyles(): void;\n\n  abstract setInactiveStyles(): void;\n\n  abstract isVisible(): boolean;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const RDS_INPUT_VALUE_ACCESSOR = new InjectionToken<{ value: any }>(\n  'RDS_INPUT_VALUE_ACCESSOR',\n);\n","import {\n  booleanAttribute,\n  Directive,\n  DoCheck,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { RdsAbstractFormFieldControl } from './abstract-form-field-control';\nimport { RdsControlType } from './control.type';\nimport { updateErrorState } from '../utils';\nimport { RDS_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\n\nconst INPUT_INVALID_TYPES = [\n  'button',\n  'checkbox',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit',\n];\n\nlet nextUniqueId = 0;\n\n@Directive({\n  selector: ` input[rds-input], input[rdsInput], textarea[rds-input], textarea[rdsInput]`,\n  providers: [\n    { provide: RdsAbstractFormFieldControl, useExisting: RdsInputDirective },\n  ],\n})\nexport class RdsInputDirective\n  extends RdsAbstractFormFieldControl<string>\n  implements OnChanges, OnDestroy, DoCheck\n{\n  private readonly elementRef =\n    inject<ElementRef<HTMLInputElement | HTMLTextAreaElement>>(ElementRef);\n  private readonly inputValueAccessor = inject(RDS_INPUT_VALUE_ACCESSOR, {\n    optional: true,\n    self: true,\n  });\n\n  override prefixed = false;\n  override suffixed = false;\n  protected _uid = `rds-input-${nextUniqueId++}`;\n\n  private _inputValueAccessor: { value: string } =\n    this.inputValueAccessor || this.elementRef.nativeElement;\n  private _previousNativeValue = this.value;\n  private _type = 'text';\n  private _placeholder = '';\n  private _readonly = false;\n  private _ariaDescribedby: string;\n\n  private _neverEmptyInputTypes = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week',\n  ].filter((t) => getSupportedInputTypes().has(t));\n\n  readonly _isTextarea =\n    this.elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n\n  @HostBinding('class') readonly hostClass = 'rds-form-field__control';\n  @HostBinding('attr.autocomplete') readonly hostAutocomplete = 'off';\n\n  @HostBinding('attr.aria-describedby')\n  get hostAriaDescribedBy(): string {\n    return this._ariaDescribedby;\n  }\n\n  set hostAriaDescribedBy(newValue: string) {\n    this._ariaDescribedby = newValue;\n  }\n\n  @HostBinding('attr.aria-invalid')\n  get errorState(): boolean {\n    return this._errorState;\n  }\n\n  @HostBinding('class.rds-form-field__control--suffixed')\n  get hostClassSuffixed(): boolean {\n    return this.suffixed;\n  }\n\n  @HostBinding('class.rds-form-field__control--prefixed')\n  get hostClassPrefixed(): boolean {\n    return this.prefixed;\n  }\n\n  @Input()\n  @HostBinding('id')\n  override get id(): string {\n    return this._id;\n  }\n\n  override set id(value: string) {\n    this._id = value || this._uid;\n  }\n  protected override _id = this._uid;\n\n  @HostBinding('attr.disabled')\n  get attrDisabled(): boolean | null {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled ? this.ngControl.disabled : null;\n    }\n\n    return this._disabled ? this._disabled : null;\n  }\n\n  @Input()\n  override set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n\n    if (this._focused) {\n      this._focused = false;\n      this.stateChanges.next();\n    }\n  }\n\n  override get disabled(): boolean {\n    return this.attrDisabled || false;\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(Validators.required) ??\n      null\n    );\n  }\n  override get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  @Input()\n  override set required(value: BooleanInput) {\n    this._required = booleanAttribute(value);\n  }\n\n  get readonly(): boolean | null {\n    return this._readonly ? true : null;\n  }\n\n  @Input()\n  @HostBinding('attr.readonly')\n  set readonly(value: BooleanInput) {\n    this._readonly = booleanAttribute(value);\n  }\n\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n\n  set type(newValue: string) {\n    this._type = newValue || 'text';\n    this.validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n      (this.elementRef.nativeElement as HTMLInputElement).type = this._type;\n    }\n  }\n\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n\n  set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n\n  @Input()\n  override get value(): string {\n    return this._inputValueAccessor.value;\n  }\n\n  override set value(newValue: string) {\n    this._inputValueAccessor.value = newValue;\n\n    if (newValue !== this._inputValueAccessor.value) {\n      this.stateChanges.next();\n    }\n  }\n\n  get empty(): boolean {\n    return (\n      !this.isNeverEmpty() &&\n      !this.elementRef.nativeElement.value &&\n      !this.isNativelyBadInput()\n    );\n  }\n\n  get shouldLabelFloat(): boolean {\n    return this._focused || !this.empty;\n  }\n\n  ngOnChanges(): void {\n    this.stateChanges.next();\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n  }\n\n  ngDoCheck(): void {\n    this.showHidePlaceholder();\n\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      const oldState = this._errorState;\n      this._errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this.ngControl.control,\n      );\n\n      if (oldState !== this._errorState) {\n        this.stateChanges.next();\n      }\n    }\n\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this.dirtyCheckNativeValue();\n    this.dirtyDisabledValue();\n  }\n\n  @HostListener('focus', ['true'])\n  @HostListener('blur', ['false'])\n  focusChanged(isFocused: boolean): void {\n    if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n      this._focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n\n  @HostListener('input')\n  onInput(): void {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    this.hostAriaDescribedBy = ids.join(' ');\n  }\n\n  onContainerClick(): void {\n    if (!this._focused) {\n      this.focus();\n    }\n  }\n\n  get controlType(): RdsControlType {\n    if (this.elementRef?.nativeElement?.tagName.toUpperCase() === 'TEXTAREA') {\n      return 'textarea-field';\n    }\n\n    return this.elementRef?.nativeElement?.classList.contains(\n      'rds-datepicker-input',\n    )\n      ? 'date-picker'\n      : 'text-field';\n  }\n\n  getMaxlengthAttr(): number {\n    return numberAttribute(\n      this.elementRef.nativeElement.getAttribute('maxlength'),\n      0,\n    );\n  }\n\n  private dirtyCheckNativeValue(): void {\n    const newValue = this.elementRef.nativeElement.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  private dirtyDisabledValue(): void {\n    if (this._disabled !== this.disabled) {\n      this._disabled = this.disabled;\n      this.stateChanges.next();\n    }\n  }\n\n  private validateType(): void {\n    if (INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n      throw new Error(`Unsupported type of rds input <${this._type}>`);\n    }\n  }\n\n  private isNeverEmpty(): boolean {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n\n  private isNativelyBadInput(): boolean {\n    const validity = (this.elementRef.nativeElement as HTMLInputElement)\n      .validity;\n\n    return validity && validity.badInput;\n  }\n\n  private focus(options?: FocusOptions): void {\n    this.elementRef.nativeElement.focus(options);\n  }\n\n  private showHidePlaceholder(): void {\n    const element = this.elementRef.nativeElement;\n    const datePlaceholder = element.getAttribute('date-placeholder') ?? '';\n    const placeholder = this.placeholder ? this.placeholder : datePlaceholder;\n    const isSearch = element.type === 'search';\n    const contentInfix = this.getContentInfixParentElement(element);\n    const isFloatingLabel = contentInfix?.classList.contains(\n      'rds-form-field__content-infix--floating-label',\n    );\n    const isInputWithChips = element.classList.contains('rds-chip-input');\n    const inputWithChipsHasPlaceholder = !element.classList.contains(\n      'rds-chip-input-no-placeholder',\n    );\n\n    if (element.value) {\n      return;\n    }\n\n    if (isSearch || (isInputWithChips && inputWithChipsHasPlaceholder)) {\n      element.placeholder = placeholder;\n\n      return;\n    }\n\n    element.placeholder = !isFloatingLabel || this._focused ? placeholder : '';\n  }\n\n  private getContentInfixParentElement(\n    target: HTMLElement,\n  ): HTMLElement | null {\n    let parent = target.parentElement;\n\n    while (\n      parent &&\n      !parent.classList.contains('rds-form-field__content-infix')\n    ) {\n      parent = parent.parentElement;\n    }\n\n    return parent;\n  }\n}\n","import { FocusOptions, FocusOrigin } from '@angular/cdk/a11y';\nimport { A, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { noop } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RdsInputDirective } from '../input.directive';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet uniqueId = 0;\n\nexport type RdsSelectSearchSize = 's' | 'm' | 'l';\n\n@Component({\n  styleUrls: ['select-search-input.component.scss'],\n  selector: 'rds-select-search-input',\n  template: `\n    <rds-icon\n      class=\"rds-search-icon rds-select__option--search-input-prefix\"\n      namespace=\"filled\"\n      icon=\"search\"\n      aria-hidden=\"true\"\n    />\n    <input\n      [formControl]=\"control\"\n      #search\n      rdsInput\n      (search)=\"$event.preventDefault(); $event.stopPropagation()\"\n      [placeholder]=\"placeholder\"\n    />\n    <button\n      rds-icon-button\n      [size]=\"'s'\"\n      [class.hidden]=\"!isDirtyValue()\"\n      (click)=\"resetInput(); $event.stopPropagation()\"\n      class=\"rds-search-reset-button rds-select__option--search-input-suffix\"\n    >\n      <rds-icon namespace=\"filled\" icon=\"close\" aria-hidden=\"true\" />\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsSelectSearchInputComponent implements AfterViewInit {\n  protected readonly renderer = inject(Renderer2);\n  protected readonly cdr = inject(ChangeDetectorRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  control = new FormControl<string>('');\n\n  @Input()\n  size: RdsSelectSearchSize = 'm';\n\n  id = `rds-select__search-input-${uniqueId++}`;\n\n  @ViewChild(RdsInputDirective) searchInput: RdsInputDirective;\n  @ViewChild('search', { static: true, read: ElementRef }) search: ElementRef;\n\n  @HostBinding('class')\n  protected get cssClasses(): string[] {\n    return [\n      'rds-select__option',\n      'rds-select__option--search-input',\n      `rds-select__option--search-input--${this.size}`,\n    ];\n  }\n\n  @Input()\n  placeholder = 'Search...';\n\n  @Output()\n  changed = new EventEmitter<string>();\n\n  @HostListener('click')\n  @HostListener('focus')\n  handleClick(): void {\n    this.search.nativeElement.focus();\n    this.renderer.addClass(this.elementRef.nativeElement, 'cdk-focused');\n    this.renderer.addClass(\n      this.elementRef.nativeElement,\n      'cdk-keyboard-focused',\n    );\n    this.cdr.markForCheck();\n  }\n\n  @HostListener('keydown', ['$event'])\n  stopPropagation($event: KeyboardEvent): void {\n    if (\n      $event.keyCode === SPACE ||\n      ($event.keyCode === A && hasModifierKey($event, 'ctrlKey'))\n    ) {\n      $event.stopPropagation();\n    }\n  }\n\n  rect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  isVisible(): boolean {\n    return true;\n  }\n\n  ngAfterViewInit(): void {\n    if (this.searchInput && this.searchInput.ngControl) {\n      this.searchInput.ngControl.valueChanges\n        ?.pipe(\n          tap((v) => this.changed.emit(v)),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe({ next: noop, error: noop });\n    }\n\n    this.focus();\n  }\n\n  reset(): void {\n    this.searchInput?.ngControl?.reset();\n  }\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    const element = this.elementRef.nativeElement;\n\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n      this.handleClick();\n    }\n  }\n\n  isDirtyValue(): boolean {\n    return this.control.value !== '';\n  }\n\n  resetInput(): void {\n    if (this.isDirtyValue()) {\n      this.control.setValue('');\n      this.search.nativeElement.focus();\n    }\n  }\n}\n","import { RdsMultiSelectOptionComponent } from './multi-select-option.component';\nimport { RdsSingleSelectOptionComponent } from './single-select-option.component';\n\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n\nexport type RdsAbstractSelectFilterByFunc<T, O extends RdsSelectOption<T>> = (\n  text: string | null,\n  option: O,\n  optionIndex?: number,\n  options?: O[],\n) => boolean;\n\nexport type RdsSingleSelectFilterByFunc<T> = RdsAbstractSelectFilterByFunc<\n  T,\n  RdsSingleSelectOptionComponent<T>\n>;\nexport type RdsMultiSelectFilterByFunc<T> = RdsAbstractSelectFilterByFunc<\n  T,\n  RdsMultiSelectOptionComponent<T>\n>;\n\nexport type RdsSelectOption<T> =\n  | RdsSingleSelectOptionComponent<T>\n  | RdsMultiSelectOptionComponent<T>;\n\nexport type RdsSelectCompareWithFn<T> = (o1: T, o2: T) => boolean;\n","import { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  BlockScrollStrategy,\n  CdkConnectedOverlay,\n  CdkOverlayOrigin,\n  ConnectedPosition,\n  ScrollStrategy,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, Validators } from '@angular/forms';\nimport { defer, merge, noop, Observable, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\nimport { RdsListItemComponent } from '../../list-item';\nimport { updateErrorState } from '../../utils';\nimport { RdsAbstractFormFieldControl } from '../abstract-form-field-control';\nimport { RdsControlType } from '../control.type';\nimport {\n  RdsFormFieldComponent,\n  RdsFormFieldSize,\n} from '../form-field.component';\nimport { AbstractFocusableOption } from './abstract-focusable-option';\nimport { RdsAbstractSelectOptionSelectionChangedEvent } from './select-option-selection-changed.event';\nimport { RdsSelectSearchInputComponent } from './select-search-input.component';\nimport {\n  RdsAbstractSelectFilterByFunc,\n  RdsSelectCompareWithFn,\n  RdsSelectOption,\n  SELECT_PANEL_MAX_HEIGHT,\n} from './select-types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextUniqueId = 0;\n\n@Directive()\nexport abstract class RdsAbstractSelectComponent<\n    T,\n    O extends RdsSelectOption<T>,\n    ArrayOfFlatType extends T | T[],\n    SelectedType = O | O[],\n  >\n  extends RdsAbstractFormFieldControl<ArrayOfFlatType>\n  implements\n    AfterContentInit,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    DoCheck,\n    ControlValueAccessor\n{\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly viewportRuler = inject(ViewportRuler);\n  protected readonly cdr = inject(ChangeDetectorRef);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly scrollStrategyOptions = inject(ScrollStrategyOptions);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly liveAnnouncer = inject(LiveAnnouncer);\n  protected readonly renderer = inject(Renderer2);\n  protected readonly formField = inject<RdsFormFieldComponent<T>>(\n    forwardRef(() => RdsFormFieldComponent),\n  );\n\n  protected _name = 'rds-abstract-select';\n  private readonly _uid = `${this._name}-${nextUniqueId++}`;\n  protected readonly selectAllDestroy$ = new Subject<void>();\n  protected readonly destroyKeyManager$ = new Subject<void>();\n  private readonly minPanelWidth = 170;\n  private _filterValue: string | null = null;\n\n  protected _panelOpen = false;\n\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\n  private _scrollTop = 0;\n\n  private _ariaLabel: string | null = '';\n\n  private _ariaDescribedby: string;\n  protected optionIds = '';\n\n  private _hideValue = false;\n\n  private _placeholder = '';\n\n  protected selectionModel: SelectionModel<O>;\n\n  protected keyManager: ActiveDescendantKeyManager<O>;\n\n  readonly scrollStrategy: ScrollStrategy;\n\n  readonly positions: ConnectedPosition[] = [\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n\n  readonly optionSelectionChanges = defer(() => {\n    const options = this.options;\n\n    if (options) {\n      return options.changes.pipe(\n        startWith(options),\n        switchMap(() =>\n          merge(...options.map((option) => option.selectionChange$)),\n        ),\n        // should emit one time if many selection changes at one time e.g.: select/deselect all\n        debounceTime(1),\n      );\n    }\n\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.optionSelectionChanges),\n    );\n  }) as Observable<RdsAbstractSelectOptionSelectionChangedEvent<T, O>>;\n\n  override _id = this._uid;\n\n  minWidth = this.minPanelWidth;\n  triggerClientRect: ClientRect;\n  transformOrigin = 'top';\n  panelDoneAnimatingStream = new Subject<string>();\n\n  @HostBinding('attr.role') hostRole = 'listbox';\n  @HostBinding('class') hostClass = 'rds-form-field__control';\n\n  @HostBinding('attr.aria-describedby') get hostAriaDescribedBy():\n    | string\n    | null {\n    return this._ariaDescribedby || null;\n  }\n\n  @HostBinding('tabIndex') get hostTabindex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  @HostBinding('attr.aria-owns') get hostAriaOwns(): string | null {\n    return this.panelOpen ? this.optionIds : null;\n  }\n\n  @HostBinding('attr.aria-activedescendant')\n  get hostActivedescendant(): string | null {\n    if (this.panelOpen && this.keyManager && this.keyManager.activeItem) {\n      return this.keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n\n  @HostBinding('attr.aria-labelledby') get hostAriaLabelledBy(): string | null {\n    return this.ariaLabelledby || null;\n  }\n\n  @HostBinding('attr.disabled')\n  get attrDisabled(): boolean | null {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled ? this.ngControl.disabled : null;\n    }\n\n    return this._disabled ? this._disabled : null;\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(Validators.required) ??\n      null\n    );\n  }\n\n  @Input()\n  override set required(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (newValue !== this._required) {\n      this._required = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  override get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  @HostBinding('attr.aria-invalid') get errorState(): boolean {\n    return this._errorState;\n  }\n\n  @Input('aria-label')\n  @HostBinding('attr.aria-label')\n  get hostAriaLabel(): string | null {\n    if (this.ariaLabelledby) {\n      return null;\n    }\n\n    if (this._ariaLabel) {\n      return this._ariaLabel;\n    } else {\n      return null;\n    }\n  }\n\n  set hostAriaLabel(newValue: string | null) {\n    if (newValue !== this._ariaLabel) {\n      this._ariaLabel = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  @HostBinding('attr.id')\n  override get id(): string {\n    return this._id;\n  }\n\n  override set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  @Input() sortComparator: (a: O, b: O, options: O[]) => number;\n\n  @Input() compareWith: RdsSelectCompareWithFn<T>;\n\n  @Input()\n  override set disabled(newValue: BooleanInput) {\n    const disabled = booleanAttribute(newValue);\n\n    if (disabled !== this._disabled) {\n      if (!this.panelOpen && this.keyManager) {\n        this.keyManager.updateActiveItem(-1);\n      }\n\n      this._disabled = disabled;\n    }\n  }\n\n  override get disabled(): boolean {\n    return this.attrDisabled || false;\n  }\n\n  @Input()\n  set hideValue(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (this._hideValue !== newValue) {\n      this._hideValue = booleanAttribute(value);\n      this.stateChanges.emit();\n    }\n  }\n\n  get hideValue(): boolean {\n    return this._hideValue;\n  }\n\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.emit();\n  }\n\n  @Input()\n  override get value(): ArrayOfFlatType {\n    return this._value;\n  }\n\n  override set value(newValue: ArrayOfFlatType) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n    }\n  }\n\n  @Output() readonly valueChange = new EventEmitter<ArrayOfFlatType>();\n\n  @Output() readonly openChange = new EventEmitter<boolean>();\n\n  trigger: ElementRef<HTMLDivElement>;\n  origin: CdkOverlayOrigin;\n\n  @ViewChild('panel') panel: ElementRef;\n\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  @ContentChildren(RdsListItemComponent)\n  options: QueryList<O>;\n\n  @ContentChildren(AbstractFocusableOption)\n  focusableOptions: QueryList<O>;\n\n  @ContentChild(RdsSelectSearchInputComponent)\n  selectSearch: RdsSelectSearchInputComponent;\n\n  onChange: (value: ArrayOfFlatType) => void = noop;\n  onTouched = noop;\n  private _filterBy: RdsAbstractSelectFilterByFunc<T, O> = (t, o) =>\n    this._defaultFilterBy(t, o);\n\n  @Input()\n  get filterBy(): RdsAbstractSelectFilterByFunc<T, O> {\n    return this._filterBy;\n  }\n\n  set filterBy(fn: RdsAbstractSelectFilterByFunc<T, O>) {\n    this._filterBy = fn;\n  }\n\n  @HostListener('keydown', ['$event']) handleKeydown(\n    event: KeyboardEvent,\n  ): void {\n    if (!this.disabled) {\n      this.panelOpen\n        ? this.handleOpenKeydown(event)\n        : this.handleClosedKeydown(event);\n    }\n  }\n\n  @HostListener('focus') onFocus(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  @HostListener('blur') onBlur(): void {\n    this._focused = false;\n\n    if (!this.disabled) {\n      this.onTouched();\n      this.cdr.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  override get focused(): boolean {\n    return this._focused || this._panelOpen;\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  onContainerClick(): void {\n    this.focus();\n    this.open();\n  }\n\n  get shouldLabelFloat(): boolean {\n    return !this.hideValue && (this._panelOpen || !this.empty);\n  }\n\n  get empty(): boolean {\n    return !this.selectionModel || this.selectionModel.isEmpty();\n  }\n\n  get controlType(): RdsControlType {\n    return 'select';\n  }\n\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  abstract get selected(): SelectedType;\n\n  abstract get triggerValues(): string[];\n\n  constructor() {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    const scrollStrategy = (): BlockScrollStrategy =>\n      this.scrollStrategyOptions.block();\n    this.scrollStrategy = scrollStrategy();\n\n    if (!this.compareWith) {\n      this.compareWith = (o1: T, o2: T) => o1 === o2;\n    }\n  }\n\n  ngOnInit(): void {\n    this.stateChanges.next();\n    this.stateChanges\n      .pipe(delay(1), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this._setSize(this.formField.size);\n        this.cdr.markForCheck();\n      });\n\n    // We need `distinctUntilChanged` here, because some browsers will\n    // fire the animation end event twice for the same animation. See:\n    // https://github.com/angular/angular/issues/24084\n    this.panelDoneAnimatingStream\n      .pipe(distinctUntilChanged(), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.panelOpen) {\n          this._scrollTop = 0;\n        } else {\n          this.overlayDir.offsetX = 0;\n          this.cdr.markForCheck();\n        }\n      });\n\n    this.viewportRuler\n      .change()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this._panelOpen) {\n          this.triggerClientRect =\n            this.trigger.nativeElement.getBoundingClientRect();\n          this.minWidth = Math.max(\n            this.minPanelWidth,\n            this.triggerClientRect.width,\n          );\n          this.cdr.markForCheck();\n        }\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.initKeyManager();\n\n    this.selectionModel.changed\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((event) => {\n        event.added.forEach((option) => (option.checked = true));\n        event.removed.forEach((option) => (option.checked = false));\n        this.cdr.markForCheck();\n      });\n\n    this.options.changes\n      .pipe(startWith([null]), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.resetOptions();\n        this.initializeSelection();\n      });\n\n    if (this.selectSearch) {\n      this.selectSearch.changed\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe((filterValue) => {\n          this._filterValue = filterValue;\n          this.refreshOptionsVisibility();\n          this.options.forEach((o) => o.setInactiveStyles());\n          this.initKeyManager();\n        });\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      const oldState = this._errorState;\n      this._errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this.ngControl.control,\n      );\n\n      if (oldState !== this._errorState) {\n        this.stateChanges.next();\n      }\n    }\n\n    this.dirtyDisabledValue();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.selectAllDestroy$.complete();\n    this.destroyKeyManager$.next();\n    this.destroyKeyManager$.complete();\n    this.stateChanges.complete();\n    this.openChange.complete();\n  }\n\n  private dirtyDisabledValue(): void {\n    if (this._disabled !== this.disabled) {\n      this._disabled = this.disabled;\n      this.stateChanges.next();\n    }\n  }\n\n  protected removeValue(index: number): void {\n    const values = Array.from(\n      this.options.filter((item) => item.checked && !item.disabled),\n    );\n    values.splice(index, 1);\n    this.selectionModel.clear();\n    this.selectionModel.select(...values);\n    this.propagateChanges();\n  }\n\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  resetFilterValue(): void {\n    this.selectSearch?.reset();\n  }\n\n  open(): void {\n    if (\n      this.disabled ||\n      !this.options ||\n      !this.options.length ||\n      this._panelOpen\n    ) {\n      return;\n    }\n\n    this.initKeyManager();\n    this.triggerClientRect = this.trigger.nativeElement.getBoundingClientRect();\n    this.minWidth = Math.max(this.minPanelWidth, this.triggerClientRect.width);\n    this._panelOpen = true;\n    this.keyManager.withHorizontalOrientation(null);\n    this.cdr.markForCheck();\n    this.openChange.emit(true);\n  }\n\n  close(): void {\n    if (this._panelOpen) {\n      this.focus();\n      this.options.forEach((i) => i.setInactiveStyles());\n      this._panelOpen = false;\n      this.keyManager.withHorizontalOrientation('rtl');\n      this.onTouched();\n      this.cdr.markForCheck();\n      this.openChange.emit(false);\n    }\n  }\n\n  writeValue(value: ArrayOfFlatType): void {\n    if (this.options) {\n      this.setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: (value: ArrayOfFlatType) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n    this.stateChanges.next();\n  }\n\n  focus(options?: FocusOptions): void {\n    this.elementRef.nativeElement.focus(options);\n  }\n\n  onAttached(): void {\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this.cdr.detectChanges();\n      this.overlayDir.overlayRef.updatePosition();\n      this.panel.nativeElement.scrollTop = this._scrollTop;\n      this.selectSearch?.focus();\n    });\n  }\n\n  refreshOptionsVisibility(): void {\n    if (\n      this.panel &&\n      this.panel.nativeElement &&\n      this.options &&\n      this.options.length > 0\n    ) {\n      this.options.forEach((item, index, array) => {\n        if (typeof this._filterBy === 'function') {\n          item.toggleVisibility(\n            this._filterBy(this._filterValue, item, index, array),\n          );\n        } else {\n          item.toggleVisibility(this._defaultFilterBy(this._filterValue, item));\n        }\n      });\n\n      if (this.options.filter((item) => item.isVisible()).length === 0) {\n        this.renderer.setStyle(this.panel.nativeElement, 'overflow', 'hidden');\n      } else {\n        this.renderer.removeStyle(this.panel.nativeElement, 'overflow');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  shouldShowPlaceholder(): boolean {\n    return (\n      this.hasPlaceholderValue() &&\n      (this.formField._labelPosition !== 'floating' ||\n        (this.formField._labelPosition === 'floating' &&\n          this.selectionModel.isEmpty() &&\n          this.shouldLabelFloat))\n    );\n  }\n\n  shouldShowValue(): boolean {\n    return (\n      !this.hideValue &&\n      (this.selectionModel.hasValue() || !this.hasPlaceholderValue())\n    );\n  }\n\n  private hasPlaceholderValue(): boolean {\n    return !!this.placeholder && String(this.placeholder).trim().length > 0;\n  }\n\n  private _defaultFilterBy(text: string | null, option: O): boolean {\n    if (text === null || text === '') {\n      return true;\n    } else if (\n      option &&\n      typeof option.value === 'string' &&\n      typeof text === 'string'\n    ) {\n      return option.value.includes(text);\n    } else {\n      return option.value === text;\n    }\n  }\n\n  protected abstract handleClosedKeydown(event: KeyboardEvent): void;\n\n  protected abstract handleOpenKeydown(event: KeyboardEvent): void;\n\n  private initializeSelection(): void {\n    Promise.resolve().then(() => {\n      if (this.ngControl) {\n        this._value = this.ngControl.value;\n      }\n\n      this.setSelectionByValue(this._value);\n      this.stateChanges.next();\n    });\n  }\n\n  protected abstract setSelectionByValue(value: ArrayOfFlatType): void;\n\n  protected selectValue(value: T): O | undefined {\n    const correspondingOption = this.options.find((option) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this.compareWith(option.value, value);\n      } catch (error) {\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this.selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n\n  protected initKeyManager(): void {\n    this.destroyKeyManager$.next();\n    this.keyManager = new ActiveDescendantKeyManager<O>(\n      this.focusableOptions.filter((o) => o.isVisible()),\n    )\n      .withVerticalOrientation()\n      .withHorizontalOrientation('rtl')\n      .withAllowedModifierKeys(['shiftKey'])\n      .withHomeAndEnd();\n\n    if (this.selectionModel.selected[0]) {\n      const selectedIndex = this.focusableOptions\n        .filter((o) => o.isVisible())\n        .indexOf(this.selectionModel.selected[0]);\n      this.keyManager.updateActiveItem(selectedIndex);\n    }\n\n    this.keyManager.tabOut\n      .pipe(\n        takeUntil(this.destroyKeyManager$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        if (this.panelOpen) {\n          this.close();\n        }\n      });\n    this.keyManager.change\n      .pipe(\n        takeUntil(this.destroyKeyManager$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        if (this._panelOpen && this.panel) {\n          this.scrollActiveOptionIntoView();\n        }\n      });\n  }\n\n  protected resetOptions(): void {\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map((option) => option.checkedChanged))\n      .pipe(\n        // should emit one time if states changes for many options\n        debounceTime(1),\n        takeUntil(this.options.changes),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        this.stateChanges.next();\n      });\n\n    this.optionIds = this.options.map((option) => option.id).join(' ');\n  }\n\n  protected onSelect(option: O): void {\n    const wasSelected = this.selectionModel.isSelected(option);\n\n    if (wasSelected !== option.checked) {\n      option.checked\n        ? this.selectionModel.select(option)\n        : this.selectionModel.deselect(option);\n    }\n\n    if (wasSelected !== this.selectionModel.isSelected(option)) {\n      this.propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  protected abstract getValueToEmit(): ArrayOfFlatType;\n\n  protected propagateChanges(): void {\n    const valueToEmit = this.getValueToEmit();\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this.onChange(valueToEmit);\n    this.cdr.markForCheck();\n  }\n\n  private scrollActiveOptionIntoView(): void {\n    const itemHeight = this.keyManager.activeItem?.rect().height || 0;\n    const scrollContainerHeight = this.panel.nativeElement.scrollHeight;\n    const panelHeight = Math.min(\n      scrollContainerHeight,\n      SELECT_PANEL_MAX_HEIGHT,\n    );\n    const maxScroll = scrollContainerHeight - panelHeight;\n    const scrollBuffer = panelHeight / 2;\n    const optionOffsetFormScrollTop =\n      (this.keyManager.activeItemIndex || 0) * itemHeight;\n    const halfOptionHeight = itemHeight / 2;\n\n    const optimalScrollPosition =\n      optionOffsetFormScrollTop - scrollBuffer + halfOptionHeight;\n    this._scrollTop = Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    this.panel.nativeElement.scrollTop = this._scrollTop;\n  }\n\n  protected _setSize(size: RdsFormFieldSize): void {\n    this.options?.forEach((option) => (option.size = size));\n\n    if (this.selectSearch) {\n      this.selectSearch.size = size;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, startWith } from 'rxjs/operators';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst COUNT_BADGE_MIN_WIDTH = 48;\n\n@Component({\n  selector: '[rds-trigger-values]',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'rdsTriggerValues',\n})\nexport class RdsTriggerValuesComponent implements AfterViewInit, OnChanges {\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly _hiddenValues = new BehaviorSubject(0);\n\n  @Output()\n  readonly hiddenValues = this._hiddenValues.pipe(distinctUntilChanged());\n\n  @Input()\n  @HostBinding('title')\n  get triggerValues(): string[] {\n    return this._triggerValues;\n  }\n\n  set triggerValues(val: string[]) {\n    if (this.hasDifferentValues(val)) {\n      this._triggerValues = val;\n      this.countVisibleCharacters();\n    }\n  }\n\n  @Input() wrapperElement: HTMLElement | null;\n\n  private _multiple = false;\n\n  @Input()\n  set multiple(multiple: BooleanInput) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  private _triggerValues = [' '];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['wrapperElement'] || changes['multiple']) {\n      this.countVisibleCharacters();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    fromEvent(window, 'resize')\n      .pipe(startWith(null), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.countVisibleCharacters());\n  }\n\n  private countVisibleCharacters(): void {\n    if (this.multiple) {\n      if (\n        this.triggerValues.length === 0 ||\n        (this.triggerValues.length === 1 && this.triggerValues[0] === ' ')\n      ) {\n        this.elementRef.nativeElement.innerHTML = ' ';\n        this._hiddenValues.next(0);\n      }\n\n      let visibleValues = 0;\n\n      while (visibleValues < this.triggerValues.length) {\n        this.elementRef.nativeElement.innerHTML = this.triggerValues\n          .slice(0, visibleValues + 1)\n          .join('; ');\n\n        if (\n          this.elementRef.nativeElement.offsetWidth >= this.getValuesMaxWidth()\n        ) {\n          break;\n        }\n\n        visibleValues++;\n      }\n\n      this._hiddenValues.next(this.triggerValues.length - visibleValues - 1);\n    } else {\n      this.elementRef.nativeElement.innerHTML = this.triggerValues[0];\n      this._hiddenValues.next(0);\n    }\n  }\n\n  private getValuesMaxWidth(): number {\n    const wrapperWidth = this.wrapperElement?.offsetWidth || 0;\n    const badgeWidth =\n      (\n        this.wrapperElement?.getElementsByClassName(\n          'rds-form-field__select-hidden-trigger-values-placeholder',\n        )[0] as HTMLElement | null\n      )?.offsetWidth || 0;\n\n    return Math.max(\n      wrapperWidth - Math.max(badgeWidth, COUNT_BADGE_MIN_WIDTH),\n      0,\n    );\n  }\n\n  // provided arrays are sorted\n  private hasDifferentValues(newValue: string[]): boolean {\n    return (\n      this._triggerValues.length !== newValue.length ||\n      this._triggerValues.some((val, i) => val !== newValue[i])\n    );\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  hasModifierKey,\n  HOME,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { merge } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { RdsAbstractFormFieldControl } from '../abstract-form-field-control';\nimport { RdsSelectOption } from './select-types';\nimport { SelectAnimations } from './select.animations';\nimport { RdsAbstractSelectComponent } from './abstract-select.component';\nimport { RdsSingleSelectOptionComponent } from './single-select-option.component';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-select',\n  template: `\n    <ng-container aria-hidden=\"true\" (click)=\"toggle()\">\n      @if (shouldShowValue()) {\n        <div class=\"rds-form-field__select-value\" #wrapperElement>\n          <span\n            class=\"rds-form-field__select-trigger-value\"\n            rds-trigger-values\n            #rdsTriggerValues=\"rdsTriggerValues\"\n            [triggerValues]=\"triggerValues\"\n            [wrapperElement]=\"wrapperElement\"\n          ></span>\n        </div>\n      } @else {\n        @if (shouldShowPlaceholder()) {\n          <div class=\"rds-form-field__select-value\">\n            <div\n              class=\"rds-form-field__select-trigger-value rds-form-field__select-trigger-value-placeholder\"\n            >\n              {{ placeholder }}\n            </div>\n          </div>\n        }\n      }\n\n      <div class=\"rds-form-field__select-arrow-wrapper\">\n        <div\n          class=\"rds-form-field__select-arrow\"\n          [class.rds-form-field__select-arrow--rotate]=\"panelOpen\"\n        ></div>\n      </div>\n\n      <ng-template\n        cdk-connected-overlay\n        cdkConnectedOverlayLockPosition\n        cdkConnectedOverlayHasBackdrop\n        cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n        [cdkConnectedOverlayScrollStrategy]=\"scrollStrategy\"\n        [cdkConnectedOverlayOrigin]=\"origin\"\n        [cdkConnectedOverlayOpen]=\"panelOpen\"\n        [cdkConnectedOverlayPositions]=\"positions\"\n        [cdkConnectedOverlayMinWidth]=\"minWidth\"\n        (backdropClick)=\"close(); onBlur()\"\n        (attach)=\"onAttached()\"\n        (detach)=\"close()\"\n      >\n        <div class=\"rds-select__panel-wrapper\" [@transformPanelWrap]=\"null\">\n          <div\n            #panel\n            class=\"rds-select__panel\"\n            [attr.id]=\"id + '-panel'\"\n            [@transformPanel]=\"'showing'\"\n            (@transformPanel.done)=\"\n              panelDoneAnimatingStream.next($event.toState)\n            \"\n            [style.transformOrigin]=\"transformOrigin\"\n            (keydown)=\"handleKeydown($event)\"\n          >\n            <ng-content select=\"rds-select-search-input\" />\n            <ng-content select=\"rds-select-option\" />\n          </div>\n        </div>\n      </ng-template>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: SelectAnimations,\n  providers: [\n    { provide: RdsAbstractFormFieldControl, useExisting: RdsSelectComponent },\n  ],\n})\nexport class RdsSelectComponent<T>\n  extends RdsAbstractSelectComponent<\n    T,\n    RdsSingleSelectOptionComponent<T>,\n    T,\n    RdsSingleSelectOptionComponent<T>\n  >\n  implements\n    AfterContentInit,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    DoCheck,\n    ControlValueAccessor\n{\n  protected override readonly _name = 'rds-select';\n\n  @Input()\n  set multiple(_multiple: BooleanInput) {\n    throw new Error(\n      `Input 'multiple' is not valid anymore and will be removed in the next release. Use 'rds-multi-select' component instead.`,\n    );\n  }\n\n  get selected(): RdsSingleSelectOptionComponent<T> {\n    return this.selectionModel.selected[0];\n  }\n\n  get triggerValues(): string[] {\n    if (this.empty) {\n      return [''];\n    }\n\n    return [this.selectionModel.selected[0].viewValue];\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.selectionModel = new SelectionModel<RdsSingleSelectOptionComponent<T>>(\n      false,\n    );\n  }\n\n  protected override handleClosedKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey =\n      keyCode === DOWN_ARROW ||\n      keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW ||\n      keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this.keyManager;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (\n      (!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n      (event.altKey && isArrowKey)\n    ) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else {\n      const previouslySelectedOption = this.selected;\n\n      if (keyCode === HOME || keyCode === END) {\n        keyCode === HOME\n          ? manager.setFirstItemActive()\n          : manager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n\n      const selectedOption = this.selected;\n\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        this.liveAnnouncer.announce(\n          (selectedOption as RdsSelectOption<T>).viewValue,\n          10000,\n        );\n      }\n    }\n  }\n\n  protected override handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this.keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (\n      !isTyping &&\n      (keyCode === ENTER || keyCode === SPACE) &&\n      manager.activeItem &&\n      !hasModifierKey(event)\n    ) {\n      event.preventDefault();\n      manager.activeItem.handleClick();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  protected override setSelectionByValue(value: T): void {\n    this.selectionModel.clear();\n    const correspondingOption = this.selectValue(value);\n\n    // Shift focus to the active item. Note that we shouldn't do this in multiple\n    // mode, because we don't know what option the user interacted with last.\n    if (correspondingOption) {\n      this.keyManager.updateActiveItem(correspondingOption);\n    } else if (!this.panelOpen) {\n      // Otherwise reset the highlighted option. Note that we only want to do this while\n      // closed, because doing it while open can shift the user's focus unnecessarily.\n      this.keyManager.updateActiveItem(-1);\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  protected override initKeyManager(): void {\n    super.initKeyManager();\n\n    this.keyManager.tabOut\n      .pipe(\n        takeUntil(this.destroyKeyManager$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        if (this.panelOpen) {\n          // Select the active item when tabbing away. This is consistent with how the native\n          // select behaves. Note that we only want to do this in single selection mode.\n          if (this.keyManager.activeItem) {\n            this.keyManager.activeItem.toggle();\n          }\n        }\n      });\n\n    this.keyManager.change\n      .pipe(\n        takeUntil(this.destroyKeyManager$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        if (!this._panelOpen && this.keyManager.activeItem) {\n          this.keyManager.activeItem.toggle();\n        }\n      });\n  }\n\n  protected override resetOptions(): void {\n    super.resetOptions();\n\n    this.optionSelectionChanges\n      .pipe(\n        takeUntil(this.options.changes),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((event) => {\n        this.onSelect(event.source, event.isUserInput);\n\n        if (event.isUserInput && this._panelOpen) {\n          this.close();\n          this.focus();\n        }\n      });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map((option) => option.checkedChanged))\n      .pipe(\n        // should emit one time if states changes for many options\n        debounceTime(1),\n        takeUntil(this.options.changes),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        this.stateChanges.next();\n      });\n  }\n\n  protected override onSelect(\n    option: RdsSingleSelectOptionComponent<T>,\n    isUserInput = false,\n  ): void {\n    super.onSelect(option);\n\n    if (isUserInput) {\n      this.keyManager.setActiveItem(option);\n    }\n\n    this.stateChanges.next();\n  }\n\n  protected getValueToEmit(): T {\n    return this.selected ? this.selected.value : (null as T);\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-control-suffix], [rdsControlSuffix]',\n})\nexport class RdsSuffixDirective {\n  @HostBinding('class') readonly hostClass = 'rds-form-field__control-suffix';\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { CdkOverlayOrigin } from '@angular/cdk/overlay';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  InjectionToken,\n  Input,\n  numberAttribute,\n  OnChanges,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { EMPTY, fromEvent, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { RdsAbstractFormFieldControl } from './abstract-form-field-control';\nimport { RdsErrorDirective } from './error.directive';\nimport { RdsHintDirective } from './hint.directive';\nimport { RdsLabelDirective } from './label.directive';\nimport { RdsPrefixDirective } from './prefix.directive';\nimport { RdsSelectComponent } from './select/select.component';\nimport { RdsSuffixDirective } from './suffix.directive';\nimport { RdsInputDirective } from './input.directive';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl } from '@angular/forms';\nimport {\n  RdsAutocompleteComponent,\n  RdsMultiAutocompleteComponent,\n} from '../autocomplete';\n\nlet nextUniqueId = 0;\nconst DEFAULT_LABEL_WIDTH = 25;\nexport type RdsFormFieldSize = 's' | 'm' | 'l';\n\nexport const rdsFormFieldAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('200ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n\nexport const RDS_FORM_FIELD = new InjectionToken<\n  RdsFormFieldComponent<unknown>\n>('RDS_FORM_FIELD');\n\nexport type RdsFormFieldLabelPosition =\n  | 'floating'\n  | 'side-left'\n  | 'side-right'\n  | 'top'\n  | 'none';\n\n@Component({\n  selector: 'rds-form-field',\n  template: `\n    @if (labelPosition !== 'floating' && labelPosition !== 'none') {\n      <div class=\"rds-form-field__label-wrapper\">\n        <ng-container [ngTemplateOutlet]=\"label\" />\n      </div>\n    }\n    <div\n      class=\"rds-form-field__container\"\n      [ngClass]=\"formFieldType\"\n      [class.rds-form-field--static-label]=\"\n        labelPosition !== 'floating' && labelPosition !== 'none'\n      \"\n      [class.rds-form-field--hint-or-error-or-counter]=\"\n        inputHints.length || inputErrors.length || maxCharacters\n      \"\n    >\n      <div\n        class=\"rds-form-field__control-container\"\n        [ngClass]=\"{\n          'rds-form-field-textarea':\n            this.control.controlType === 'textarea-field'\n        }\"\n        cdk-overlay-origin\n        (mouseover)=\"mouseover = true\"\n        (mouseout)=\"mouseover = false\"\n        [attr.aria-hidden]=\"control.controlType !== 'chip-grid'\"\n        #origin=\"cdkOverlayOrigin\"\n        #trigger\n        (click)=\"control.onContainerClick($event)\"\n      >\n        <div class=\"rds-form-field__content\">\n          @if (inputPrefixes.length > 0) {\n            <div class=\"rds-form-field__content-prefix\">\n              <ng-content\n                select=\"[rds-control-prefix], rds-control-prefix-separator\"\n              />\n            </div>\n          }\n          <div\n            class=\"rds-form-field__content-infix\"\n            [class.rds-form-field__content-infix--floating-label]=\"\n              labelPosition === 'floating'\n            \"\n            [class.rds-form-field_content-infix--focused]=\"this.control.focused\"\n          >\n            @if (labelPosition === 'floating') {\n              <span\n                class=\"rds-form-field__label-wrapper\"\n                [class.rds-form-field__label-wrapper--float]=\"\n                  control.shouldLabelFloat\n                \"\n              >\n                <ng-container [ngTemplateOutlet]=\"label\" />\n              </span>\n            }\n            <ng-content />\n          </div>\n          @if (inputSuffixes.length > 0) {\n            <div\n              class=\"rds-form-field__content-suffix\"\n              [ngClass]=\"{\n                'rds-form-field__content-suffix-datepicker':\n                  this.control.controlType === 'date-picker' ||\n                  this.control.controlType === 'date-range'\n              }\"\n              #suffix\n            >\n              <ng-content\n                select=\"[rds-control-suffix], rds-control-suffix-separator\"\n              />\n            </div>\n          }\n        </div>\n      </div>\n      <div class=\"rds-form-field__subscript-wrapper\">\n        @switch (isErrorMessageVisible) {\n          @case (true) {\n            <div\n              class=\"rds-form-field__subscript rds-form-field__subscript--error\"\n              [@transitionMessages]=\"subscriptAnimationState\"\n            >\n              <ng-content select=\"rds-control-error\" />\n            </div>\n          }\n          @case (false) {\n            <div\n              class=\"rds-form-field__subscript rds-form-field__subscript--hint\"\n              [@transitionMessages]=\"subscriptAnimationState\"\n            >\n              <ng-content select=\"rds-control-hint\" />\n            </div>\n          }\n        }\n        @if (\n          this.control.controlType === 'textarea-field' &&\n          !hideTextareaCharacterCounter &&\n          maxCharacters\n        ) {\n          <div class=\"rds-control-counter\">\n            {{ numberOfCharacters }}/{{ maxCharacters }}\n          </div>\n        }\n      </div>\n    </div>\n    <ng-template #label>\n      <label\n        [id]=\"labelId\"\n        [attr.for]=\"control.id\"\n        class=\"rds-form-field__label\"\n        [class.rds-form-field__label--float]=\"control.shouldLabelFloat\"\n      >\n        <span>\n          <ng-content select=\"rds-control-label\" />\n        </span>\n        @if (!hideRequiredMarker && control.required && !control.disabled) {\n          <span class=\"rds-form-field__asterisk\"> &#32;* </span>\n        }\n        @if (labelPosition !== 'floating') {\n          <span class=\"rds-form-field-icon-wrapper\">\n            <ng-content\n              select=\"rds-icon[rds-label-icon], rds-icon[rdsLabelIcon]\"\n            />\n          </span>\n        }\n      </label>\n    </ng-template>\n  `,\n  styleUrls: ['./form-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [rdsFormFieldAnimations.transitionMessages],\n  providers: [{ provide: RDS_FORM_FIELD, useExisting: RdsFormFieldComponent }],\n})\nexport class RdsFormFieldComponent<T>\n  implements AfterContentInit, AfterContentChecked, AfterViewInit, OnChanges\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly renderer = inject(Renderer2);\n\n  subscriptAnimationState: '' | 'enter' = '';\n\n  labelId = `rds-form-field-label-${nextUniqueId++}`;\n\n  mouseover: boolean;\n\n  @ContentChild(RdsAbstractFormFieldControl)\n  abstractControl: RdsAbstractFormFieldControl<T>;\n\n  get control(): RdsAbstractFormFieldControl<T> {\n    return this.abstractControl;\n  }\n\n  get numberOfCharacters(): number {\n    return (this.abstractControl.value as string).length;\n  }\n\n  @ContentChildren(RdsErrorDirective, { descendants: true })\n  inputErrors: QueryList<RdsErrorDirective>;\n\n  @ContentChildren(RdsHintDirective, { descendants: true })\n  inputHints: QueryList<RdsHintDirective>;\n\n  @ContentChildren(RdsSuffixDirective, { descendants: true })\n  inputSuffixes: QueryList<RdsSuffixDirective>;\n\n  @ContentChildren(RdsPrefixDirective, { descendants: true })\n  inputPrefixes: QueryList<RdsPrefixDirective>;\n\n  @ContentChild(RdsLabelDirective, { descendants: true })\n  label: RdsLabelDirective;\n\n  @ContentChild(RdsInputDirective, { descendants: true, read: ElementRef })\n  inputEl: ElementRef<HTMLInputElement>;\n\n  @ContentChild(RdsSelectComponent, { descendants: true, read: ElementRef })\n  selectEl: ElementRef<HTMLElement>;\n\n  @ViewChild('trigger') private trigger: ElementRef<HTMLDivElement>;\n  @ViewChild('suffix') private suffix: ElementRef<HTMLDivElement>;\n  @ViewChild(CdkOverlayOrigin) private origin: CdkOverlayOrigin;\n\n  @HostBinding('class') get class(): string[] {\n    const classList = ['rds-form-field'];\n\n    if (this.control.disabled) {\n      classList.push('rds-form-field--disabled');\n    }\n\n    if (this.control.errorState) {\n      classList.push('rds-form-field--invalid');\n    }\n\n    if (this.control.focused) {\n      classList.push('rds-form-field--focused');\n    }\n\n    if (\n      this.control.controlType === 'autocomplete-multi' &&\n      (this.control as unknown as RdsMultiAutocompleteComponent<T>).hasValue()\n    ) {\n      classList.push('rds-form-field--has-value');\n    }\n\n    if (this.label && !!this.labelPosition && this.labelPosition !== 'none') {\n      if (this.labelPosition === 'side-left') {\n        classList.push('rds-form-field--side');\n        classList.push('rds-form-field--side-left');\n      } else if (this.labelPosition === 'side-right') {\n        classList.push('rds-form-field--side');\n        classList.push('rds-form-field--side-right');\n      } else if (this.labelPosition === 'floating') {\n        classList.push('rds-form-field--floating-label');\n      }\n    } else {\n      classList.push('rds-form-field--no-label');\n    }\n\n    if (\n      this.inputHints.length ||\n      this.inputErrors.length ||\n      this.maxCharacters\n    ) {\n      classList.push('rds-form-field--hint-or-error-or-counter');\n    }\n\n    if (this.control.controlType === 'textarea-field') {\n      classList.push('rds-form-field__wrapper-textarea-field');\n    }\n\n    if (this.inputSuffixes.length) {\n      classList.push('rds-form-field-with-suffix');\n    }\n\n    if (this.mouseover) {\n      classList.push('rds-form-field--hover');\n    } else {\n      const index = classList.indexOf('rds-form-field--hover');\n\n      if (index !== -1) {\n        classList.splice(index, 1);\n      }\n    }\n\n    if (this._isPrevSelect) {\n      classList.push('rds-form-field--prev-select');\n    }\n\n    if (this._isPrevButton) {\n      classList.push('rds-form-field--prev-button');\n    }\n\n    if (this._isPrevFocused) {\n      classList.push('rds-form-field--prev-focused');\n    }\n\n    if (this.size) {\n      classList.push(`rds-form-field--${this.size}`);\n    }\n\n    return [...classList];\n  }\n\n  @Input({ transform: booleanAttribute }) hideRequiredMarker = false;\n\n  @Input({ transform: booleanAttribute }) hideTextareaCharacterCounter = false;\n\n  _labelPosition: RdsFormFieldLabelPosition = 'floating';\n\n  @Input()\n  get labelPosition(): RdsFormFieldLabelPosition {\n    return this._labelPosition;\n  }\n\n  set labelPosition(labelPosition: RdsFormFieldLabelPosition) {\n    this._labelPosition = labelPosition;\n    this.control?.stateChanges.emit();\n  }\n\n  _size: RdsFormFieldSize = 'l';\n\n  @Input()\n  get size(): RdsFormFieldSize {\n    return this._size;\n  }\n\n  set size(size: RdsFormFieldSize) {\n    this._size = size;\n    this.control?.stateChanges.emit();\n  }\n\n  private _labelWidth = DEFAULT_LABEL_WIDTH;\n\n  @HostBinding('style.--rds-control-label-width')\n  @Input()\n  set labelWidth(value: NumberInput) {\n    const val = numberAttribute(value);\n\n    if (val < 0 || val > 100) {\n      throw new Error(\n        `The labelWidth value should be less 100 than and greater than 0.`,\n      );\n    }\n\n    this._labelWidth = numberAttribute(value, DEFAULT_LABEL_WIDTH);\n  }\n  get labelWidth(): number {\n    return this._labelWidth;\n  }\n\n  get formFieldType(): string {\n    if (!this.control) {\n      return '';\n    }\n\n    if (\n      this.elementRef.nativeElement.parentElement.classList.contains(\n        'rds-global-search',\n      )\n    ) {\n      return 'rds-form-field--global-search';\n    }\n\n    return `rds-form-field--${this.control.controlType}`;\n  }\n\n  protected maxCharacters: number | null = 0;\n  private _isPrevSelect = false;\n  private _isPrevButton = false;\n  private _isPrevFocused = false;\n\n  ngAfterContentInit(): void {\n    this.validateControlExistence();\n    merge(\n      this.inputEl ? fromEvent(this.inputEl.nativeElement, 'focus') : EMPTY,\n      this.inputEl ? fromEvent(this.inputEl.nativeElement, 'blur') : EMPTY,\n      this.selectEl ? fromEvent(this.selectEl.nativeElement, 'focus') : EMPTY,\n      this.selectEl ? fromEvent(this.selectEl.nativeElement, 'blur') : EMPTY,\n    )\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.checkFormFieldStatus());\n\n    const control = this.control;\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => this.cdr.markForCheck());\n    }\n\n    merge(\n      control.stateChanges,\n      this.inputHints.changes,\n      this.inputErrors.changes,\n    )\n      .pipe(startWith([null]), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        const describedByIds = this.buildDescribedByIds();\n        control.setDescribedByIds(describedByIds);\n        this.cdr.markForCheck();\n      });\n\n    this.inputSuffixes.changes\n      .pipe(startWith([null]), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.control.suffixed = !!this.inputSuffixes.first;\n        this.control.stateChanges.emit();\n      });\n\n    this.inputPrefixes.changes\n      .pipe(startWith([null]), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.control.prefixed = !!this.inputPrefixes.first;\n        this.control.stateChanges.emit();\n      });\n  }\n\n  ngAfterContentChecked(): void {\n    this.checkFormFieldStatus();\n    this.validateControlExistence();\n    this.checkControlMaxCharacters();\n\n    if (this.formFieldType && this.elementRef.nativeElement) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.formFieldType);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (\n      this.control.controlType === 'select' ||\n      this.control.controlType === 'select-with-chips'\n    ) {\n      (this.control as unknown as RdsSelectComponent<T>).trigger = this.trigger;\n      (this.control as unknown as RdsSelectComponent<T>).origin = this.origin;\n    } else if (\n      this.control.controlType === 'autocomplete' ||\n      this.control.controlType === 'autocomplete-multi'\n    ) {\n      (this.control as unknown as RdsAutocompleteComponent<T>)._trigger =\n        this.trigger;\n      (this.control as unknown as RdsAutocompleteComponent<T>)._origin =\n        this.origin;\n    }\n\n    this.subscriptAnimationState = 'enter'; // Avoid animations on load.\n    this.cdr.detectChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['labelPosition'] && this.labelPosition === 'floating') {\n      if (changes['size'] && this.size !== 'l') {\n        throw Error(\n          `Form field with '${this.size}' size cannot have floating label`,\n        );\n      }\n    }\n  }\n\n  private checkFormFieldStatus(): void {\n    this._isPrevSelect =\n      this.elementRef?.nativeElement?.nextElementSibling?.classList.contains(\n        'rds-form-field--select',\n      );\n    this._isPrevButton =\n      this.elementRef?.nativeElement?.nextElementSibling?.classList.contains(\n        'rds-button',\n      );\n    this._isPrevFocused =\n      this.elementRef?.nativeElement?.nextElementSibling?.classList.contains(\n        'rds-form-field--focused',\n      ) ||\n      this.elementRef?.nativeElement?.nextElementSibling?.classList.contains(\n        'rds-dropdown--focused',\n      );\n  }\n\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.trigger || this.elementRef;\n  }\n\n  get isErrorMessageVisible(): boolean {\n    return (\n      this.inputErrors && this.inputErrors.length > 0 && this.control.errorState\n    );\n  }\n\n  private buildDescribedByIds(): string[] {\n    let ids: string[] = [];\n\n    if (this.isErrorMessageVisible) {\n      ids = this.inputErrors.map((error) => error.id);\n    } else if (this.inputHints) {\n      ids = this.inputHints.map((hint) => hint.id);\n    }\n\n    return ids;\n  }\n\n  private validateControlExistence(): void {\n    if (!this.control) {\n      throw new Error('Cannot use form field without control component');\n    }\n  }\n\n  private checkControlMaxCharacters(): void {\n    if (this.control.controlType === 'textarea-field') {\n      if (this.control?.ngControl?.control?.validator) {\n        const result = this.control.ngControl.control.validator(\n          new FormControl({ length: Infinity }),\n        );\n\n        if (result && result['maxlength']) {\n          this.maxCharacters = numberAttribute(\n            result['maxlength']['requiredLength'],\n            0,\n          );\n        }\n      } else if (\n        this.control instanceof RdsInputDirective &&\n        this.control.getMaxlengthAttr()\n      ) {\n        this.maxCharacters = this.control.getMaxlengthAttr();\n      } else {\n        this.maxCharacters = null;\n      }\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'rds-control-prefix-separator',\n  template: ` <div class=\"rds-form-field__control-prefix-separator\"></div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsPrefixSeparatorComponent {\n  @HostBinding('class') readonly hostClass =\n    'rds-form-field__control-prefix-separator-container';\n}\n","import { RdsSingleSelectOptionComponent } from './single-select-option.component';\nimport { RdsMultiSelectOptionComponent } from './multi-select-option.component';\nimport { RdsSelectOption } from './select-types';\n\nexport class RdsAbstractSelectOptionSelectionChangedEvent<\n  T,\n  O extends RdsSelectOption<T>,\n> {\n  constructor(\n    public readonly source: O,\n    public readonly isUserInput = false,\n  ) {}\n}\n\nexport class RdsSelectOptionSelectionChangedEvent<\n  T,\n> extends RdsAbstractSelectOptionSelectionChangedEvent<\n  T,\n  RdsSingleSelectOptionComponent<T>\n> {}\n\nexport class RdsMultiSelectOptionSelectionChangedEvent<\n  T,\n> extends RdsAbstractSelectOptionSelectionChangedEvent<\n  T,\n  RdsMultiSelectOptionComponent<T>\n> {}\n","import { AfterViewChecked, Component, HostBinding, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {\n  RdsListItemComponent,\n  RdsMultiSelectListItemComponent,\n} from '../../list-item';\nimport { RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE } from '../../list-item';\nimport { AbstractFocusableOption } from './abstract-focusable-option';\nimport { RdsMultiSelectOptionSelectionChangedEvent } from './select-option-selection-changed.event';\n\nlet nextId = 0;\n\n@Component({\n  template: RDS_MULTI_SELECT_LIST_ITEM_TEMPLATE,\n  selector: 'rds-multi-select-option',\n  providers: [\n    {\n      provide: RdsListItemComponent,\n      useExisting: RdsMultiSelectOptionComponent,\n    },\n    {\n      provide: AbstractFocusableOption,\n      useExisting: RdsMultiSelectOptionComponent,\n    },\n  ],\n})\nexport class RdsMultiSelectOptionComponent<T>\n  extends RdsMultiSelectListItemComponent\n  implements AfterViewChecked, AbstractFocusableOption\n{\n  private _currentViewValue = '';\n\n  @HostBinding('class') hostClass = 'rds-select__option';\n\n  @Input()\n  @HostBinding('attr.id')\n  id = `rds-option-${nextId++}`;\n\n  @Input() value: T;\n\n  readonly selectionChange$ = new Subject<\n    RdsMultiSelectOptionSelectionChangedEvent<T>\n  >();\n\n  get viewValue(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.checked) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._currentViewValue) {\n        this._currentViewValue = viewValue;\n      }\n    }\n  }\n\n  rect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  isVisible(): boolean {\n    return !this.elementRef.nativeElement.classList.contains('hide');\n  }\n\n  toggleVisibility(value: boolean | null): void {\n    if (value === true) {\n      this.show();\n    } else if (value === false) {\n      this.hide();\n    } else {\n      if (this.isVisible()) {\n        this.hide();\n      } else if (!this.isVisible()) {\n        this.show();\n      }\n    }\n  }\n\n  hide(): void {\n    this.renderer.addClass(this.elementRef.nativeElement, 'hide');\n  }\n\n  show(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement, 'hide');\n  }\n\n  override toggle(): void {\n    super.toggle();\n    this.selectionChange$.next(\n      new RdsMultiSelectOptionSelectionChangedEvent(this, true),\n    );\n  }\n\n  handleClick(): void {\n    this.toggle();\n  }\n\n  setActiveStyles(): void {\n    this.focus('keyboard');\n  }\n\n  setInactiveStyles(): void {\n    if (this._focused) {\n      this.blur();\n      this.cdr.markForCheck();\n    }\n  }\n}\n","import { RdsSelectAllOptionComponent } from './select-all-option.component';\nexport class RdsSelectAllChangedEvent<T> {\n  constructor(\n    public readonly source: RdsSelectAllOptionComponent<T>,\n    public readonly selectAll: boolean,\n  ) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsAbstractSelectableListItemComponent } from '../../list-item';\nimport { AbstractFocusableOption } from './abstract-focusable-option';\nimport { RdsSelectAllChangedEvent } from './select-all-changed.event';\n\nlet uniqueId = 0;\n\n@Component({\n  selector: 'rds-select-all-option',\n  template: `\n    <rds-pseudo-checkbox noSpacing [checked]=\"checked\" [disabled]=\"disabled\" />\n    <span>Select all</span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: AbstractFocusableOption,\n      useExisting: RdsSelectAllOptionComponent,\n    },\n  ],\n})\nexport class RdsSelectAllOptionComponent<T>\n  extends RdsAbstractSelectableListItemComponent\n  implements AbstractFocusableOption\n{\n  id = `rds-select__select-all-${uniqueId++}`;\n\n  @Output()\n  readonly selectAllChanged = new EventEmitter<RdsSelectAllChangedEvent<T>>();\n\n  rect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  isVisible(): boolean {\n    return true;\n  }\n\n  get hostElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  setActiveStyles(): void {\n    this.focus('keyboard');\n  }\n\n  setInactiveStyles(): void {\n    this.blur();\n  }\n\n  protected override getSelectTypeClass(): string {\n    return 'rds-select__option--select-all';\n  }\n\n  override toggle(): void {\n    super.toggle();\n\n    this.selectAllChanged.emit(\n      new RdsSelectAllChangedEvent(this, this.checked),\n    );\n    this.cdr.markForCheck();\n  }\n\n  handleClick(): void {\n    this.toggle();\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'rds-select-option-separator',\n  template: '<div>&nbsp;</div>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsSelectOptionSeparatorComponent {\n  @HostBinding('class') class = 'rds-select__option--separator';\n}\n","import { AfterViewChecked, Component, HostBinding, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { RdsListItemComponent } from '../../list-item';\nimport {\n  RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE,\n  RdsSingleSelectListItemComponent,\n} from '../../list-item';\nimport { AbstractFocusableOption } from './abstract-focusable-option';\nimport { RdsSelectOptionSelectionChangedEvent } from './select-option-selection-changed.event';\n\nlet nextId = 0;\n\n@Component({\n  template: RDS_SINGLE_SELECT_LIST_ITEM_TEMPLATE,\n  selector: 'rds-select-option',\n  providers: [\n    {\n      provide: RdsListItemComponent,\n      useExisting: RdsSingleSelectOptionComponent,\n    },\n    {\n      provide: AbstractFocusableOption,\n      useExisting: RdsSingleSelectOptionComponent,\n    },\n  ],\n})\nexport class RdsSingleSelectOptionComponent<T>\n  extends RdsSingleSelectListItemComponent\n  implements AfterViewChecked, AbstractFocusableOption\n{\n  private _currentViewValue = '';\n\n  @HostBinding('class') hostClass = 'rds-select__option';\n\n  @Input()\n  @HostBinding('attr.id')\n  id = `rds-option-${nextId++}`;\n\n  @Input() value: T;\n\n  readonly selectionChange$ = new Subject<\n    RdsSelectOptionSelectionChangedEvent<T>\n  >();\n\n  get viewValue(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.checked) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._currentViewValue) {\n        this._currentViewValue = viewValue;\n      }\n    }\n  }\n\n  rect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  isVisible(): boolean {\n    return !this.elementRef.nativeElement.classList.contains('hide');\n  }\n\n  toggleVisibility(value: boolean | null): void {\n    if (value === true) {\n      this.show();\n    } else if (value === false) {\n      this.hide();\n    } else {\n      if (this.isVisible()) {\n        this.hide();\n      } else if (!this.isVisible()) {\n        this.show();\n      }\n    }\n  }\n\n  hide(): void {\n    this.renderer.addClass(this.elementRef.nativeElement, 'hide');\n  }\n\n  show(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement, 'hide');\n  }\n\n  override toggle(): void {\n    this.handleClick();\n  }\n\n  handleClick(): void {\n    if (!this.disabled && !this.checked) {\n      this.checked = true;\n      this.selectionChange$.next(\n        new RdsSelectOptionSelectionChangedEvent(this, true),\n      );\n    }\n  }\n\n  setActiveStyles(): void {\n    this.focus('keyboard');\n  }\n\n  setInactiveStyles(): void {\n    if (this._focused) {\n      this.blur();\n      this.cdr.markForCheck();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'rds-control-suffix-separator',\n  template: ` <div class=\"rds-form-field__control-suffix-separator\"></div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsSuffixSeparatorComponent {\n  @HostBinding('class') readonly hostClass =\n    'rds-form-field__control-suffix-separator-container';\n}\n","import { Directive, HostBinding, inject } from '@angular/core';\nimport { RdsAvatarComponent } from '../avatar';\n\n@Directive({\n  selector: `\n  img[rds-chip-avatar], img[rdsChipAvatar],\n  svg[rds-chip-avatar], svg[rdsChipAvatar],\n  rds-avatar[rds-chip-avatar], rds-avatar[rdsChipAvatar],\n  `,\n})\nexport class RdsChipAvatarDirective {\n  private readonly avatar = inject(RdsAvatarComponent, {\n    host: true,\n    self: true,\n    optional: true,\n  });\n\n  @HostBinding('class') class = 'rds-chip__avatar';\n\n  constructor() {\n    if (this.avatar) {\n      this.avatar.disableInteractions = true;\n    }\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-icon[rds-chip-leading-icon], rds-icon[rdsChipLeadingIcon]',\n})\nexport class RdsChipLeadingIconDirective {\n  @HostBinding('class')\n  class = 'rds-chip__leading-icon';\n}\n","import { InjectionToken } from '@angular/core';\nimport { RdsChipListComponent } from './chip-list/chip-list.component';\nimport { RdsChipsDefaultOptions } from './chip.types';\n\nexport const RDS_CHIP_LIST = new InjectionToken<RdsChipListComponent<unknown>>(\n  'RDS_CHIP_LIST',\n);\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const RDS_CHIPS_DEFAULT_OPTIONS =\n  new InjectionToken<RdsChipsDefaultOptions>('RDS_CHIPS_DEFAULT_OPTIONS');\n","import {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  numberAttribute,\n} from '@angular/core';\nimport { FocusableOption } from '@angular/cdk/a11y';\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Directive({\n  selector: '[rds-chip-action], [rdsChipAction]',\n})\nexport class RdsChipActionDirective implements FocusableOption {\n  public readonly nativeElement = inject(ElementRef).nativeElement;\n\n  private _tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @HostBinding('class')\n  readonly classes = 'rds-chip-action';\n\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_NOT_FOCUSABLE);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('attr.aria-disabled')\n  disabled = false;\n\n  @HostBinding('attr.disabled')\n  protected get disabledAttribute(): string | null {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled ? '' : null;\n  }\n\n  @HostBinding('tabIndex')\n  protected get tabindexAttribute(): string | null {\n    return this.disabled ? null : this.tabIndex.toString();\n  }\n\n  focus(): void {\n    this.nativeElement.focus();\n  }\n}\n","import { FocusableOption, FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { take } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { RdsChipActionDirective } from '../chip-action';\nimport { BACKSPACE, DELETE, SPACE } from '@angular/cdk/keycodes';\nimport { RdsChipEvent, RdsChipsSize, RdsChipType } from '../chip.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'rds-chip, button[rds-chip], button[rdsChip]',\n  templateUrl: './chip.component.html',\n  styleUrls: ['../chips.common.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsChipComponent<T>\n  implements FocusableOption, AfterViewInit, OnDestroy\n{\n  protected readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly contentObserver = inject(ContentObserver);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly destroyRef = inject(DestroyRef);\n  public readonly cdr = inject(ChangeDetectorRef);\n\n  private _value: T;\n  private hasFocusInternal = false;\n  private _pendingFocus = false;\n  private _ariaLabelCloseButton?: string;\n  private _initialized = false;\n\n  readonly focus$ = new Subject<RdsChipEvent<T>>();\n  readonly blur$ = new Subject<RdsChipEvent<T>>();\n\n  @HostBinding('class')\n  get hostClasses(): Record<string, boolean> {\n    return {\n      'rds-chips__chip': true,\n      'rds-chips__chip--input': this.closable,\n      [`rds-chips--size-${this.size}`]: true,\n      [`rds-chips--type-${this.type}`]: true,\n    };\n  }\n\n  @HostBinding('attr.id')\n  readonly id = `rds-chip--${nextId++}`;\n\n  @Input()\n  set ariaLabelCloseButton(v: string | undefined) {\n    this._ariaLabelCloseButton = v;\n  }\n\n  get ariaLabelCloseButton(): string {\n    return this._ariaLabelCloseButton || 'close' + this.textContent;\n  }\n\n  @Input()\n  set size(value: RdsChipsSize) {\n    if (this._size !== value) {\n      this._size = value;\n\n      if (this._initialized) {\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  get size(): RdsChipsSize {\n    return this._size;\n  }\n\n  private _size: RdsChipsSize;\n\n  @Input()\n  type: RdsChipType = 'blue';\n\n  @Input()\n  @HostBinding('attr.role')\n  role: string | null = null;\n\n  @HostBinding('attr.aria-disabled')\n  @HostBinding('disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n\n  @Input({ transform: booleanAttribute }) closable = false;\n\n  @Input()\n  set value(value: T) {\n    const oldValue = this._value;\n    this._value = value;\n\n    if (this._value !== oldValue) {\n      this.cdr.markForCheck();\n    }\n  }\n\n  get value(): T | string {\n    return this._value !== undefined ? this._value : this.innerText;\n  }\n\n  get innerText(): string {\n    return this.elementRef.nativeElement.innerText;\n  }\n\n  @Output()\n  readonly closeChip = new EventEmitter<void>();\n\n  @Output() readonly destroyed = new EventEmitter<RdsChipEvent<T>>();\n\n  @ViewChild('primary', { read: RdsChipActionDirective })\n  primaryAction?: RdsChipActionDirective;\n\n  @ViewChild('closeButton', { read: RdsChipActionDirective })\n  closeAction: RdsChipActionDirective;\n\n  get textContent(): string | null {\n    return this.elementRef.nativeElement.textContent;\n  }\n\n  constructor() {\n    this.monitorFocus();\n  }\n\n  ngAfterViewInit(): void {\n    this.contentObserver\n      .observe(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n\n    this._initialized = true;\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroyed.emit({ source: this });\n    this.destroyed.complete();\n  }\n\n  @HostListener('click', ['$event'])\n  @HostListener('keydown', ['$event'])\n  handleKeydown(event: PointerEvent | KeyboardEvent): void {\n    if (\n      this.disabled ||\n      // let action chips do their own thing\n      (event.target as Element)?.tagName.toLowerCase() === 'button'\n    ) {\n      return;\n    }\n\n    if ('keyCode' in event && event.keyCode !== SPACE) {\n      if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n        event.preventDefault();\n        this.closeChip.emit();\n      }\n\n      return;\n    }\n\n    event.preventDefault();\n    this.handlePrimaryActionInteraction();\n  }\n\n  focus(): void {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n\n  onClose(e: Event): void {\n    if (!this.disabled) {\n      e.stopPropagation();\n      this.closeChip.emit();\n    }\n  }\n\n  hasFocus(): boolean {\n    return this.hasFocusInternal;\n  }\n\n  /** Handles interactions with the primary action of the chip. */\n  handlePrimaryActionInteraction(): void {\n    // Empty here, but is overwritten in child classes.\n  }\n\n  getSourceAction(target: Node): RdsChipActionDirective | undefined {\n    return this.getActions().find((action) => {\n      const element = action.nativeElement;\n\n      return element === target || element.contains(target);\n    });\n  }\n\n  getActions(): RdsChipActionDirective[] {\n    const result: RdsChipActionDirective[] = [];\n\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n\n    if (this.closeAction) {\n      result.push(this.closeAction);\n    }\n\n    return result;\n  }\n\n  private monitorFocus(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe((origin) => {\n      const hasFocus = origin !== null;\n\n      if (hasFocus !== this.hasFocusInternal) {\n        this.hasFocusInternal = hasFocus;\n\n        if (hasFocus) {\n          this.focus$.next({ source: this });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this.ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() =>\n              this.ngZone.run(() => this.blur$.next({ source: this })),\n            );\n        }\n      }\n    });\n  }\n}\n","<div [ngClass]=\"['rds-chips-wrapper', 'rds-chips--size-' + size]\">\n  <span #primary rds-chip-action [disabled]=\"disabled\">\n    <ng-content\n      select=\"rds-icon[rdsChipLeadingIcon], rds-icon[rds-chip-leading-icon]\"\n    />\n    <ng-content select=\"img[rdsChipAvatar], img[rds-chip-avatar]\" />\n    <ng-content />\n  </span>\n  @if (closable) {\n    <button\n      #closeButton\n      class=\"rds-chip-close-button\"\n      rds-icon-button\n      rds-chip-action\n      [attr.aria-label]=\"ariaLabelCloseButton\"\n      [disabled]=\"disabled\"\n      (click)=\"onClose($event)\"\n      type=\"button\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"close\" class=\"rds-chip-close-icon\" />\n    </button>\n  } @else {\n    <ng-content\n      select=\"rds-icon[rdsChipTrailingIcon], rds-icon[rds-chip-trailing-icon]\"\n    />\n  }\n</div>\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, noop, Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { RdsChipActionDirective } from './chip-action';\nimport { RdsChipEvent, RdsChipsSize, RdsChipType } from './chip.types';\nimport { RdsChipComponent } from './chip/chip.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Component({\n  selector: 'rds-chip-set',\n  template: '',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsChipSetComponent<T>\n  implements AfterContentInit, AfterViewInit, OnDestroy, OnChanges\n{\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly dir = inject(Directionality, { optional: true });\n\n  private _lastDestroyedFocusedChipIndex: number | null = null;\n  private _tabIndex = TAB_INDEX_DEFAULT;\n\n  protected keyManager: FocusKeyManager<RdsChipActionDirective>;\n  protected _defaultRole = 'presentation';\n  protected _disabled = false;\n  protected _size: RdsChipsSize = 's';\n\n  get chipFocusChanges(): Observable<RdsChipEvent<T>> {\n    return this.getChipStream((chip) => chip.focus$);\n  }\n\n  get chipDestroyedChanges(): Observable<RdsChipEvent<T>> {\n    return this.getChipStream((chip) => chip.destroyed);\n  }\n\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  @Input()\n  type: RdsChipType = 'blue';\n\n  @Input()\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n    this.syncChipsState();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  get empty(): boolean {\n    return this.chips.length === 0;\n  }\n\n  @Input()\n  @HostBinding('attr.role')\n  get role(): string | null {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n\n    return this.empty ? null : this._defaultRole;\n  }\n\n  set role(value: string | null) {\n    this._explicitRole = value;\n  }\n\n  private _explicitRole: string | null = null;\n\n  get focused(): boolean {\n    return this.hasFocusedChip();\n  }\n\n  @ContentChildren(RdsChipComponent, { descendants: true })\n  chips: QueryList<RdsChipComponent<T>>;\n\n  chipActions = new QueryList<RdsChipActionDirective>();\n\n  ngAfterContentInit(): void {\n    this.chips.changes\n      .pipe(startWith(this.chips), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.checkAndSetChipSizes());\n  }\n\n  ngAfterViewInit(): void {\n    this.setUpFocusManagement();\n    this.trackChipSetChanges();\n    this.trackDestroyedFocusedChip();\n  }\n\n  ngOnDestroy(): void {\n    this.keyManager?.destroy();\n    this.chipActions.destroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      (changes['size'] && !changes['size'].isFirstChange()) ||\n      (changes['type'] && !changes['type'].isFirstChange())\n    ) {\n      this.checkAndSetChipSizes();\n    }\n  }\n\n  protected hasFocusedChip(): boolean {\n    return this.chips && this.chips.some((chip) => chip.hasFocus());\n  }\n\n  protected syncChipsState(): void {\n    if (this.chips) {\n      this.chips.forEach((chip) => {\n        chip.disabled = this._disabled;\n        chip.cdr.markForCheck();\n      });\n    }\n  }\n\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus(): void {\n    noop();\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent): void {\n    if (this.originatesFromChip(event)) {\n      this.keyManager.onKeydown(event);\n    }\n  }\n\n  protected isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  protected allowFocusEscape(): void {\n    if (this.tabIndex !== TAB_INDEX_NOT_FOCUSABLE) {\n      const previousTabIndex = this.tabIndex;\n      this.tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n      setTimeout(() => (this.tabIndex = previousTabIndex));\n    }\n  }\n\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  protected getChipStream<E, C extends RdsChipComponent<T>>(\n    mappingFunction: (chip: C) => Observable<E>,\n  ): Observable<E> {\n    return this.chips.changes.pipe(\n      startWith(null),\n      switchMap(() =>\n        merge(...(this.chips as QueryList<C>).map(mappingFunction)),\n      ),\n    );\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  protected originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this.elementRef.nativeElement) {\n      if (currentElement.classList.contains('rds-chips__chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  private setUpFocusManagement(): void {\n    // Create a flat `QueryList` containing the actions of all the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this.chips.changes\n      .pipe(startWith(this.chips))\n      .subscribe((chips: QueryList<RdsChipComponent<T>>) => {\n        const actions: RdsChipActionDirective[] = [];\n        chips.forEach((chip) =>\n          chip.getActions().forEach((action) => actions.push(action)),\n        );\n        this.chipActions.reset(actions);\n        this.chipActions.notifyOnChanges();\n      });\n\n    this.keyManager = new FocusKeyManager(this.chipActions)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr')\n      .withHomeAndEnd()\n      .skipPredicate((action) => action.disabled);\n\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(({ source: chip }) => {\n        const action = chip.getSourceAction(document.activeElement as Element);\n\n        if (action) {\n          this.keyManager.updateActiveItem(action);\n        }\n      });\n\n    this.dir?.change\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((direction) =>\n        this.keyManager.withHorizontalOrientation(direction),\n      );\n  }\n\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  private trackChipSetChanges(): void {\n    this.chips.changes\n      .pipe(startWith(null), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.disabled) {\n          // Since this happens after the content has been\n          // checked, we need to defer it to the next tick.\n          Promise.resolve().then(() => this.syncChipsState());\n        }\n\n        this._redirectDestroyedChipFocus();\n      });\n  }\n\n  private trackDestroyedFocusedChip(): void {\n    this.chipDestroyedChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((event) => {\n        const chipArray = this.chips.toArray();\n        const chipIndex = chipArray.indexOf(event.source);\n\n        // If the focused chip is destroyed, save its index so that we can move focus to the next\n        // chip. We only save the index here, rather than move the focus immediately, because we want\n        // to wait until the chip is removed from the chip list before focusing the next one. This\n        // allows us to keep focus on the same index if the chip gets swapped out.\n        if (this.isValidIndex(chipIndex) && event.source.hasFocus()) {\n          this._lastDestroyedFocusedChipIndex = chipIndex;\n        }\n      });\n  }\n\n  private _redirectDestroyedChipFocus(): void {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n\n    if (this.chips.length) {\n      const newIndex = Math.min(\n        this._lastDestroyedFocusedChipIndex,\n        this.chips.length - 1,\n      );\n      const chipToFocus = this.chips.toArray()[newIndex];\n\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this.chips.length === 1) {\n          this.focus();\n        } else {\n          this.keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n\n  private checkAndSetChipSizes(): void {\n    this.chips.forEach((a) => {\n      if (a.size !== this._size) {\n        a.size = this._size;\n      }\n\n      if (a.type !== this.type) {\n        a.type = this.type;\n      }\n    });\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RDS_CHIP_LIST } from '../chip.tokens';\nimport { RdsChipListComponent } from '../chip-list/chip-list.component';\nimport { RdsChipComponent } from '../chip/chip.component';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { RdsChipSelectEvent } from '../chip.types';\n\n@Component({\n  selector: 'rds-chip-selectable',\n  templateUrl: './chip-selectable.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: RdsChipComponent, useExisting: RdsChipSelectableComponent },\n  ],\n})\nexport class RdsChipSelectableComponent<T> extends RdsChipComponent<T> {\n  private readonly parentList = inject<RdsChipListComponent<T>>(RDS_CHIP_LIST, {\n    optional: true,\n  });\n  private _selected = false;\n\n  protected _selectable = true;\n\n  chipListSelectable = true;\n  chipListMulti = false;\n\n  constructor() {\n    super();\n\n    if (isDevMode() && !this.parentList) {\n      throw new Error(\n        'RdsChipSelectableComponent can only be used as a child of RdsChipListComponent',\n      );\n    }\n\n    this.role = 'option';\n  }\n\n  @HostBinding('class')\n  override get hostClasses(): Record<string, boolean> {\n    return {\n      ...super.hostClasses,\n      'rds-chips__chip--selected': this.selected,\n    };\n  }\n\n  @HostBinding('attr.aria-checked')\n  get isChecked(): boolean | null {\n    return this.chipListMulti ? this.selected : null;\n  }\n\n  @HostBinding('attr.aria-selected')\n  get isSelected(): boolean | null {\n    return this.chipListMulti ? null : this.selected;\n  }\n\n  @Input()\n  set selectable(value: BooleanInput) {\n    this._selectable = booleanAttribute(value);\n  }\n\n  get selectable(): boolean {\n    return this._selectable && this.chipListSelectable;\n  }\n\n  @Input()\n  set selected(value: BooleanInput) {\n    this.setSelectedState(booleanAttribute(value), false, true);\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  @Output()\n  readonly selectedChange = new EventEmitter<RdsChipSelectEvent<T>>();\n\n  override handlePrimaryActionInteraction(): void {\n    if (this.selectable && !this.disabled) {\n      this.toggleSelected(true);\n    }\n  }\n\n  toggleSelected(isUserInput = false): void {\n    this.setSelectedState(!this.selected, isUserInput, true);\n  }\n\n  setSelectedState(\n    isSelected: boolean,\n    isUserInput: boolean,\n    emitEvent: boolean,\n  ): void {\n    if (!this.disabled && isSelected !== this.selected) {\n      this._selected = isSelected;\n\n      if (emitEvent) {\n        this.selectedChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected,\n        });\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  selectViaInteraction(): void {\n    this.setSelectedState(true, true, true);\n  }\n\n  select(): void {\n    this.setSelectedState(true, false, true);\n  }\n\n  deselect(): void {\n    this.setSelectedState(false, false, true);\n  }\n}\n","<div [ngClass]=\"['rds-chips-wrapper', 'rds-chips--size-' + size]\">\n  <span #primary rds-chip-action [disabled]=\"disabled\">\n    <ng-content\n      select=\"rds-icon[rdsChipLeadingIcon], rds-icon[rds-chip-leading-icon]\"\n    />\n    <ng-content select=\"img[rdsChipAvatar], img[rds-chip-avatar]\" />\n    <ng-content />\n  </span>\n  @if (closable) {\n    <button\n      #closeButton\n      class=\"rds-chip-close-button\"\n      rds-icon-button\n      rds-chip-action\n      [attr.aria-label]=\"ariaLabelCloseButton\"\n      [disabled]=\"disabled\"\n      (click)=\"onClose($event)\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"close\" class=\"rds-chip-close-icon\" />\n    </button>\n  } @else {\n    <ng-content\n      select=\"rds-icon[rdsChipTrailingIcon], rds-icon[rds-chip-trailing-icon]\"\n    />\n  }\n</div>\n","import { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { merge, noop, Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { RdsChipComponent } from '../chip/chip.component';\nimport { RdsAvatarComponent } from '../../avatar';\nimport {\n  RdsChipCompareFunction,\n  RdsChipEvent,\n  RdsChipSelectEvent,\n  RdsChipsSize,\n} from '../chip.types';\nimport { RDS_CHIP_LIST } from '../chip.tokens';\nimport { RdsChipSetComponent } from '../chip-set';\nimport { TAB } from '@angular/cdk/keycodes';\nimport { RdsChipSelectableComponent } from '../chip-selectable/chip-selectable.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../../utils';\n\n@Component({\n  selector: 'rds-chip-list',\n  template: `\n    <ng-content\n      select=\"rds-chip-selectable, rds-chip, button[rds-chip], button[rdsChip]\"\n    />\n  `,\n  styleUrls: ['../chips.common.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: RDS_CHIP_LIST,\n      useExisting: RdsChipListComponent,\n    },\n  ],\n})\nexport class RdsChipListComponent<T>\n  extends RdsChipSetComponent<T>\n  implements AfterContentInit, OnDestroy, ControlValueAccessor\n{\n  private readonly ngControl = inject(NgControl, {\n    self: true,\n    optional: true,\n  });\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  private _value: T;\n  private _multiple = false;\n  private _selectable = true;\n  private _pendingInitialValue: any;\n\n  @ContentChildren(RdsChipSelectableComponent, { descendants: true })\n  selectableChips: QueryList<RdsChipSelectableComponent<T>>;\n\n  @Input()\n  override set tabIndex(value: NumberInput) {\n    super.tabIndex = numberAttribute(value);\n  }\n\n  override get tabIndex(): number {\n    return super.tabIndex;\n  }\n\n  @HostBinding('tabIndex')\n  get tabindex(): number {\n    return this.empty ? TAB_INDEX_NOT_FOCUSABLE : this.tabIndex;\n  }\n\n  override get empty(): boolean {\n    return this.selectableChips.length === 0;\n  }\n\n  @Output()\n  readonly valueChange = new EventEmitter<any>();\n\n  @ContentChildren(RdsAvatarComponent, { descendants: true })\n  avatars: QueryList<RdsAvatarComponent>;\n\n  private onChange: (_: any) => void = noop;\n  private onTouched = noop;\n\n  @HostBinding('attr.aria-orientation')\n  orientation = 'horizontal';\n\n  @HostBinding('class') get hostClasses(): string[] {\n    const classes = [\n      'rds-chips',\n      `rds-chips--size-${this.size}`,\n      `rds-chips--type-${this.type}`,\n    ];\n\n    if (this.disabled) {\n      classes.push('rds-chips--disabled');\n    }\n\n    return classes;\n  }\n\n  @Input()\n  @HostBinding('attr.aria-multiselectable')\n  set multiple(value: BooleanInput) {\n    const oldValue = this._multiple;\n    this._multiple = booleanAttribute(value);\n    this.syncListProperties(oldValue !== this._multiple);\n  }\n\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  @Input()\n  set selectable(value: BooleanInput) {\n    this._selectable = booleanAttribute(value);\n    this.syncListProperties();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  @Input()\n  get size(): RdsChipsSize {\n    return this._size;\n  }\n\n  set size(size: RdsChipsSize) {\n    this._size = size;\n  }\n\n  protected override _size: RdsChipsSize = 'm';\n\n  @Input()\n  compareFn: RdsChipCompareFunction<T> = (valueOne: T, valueTwo: T): boolean =>\n    valueOne === valueTwo;\n\n  @Input()\n  set value(value: T) {\n    this.writeValue(value);\n    this._value = value;\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  @Input()\n  override set disabled(v: BooleanInput) {\n    super.disabled = v;\n  }\n\n  override get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n\n  get selected():\n    | RdsChipSelectableComponent<T>\n    | RdsChipSelectableComponent<T>[] {\n    const selectedChips = this.selectableChips\n      .toArray()\n      .filter((chip) => chip.selected);\n\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n\n  get chipSelectionChanges(): Observable<RdsChipSelectEvent<T>> {\n    return this.getChipSelectableStream<\n      RdsChipSelectEvent<T>,\n      RdsChipSelectableComponent<T>\n    >((chip) => chip.selectedChange);\n  }\n\n  get chipBlurChanges(): Observable<RdsChipEvent<T>> {\n    return this.getChipSelectableStream((chip) => chip.blur$);\n  }\n\n  override get focused(): boolean {\n    return this.hasFocusedChip();\n  }\n\n  constructor() {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.role = 'listbox';\n  }\n\n  override ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n\n    if (this._pendingInitialValue !== undefined) {\n      Promise.resolve().then(() => {\n        this.setSelectionByValue(this._pendingInitialValue, false);\n        this._pendingInitialValue = undefined;\n      });\n    }\n\n    this.selectableChips.changes\n      .pipe(\n        startWith(this.selectableChips),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        const newRole =\n          this.selectableChips.length > 0 ? 'listbox' : 'presentation';\n\n        if (newRole !== this.role) {\n          this.role = newRole;\n        }\n\n        // Update listbox selectable/multiple properties on chips\n        this.syncListProperties();\n      });\n\n    this.chipBlurChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.blur());\n\n    this.chipSelectionChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((event) => {\n        if (!this.multiple) {\n          this.selectableChips.forEach((chip) => {\n            if (chip !== event.source) {\n              chip.setSelectedState(false, false, false);\n            }\n          });\n        }\n\n        if (event.isUserInput) {\n          this.propagateChanges();\n        }\n      });\n\n    this.checkAndSetAvatarSizes();\n    this.avatars.changes\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.checkAndSetAvatarSizes());\n  }\n\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  @HostListener('focus')\n  override focus(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    const firstSelectedChip = this.getFirstSelectedChip();\n\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this.selectableChips.length > 0) {\n      this.keyManager.setFirstItemActive();\n    } else {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n\n  @HostListener('blur')\n  blur(): void {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this.markAsTouched();\n        }\n      });\n    }\n  }\n\n  // ControlValueAccessor Start\n  writeValue(value: any): void {\n    if (this.selectableChips) {\n      this.setSelectionByValue(value, false);\n    } else if (value != null) {\n      this._pendingInitialValue = value;\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // ControlValueAccessor End\n\n  protected getChipSelectableStream<\n    E,\n    C extends RdsChipSelectableComponent<T> = RdsChipSelectableComponent<T>,\n  >(mappingFunction: (chip: C) => Observable<E>): Observable<E> {\n    return this.selectableChips.changes.pipe(\n      startWith(null),\n      switchMap(() =>\n        merge(...(this.selectableChips as QueryList<C>).map(mappingFunction)),\n      ),\n    );\n  }\n\n  protected override hasFocusedChip(): boolean {\n    return (\n      this.selectableChips &&\n      this.selectableChips.some((chip) => chip.hasFocus())\n    );\n  }\n\n  @HostListener('keydown', ['$event'])\n  private onKeydown(e: KeyboardEvent): void {\n    if (e.keyCode === TAB) {\n      super.allowFocusEscape();\n    }\n  }\n\n  private getFirstSelectedChip(): RdsChipComponent<T> | undefined {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n\n  private markAsTouched(): void {\n    this.onTouched();\n    this.cdr.markForCheck();\n  }\n\n  private syncListProperties(clearSelection = false): void {\n    if (this.selectableChips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this.selectableChips.forEach((chip) => {\n          chip.chipListSelectable = this.selectable;\n          chip.chipListMulti = this.multiple;\n\n          if (clearSelection) {\n            chip.deselect();\n          }\n\n          chip.cdr.markForCheck();\n        });\n      });\n    }\n  }\n\n  private clearSelection(skip?: RdsChipComponent<T>): void {\n    this.selectableChips.forEach((chip) => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n\n  private propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any;\n\n    if (this.multiple) {\n      valueToEmit = (this.selected as RdsChipComponent<T>[]).map(\n        (chip) => chip.value,\n      );\n    } else {\n      valueToEmit = this.selected\n        ? (this.selected as RdsChipComponent<T>).value\n        : fallbackValue || null;\n    }\n\n    this.value = valueToEmit;\n    this.onChange(valueToEmit);\n    this.valueChange.emit(valueToEmit);\n  }\n\n  private setSelectionByValue(value: any, isUserInput = true): void {\n    this.clearSelection();\n\n    if (this.multiple && value) {\n      if (!Array.isArray(value)) {\n        throw new Error(\n          'A multiselect chip-list requires the given value to be an array',\n        );\n      }\n\n      value.forEach((currentValue) =>\n        this.selectValue(currentValue, isUserInput),\n      );\n    } else {\n      this.selectValue(value, isUserInput);\n    }\n  }\n\n  private selectValue(\n    value: any,\n    isUserInput: boolean,\n  ): RdsChipComponent<T> | undefined {\n    const correspondingChip = this.selectableChips.find((chip) => {\n      try {\n        return chip.value != null && this.compareFn(chip.value as T, value);\n      } catch (error) {\n        return false;\n      }\n    });\n\n    if (correspondingChip) {\n      isUserInput\n        ? correspondingChip.selectViaInteraction()\n        : correspondingChip.select();\n    }\n\n    return correspondingChip;\n  }\n\n  private checkAndSetAvatarSizes(): void {\n    this.avatars\n      .filter((a) => a.size !== this.size)\n      .forEach((a) => (a.size = this.size));\n  }\n}\n","import { Directive, ElementRef, HostBinding, inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Directive({\n  selector: 'span[rdsChipEditInput], span[rds-chip-edit-input]',\n})\nexport class RdsChipEditInputDirective {\n  private readonly elementRef = inject(ElementRef);\n  private readonly document = inject(DOCUMENT);\n\n  @HostBinding('class')\n  private readonly classes = 'rds-chip-edit-input';\n\n  @HostBinding('attr.role')\n  private readonly role = 'textbox';\n\n  @HostBinding('tabIndex')\n  private readonly tabindex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @HostBinding('attr.contenteditable')\n  private readonly contenteditable = true;\n\n  initialize(initialValue: string): void {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n\n  getNativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  setValue(value: string): void {\n    this.getNativeElement().textContent = value;\n    this.moveCursorToEndOfInput();\n  }\n\n  getValue(): string {\n    return this.getNativeElement().textContent || '';\n  }\n\n  private moveCursorToEndOfInput(): void {\n    const range = this.document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n\n    if (sel) {\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsIconComponent } from '../icons';\nimport { RdsChipAvatarDirective } from './chip-avatar.directive';\nimport { RdsChipLeadingIconDirective } from './chip-leading-icon.directive';\nimport { RdsChipListComponent } from './chip-list/chip-list.component';\nimport { RdsChipComponent } from './chip/chip.component';\nimport { RDS_AVATAR_DIRECTIVES } from '../avatar';\nimport { RdsButtonModule } from '../button';\nimport { RdsChipSelectableComponent } from './chip-selectable/chip-selectable.component';\nimport { RdsChipSetComponent } from './chip-set';\nimport { RdsChipActionDirective } from './chip-action';\nimport { RdsChipEditInputDirective } from './chip-edit-input';\nimport { RDS_CHIPS_DEFAULT_OPTIONS } from './chip.tokens';\nimport { RdsChipsDefaultOptions } from './chip.types';\n\nconst CHIP_DECLARATIONS = [\n  RdsChipListComponent,\n  RdsChipComponent,\n  RdsChipLeadingIconDirective,\n  RdsChipAvatarDirective,\n  RdsChipSelectableComponent,\n  RdsChipSelectableComponent,\n  RdsChipActionDirective,\n];\n\nconst PRIVATE_DECLARATIONS = [RdsChipEditInputDirective, RdsChipSetComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RdsIconComponent,\n    RdsButtonModule,\n    ...RDS_AVATAR_DIRECTIVES,\n  ],\n  declarations: [...CHIP_DECLARATIONS, ...PRIVATE_DECLARATIONS],\n  exports: [...CHIP_DECLARATIONS],\n  providers: [\n    {\n      provide: RDS_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeys: ['Enter', ','],\n      } as RdsChipsDefaultOptions,\n    },\n  ],\n})\nexport class RdsChipsModule {}\n","const RDS_DEFAULT_BADGE_COLORS = [\n  'info',\n  'success',\n  'warning',\n  'error',\n  'neutral',\n] as const;\nconst RDS_MINIMAL_BADGE_COLORS = [\n  'blue',\n  'green',\n  'yellow',\n  'red',\n  'neutral',\n  'orange',\n  'black',\n  'purple',\n  'pink',\n] as const;\nconst RDS_DOT_BADGE_COLORS = [...RDS_DEFAULT_BADGE_COLORS, 'other'] as const;\n\nexport type RdsBadgeType = 'default' | 'minimal' | 'dot';\nexport type RdsBadgeSize = 's' | 'm' | 'l';\nexport type RdsDefaultBadgeColor = (typeof RDS_DEFAULT_BADGE_COLORS)[number];\nexport type RdsMinimalBadgeColor = (typeof RDS_MINIMAL_BADGE_COLORS)[number];\nexport type RdsDotBadgeColor = (typeof RDS_DOT_BADGE_COLORS)[number];\nexport type RdsBadgeColor =\n  | RdsDefaultBadgeColor\n  | RdsMinimalBadgeColor\n  | RdsDotBadgeColor;\n\nexport const RDS_BADGE_COLORS: Readonly<{\n  [key in RdsBadgeType]: Readonly<RdsBadgeColor[]>;\n}> = {\n  default: [...RDS_DEFAULT_BADGE_COLORS],\n  minimal: [...RDS_MINIMAL_BADGE_COLORS],\n  dot: [...RDS_DOT_BADGE_COLORS],\n};\nexport const RDS_BADGE_DEFAULT_COLOR: Readonly<{\n  [key in RdsBadgeType]: Readonly<RdsBadgeColor>;\n}> = {\n  default: 'info',\n  minimal: 'blue',\n  dot: 'info',\n};\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  RDS_BADGE_COLORS,\n  RDS_BADGE_DEFAULT_COLOR,\n  RdsBadgeColor,\n  RdsBadgeSize,\n  RdsBadgeType,\n} from './badge.types';\n\n@Component({\n  selector: 'rds-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n})\nexport class RdsBadgeComponent implements OnChanges {\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  @HostBinding('class') class = 'rds-badge--container';\n\n  /**\n   * @desc Has effect only for standalone badges that has either `default` or `minimal` type\n   */\n  @Input() size: RdsBadgeSize = 's';\n  @Input() label: string | null = null;\n\n  /**\n   * @desc Note: The availability of a given color depends on the type of the badge!\n   * @see {@link RdsDefaultBadgeColor}\n   * @see {@link RdsMinimalBadgeColor}\n   * @see {@link RdsDotBadgeColor}\n   */\n  @Input() color: RdsBadgeColor;\n  @Input() type: RdsBadgeType = 'default';\n  @Input() ariaDescribedBy: string | null = null;\n  _isAttached = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.color) {\n      // for backwards compatibility when it comes to default colors\n      this.color = RDS_BADGE_DEFAULT_COLOR[this.type];\n    }\n\n    if (isDevMode()) {\n      if (\n        (changes['color'] || changes['type']) &&\n        this.type &&\n        this.color &&\n        !RDS_BADGE_COLORS[this.type].includes(this.color)\n      ) {\n        throw new Error(\n          `The '${this.color}' color is not available for '${this.type}' badge type.`,\n        );\n      }\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n}\n","<span\n  class=\"rds-badge rds-badge--{{ color }}-{{ type }}\"\n  [class.rds-badge--single-char]=\"type !== 'dot' && label && label.length === 1\"\n  [class.rds-badge--attached]=\"_isAttached\"\n  [class.rds-badge--l]=\"size === 'l' && type !== 'dot' && !_isAttached\"\n  [class.rds-badge--s]=\"size === 's' && type !== 'dot' && !_isAttached\"\n  [attr.aria-describedby]=\"ariaDescribedBy\"\n  >{{ type === 'dot' ? '' : label }}</span\n>\n@if (type === 'dot' && label && label.length > 0) {\n  <span class=\"rds-badge--content\">{{ label }}</span>\n}\n","import {\n  A,\n  DOWN_ARROW,\n  ENTER,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  DoCheck,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { merge } from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { RdsAbstractFormFieldControl } from '../abstract-form-field-control';\nimport { RdsFormFieldSize } from '../form-field.component';\nimport { SelectAnimations } from './select.animations';\nimport { RdsAbstractSelectComponent } from './abstract-select.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RdsMultiSelectOptionComponent } from './multi-select-option.component';\nimport { RdsSelectAllOptionComponent } from './select-all-option.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { RdsChipComponent } from '../../chips';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { RdsChipActionDirective } from '../../chips/chip-action';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { RdsControlType } from '../control.type';\n\n@Component({\n  selector: 'rds-multi-select',\n  template: `\n    <ng-container aria-hidden=\"true\" (click)=\"toggle()\">\n      @if (shouldShowValue()) {\n        <div class=\"rds-form-field__select-value\" #wrapperElement>\n          @if (withChips) {\n            @if (triggerValues.length && triggerValues[0]) {\n              <rds-chip-list size=\"s\">\n                @for (value of triggerValues; track value; let i = $index) {\n                  <rds-chip\n                    closable\n                    (closeChip)=\"removeValue(i)\"\n                    #valueContainer\n                    [disabled]=\"disabled\"\n                    [tabindex]=\"\n                      !focusedChip || focusedChip === valueContainer ? 0 : -1\n                    \"\n                  >\n                    {{ value }}\n                  </rds-chip>\n                }\n              </rds-chip-list>\n            }\n          } @else {\n            <span\n              class=\"rds-form-field__select-trigger-value\"\n              rds-trigger-values\n              multiple\n              #rdsTriggerValues=\"rdsTriggerValues\"\n              [triggerValues]=\"triggerValues\"\n              [wrapperElement]=\"wrapperElement\"\n            ></span>\n            @if (((rdsTriggerValues.hiddenValues | async) || 0) > 0) {\n              <span\n                class=\"rds-form-field__select-hidden-trigger-values-placeholder\"\n              >\n                <rds-badge\n                  type=\"minimal\"\n                  size=\"s\"\n                  [color]=\"disabled ? 'black' : 'blue'\"\n                  [label]=\"'+' + (rdsTriggerValues.hiddenValues | async)\"\n                />\n              </span>\n            }\n          }\n          @if (withChips && triggerValues.length && triggerValues[0]) {\n            <div class=\"rds-form-field__select-x-wrapper\">\n              <button\n                rds-icon-button\n                size=\"m\"\n                [disabled]=\"disabled\"\n                (click)=\"clearSelectedOptions($event)\"\n              >\n                <rds-icon namespace=\"filled\" icon=\"close\" />\n              </button>\n            </div>\n          }\n        </div>\n      } @else {\n        @if (shouldShowPlaceholder()) {\n          <div class=\"rds-form-field__select-value\">\n            <div\n              class=\"rds-form-field__select-trigger-value rds-form-field__select-trigger-value-placeholder\"\n            >\n              {{ placeholder }}\n            </div>\n          </div>\n        }\n      }\n      <div class=\"rds-form-field__select-arrow-wrapper\">\n        <div\n          class=\"rds-form-field__select-arrow\"\n          [class.rds-form-field__select-arrow--rotate]=\"panelOpen\"\n        ></div>\n      </div>\n    </ng-container>\n\n    <ng-template\n      cdk-connected-overlay\n      cdkConnectedOverlayLockPosition\n      cdkConnectedOverlayHasBackdrop\n      cdkConnectedOverlayPanelClass=\"test\"\n      cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n      [cdkConnectedOverlayScrollStrategy]=\"scrollStrategy\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayOpen]=\"panelOpen\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayMinWidth]=\"minWidth\"\n      (backdropClick)=\"close(); onBlur()\"\n      (attach)=\"onAttached()\"\n      (detach)=\"close()\"\n    >\n      <div class=\"rds-select__panel-wrapper\" [@transformPanelWrap]=\"null\">\n        <div\n          #panel\n          class=\"rds-select__panel\"\n          aria-multiselectable=\"true\"\n          [attr.id]=\"id + '-panel'\"\n          [@transformPanel]=\"'showing'\"\n          (@transformPanel.done)=\"panelDoneAnimatingStream.next($event.toState)\"\n          [style.transformOrigin]=\"transformOrigin\"\n          (keydown)=\"handleKeydown($event)\"\n        >\n          <ng-content select=\"rds-select-search-input\" />\n          <ng-content select=\"rds-select-all-option\" />\n          <ng-content select=\"rds-multi-select-option\" />\n        </div>\n      </div>\n    </ng-template>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: SelectAnimations,\n  providers: [\n    {\n      provide: RdsAbstractFormFieldControl,\n      useExisting: RdsMultiSelectComponent,\n    },\n  ],\n})\nexport class RdsMultiSelectComponent<T>\n  extends RdsAbstractSelectComponent<\n    T,\n    RdsMultiSelectOptionComponent<T>,\n    T[],\n    RdsMultiSelectOptionComponent<T>[]\n  >\n  implements\n    AfterContentInit,\n    AfterViewInit,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    DoCheck,\n    ControlValueAccessor\n{\n  private readonly dir = inject(Directionality, { optional: true });\n\n  protected override readonly _name = 'rds-multi-select';\n\n  private allOptionsSelected = false;\n  private _withChips = false;\n\n  override get selected(): RdsMultiSelectOptionComponent<T>[] {\n    return this.selectionModel.selected;\n  }\n\n  override get triggerValues(): string[] {\n    if (this.empty) {\n      return [''];\n    }\n\n    return this.selectionModel.selected.map((option) => option.viewValue);\n  }\n\n  override get controlType(): RdsControlType {\n    if (this.withChips) {\n      return 'select-with-chips';\n    } else {\n      return 'select';\n    }\n  }\n\n  @Input()\n  set withChips(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (this._withChips !== newValue) {\n      this._withChips = newValue;\n      this.stateChanges.emit();\n    }\n  }\n\n  get withChips(): boolean {\n    return this._withChips;\n  }\n\n  @ContentChildren(RdsSelectAllOptionComponent)\n  selectAllElements: QueryList<RdsSelectAllOptionComponent<T>>;\n  @ViewChildren(RdsChipComponent) chips: QueryList<RdsChipComponent<T>>;\n\n  protected focusedChip: RdsChipComponent<T> | null = null;\n  private keyManagerChips: FocusKeyManager<RdsChipActionDirective>;\n  private readonly chipActions = new QueryList<RdsChipActionDirective>();\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.selectionModel = new SelectionModel<RdsMultiSelectOptionComponent<T>>(\n      true,\n    );\n  }\n\n  override ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n\n    this.selectionModel.changed\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        // check it\n        this.calculateAllOptionsSelected();\n        this.refreshSelectAllCheck();\n        this.cdr.markForCheck();\n      });\n\n    this.calculateAllOptionsSelected();\n\n    this.selectAllElements.changes\n      .pipe(\n        startWith(this.selectAllElements),\n        tap(() => this.selectAllDestroy$.next()),\n        filter(() => this.selectAllElements.length > 0),\n        switchMap(() =>\n          merge(\n            ...this.selectAllElements.map((all) => all.selectAllChanged),\n          ).pipe(\n            takeUntil(this.selectAllDestroy$),\n            takeUntilDestroyed(this.destroyRef),\n          ),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        this.toggleAllOptions();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.setUpFocusManagement();\n  }\n\n  override close(): void {\n    super.close();\n\n    if (this._panelOpen) {\n      this.selectAllElements.forEach((all) => all.setInactiveStyles());\n    }\n  }\n\n  toggleAllOptions(selectAll = !this.allOptionsSelected): void {\n    if (this.allOptionsSelected !== selectAll) {\n      this.selectionModel.clear();\n      this.allOptionsSelected = selectAll;\n      this.selectionModel.select(\n        ...this.options.filter((item) =>\n          this.allOptionsSelected\n            ? item.checked || !item.disabled\n            : item.checked && item.disabled,\n        ),\n      );\n      this.sortValues();\n      this.propagateChanges();\n    }\n  }\n\n  selectAllOptions(): void {\n    this.toggleAllOptions(true);\n  }\n\n  deselectAllOptions(): void {\n    this.toggleAllOptions(false);\n  }\n\n  protected clearSelectedOptions(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.selectionModel.clear();\n    this.propagateChanges();\n  }\n\n  protected override handleClosedKeydown(event: KeyboardEvent): void {\n    if (this.withChips) {\n      return;\n    }\n\n    const keyCode = event.keyCode;\n    const isArrowKey =\n      keyCode === DOWN_ARROW ||\n      keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW ||\n      keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this.keyManager;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (\n      (!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n      isArrowKey\n    ) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    }\n  }\n\n  protected override handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this.keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (\n      !isTyping &&\n      (keyCode === ENTER || keyCode === SPACE) &&\n      manager.activeItem &&\n      !hasModifierKey(event)\n    ) {\n      event.preventDefault();\n      manager.activeItem.handleClick();\n    } else if (!isTyping && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      this.toggleAllOptions();\n      this.selectAllElements.forEach((option) => option.markForCheck());\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n\n      manager.onKeydown(event);\n\n      if (\n        isArrowKey &&\n        event.shiftKey &&\n        manager.activeItem &&\n        manager.activeItemIndex !== previouslyFocusedIndex\n      ) {\n        manager.activeItem.handleClick();\n      }\n    }\n  }\n\n  protected override setSelectionByValue(value: T[]): void {\n    if (value) {\n      this.selectionModel.clear();\n      value.forEach((currentValue) => this.selectValue(currentValue));\n      this.sortValues();\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  protected override resetOptions(): void {\n    super.resetOptions();\n\n    this.optionSelectionChanges\n      .pipe(\n        takeUntil(this.options.changes),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((event) => this.onSelect(event.source));\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map((option) => option.checkedChanged))\n      .pipe(\n        // should emit one time if states changes for many options\n        debounceTime(1),\n        takeUntil(this.options.changes),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => {\n        this.calculateAllOptionsSelected();\n        this.refreshSelectAllCheck();\n        this.selectAllElements.forEach((option) => option.markForCheck());\n        this.stateChanges.next();\n      });\n\n    this.calculateAllOptionsSelected();\n    this.refreshSelectAllCheck();\n  }\n\n  protected override onSelect(option: RdsMultiSelectOptionComponent<T>): void {\n    super.onSelect(option);\n    this.sortValues();\n    this.stateChanges.next();\n  }\n\n  private sortValues(): void {\n    const options = this.options.toArray();\n\n    this.selectionModel.sort((a, b) => {\n      return this.sortComparator\n        ? this.sortComparator(a, b, options)\n        : options.indexOf(a) - options.indexOf(b);\n    });\n    this.stateChanges.next();\n  }\n\n  protected getValueToEmit(): T[] {\n    return this.selected.map((s) => s.value);\n  }\n\n  private setUpFocusManagement(): void {\n    this.chips.changes\n      .pipe(startWith(this.chips), takeUntilDestroyed(this.destroyRef))\n      .subscribe((chips: QueryList<RdsChipComponent<T>>) => {\n        const actions: RdsChipActionDirective[] = [];\n        chips.forEach((chip) =>\n          chip.getActions().forEach((action) => actions.push(action)),\n        );\n        this.chipActions.reset(actions);\n        this.chipActions.notifyOnChanges();\n      });\n\n    this.keyManagerChips = new FocusKeyManager(this.chipActions)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr')\n      .withHomeAndEnd()\n      .skipPredicate((action) => action.disabled);\n\n    this.chips.changes\n      .pipe(\n        startWith(null),\n        switchMap(() => merge(...this.chips.map((c) => c.focus$))),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(({ source: chip }) => {\n        const action = chip.getSourceAction(document.activeElement as Element);\n\n        if (action) {\n          this.keyManagerChips.updateActiveItem(action);\n        }\n      });\n    this.chips.changes\n      .pipe(\n        startWith(null),\n        switchMap(() =>\n          merge(\n            ...this.chips.map((c) =>\n              c.focus$.pipe(map((e) => ({ focused: true, source: e.source }))),\n            ),\n            ...this.chips.map((c) =>\n              c.blur$.pipe(map((e) => ({ focused: false, source: e.source }))),\n            ),\n          ),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((chip) => {\n        if (chip.focused) {\n          this.focusedChip = chip.source;\n        } else if (this.focusedChip === chip.source) {\n          this.focusedChip = null;\n        }\n\n        this.cdr.markForCheck();\n      });\n\n    this.dir?.change\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((direction) =>\n        this.keyManagerChips.withHorizontalOrientation(direction),\n      );\n  }\n\n  private refreshSelectAllCheck(): void {\n    this.selectAllElements.forEach(\n      (all) => (all.checked = this.allOptionsSelected),\n    );\n    this.cdr.markForCheck();\n  }\n\n  private calculateAllOptionsSelected(): void {\n    this.allOptionsSelected = this.options\n      .toArray()\n      .filter((item) => !item.disabled)\n      .every((item) => item.checked);\n    this.cdr.markForCheck();\n  }\n\n  protected override _setSize(size: RdsFormFieldSize): void {\n    super._setSize(size);\n    this.selectAllElements?.forEach((element) => (element.size = size));\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-icon[rds-label-icon], rds-icon[rdsLabelIcon]',\n})\nexport class RdsLabelIconDirective {\n  @HostBinding('class') readonly hostClass = 'rds-control-label__icon';\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nexport type RdsTextareaResize = 'vertical' | 'horizontal' | 'both';\n\n@Directive({\n  selector: `textarea[resize]`,\n})\nexport class RdsTextareaResizeDirective {\n  @Input() resize: RdsTextareaResize | '' = 'vertical';\n\n  @HostBinding('class') get class(): string {\n    return `rds-textarea-resize-${this.resize || 'vertical'}`;\n  }\n}\n","import {\n  booleanAttribute,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsChipComponent, RdsChipEditedEvent } from '../../chips';\nimport { RdsChipEditInputDirective } from '../../chips/chip-edit-input';\nimport { DOCUMENT } from '@angular/common';\nimport { BACKSPACE, DELETE, ENTER } from '@angular/cdk/keycodes';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-input-chip',\n  templateUrl: './input-chip.component.html',\n  styleUrls: ['../../chips/chips.common.scss', './input-chip.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    { provide: RdsChipComponent, useExisting: RdsInputChipComponent },\n  ],\n})\nexport class RdsInputChipComponent<T>\n  extends RdsChipComponent<T>\n  implements OnInit, OnDestroy\n{\n  private readonly document = inject(DOCUMENT);\n\n  /**\n   * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n   * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n   * while the editing action is being initialized.\n   */\n  private editStartPending = false;\n\n  editReady = false;\n  isEditing = false;\n\n  @Input({ transform: booleanAttribute }) editable = false;\n\n  @Input()\n  ariaDescription: string | null = null;\n\n  @Output() readonly edited = new EventEmitter<RdsChipEditedEvent<T>>();\n\n  @ViewChild(RdsChipEditInputDirective) editInput: RdsChipEditInputDirective;\n\n  @HostBinding('attr.role')\n  override role = 'row';\n\n  ngOnInit(): void {\n    this.blur$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n      if (this.isEditing && !this.editStartPending) {\n        this.onEditFinish();\n      }\n    });\n  }\n\n  @HostBinding('class')\n  get classes(): Record<string, boolean> {\n    return {\n      'rds-chips__chip': true,\n      'rds-input-chip': true,\n      'rds-input-chip-editing': this.isEditing,\n      'rds-chips__chip--disabled': this.disabled,\n    };\n  }\n\n  @HostListener('focus')\n  handleFocus(): void {\n    if (!this.isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n\n  @HostListener('dblclick')\n  handleDoubleclick(): void {\n    if (!this.disabled && this.editable) {\n      this.startEditing();\n    }\n  }\n\n  override handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this.isEditing) {\n        event.preventDefault();\n        this.onEditFinish();\n      } else if (this.editable) {\n        this.startEditing();\n      }\n    } else if (this.isEditing) {\n      event.stopPropagation();\n    } else {\n      if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n        event.preventDefault();\n        this.closeChip.emit();\n      }\n    }\n  }\n\n  private startEditing(): void {\n    const value = this.value;\n    this.isEditing = true;\n    this.editStartPending = true;\n\n    setTimeout((): void => {\n      this.getEditInput().initialize(\n        typeof value === 'string' ? value : this.innerText,\n      );\n      this.editStartPending = false;\n      this.editReady = true;\n    });\n  }\n\n  private onEditFinish(): void {\n    this.isEditing = false;\n    this.editStartPending = false;\n    this.editReady = false;\n    this.edited.emit({ source: this, value: this.getEditInput().getValue() });\n    this.getEditInput().setValue('');\n\n    if (\n      this.document.activeElement === this.getEditInput().getNativeElement() ||\n      this.document.activeElement === this.document.body\n    ) {\n      this.focus();\n    }\n  }\n\n  private getEditInput(): RdsChipEditInputDirective {\n    return this.editInput;\n  }\n}\n","<ng-content\n  select=\"rds-icon[rdsChipLeadingIcon], rds-icon[rds-chip-leading-icon]\"\n/>\n<ng-content select=\"img[rdsChipAvatar], img[rds-chip-avatar]\" />\n<span role=\"gridcell\">\n  <span\n    [attr.role]=\"editable ? 'button' : null\"\n    [attr.aria-description]=\"ariaDescription\"\n    #primary\n    rds-chip-action\n    [disabled]=\"disabled\"\n  >\n    <span [style.display]=\"editReady ? 'none' : 'initial'\">\n      <ng-content />\n    </span>\n    <span\n      [style.display]=\"editReady || isEditing ? 'initial' : 'none'\"\n      rdsChipEditInput\n    ></span>\n  </span>\n</span>\n<span role=\"gridcell\">\n  <button\n    rds-icon-button\n    #closeButton\n    rds-chip-action\n    class=\"rds-chip-close-button\"\n    size=\"s\"\n    (click)=\"onClose($event)\"\n    [disabled]=\"disabled\"\n    type=\"button\"\n    [attr.aria-label]=\"ariaLabelCloseButton\"\n  >\n    <rds-icon namespace=\"outlined\" icon=\"close\" class=\"rds-chip-close-icon\" />\n  </button>\n</span>\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport { hasModifierKey, TAB } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, noop, Observable } from 'rxjs';\nimport { RdsInputChipComponent } from '../input-chip/input-chip.component';\nimport { RdsChipSetComponent } from '../../chips/chip-set';\nimport { RdsChipInputDirective } from '../chip-input';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../../utils';\nimport { RdsChipEditedEvent } from '../../chips/chip.types';\n\nexport class RdsChipGridChange<T> {\n  constructor(\n    public readonly source: RdsChipGridComponent<T>,\n    public readonly value: T[],\n  ) {}\n}\n\n@Component({\n  selector: 'rds-chip-grid',\n  template: '<ng-content />',\n  styleUrls: ['../../chips/chips.common.scss', './chip-grid.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsChipGridComponent<T>\n  extends RdsChipSetComponent<T>\n  implements AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  private _ariaDescribedbyIds: string[] = [];\n  private _placeholder: string;\n\n  private chipInput: RdsChipInputDirective<T>;\n\n  protected _value: T[] = [];\n\n  override _defaultRole = 'grid';\n  readonly stateChanges = new EventEmitter<void>();\n\n  get id(): string {\n    return this.chipInput.id;\n  }\n\n  override get empty(): boolean {\n    return (\n      (!this.chipInput || this.chipInput.empty) &&\n      (!this.chips || this.chips.length === 0)\n    );\n  }\n\n  override get focused(): boolean {\n    return this.chipInput?.focused || this.hasFocusedChip();\n  }\n\n  get chipEditChanges(): Observable<RdsChipEditedEvent<T>> {\n    return this.getChipStream<RdsChipEditedEvent<T>, RdsInputChipComponent<T>>(\n      (chip) => chip.edited,\n    );\n  }\n\n  @HostBinding('class')\n  get classes(): Record<string, boolean> {\n    return {\n      'rds-chips': true,\n      'rds-chips--size-s': true,\n      'rds-chip-list-disabled': this.disabled,\n      'rds-chip-list-invalid': this.errorState,\n    };\n  }\n\n  @HostBinding('attr.aria-invalid')\n  errorState = false;\n\n  @HostBinding('tabIndex')\n  get dynamicTabIndex(): number {\n    return this.chips && this.chips.length === 0\n      ? TAB_INDEX_NOT_FOCUSABLE\n      : this.tabIndex;\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get ariaDisabled(): string {\n    return this.disabled.toString();\n  }\n\n  @Input()\n  override set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n    this.syncChipsState();\n  }\n\n  override get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @Input()\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  get placeholder(): string {\n    return this.chipInput ? this.chipInput.placeholder : this._placeholder;\n  }\n\n  @Input()\n  set value(value: T[]) {\n    this._value = value;\n  }\n\n  get value(): T[] {\n    return this._value;\n  }\n\n  @Output()\n  readonly gridChange = new EventEmitter<RdsChipGridChange<T>>();\n\n  @Output()\n  readonly valueChange = new EventEmitter<T[]>();\n\n  @ContentChildren(RdsInputChipComponent, { descendants: true })\n  override chips: QueryList<RdsInputChipComponent<T>>;\n\n  _onTouched = noop;\n  _onChange: (value: T[]) => void = noop;\n\n  override ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n    merge(this.chipEditChanges, this.chips.changes)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.propagateChanges();\n        this.stateChanges.next();\n      });\n\n    merge(this.chipFocusChanges, this.chips.changes)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.stateChanges.next());\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (!this.chipInput && isDevMode()) {\n      throw Error(\n        'rds-chip-grid must be used in combination with rdsChipInputFor.',\n      );\n    }\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n\n  @HostListener('focus')\n  override focus(): void {\n    if (this.disabled || this.chipInput.focused) {\n      return;\n    }\n\n    if (!this.chips.length || this.chips.first.disabled) {\n      Promise.resolve().then(() => this.chipInput.focus());\n    } else if (this.chips.length) {\n      this.keyManager.setFirstItemActive();\n    }\n\n    this.stateChanges.next();\n  }\n\n  @HostListener('blur')\n  blur(): void {\n    if (!this.disabled) {\n      setTimeout(() => {\n        if (!this.focused) {\n          this.markAsTouched();\n        }\n      });\n    }\n  }\n\n  override handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === TAB) {\n      if (\n        this.chipInput.focused &&\n        hasModifierKey(event, 'shiftKey') &&\n        this.chips.length &&\n        !this.chips.last.disabled\n      ) {\n        event.preventDefault();\n\n        if (this.keyManager.activeItem) {\n          this.keyManager.setActiveItem(this.keyManager.activeItem);\n        } else {\n          this.focusLastChip();\n        }\n      } else {\n        this.allowFocusEscape();\n      }\n    } else if (!this.chipInput.focused) {\n      super.handleKeydown(event);\n    }\n\n    this.stateChanges.next();\n  }\n\n  registerInput(inputElement: RdsChipInputDirective<T>): void {\n    this.chipInput = inputElement;\n    this.chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    if (!this.disabled && !this.originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this.chipInput?.setDescribedByIds(ids);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled !== this.disabled) {\n      this.disabled = isDisabled;\n      this.stateChanges.next();\n    }\n  }\n\n  focusLastChip(): void {\n    if (this.chips.length) {\n      this.chips.last.focus();\n    }\n  }\n\n  protected override allowFocusEscape(): void {\n    if (!this.chipInput.focused) {\n      super.allowFocusEscape();\n    }\n  }\n\n  private propagateChanges(): void {\n    const valueToEmit = this.chips.length\n      ? this.chips.toArray().map((chip) => chip.value as T)\n      : [];\n    this._value = valueToEmit;\n    this.gridChange.emit(new RdsChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.cdr.markForCheck();\n  }\n\n  private markAsTouched(): void {\n    this._onTouched();\n    this.cdr.markForCheck();\n    this.stateChanges.next();\n  }\n}\n","import { BooleanInput, coerceStringArray } from '@angular/cdk/coercion';\nimport { BACKSPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport {\n  RDS_FORM_FIELD,\n  RdsChipInputEvent,\n  RdsFormFieldComponent,\n} from '../form-field';\nimport { RdsChipGridComponent } from './chip-grid/chip-grid.component';\nimport { RDS_CHIPS_DEFAULT_OPTIONS } from '../chips/chip.tokens';\nimport { NgControl } from '@angular/forms';\n\nlet nextUniqueId = 0;\n\n@Directive({\n  selector: 'input[rdsChipInput], input[rds-chip-input]',\n  exportAs: 'rdsChipInput',\n})\nexport class RdsChipInputDirective<T>\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  private readonly inputElement =\n    inject<ElementRef<HTMLInputElement>>(ElementRef).nativeElement;\n  private readonly formField = inject<RdsFormFieldComponent<T[]>>(\n    RDS_FORM_FIELD,\n    { optional: true },\n  );\n  private readonly ngControl = inject(NgControl, { optional: true });\n\n  private focusLastChipOnBackspace = false;\n  private _disabled = false;\n  private _chipGrid?: RdsChipGridComponent<T>;\n\n  focused = false;\n  hidePlaceholder = false;\n\n  @Input({ transform: booleanAttribute }) required = false;\n\n  @HostBinding('class')\n  get classes(): Record<string, boolean> {\n    return {\n      'rds-chip-input': true,\n      'rds-chip-input-no-placeholder': this.hidePlaceholder,\n    };\n  }\n\n  @HostBinding('attr.required')\n  @HostBinding('attr.aria-required')\n  get ariaRequired(): boolean | null {\n    return this.required || null;\n  }\n\n  @HostBinding('attr.aria-invalid')\n  get ariaInvalid(): boolean | null {\n    return this.ngControl ? this.ngControl.invalid : null;\n  }\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input('rdsChipInputChipGrid')\n  set chipGrid(value: RdsChipGridComponent<T>) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    } else if (isDevMode()) {\n      throw new Error(\n        'RdsChipInputDirective: rdsChipInputChipGrid received falsy value',\n      );\n    }\n  }\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input({ alias: 'rdsChipInputAddOnBlur', transform: booleanAttribute })\n  addOnBlur = false;\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input({ alias: 'rdsChipInputSeparatorKeys', transform: coerceStringArray })\n  separatorKeys = inject(RDS_CHIPS_DEFAULT_OPTIONS).separatorKeys;\n\n  @HostBinding('attr.placeholder')\n  @Input()\n  placeholder = '';\n\n  @HostBinding('id')\n  @Input()\n  id = `rds-chip-list-input-${nextUniqueId++}`;\n\n  @HostBinding('disabled')\n  @Input()\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled || !!(this._chipGrid && this._chipGrid.disabled);\n  }\n\n  /* eslint-disable-next-line @angular-eslint/no-output-rename */\n  @Output('rdsChipInputTokenEnd')\n  readonly chipEnd = new EventEmitter<RdsChipInputEvent<T>>();\n\n  get empty(): boolean {\n    return !this.inputElement.value;\n  }\n\n  constructor() {\n    if (this.formField) {\n      this.inputElement.classList.add('rds-form-field-input-control');\n    }\n  }\n\n  ngOnChanges(): void {\n    this._chipGrid?.stateChanges?.next();\n  }\n\n  ngAfterContentInit(): void {\n    this.focusLastChipOnBackspace = this.empty;\n  }\n\n  ngOnDestroy(): void {\n    this.chipEnd.complete();\n  }\n\n  @HostListener('keydown', ['$event'])\n  private onKeydown(event?: KeyboardEvent): void {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this.focusLastChipOnBackspace) {\n        this._chipGrid?.focusLastChip();\n        event.preventDefault();\n\n        return;\n      } else {\n        this.focusLastChipOnBackspace = false;\n      }\n    }\n\n    this.emitChipEnd(event);\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup(event: KeyboardEvent): void {\n    // Allow user to move focus to chips next time he presses backspace\n    if (\n      !this.focusLastChipOnBackspace &&\n      event.keyCode === BACKSPACE &&\n      this.empty\n    ) {\n      this.focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  onBlur(): void {\n    if (this.addOnBlur) {\n      this.emitChipEnd();\n    }\n\n    this.focused = false;\n\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid?.focused) {\n      this._chipGrid?.blur();\n    }\n\n    this._chipGrid?.stateChanges.next();\n  }\n\n  @HostListener('focus', ['$event'])\n  onFocus(): void {\n    this.focused = true;\n    this.focusLastChipOnBackspace = this.empty;\n    this._chipGrid?.stateChanges.next();\n  }\n\n  @HostListener('input')\n  onInput(): void {\n    // Let chip list know whenever the value changes.\n    this._chipGrid?.stateChanges.next();\n  }\n\n  emitChipEnd(event?: KeyboardEvent): void {\n    if (!event || this.isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this,\n      });\n\n      event?.preventDefault();\n    }\n  }\n\n  focus(): void {\n    this.inputElement.focus();\n  }\n\n  clear(): void {\n    this.inputElement.value = '';\n    this.focusLastChipOnBackspace = true;\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      this.inputElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this.inputElement.removeAttribute('aria-describedby');\n    }\n  }\n\n  private isSeparatorKey(event: KeyboardEvent): boolean {\n    return !hasModifierKey(event) && this.separatorKeys.includes(event.key);\n  }\n}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  DestroyRef,\n  DoCheck,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { RdsAbstractFormFieldControl } from '../abstract-form-field-control';\nimport { RdsChipGridComponent } from '../chip-grid/chip-grid.component';\nimport { RdsChipInputDirective } from '../chip-input';\nimport { noop } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { updateErrorState } from '../../utils';\n\n@Component({\n  selector: 'rds-input-with-chips',\n  template: '<ng-content />',\n  styleUrls: [\n    '../../chips/chips.common.scss',\n    './input-with-chips.component.scss',\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: RdsAbstractFormFieldControl,\n      useExisting: RdsInputWithChipsComponent,\n    },\n  ],\n})\nexport class RdsInputWithChipsComponent<T>\n  extends RdsAbstractFormFieldControl<T[]>\n  implements ControlValueAccessor, AfterContentInit, DoCheck, OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n\n  private _placeholder: string;\n  readonly controlType = 'chip-grid';\n\n  get shouldLabelFloat(): boolean {\n    return !this.empty || this.focused;\n  }\n\n  @HostBinding('attr.aria-invalid')\n  errorState = false;\n\n  @HostBinding('attr.aria-disabled')\n  get ariaDisabled(): string {\n    return this.disabled.toString();\n  }\n\n  @Input()\n  override set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n\n    if (this.chipGrid) {\n      this.chipGrid.disabled = this._disabled;\n    }\n  }\n\n  override get disabled(): boolean {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n\n  @Input()\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  get placeholder(): string {\n    return this._placeholder;\n  }\n\n  @ContentChild(RdsChipGridComponent)\n  chipGrid: RdsChipGridComponent<T>;\n\n  @ContentChild(RdsChipInputDirective)\n  input: RdsChipInputDirective<T>;\n\n  _onTouched = noop;\n  _onChange: (value: T[]) => void = noop;\n\n  constructor() {\n    super();\n\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.input.hidePlaceholder = !this.shouldLabelFloat;\n    this.chipGrid.stateChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.input.hidePlaceholder = !this.shouldLabelFloat;\n        this.stateChanges.next();\n      });\n    this.chipGrid._onChange = this._onChange;\n    this.chipGrid._onTouched = this._onTouched;\n    this.chipGrid.disabled = this._disabled;\n    this.input.chipGrid = this.chipGrid;\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions).\n      const oldState = this.errorState;\n      this.errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this.ngControl.control,\n      );\n\n      if (this.errorState !== oldState) {\n        this.stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n  }\n\n  writeValue(value: T[]): void {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n\n  registerOnChange(fn: (value: T[]) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    if (this.chipGrid) {\n      this.chipGrid.setDisabledState(isDisabled);\n    }\n\n    if (this.input) {\n      this.input.disabled = isDisabled;\n    }\n\n    this.stateChanges.next();\n  }\n\n  get empty(): boolean {\n    return !!this.chipGrid?.empty;\n  }\n\n  override get focused(): boolean {\n    return !!this.chipGrid?.focused;\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    this.chipGrid?.onContainerClick(event);\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    this.chipGrid?.setDescribedByIds(ids);\n  }\n}\n","import {\n  AfterViewInit,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { RdsBadgeComponent } from './badge.component';\nimport { CdkPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { RdsBadgeColor, RdsBadgeType } from './badge.types';\n\nconst DOT_BADGE_POS_RIGHT_PX = -4;\nconst BADGE_OFFSET_RIGHT_PX = 10;\n\nexport type RdsBadgePlacement = 'top-right' | 'bottom-right';\n\n@Directive({\n  selector: '[rds-badge], [rdsBadge]',\n  standalone: true,\n})\nexport class RdsBadgeDirective implements OnChanges, OnDestroy, AfterViewInit {\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly componentFactoryResolver = inject(ComponentFactoryResolver);\n  private readonly renderer = inject(Renderer2);\n  private readonly elementRef = inject(ElementRef);\n\n  private _componentRef: ComponentRef<RdsBadgeComponent> | null = null;\n\n  @Input() rdsBadgeLabel: string | null = null;\n  @Input() rdsBadgeColor: RdsBadgeColor = 'info';\n  @Input() rdsBadgeType: RdsBadgeType = 'default';\n  @Input() rdsBadgeAriaDescribedBy: string | null = null;\n  @Input() rdsBadgePlacement: RdsBadgePlacement = 'top-right';\n\n  ngAfterViewInit(): void {\n    this.renderer.setStyle(\n      this.elementRef.nativeElement,\n      'position',\n      'relative',\n    );\n    this._createComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._componentRef) {\n      let shouldDetectChanges = false;\n      const label = this._getLabel();\n      const badgeType = this._getBadgeType();\n      const instance = this._componentRef.instance;\n      instance.size = 's';\n\n      if (changes['rdsBadgeLabel'] && instance.label !== label) {\n        instance.label = label;\n        shouldDetectChanges = true;\n      }\n\n      if (changes['rdsBadgeColor'] && instance.color !== this.rdsBadgeColor) {\n        instance.color = this.rdsBadgeColor;\n        shouldDetectChanges = true;\n      }\n\n      if (\n        (changes['rdsBadgeType'] || changes['rdsBadgeLabel']) &&\n        instance.type !== badgeType\n      ) {\n        instance.type = badgeType;\n        shouldDetectChanges = true;\n      }\n\n      if (\n        changes['rdsBadgeAriaDescribedBy'] &&\n        instance.ariaDescribedBy !== this.rdsBadgeAriaDescribedBy\n      ) {\n        instance.ariaDescribedBy = this.rdsBadgeAriaDescribedBy;\n        shouldDetectChanges = true;\n      }\n\n      if (shouldDetectChanges) {\n        instance.detectChanges();\n      }\n\n      if (\n        shouldDetectChanges ||\n        (changes['rdsBadgePlacement'] &&\n          changes['rdsBadgePlacement'].previousValue !== this.rdsBadgePlacement)\n      ) {\n        this._setPosition();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._componentRef?.destroy();\n  }\n\n  private _createComponent(): void {\n    const outlet = new CdkPortalOutlet(\n      this.componentFactoryResolver,\n      this.viewContainerRef,\n    );\n    const portal = new ComponentPortal(\n      RdsBadgeComponent,\n      this.viewContainerRef,\n    );\n    this._componentRef = outlet.attachComponentPortal(portal);\n    this._componentRef.instance._isAttached = true;\n    this._componentRef.instance.label = this._getLabel();\n    this._componentRef.instance.color = this.rdsBadgeColor;\n    this._componentRef.instance.type = this._getBadgeType();\n    this._componentRef.instance.ariaDescribedBy = this.rdsBadgeAriaDescribedBy;\n    this._setComponentLocation();\n    this._componentRef.changeDetectorRef.detectChanges();\n    this._setPosition();\n    this._componentRef.onDestroy(() => {\n      portal.detach();\n      outlet.detach();\n    });\n  }\n\n  private _setComponentLocation(): void {\n    this.renderer.appendChild(\n      this.elementRef.nativeElement,\n      this._getBadgeElement(),\n    );\n    this.renderer.setStyle(this._getBadgeElement(), 'position', 'absolute');\n  }\n\n  private _setPosition(): void {\n    const badge = this._getBadgeElement();\n    this.renderer.removeStyle(badge, 'top');\n    this.renderer.removeStyle(badge, 'bottom');\n    this.renderer.removeStyle(badge, 'left');\n    this.renderer.removeStyle(badge, 'right');\n\n    const offsetY = badge.offsetHeight / 2;\n    const offsetWidth = badge.offsetWidth;\n\n    if (this.rdsBadgePlacement?.includes('bottom')) {\n      this.renderer.setStyle(badge, 'bottom', `${-offsetY}px`);\n    } else {\n      this.renderer.setStyle(badge, 'top', `${-offsetY}px`);\n    }\n\n    this.renderer.setStyle(\n      badge,\n      'right',\n      `${Math.min(\n        BADGE_OFFSET_RIGHT_PX - offsetWidth,\n        DOT_BADGE_POS_RIGHT_PX,\n      )}px`,\n    );\n  }\n\n  private _getLabel(): string {\n    if (\n      this.rdsBadgeType === 'dot' ||\n      this.rdsBadgeLabel === null ||\n      this.rdsBadgeLabel === undefined\n    ) {\n      return '';\n    }\n\n    return this.rdsBadgeLabel;\n  }\n\n  private _getBadgeType(): RdsBadgeType {\n    return this._getLabel().length > 0 ? this.rdsBadgeType : 'dot';\n  }\n\n  private _getBadgeElement(): HTMLElement {\n    return this._componentRef?.location.nativeElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RdsBadgeComponent } from './badge.component';\nimport { RdsBadgeDirective } from './badge.directive';\n\nexport const RDS_BADGE_DIRECTIVES = [\n  RdsBadgeComponent,\n  RdsBadgeDirective,\n] as const;\n\n@NgModule({\n  imports: [...RDS_BADGE_DIRECTIVES],\n  exports: [...RDS_BADGE_DIRECTIVES],\n})\nexport class RdsBadgeModule {}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RdsButtonModule } from '../button';\nimport { RdsCheckboxModule } from '../checkbox';\nimport { RdsIconComponent } from '../icons';\nimport { RdsListItemModule } from '../list-item';\nimport { RdsErrorDirective } from './error.directive';\nimport { RdsFormFieldComponent } from './form-field.component';\nimport { RdsHelperTextModule } from './helper-text.module';\nimport { RdsHintDirective } from './hint.directive';\nimport { RdsInputDirective } from './input.directive';\nimport { RdsLabelDirective } from './label.directive';\nimport { RdsPrefixSeparatorComponent } from './prefix-separator.component';\nimport { RdsPrefixDirective } from './prefix.directive';\nimport { RdsMultiSelectOptionComponent } from './select/multi-select-option.component';\nimport { RdsSelectAllOptionComponent } from './select/select-all-option.component';\nimport { RdsSelectOptionSeparatorComponent } from './select/select-option-separator.component';\nimport { RdsSelectSearchInputComponent } from './select/select-search-input.component';\nimport { RdsSelectComponent } from './select/select.component';\nimport { RdsSingleSelectOptionComponent } from './select/single-select-option.component';\nimport { RdsTriggerValuesComponent } from './select/trigger-values.component';\nimport { RdsSuffixSeparatorComponent } from './suffix-separator.component';\nimport { RdsSuffixDirective } from './suffix.directive';\nimport { RdsMultiSelectComponent } from './select/multi-select.component';\nimport { RdsLabelIconDirective } from './label-icon.directive';\nimport { RdsTextareaResizeDirective } from './textarea-resize.directive';\nimport { RdsChipsModule } from '../chips';\nimport { RdsInputWithChipsComponent } from './input-with-chips/input-with-chips.component';\nimport { RdsChipGridComponent } from './chip-grid/chip-grid.component';\nimport { RdsInputChipComponent } from './input-chip/input-chip.component';\nimport { RdsChipInputDirective } from './chip-input';\nimport { RdsBadgeComponent } from '../badge';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ObserversModule,\n    RdsCheckboxModule,\n    RdsIconComponent,\n    ReactiveFormsModule,\n    RdsHelperTextModule,\n    RdsListItemModule,\n    RdsButtonModule,\n    RdsChipsModule,\n    RdsBadgeComponent,\n  ],\n  declarations: [\n    RdsFormFieldComponent,\n    RdsInputDirective,\n    RdsLabelDirective,\n    RdsLabelIconDirective,\n    RdsPrefixDirective,\n    RdsPrefixSeparatorComponent,\n    RdsSuffixDirective,\n    RdsSuffixSeparatorComponent,\n    RdsSelectComponent,\n    RdsMultiSelectComponent,\n    RdsTriggerValuesComponent,\n    RdsSelectAllOptionComponent,\n    RdsSelectSearchInputComponent,\n    RdsSelectOptionSeparatorComponent,\n    RdsSingleSelectOptionComponent,\n    RdsMultiSelectOptionComponent,\n    RdsTextareaResizeDirective,\n    RdsInputWithChipsComponent,\n    RdsInputChipComponent,\n    RdsInputDirective,\n    RdsChipGridComponent,\n    RdsChipInputDirective,\n  ],\n  exports: [\n    RdsErrorDirective,\n    RdsFormFieldComponent,\n    RdsLabelIconDirective,\n    RdsHintDirective,\n    RdsInputDirective,\n    RdsLabelDirective,\n    RdsPrefixDirective,\n    RdsPrefixSeparatorComponent,\n    RdsSuffixDirective,\n    RdsSuffixSeparatorComponent,\n    RdsSelectComponent,\n    RdsMultiSelectComponent,\n    RdsSelectAllOptionComponent,\n    RdsSelectSearchInputComponent,\n    RdsSelectOptionSeparatorComponent,\n    RdsSingleSelectOptionComponent,\n    RdsMultiSelectOptionComponent,\n    RdsTextareaResizeDirective,\n    RdsInputWithChipsComponent,\n    RdsInputChipComponent,\n    RdsInputDirective,\n    RdsChipGridComponent,\n    RdsChipInputDirective,\n  ],\n})\nexport class RdsFormFieldModule {}\n","import {\n  booleanAttribute,\n  ChangeDetectorRef,\n  ComponentRef,\n  DestroyRef,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  CdkOverlayOrigin,\n  ConnectedPosition,\n  Overlay,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { RdsAutocompleteContainerComponent } from './autocomplete-container.component';\nimport {\n  BehaviorSubject,\n  distinctUntilChanged,\n  merge,\n  noop,\n  Observable,\n  skip,\n  Subject,\n} from 'rxjs';\nimport { debounceTime, filter, tap } from 'rxjs/operators';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport {\n  RDS_AUTOCOMPLETE_CONFIG,\n  RDS_AUTOCOMPLETE_DEFAULT_CONFIG,\n} from './autocomplete.config';\nimport { RdsAutocompleteIntl } from './autocomplete-intl.service';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport { RDS_FORM_FIELD, RdsAbstractFormFieldControl } from '../form-field';\nimport { RdsControlType } from '../form-field/control.type';\nimport { updateErrorState } from '../utils';\nimport { AbstractControl, ControlValueAccessor } from '@angular/forms';\nimport {\n  RdsAutocompleteNewItemTemplateContext,\n  RdsAutocompleteOptionTemplateContext,\n  RdsAutocompleteTemplateContext,\n} from './autocomplete.types';\nimport { RdsAutocompleteOptionDirective } from './autocomplete-option.directive';\n\n@Directive()\nexport abstract class RdsAbstractAutocompleteComponent<\n    T,\n    ArrayOfFlatType extends T | T[],\n  >\n  extends RdsAbstractFormFieldControl<ArrayOfFlatType>\n  implements OnInit, ControlValueAccessor, DoCheck, OnChanges, OnDestroy\n{\n  protected readonly cdr = inject(ChangeDetectorRef);\n  protected readonly overlay = inject(Overlay);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly config = {\n    ...RDS_AUTOCOMPLETE_DEFAULT_CONFIG,\n    ...inject(RDS_AUTOCOMPLETE_CONFIG, { optional: true }),\n  };\n  protected readonly intl = inject(RdsAutocompleteIntl);\n  protected readonly formField = inject(RDS_FORM_FIELD);\n  protected readonly scrollStrategyOptions = inject(ScrollStrategyOptions);\n\n  @Input({ required: true }) options:\n    | T[]\n    | ((query: string) => Observable<T[]>);\n  @Input() displayProperty: keyof T | ((value: T) => string);\n  @Input() uniqProperty: keyof T | ((value: T) => string | number);\n  @Input() compareItem: (i1: T, i2: T) => boolean = (i1: T, i2: T) =>\n    this.getUniqProperty(i1) === this.getUniqProperty(i2);\n  @Input() filterBy: (item: T, query: string) => boolean;\n  @Input() highlightQuery: boolean | 'inverse' = false;\n  @Input() newItem: (query: string, fetchedCollection: T[]) => T;\n  @Input({ transform: booleanAttribute }) selectNewItemOnBlur = false;\n  @Input({ transform: booleanAttribute }) selectLastRemainingOnBlur = false;\n  @Input() skipSearchValue: (query: string) => boolean;\n  @Input() placeholder: string;\n  @Input() loadingText: string;\n  @Input() noDataText: string;\n  @Input() newItemText: string;\n  @Input() optionTemplate: TemplateRef<\n    RdsAutocompleteOptionTemplateContext<T, ArrayOfFlatType>\n  >;\n  @Input() noDataTemplate: TemplateRef<\n    RdsAutocompleteTemplateContext<T, ArrayOfFlatType>\n  >;\n  @Input() loadingTemplate: TemplateRef<\n    RdsAutocompleteTemplateContext<T, ArrayOfFlatType>\n  >;\n  @Input() newItemTemplate: TemplateRef<\n    RdsAutocompleteNewItemTemplateContext<T, ArrayOfFlatType>\n  >;\n\n  @HostBinding('attr.disabled')\n  get attrDisabled(): boolean | null {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled ? this.ngControl.disabled : null;\n    }\n\n    return this._disabled ? this._disabled : null;\n  }\n\n  @Input()\n  override set disabled(disabled: BooleanInput) {\n    this._disabled = booleanAttribute(disabled);\n\n    if (this._focused) {\n      this._focused = false;\n      this.stateChanges.next();\n    }\n  }\n\n  override get disabled(): boolean {\n    return this.attrDisabled || false;\n  }\n\n  @Input()\n  set debounce(debounce: NumberInput) {\n    this._debounce = numberAttribute(debounce, this.config.debounce);\n  }\n\n  get debounce(): number {\n    return this._debounce;\n  }\n\n  private _debounce = this.config.debounce;\n\n  @Input()\n  set minSearchChars(minSearchChars: NumberInput) {\n    this._minSearchChars = numberAttribute(\n      minSearchChars,\n      this.config.minSearchChars,\n    );\n  }\n\n  get minSearchChars(): number {\n    return this._minSearchChars;\n  }\n\n  private _minSearchChars = this.config.minSearchChars;\n  @HostBinding('class') readonly hostClass = 'w-100';\n\n  readonly controlType: RdsControlType = 'autocomplete';\n  protected typing$ = new BehaviorSubject(false);\n\n  @Output() openChanged = new EventEmitter<boolean>();\n  @Output() shown = new EventEmitter<void>();\n  @Output() hidden = new EventEmitter<void>();\n  @Output() typing = this.typing$.pipe(distinctUntilChanged());\n  @Output() loading = new BehaviorSubject(false);\n\n  @ViewChild('inputEl', { static: true })\n  protected inputEl: ElementRef<HTMLInputElement>;\n  @ViewChild('inputContainer', { static: true })\n  protected inputContainer: ElementRef<HTMLDivElement>;\n\n  abstract get values(): T[];\n\n  get empty(): boolean {\n    return (\n      this.values.length === 0 &&\n      !this.inputEl.nativeElement.value &&\n      !this.isNativelyBadInput()\n    );\n  }\n\n  get shouldLabelFloat(): boolean {\n    return this._focused || !this.empty;\n  }\n\n  get errorState(): boolean {\n    return this._errorState;\n  }\n\n  protected get inputAriaDescribedBy(): string {\n    return this._inputAriaDescribedby;\n  }\n\n  protected set inputAriaDescribedBy(newValue: string) {\n    this._inputAriaDescribedby = newValue;\n  }\n\n  _trigger: ElementRef<HTMLDivElement>;\n  _origin: CdkOverlayOrigin;\n\n  private _inputAriaDescribedby: string;\n\n  onChange: (value: ArrayOfFlatType) => void = noop;\n  onTouched = noop;\n\n  protected override _value: ArrayOfFlatType;\n  protected _newValues: T[] = [];\n  protected _open = false;\n  private _overlayRef: OverlayRef | null = null;\n  private _portal: ComponentPortal<\n    RdsAutocompleteContainerComponent<T, ArrayOfFlatType>\n  >;\n  protected _dropdownInstance: ComponentRef<\n    RdsAutocompleteContainerComponent<T, ArrayOfFlatType>\n  >;\n  protected _options: T[] = [];\n  protected _onFocusInputValue = '';\n  protected _search$ = new BehaviorSubject<string>('');\n  private _lastValues: T[] = [];\n  private readonly _closed$ = new Subject<void>();\n\n  constructor() {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    merge(this.intl.change$, this.stateChanges)\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.cdr.markForCheck());\n    this.typing$\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.onValueChange());\n  }\n\n  ngOnInit(): void {\n    this.updateSearch();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.disabled) {\n      this.hide();\n    }\n\n    if (\n      this._dropdownInstance &&\n      (changes['displayProperty'] ||\n        changes['loadingText'] ||\n        changes['noDataText'])\n    ) {\n      this.assignInputsToDropdown();\n    }\n\n    if (changes['debounce']) {\n      this.updateSearch();\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      const oldState = this._errorState;\n      this._errorState =\n        !this.typing$.getValue() &&\n        !this._open &&\n        updateErrorState(\n          this.errorState,\n          this.parentFormGroup,\n          this.parentForm,\n          this.ngControl.control,\n        );\n\n      if (oldState !== this._errorState) {\n        this.stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n\n    this._search$.complete();\n    this._closed$.next();\n    this._closed$.complete();\n  }\n\n  protected focusChanged(isFocused: boolean): void {\n    this.typing$.next(isFocused);\n\n    if (\n      isFocused !== this.focused &&\n      (!this.inputEl.nativeElement.readOnly || !isFocused)\n    ) {\n      this._focused = isFocused;\n      this.stateChanges.next();\n      this.inputEl.nativeElement.selectionStart =\n        this.inputEl.nativeElement.value.length;\n    }\n\n    if (!isFocused) {\n      this.onTouched();\n\n      if (\n        (!Array.isArray(this.value) && !this.value) ||\n        Array.isArray(this.value)\n      ) {\n        this.onValueChange(\n          this._onFocusInputValue !== this.inputEl.nativeElement.value,\n        );\n      }\n    } else {\n      this._onFocusInputValue = this.inputEl.nativeElement.value;\n      this.show();\n    }\n  }\n\n  show(): void {\n    if (\n      !this.disabled &&\n      !this._open &&\n      this.inputEl.nativeElement.value.length >= this.minSearchChars\n    ) {\n      this._open = true;\n\n      if (this._options.length === 0 && this.minSearchChars === 0) {\n        this.searchFn(this._search$.getValue());\n      }\n\n      if (!this._overlayRef) {\n        this._overlayRef = this.overlay.create({\n          hasBackdrop: true,\n          backdropClass: 'transparent',\n          positionStrategy: this.getPositionStrategy(),\n          scrollStrategy: this.scrollStrategyOptions.block(),\n          minWidth: Math.max(\n            this.config.optionsContainerMinWidth,\n            this._trigger.nativeElement.getBoundingClientRect().width,\n          ),\n        });\n        this._overlayRef\n          .backdropClick()\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe(() => this.addNewItemOnBlurAndHide());\n        this._portal = new ComponentPortal<\n          RdsAutocompleteContainerComponent<T, ArrayOfFlatType>\n        >(RdsAutocompleteContainerComponent, null);\n      }\n\n      this._dropdownInstance = this._overlayRef.attach(this._portal);\n      this.assignInputsToDropdown();\n      this.openChanged.emit(true);\n      this.shown.emit();\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  hide(): void {\n    if (this._open) {\n      this._open = false;\n\n      if (this._overlayRef) {\n        this._overlayRef.detach();\n      }\n\n      this.onTouched();\n      this._closed$.next();\n      this.openChanged.emit(false);\n      this.hidden.emit();\n      this.cdr.markForCheck();\n    }\n  }\n\n  hasValue(): boolean {\n    return this.values.length > 0;\n  }\n\n  isSelected(option: T): boolean {\n    return this.values.some((o) => this.compareItem(option, o));\n  }\n\n  abstract deselect(option?: T): void;\n\n  clear(): void {\n    if (!this.disabled) {\n      const beforeValue = this.inputEl.nativeElement.value;\n      this.setValueForClear();\n      this.inputEl.nativeElement.value = '';\n      this.onValueChange(beforeValue !== '');\n      this._newValues = [];\n      this._options = [];\n      this.inputEl.nativeElement.focus();\n      this.updateDropdownOptions();\n    }\n  }\n\n  protected abstract setValueForClear(): void;\n\n  abstract select(option: T): void;\n\n  selectNewItem(): void {\n    if (typeof this.newItem === 'function') {\n      const newItem = this.getNewItem();\n\n      if (newItem) {\n        this._options = this._options.filter(\n          (o) => !this._newValues.some((newOpt) => this.compareItem(o, newOpt)),\n        );\n        this._newValues = [\n          ...this._newValues.filter((v) => !this.compareItem(v, newItem)),\n          newItem,\n        ];\n        this._options = [...this._options, ...this._newValues];\n        this.select(newItem);\n      }\n    } else if (isDevMode()) {\n      throw new Error(\n        `Adding new item requires defined newItem as function for autocomplete.`,\n      );\n    }\n  }\n\n  getNewItem(): T | null {\n    return typeof this.newItem === 'function'\n      ? this.newItem(this.inputEl.nativeElement.value, this._options)\n      : null;\n  }\n\n  registerOnChange(fn: (value: ArrayOfFlatType) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  writeValue(v: ArrayOfFlatType): void {\n    this.value = v;\n  }\n\n  abstract isInputFilled(): boolean;\n\n  getInputFilledValue(): string {\n    return this.inputEl.nativeElement.value;\n  }\n\n  getDisplayProperty(v: T | null): string {\n    if (!v) {\n      return '';\n    } else if (this.displayProperty) {\n      if (typeof this.displayProperty === 'function') {\n        return this.displayProperty(v);\n      } else {\n        return String(v[this.displayProperty]);\n      }\n    } else {\n      return String(v);\n    }\n  }\n\n  getUniqProperty(v: T | null): string | number {\n    if (!v) {\n      return '';\n    } else if (this.uniqProperty) {\n      if (typeof this.uniqProperty === 'function') {\n        return this.uniqProperty(v);\n      } else {\n        return String(v[this.uniqProperty]);\n      }\n    } else {\n      return this.getDisplayProperty(v);\n    }\n  }\n\n  onContainerClick(): void {\n    if (!this._focused) {\n      this.focus();\n\n      if (\n        Array.isArray(this.options) &&\n        this.debounce === 0 &&\n        this.minSearchChars === 0\n      ) {\n        this.show();\n      }\n    }\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    this.inputAriaDescribedBy = ids.join(' ');\n  }\n\n  getSearchQuery(): string {\n    return this._search$.getValue();\n  }\n\n  updatePosition(): void {\n    this._overlayRef?.updatePosition();\n  }\n\n  clearValue(event?: Event): void {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.clear();\n  }\n\n  toggle(option: T): void {\n    if (this.isSelected(option)) {\n      this.deselect(option);\n    } else {\n      this.select(option);\n    }\n  }\n\n  override get required(): boolean {\n    if (\n      this.ngControl &&\n      this.ngControl.control &&\n      this.ngControl.control.validator\n    ) {\n      const validators = this.ngControl.control.validator(\n        {} as AbstractControl,\n      );\n\n      if (validators && validators['required']) {\n        return true;\n      }\n    }\n\n    return super.required;\n  }\n\n  _addOption(\n    option: HTMLElement,\n    component: RdsAutocompleteOptionDirective<T, ArrayOfFlatType>,\n  ): void {\n    this._dropdownInstance?.instance._addOption(option, component);\n  }\n\n  _deleteOption(option: HTMLElement): void {\n    this._dropdownInstance?.instance._deleteOption(option);\n  }\n\n  protected onValueChange(force = false): void {\n    if (\n      force ||\n      this.hasAtLeastOneDifferentItem(this.values, this._lastValues)\n    ) {\n      this._lastValues = [...this.values];\n      this.onChange(this.value);\n    }\n  }\n\n  protected addNewItemOnBlurAndHide(): void {\n    this.addNewItemOnBlur();\n    this.hide();\n  }\n\n  protected addNewItemOnBlur(query = this.inputEl.nativeElement.value): void {\n    if (this.selectLastRemainingOnBlur && this._options.length === 1) {\n      this.select(this._options[0]);\n    } else if (this.selectNewItemOnBlur && typeof this.newItem === 'function') {\n      const newVal = this.newItem(query, this._options);\n\n      if (newVal && this._options.every((o) => !this.compareItem(o, newVal))) {\n        this._options = this._options.filter(\n          (o) => !this._newValues.some((newOpt) => this.compareItem(o, newOpt)),\n        );\n        this._newValues = [\n          ...this._newValues.filter((v) => !this.compareItem(v, newVal)),\n          newVal,\n        ];\n        this._options = [...this._options, ...this._newValues];\n        this.updateDropdownOptions();\n        this.select(newVal);\n      }\n    }\n\n    this.onTouched();\n    this.typing$.next(false);\n  }\n\n  protected getPlaceholder(): string {\n    if (\n      !this._focused &&\n      this.formField.labelPosition === 'floating' &&\n      this.values.length === 0\n    ) {\n      return '';\n    } else if (typeof this.placeholder === 'string') {\n      return this.placeholder;\n    } else {\n      return RdsAutocompleteIntl.translations.placeholder;\n    }\n  }\n\n  protected search(query: string = this.inputEl.nativeElement.value): void {\n    if (\n      typeof this.skipSearchValue === 'function' &&\n      this.skipSearchValue(query)\n    ) {\n      return;\n    }\n\n    this._search$.next(query);\n  }\n\n  protected onInputKeydown(event: KeyboardEvent): void {\n    if (!hasModifierKey(event, 'altKey', 'shiftKey', 'ctrlKey', 'metaKey')) {\n      if (!this._open && event.key === 'Enter') {\n        this.show();\n      } else if (this._open && event.key === 'Escape') {\n        this.hide();\n      }\n\n      this._dropdownInstance?.instance.onKeydown(event);\n    }\n  }\n\n  private _filterBy(item: T, query: string): boolean {\n    return typeof this.filterBy === 'function'\n      ? this.filterBy(item, query)\n      : this.getDisplayProperty(item).includes(query);\n  }\n\n  private searchFn(query: string): void {\n    if (this.inputEl.nativeElement.value.length >= this.minSearchChars) {\n      if (this._focused) {\n        this.show();\n      }\n\n      this.loading.next(true);\n\n      if (typeof this.options === 'function') {\n        this.options(query)\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe((options) => {\n            this._options = [\n              ...options,\n              ...this.getNewNotQueriedSelectedValues(options),\n            ];\n            this.updateDropdownOptions();\n          });\n      } else {\n        this._options = [\n          ...this.options,\n          ...this.getNewNotQueriedSelectedValues(this.options),\n        ].filter((v) => this._filterBy(v, query));\n        this.updateDropdownOptions();\n        this.loading.next(false);\n      }\n    } else {\n      this.loading.next(false);\n      this.hide();\n    }\n  }\n\n  protected getNewNotQueriedSelectedValues(options: T[]): T[] {\n    return this.values\n      .filter((o) =>\n        this._newValues.some((newOpt) => this.compareItem(o, newOpt)),\n      )\n      .filter((o) => !options.some((q) => this.compareItem(q, o)));\n  }\n\n  protected updateDropdownOptions(): void {\n    if (this._dropdownInstance) {\n      this._dropdownInstance.instance.options = this._options;\n      this._dropdownInstance.changeDetectorRef.markForCheck();\n      this.loading.next(false);\n    }\n  }\n\n  private getPositionStrategy(): PositionStrategy {\n    return this.overlay\n      .position()\n      .flexibleConnectedTo(this._origin.elementRef)\n      .withPositions([this.getPositions()]);\n  }\n\n  private getPositions(): ConnectedPosition {\n    return {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: 0,\n      offsetY: 0,\n    };\n  }\n\n  protected assignInputsToDropdown(): void {\n    this._dropdownInstance.instance.autocomplete = this;\n    this._dropdownInstance.instance.size = this.formField.size;\n    this._dropdownInstance.instance.options = this._options;\n    this._dropdownInstance.changeDetectorRef.markForCheck();\n  }\n\n  private updateSearch(): void {\n    if (this._search$) {\n      this._search$.complete();\n    }\n\n    const searchQuery = Array.isArray(this.value)\n      ? ''\n      : this.getDisplayProperty(this.values[0]);\n\n    this._search$ = new BehaviorSubject<string>(searchQuery);\n    this._search$\n      .pipe(\n        skip(1),\n        distinctUntilChanged(),\n        filter((query) => this.inputEl.nativeElement.value === query),\n        tap(() => {\n          if (this._focused) {\n            this.show();\n          }\n\n          if (\n            this._dropdownInstance &&\n            this.debounce !== 0 &&\n            this.inputEl.nativeElement.value.length >= this.minSearchChars\n          ) {\n            this.loading.next(true);\n          }\n\n          if (\n            this.debounce !== 0 &&\n            this.inputEl.nativeElement.value.length < this.minSearchChars &&\n            this.loading.getValue()\n          ) {\n            this.loading.next(false);\n          }\n        }),\n        debounceTime(this.debounce),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((q) => this.searchFn(q));\n  }\n\n  private isNativelyBadInput(): boolean {\n    return (\n      this.inputEl.nativeElement.validity &&\n      this.inputEl.nativeElement.validity.badInput\n    );\n  }\n\n  protected hasAtLeastOneDifferentItem(arrayA: T[], arrayB: T[]): boolean {\n    if (arrayA.length === 0 && arrayB.length === 0) {\n      return false;\n    } else if (arrayA.length !== arrayB.length) {\n      return true;\n    }\n\n    return (\n      arrayA.some((o) => !arrayB.some((op) => this.compareItem(o, op))) ||\n      arrayB.some((o) => !arrayA.some((op) => this.compareItem(o, op)))\n    );\n  }\n\n  protected focus(options?: FocusOptions): void {\n    this.inputEl.nativeElement.focus(options);\n  }\n}\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AnimationItem } from 'lottie-web';\nimport { AnimationOptions } from 'ngx-lottie';\nimport {\n  RdsProgressSpinnerMode,\n  RdsProgressSpinnerSize,\n} from './progress-spinner.types';\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { debounceTime, delay } from 'rxjs/operators';\n\nconst ANIMATION_SPEED_FACTOR = 10;\ntype RdsProgressSpinnerDirection = 1 | -1;\nconst ANIMATION_DIRECTION: {\n  FORWARD: RdsProgressSpinnerDirection;\n  BACKWARD: RdsProgressSpinnerDirection;\n} = {\n  FORWARD: 1,\n  BACKWARD: -1,\n};\nconst DEFAULT_MAX_VALUE = 100;\nconst DEFAULT_MIN_VALUE = 0;\n\n@Component({\n  selector: 'rds-progress-spinner',\n  template: `\n    <div class=\"rds-progress-spinner-container\">\n      <ng-lottie\n        [options]=\"animationConfigDebounced$ | async\"\n        (animationCreated)=\"animationCreated($event)\"\n      />\n    </div>\n    @if (label) {\n      <span class=\"rds-progress-spinner-label\">{{ label }}</span>\n    }\n  `,\n  styleUrls: [`./progress-spinner.component.scss`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsProgressSpinnerComponent\n  implements AfterViewInit, OnChanges, OnDestroy\n{\n  private animationItem: AnimationItem;\n  private readonly animationConfig$ = new Subject<AnimationOptions>();\n  protected readonly animationConfigDebounced$ = this.animationConfig$.pipe(\n    delay(1),\n    debounceTime(1),\n  );\n\n  @HostBinding('class') get hostClasses(): string[] {\n    return ['rds-progress-spinner', `rds-progress-spinner-${this.size}`];\n  }\n\n  @HostBinding('attr.role') readonly hostRole = 'progressbar';\n\n  @HostBinding('attr.aria-valuemin')\n  get attrValueMin(): number | null {\n    return this.mode === 'determinate' ? this.minValue : null;\n  }\n\n  @HostBinding('attr.aria-valuemax')\n  get attrValueMax(): number | null {\n    return this.mode === 'determinate' ? this.maxValue : null;\n  }\n\n  @HostBinding('attr.aria-valuenow')\n  get attrValueNow(): number | null {\n    return this.mode === 'determinate' ? this.value : null;\n  }\n\n  @Input()\n  set value(newValue: NumberInput) {\n    const value = numberAttribute(newValue, DEFAULT_MIN_VALUE);\n\n    if (this._value !== value) {\n      this._value = value;\n\n      if (this.animationItem) {\n        this.animationItem.setDirection(this.getAnimationDirection());\n        this.playAnimation();\n      }\n    }\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  private _value = DEFAULT_MIN_VALUE;\n\n  @Input()\n  set minValue(value: NumberInput) {\n    const min = numberAttribute(value, DEFAULT_MIN_VALUE);\n\n    if (min > this.maxValue) {\n      throw new Error(`The minimal value should be less than maximum value`);\n    }\n\n    if (this._minValue !== min) {\n      this._minValue = min;\n      this.animationItem.setDirection(this.getAnimationDirection());\n      this.playAnimation();\n    }\n  }\n\n  get minValue(): number {\n    return this._minValue;\n  }\n\n  private _minValue = DEFAULT_MIN_VALUE;\n\n  @Input()\n  set maxValue(value: NumberInput) {\n    const max = numberAttribute(value, DEFAULT_MAX_VALUE);\n\n    if (max < this.minValue) {\n      throw new Error(`The maximal value should be greater than minimal value`);\n    }\n\n    if (this._maxValue !== max) {\n      this._maxValue = max;\n      this.animationItem.setDirection(this.getAnimationDirection());\n      this.playAnimation();\n    }\n  }\n\n  get maxValue(): number {\n    return this._maxValue;\n  }\n\n  private _maxValue = DEFAULT_MAX_VALUE;\n\n  @Input() mode: RdsProgressSpinnerMode = 'indeterminate';\n  @Input() size: RdsProgressSpinnerSize = 'xl';\n  @Input() label: string | null;\n\n  @HostBinding('class.rds-progress-spinner--white')\n  @Input({ transform: booleanAttribute })\n  white = false;\n\n  ngAfterViewInit(): void {\n    this._setAnimationConfig();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['mode'] || changes['size'] || changes['white']) {\n      this._setAnimationConfig();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.animationItem?.destroy();\n  }\n\n  animationCreated($event: AnimationItem): void {\n    if (this.mode === 'determinate') {\n      this.animationItem = $event;\n      this.playAnimation();\n    }\n  }\n\n  private playAnimation(): void {\n    if (this.mode === 'determinate' && this.animationItem) {\n      this.animationItem.pause();\n      this.removeAnimationItemListener();\n\n      if (\n        (this.animationItem.playDirection === ANIMATION_DIRECTION.FORWARD &&\n          this.animationItem.currentFrame < this.getPercentageValue()) ||\n        (this.animationItem.playDirection === ANIMATION_DIRECTION.BACKWARD &&\n          this.animationItem.currentFrame > this.getPercentageValue())\n      ) {\n        this.animationItem.setSpeed(\n          Math.abs(\n            this.animationItem.currentFrame - this.getPercentageValue(),\n          ) / ANIMATION_SPEED_FACTOR,\n        );\n        this.animationItem.play();\n\n        this.animationItem.addEventListener('enterFrame', (event) => {\n          if (\n            (this.animationItem.playDirection === ANIMATION_DIRECTION.FORWARD &&\n              event.currentTime >= this.getPercentageValue()) ||\n            (this.animationItem.playDirection ===\n              ANIMATION_DIRECTION.BACKWARD &&\n              event.currentTime < this.getPercentageValue())\n          ) {\n            this.animationItem.pause();\n            this.removeAnimationItemListener();\n            this.animationItem.goToAndStop(this.getPercentageValue(), true);\n          }\n        });\n      }\n    }\n  }\n\n  private _getPath(): string {\n    return `assets/spinner/spinner-${\n      this.mode === 'determinate' ? 'determinate-' : ''\n    }${this.white ? 'white-' : ''}${this.size}.json`;\n  }\n\n  private _setAnimationConfig(): void {\n    if (this.animationItem) {\n      this.animationItem.destroy();\n    }\n\n    if (this.mode === 'indeterminate') {\n      this.animationConfig$.next({\n        path: this._getPath(),\n        autoplay: true,\n        loop: true,\n      });\n    } else {\n      this.animationConfig$.next({\n        path: this._getPath(),\n        loop: false,\n      });\n    }\n  }\n\n  private removeAnimationItemListener(): void {\n    if (this.animationItem) {\n      this.animationItem.removeEventListener('enterFrame');\n    }\n  }\n\n  private getPercentageValue(): number {\n    const value =\n      ((this.value - this.minValue) / (this.maxValue - this.minValue)) * 100;\n    const percentage = Math.round(value + Number.EPSILON);\n\n    if (percentage <= DEFAULT_MIN_VALUE) {\n      return DEFAULT_MIN_VALUE;\n    } else if (percentage >= this.animationItem.totalFrames) {\n      return this.animationItem.totalFrames || DEFAULT_MAX_VALUE;\n    } else {\n      return percentage;\n    }\n  }\n\n  private getAnimationDirection(): RdsProgressSpinnerDirection {\n    return this.getPercentageValue() < this.animationItem.currentFrame\n      ? ANIMATION_DIRECTION.BACKWARD\n      : ANIMATION_DIRECTION.FORWARD;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsProgressSpinnerComponent } from './progress-spinner.component';\nimport { LottieComponent } from 'ngx-lottie';\n\n@NgModule({\n  declarations: [RdsProgressSpinnerComponent],\n  exports: [RdsProgressSpinnerComponent],\n  imports: [CommonModule, LottieComponent],\n})\nexport class RdsProgressSpinnerModule {}\n","import { ChangeDetectionStrategy, Component, forwardRef } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { RdsAbstractFormFieldControl } from '../form-field';\nimport { RdsProgressSpinnerModule } from '../progress-spinner';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\nimport { RdsAbstractAutocompleteComponent } from './abstract-autocomplete.component';\n\n@Component({\n  selector: 'rds-autocomplete',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      class=\"rds-autocomplete rds-autocomplete-{{\n        formField.size\n      }} rds-autocomplete-single\"\n      (click)=\"inputEl.focus(); show()\"\n      [class.rds-autocomplete-disabled]=\"disabled\"\n      [class.rds-autocomplete-typing]=\"typing | async\"\n      [class.rds-autocomplete-has-value]=\"hasValue()\"\n    >\n      <div class=\"rds-autocomplete-input-container\" #inputContainer>\n        <input\n          [placeholder]=\"getPlaceholder()\"\n          [disabled]=\"attrDisabled\"\n          [attr.aria-invalid]=\"errorState\"\n          [attr.aria-describedby]=\"inputAriaDescribedBy\"\n          autocomplete=\"off\"\n          class=\"rds-form-field__control\"\n          #inputEl\n          (keydown.shift.tab)=\"addNewItemOnBlurAndHide()\"\n          (keydown.tab)=\"addNewItemOnBlurAndHide()\"\n          (blur)=\"focusChanged(false)\"\n          (focus)=\"focusChanged(true)\"\n          (input)=\"search()\"\n          (keydown)=\"onInputKeydown($event)\"\n        />\n      </div>\n      <div class=\"rds-autocomplete-icon-container\">\n        @if (values.length > 0 || inputEl.value) {\n          <button\n            rds-icon-button\n            (click)=\"clearValue($event)\"\n            [disabled]=\"ngControl?.disabled\"\n          >\n            <rds-icon namespace=\"outlined\" icon=\"close\" />\n          </button>\n        }\n        @if (loading | async) {\n          <rds-progress-spinner size=\"s\" />\n        } @else {\n          <rds-icon\n            namespace=\"outlined\"\n            [icon]=\"_open ? 'caret_up' : 'caret_down'\"\n          />\n        }\n      </div>\n    </div>\n  `,\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: RdsAbstractFormFieldControl,\n      useExisting: forwardRef(() => RdsAutocompleteComponent),\n    },\n  ],\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    RdsProgressSpinnerModule,\n    RdsIconComponent,\n    RdsButtonModule,\n  ],\n})\nexport class RdsAutocompleteComponent<\n  T,\n> extends RdsAbstractAutocompleteComponent<T, T> {\n  override set value(value: T) {\n    const oldValue = this.value;\n    this._value = value;\n\n    if (!this.compareItem(oldValue as T, this.value as T)) {\n      this.inputEl.nativeElement.value = this.getDisplayProperty(this.value);\n      this.cdr.markForCheck();\n    }\n  }\n\n  override get value(): T {\n    return this._value;\n  }\n\n  isInputFilled(): boolean {\n    return this.value &&\n      this.getDisplayProperty(this.value) === this.inputEl?.nativeElement.value\n      ? false\n      : this.inputEl?.nativeElement.value.length > 0 || false;\n  }\n\n  protected setValueForClear(): void {\n    this.value = null as T;\n  }\n\n  protected override focusChanged(isFocused: boolean): void {\n    if (!isFocused && this.values.length === 1) {\n      super.focusChanged(isFocused);\n\n      if (this._search$.getValue() !== '') {\n        this._search$.next('');\n      }\n    } else {\n      super.focusChanged(isFocused);\n    }\n  }\n\n  select(option: T): void {\n    if (!this.disabled && !this.isSelected(option)) {\n      this._search$.next('');\n      this.inputEl.nativeElement.value = this.getDisplayProperty(option);\n      this._onFocusInputValue = this.inputEl.nativeElement.value;\n\n      if (this.minSearchChars === 0) {\n        this._options = [];\n      }\n\n      this.updateDropdownOptions();\n\n      const previousValue = this.value;\n\n      if (this._newValues.some((o) => this.compareItem(o, previousValue))) {\n        this._options = this._options.filter(\n          (o) => !this.compareItem(o, previousValue),\n        );\n        this._newValues = [];\n      }\n\n      this.value = option;\n      this.inputEl.nativeElement.focus();\n      this.stateChanges.emit();\n      this.hide();\n    }\n  }\n\n  override hide(): void {\n    if (this.values.length === 1) {\n      this.inputEl.nativeElement.value = this.getDisplayProperty(\n        this.values[0],\n      );\n    }\n\n    super.hide();\n  }\n\n  override deselect(option?: T | null): void {\n    if (!this.disabled && (!option || this.isSelected(option))) {\n      if (option && this._newValues.some((v) => this.compareItem(v, option))) {\n        this._options = this._options.filter(\n          (o) => !this.compareItem(o, option),\n        );\n        this._newValues = this._newValues.filter(\n          (v) => !this.compareItem(v, option),\n        );\n      }\n\n      this.hide();\n      this.value = null as T;\n      this.inputEl.nativeElement.value = '';\n      this.inputEl.nativeElement.focus();\n      this.updateDropdownOptions();\n    }\n  }\n\n  get values(): T[] {\n    return this.value ? [this.value] : [];\n  }\n\n  protected override assignInputsToDropdown(): void {\n    this._dropdownInstance.instance.type = 'single';\n    super.assignInputsToDropdown();\n  }\n}\n","import { ValidationErrors } from '@angular/forms';\nimport { RdsAbstractAutocompleteComponent } from './abstract-autocomplete.component';\n\nconst INPUT_FILLED_ERROR_KEY = 'rdsInputFilled';\n\nexport class RdsAutocompleteValidators {\n  static inputFilled<T, ArrayOfFlatType extends T | T[]>(\n    autocomplete: RdsAbstractAutocompleteComponent<T, ArrayOfFlatType>,\n  ): ValidationErrors | null {\n    return autocomplete && autocomplete.isInputFilled()\n      ? {\n          [INPUT_FILLED_ERROR_KEY]: {\n            filledValue: autocomplete.getInputFilledValue(),\n          },\n        }\n      : null;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { RdsAbstractFormFieldControl } from '../form-field';\nimport { RdsProgressSpinnerModule } from '../progress-spinner';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\nimport { RdsAbstractAutocompleteComponent } from './abstract-autocomplete.component';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { RdsChipComponent, RdsChipsModule } from '../chips';\nimport { RdsControlType } from '../form-field/control.type';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport { RdsChipActionDirective } from '../chips';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { merge } from 'rxjs';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'rds-multi-autocomplete',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      class=\"rds-autocomplete rds-autocomplete-{{\n        formField.size\n      }} rds-autocomplete-multi\"\n      #autocomplate\n      (click)=\"inputEl.focus(); show()\"\n      [class.rds-autocomplete-typing]=\"typing | async\"\n      [class.rds-autocomplete-floating-label]=\"\n        formField.labelPosition === 'floating'\n      \"\n      [class.rds-autocomplete-has-value]=\"hasValue()\"\n    >\n      <div #autocompleteMulti class=\"rds-autocomplete-multi-container\">\n        @for (o of values; track trackByFn(o)) {\n          <rds-chip\n            #valueContainer\n            size=\"s\"\n            closable\n            [tabindex]=\"\n              (!focusedChip || focusedChip === valueContainer) &&\n              disallowFocusEscape\n                ? 0\n                : -1\n            \"\n            (focus)=\"chipFocus(valueContainer)\"\n            (closeChip)=\"deselect(o)\"\n            >{{ getDisplayProperty(o) }}\n          </rds-chip>\n        }\n        <div\n          class=\"rds-autocomplete-input-container\"\n          #inputContainer\n          [class.rds-form-field__control-show-caret]=\"showCaret()\"\n          [class.rds-form-field__control-disabled]=\"ngControl?.disabled\"\n          [class.rds-form-field__control-focused]=\"_focused\"\n        >\n          <input\n            [placeholder]=\"getPlaceholder()\"\n            [disabled]=\"attrDisabled\"\n            [attr.aria-invalid]=\"errorState\"\n            [attr.aria-describedby]=\"inputAriaDescribedBy\"\n            autocomplete=\"off\"\n            class=\"rds-form-field__control\"\n            #inputEl\n            (keydown.shift.tab)=\"addNewItemOnBlurAndHide()\"\n            (keydown.tab)=\"addNewItemOnBlurAndHide()\"\n            (blur)=\"focusChanged(false)\"\n            (focus)=\"focusChanged(true)\"\n            (input)=\"search()\"\n            (keydown)=\"onInputKeydown($event)\"\n          />\n        </div>\n      </div>\n      <div class=\"rds-autocomplete-icon-container\">\n        @if (values.length > 0 || inputEl.value) {\n          <button\n            rds-icon-button\n            [disabled]=\"ngControl?.disabled\"\n            (click)=\"clearValue($event)\"\n          >\n            <rds-icon namespace=\"outlined\" icon=\"close\" />\n          </button>\n        }\n        @if (loading | async) {\n          <rds-progress-spinner size=\"s\" />\n        } @else {\n          <rds-icon\n            namespace=\"outlined\"\n            [icon]=\"_open ? 'caret_up' : 'caret_down'\"\n          />\n        }\n      </div>\n    </div>\n  `,\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: RdsAbstractFormFieldControl,\n      useExisting: forwardRef(() => RdsMultiAutocompleteComponent),\n    },\n  ],\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    RdsProgressSpinnerModule,\n    RdsIconComponent,\n    RdsButtonModule,\n    RdsChipsModule,\n  ],\n})\nexport class RdsMultiAutocompleteComponent<T>\n  extends RdsAbstractAutocompleteComponent<T, T[]>\n  implements AfterViewInit, OnDestroy\n{\n  private readonly renderer = inject(Renderer2);\n  private readonly elementRef = inject(ElementRef);\n  private readonly dir = inject(Directionality, { optional: true });\n\n  protected override _value: T[] = [];\n  override controlType: RdsControlType = 'autocomplete-multi';\n\n  @Input() set multiMinimumInputWidth(width: NumberInput) {\n    this._multiMinimumInputWidth = numberAttribute(\n      width,\n      this.config.multiMinimumInputWidth,\n    );\n  }\n\n  get multiMinimumInputWidth(): number {\n    return this._multiMinimumInputWidth;\n  }\n\n  private _multiMinimumInputWidth = this.config.multiMinimumInputWidth;\n\n  @Input() set multiMinimumInputWidthOffset(width: NumberInput) {\n    this._multiMinimumInputWidthOffset = numberAttribute(\n      width,\n      this.config.multiMinimumInputWidthOffset,\n    );\n  }\n\n  get multiMinimumInputWidthOffset(): number {\n    return this._multiMinimumInputWidthOffset;\n  }\n\n  private _multiMinimumInputWidthOffset =\n    this.config.multiMinimumInputWidthOffset;\n\n  @Input()\n  override set disabled(disabled: BooleanInput) {\n    super.disabled = disabled;\n    this.syncChipsState();\n  }\n\n  override get disabled(): boolean {\n    return super.disabled;\n  }\n\n  @Input()\n  trackBy: keyof T | ((o: T) => unknown);\n\n  protected trackByFn(o: T): unknown {\n    if (!this.trackBy) {\n      return o;\n    }\n\n    if (typeof this.trackBy === 'function') {\n      return this.trackBy(o);\n    }\n\n    return o[this.trackBy];\n  }\n\n  @ViewChildren('valueContainer', { read: ElementRef })\n  protected valueContainer: QueryList<ElementRef<HTMLElement>>;\n  @ViewChild('autocompleteMulti', { read: ElementRef })\n  protected autocompleteMulti: ElementRef<HTMLElement>;\n  @ViewChildren(RdsChipComponent) chips: QueryList<RdsChipComponent<T>>;\n\n  protected focusedChip: RdsChipComponent<T> | null = null;\n  protected disallowFocusEscape = true;\n  private keyManager: FocusKeyManager<RdsChipActionDirective>;\n  private readonly chipActions = new QueryList<RdsChipActionDirective>();\n  private _lastDestroyedFocusedChipIndex: number | null = null;\n\n  ngAfterViewInit(): void {\n    this.valueContainer.changes\n      .pipe(startWith(this.valueContainer), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.recalculateInputWidth());\n    this.setUpFocusManagement();\n    this.trackChipSetChanges();\n    this.trackDestroyedFocusedChip();\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent): void {\n    if (this.originatesFromChip(event)) {\n      this.keyManager.onKeydown(event);\n    }\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.keyManager?.destroy();\n    this.chipActions.destroy();\n  }\n\n  override set value(value: T[]) {\n    const oldValue = this.value;\n    this._value = value || [];\n\n    if (this.hasAtLeastOneDifferentItem(oldValue, this._value)) {\n      this.recalculateInputWidth();\n      this.cdr.markForCheck();\n    }\n  }\n\n  override get value(): T[] {\n    return this._value;\n  }\n\n  override get values(): T[] {\n    return this.value || [];\n  }\n\n  protected override setValueForClear(): void {\n    this._options = [];\n    this.value = [];\n    this.updateDropdownOptions();\n  }\n\n  protected override onInputKeydown(event: KeyboardEvent): void {\n    if (\n      this.values.length > 0 &&\n      this.getInputFilledValue().length === 0 &&\n      event.key === 'Backspace' &&\n      !hasModifierKey(event, 'altKey', 'shiftKey', 'ctrlKey', 'metaKey')\n    ) {\n      this.deselect(this.values[this.value.length - 1]);\n    }\n\n    super.onInputKeydown(event);\n  }\n\n  select(option: T): void {\n    if (!this.disabled && !this.isSelected(option)) {\n      const newValue = this._options.filter(\n        (o) => this.isSelected(o) || this.compareItem(o, option),\n      );\n      this.value = [\n        ...this.value.filter(\n          (o) => !newValue.some((n) => this.compareItem(n, o)),\n        ),\n        ...newValue,\n      ];\n      this.updateDropdownOptions();\n      this.inputEl.nativeElement.value = '';\n      this.stateChanges.emit();\n    }\n  }\n\n  override deselect(option?: T | null): void {\n    if (!this.disabled && (!option || this.isSelected(option))) {\n      if (option) {\n        this.value = this.value.filter((o) => !this.compareItem(o, option));\n\n        if (option) {\n          this._options = this._options.filter(\n            (o) =>\n              !this._newValues.some((newOpt) => this.compareItem(o, newOpt)),\n          );\n          this._newValues = this._newValues.filter(\n            (v) => !this.compareItem(v, option),\n          );\n          this._options = [...this._options, ...this._newValues];\n        }\n\n        this.updateDropdownOptions();\n      } else {\n        this.clear();\n      }\n\n      this.focusedChip = null;\n      this.onValueChange();\n    }\n  }\n\n  isInputFilled(): boolean {\n    return this.inputEl?.nativeElement.value.length > 0 || false;\n  }\n\n  override hide(): void {\n    super.hide();\n\n    if (this.inputEl.nativeElement.value.length === 0) {\n      this._search$.next('');\n      this._options = [];\n    }\n  }\n\n  protected chipFocus(chip: RdsChipComponent<T>): void {\n    const index = this.chips\n      .map((c) => c.getActions())\n      .reduce((p, c) => [...p, ...c], [])\n      .findIndex((a) => a === chip.getActions()[0]);\n    this.keyManager.setActiveItem(index);\n  }\n\n  protected override assignInputsToDropdown(): void {\n    this._dropdownInstance.instance.type = 'multi';\n    super.assignInputsToDropdown();\n  }\n\n  protected showCaret(): boolean {\n    return (\n      this.getPlaceholder().trim() === '' &&\n      this.inputEl.nativeElement.value.trim() === '' &&\n      this.values.length > 0\n    );\n  }\n\n  private recalculateInputWidth(): void {\n    if (\n      this.autocompleteMulti &&\n      this.inputEl &&\n      this.valueContainer &&\n      this.valueContainer.last &&\n      this.inputContainer\n    ) {\n      const availableWidth =\n        this.autocompleteMulti.nativeElement.getBoundingClientRect().x +\n        this.autocompleteMulti.nativeElement.getBoundingClientRect().width -\n        this.valueContainer.last.nativeElement.getBoundingClientRect().x -\n        this.valueContainer.last.nativeElement.getBoundingClientRect().width -\n        this.multiMinimumInputWidthOffset;\n\n      if (availableWidth > this.multiMinimumInputWidth) {\n        this.renderer.setStyle(\n          this.inputContainer.nativeElement,\n          'width',\n          `${availableWidth}px`,\n        );\n      } else {\n        this.renderer.setStyle(\n          this.inputContainer.nativeElement,\n          'width',\n          '100%',\n        );\n      }\n    } else if (this.inputContainer) {\n      this.renderer.setStyle(\n        this.inputContainer.nativeElement,\n        'width',\n        '100%',\n      );\n    }\n  }\n\n  private originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this.elementRef.nativeElement) {\n      if (currentElement.classList.contains('rds-chips__chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  private setUpFocusManagement(): void {\n    // Create a flat `QueryList` containing the actions of all the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this.chips.changes\n      .pipe(startWith(this.chips))\n      .subscribe((chips: QueryList<RdsChipComponent<T>>) => {\n        const actions: RdsChipActionDirective[] = chips\n          .map((c) => c.getActions())\n          .reduce((p, c) => [...p, ...c], []);\n        this.chipActions.reset(actions);\n        this.chipActions.notifyOnChanges();\n      });\n\n    this.keyManager = new FocusKeyManager(this.chipActions)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr')\n      .withHomeAndEnd()\n      .skipPredicate((action) => action.disabled);\n    this.keyManager.tabOut.subscribe(() => {\n      this.disallowFocusEscape = false;\n      this.cdr.markForCheck();\n\n      setTimeout(() => {\n        this.disallowFocusEscape = true;\n        this.cdr.markForCheck();\n      });\n    });\n\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chips.changes\n      .pipe(\n        startWith(null),\n        switchMap(() => merge(...this.chips.map((c) => c.focus$))),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(({ source: chip }) => {\n        const action = chip.getSourceAction(document.activeElement as Element);\n\n        if (action) {\n          this.keyManager.updateActiveItem(action);\n        }\n      });\n    this.chips.changes\n      .pipe(\n        startWith(null),\n        switchMap(() =>\n          merge(\n            ...this.chips.map((c) =>\n              c.focus$.pipe(map((e) => ({ focused: true, source: e.source }))),\n            ),\n            ...this.chips.map((c) =>\n              c.blur$.pipe(map((e) => ({ focused: false, source: e.source }))),\n            ),\n          ),\n        ),\n      )\n      .subscribe((chip) => {\n        if (chip.focused) {\n          this.focusedChip = chip.source;\n        } else if (this.focusedChip === chip.source) {\n          this.focusedChip = null;\n        }\n\n        this.cdr.markForCheck();\n      });\n\n    this.dir?.change\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((direction) =>\n        this.keyManager.withHorizontalOrientation(direction),\n      );\n  }\n\n  private trackDestroyedFocusedChip(): void {\n    this.chips.changes\n      .pipe(\n        startWith(null),\n        switchMap(() => merge(...this.chips.map((c) => c.destroyed))),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((event) => {\n        const chipArray = this.chips.toArray();\n        const chipIndex = chipArray.indexOf(event.source);\n\n        // If the focused chip is destroyed, save its index so that we can move focus to the next\n        // chip. We only save the index here, rather than move the focus immediately, because we want\n        // to wait until the chip is removed from the chip list before focusing the next one. This\n        // allows us to keep focus on the same index if the chip gets swapped out.\n        if (this.isValidIndex(chipIndex) && event.source.hasFocus()) {\n          this._lastDestroyedFocusedChipIndex = chipIndex;\n        }\n      });\n  }\n\n  private isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private trackChipSetChanges(): void {\n    this.chips.changes\n      .pipe(startWith(null), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.disabled) {\n          // Since this happens after the content has been\n          // checked, we need to defer it to the next tick.\n          Promise.resolve().then(() => this.syncChipsState());\n        }\n\n        this._redirectDestroyedChipFocus();\n      });\n  }\n\n  private syncChipsState(): void {\n    if (this.chips) {\n      this.chips.forEach((chip) => {\n        chip.disabled = this.disabled;\n        chip.cdr.markForCheck();\n      });\n    }\n  }\n\n  private _redirectDestroyedChipFocus(): void {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n\n    if (this.chips.length) {\n      const newIndex = Math.min(\n        this._lastDestroyedFocusedChipIndex,\n        this.chips.length - 1,\n      );\n      const chipToFocus = this.chips.toArray()[newIndex];\n\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this.chips.length === 1) {\n          this.focus();\n        } else {\n          this.keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      Promise.resolve().then(() => this.focus());\n    }\n\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n}\n","import { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { TAB_INDEX_DEFAULT } from '../utils';\n\nexport interface RdsBreadcrumbItem {\n  text: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'rds-breadcrumb-item',\n  template: `<span [title]=\"item.title ?? ''\">{{ item.text }}</span>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class RdsBreadcrumbItemComponent<T extends RdsBreadcrumbItem>\n  implements AfterViewInit, OnDestroy, FocusableOption\n{\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly elementRef = inject(ElementRef);\n\n  @HostBinding('class') class = 'rds-breadcrumb-item rds-focus-indicator';\n\n  @HostBinding('tabIndex')\n  @Input({ transform: (v: unknown) => numberAttribute(v, TAB_INDEX_DEFAULT) })\n  tabIndex = TAB_INDEX_DEFAULT;\n\n  @Input() item: T;\n\n  @Output() itemClick = new EventEmitter<T>();\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, false);\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  @HostListener('click')\n  @HostListener('keydown.enter')\n  @HostListener('keydown.space')\n  onClickItem(): void {\n    this.itemClick.emit(this.item);\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { RdsIconComponent } from '../icons';\nimport {\n  RdsBreadcrumbItem,\n  RdsBreadcrumbItemComponent,\n} from './breadcrumb-item.component';\n\nexport type RdsBreadcrumbsSize = 'm' | 'l';\n\n@Component({\n  selector: 'rds-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [RdsIconComponent, RdsBreadcrumbItemComponent],\n})\nexport class RdsBreadcrumbsComponent<T extends RdsBreadcrumbItem> {\n  @Input() size: RdsBreadcrumbsSize = 'l';\n  @Input() items: T[];\n  @Output() itemClick = new EventEmitter<T>();\n\n  trackBy(index: number, item: T): string | number {\n    return item.title || item.text || index;\n  }\n}\n","<div\n  class=\"rds-breadcrumbs rds-breadcrumbs-m\"\n  [class.rds-breadcrumbs-l]=\"size === 'l'\"\n>\n  @for (item of items; track trackBy($index, item); let last = $last) {\n    <div class=\"rds-breadcrumb-item\">\n      <rds-breadcrumb-item [item]=\"item\" (itemClick)=\"itemClick.emit(item)\" />\n      @if (!last) {\n        <rds-icon\n          class=\"rds-breadcrumb-separator\"\n          namespace=\"filled\"\n          icon=\"chevron_right\"\n        />\n      }\n    </div>\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { RdsBreadcrumbItemComponent } from './breadcrumb-item.component';\nimport { RdsBreadcrumbsComponent } from './breadcrumbs.component';\n\nexport const RDS_BREADCRUMBS_DIRECTIVES = [\n  RdsBreadcrumbsComponent,\n  RdsBreadcrumbItemComponent,\n] as const;\n\n@NgModule({\n  imports: [...RDS_BREADCRUMBS_DIRECTIVES],\n  exports: [...RDS_BREADCRUMBS_DIRECTIVES],\n})\nexport class RdsBreadcrumbsModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'rds-card-content',\n  standalone: true,\n})\nexport class RdsCardContentDirective {\n  @HostBinding('class') readonly class = 'rds-card-content';\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\n\n/**\n * Component intended to be used within the `<rds-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'rds-card-header',\n  templateUrl: 'card-header.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [RdsIconComponent, RdsButtonModule],\n})\nexport class RdsCardHeaderComponent {\n  @HostBinding('class') readonly class = 'rds-card-header';\n\n  @Input() action: string;\n}\n","<div class=\"rds-card-header-overline\">\n  <ng-content\n    select=\"rds-card-overline, [rds-card-overline], [rdsCardOverline]\"\n  />\n</div>\n<div class=\"rds-card-header-title-container\">\n  <ng-content select=\"rds-card-title, [rds-card-title], [rdsCardTitle]\" />\n  <div class=\"rds-card-header-action\">\n    @if (!action) {\n      <rds-icon namespace=\"filled\" icon=\"arrow_right\" />\n    }\n    @if (action) {\n      <button rds-text-button>{{ action }}</button>\n    }\n  </div>\n</div>\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Image used in a card, needed to add the rds- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[rds-card-image], [rdsCardImage]',\n  standalone: true,\n})\nexport class RdsCardImageDirective {\n  @HostBinding('class') readonly class = 'rds-card-image';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-card-overline, [rds-card-overline], [rdsCardOverline]',\n  standalone: true,\n})\nexport class RdsCardOverlineDirective {\n  @HostBinding('class') readonly class = 'rds-card-overline';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `rds-card-title, [rds-card-title], [rdsCardTitle]`,\n  standalone: true,\n})\nexport class RdsCardTitleDirective {\n  @HostBinding('class') readonly class = 'rds-card-title';\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardImageDirective } from './card-image.directive';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT } from '../utils';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'rds-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  exportAs: 'rdsCard',\n  imports: [],\n})\nexport class RdsCardComponent\n  implements AfterViewInit, AfterContentInit, OnDestroy\n{\n  protected readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly elementRef = inject(ElementRef);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly _uniqueId = `rds-card-${++nextUniqueId}`;\n\n  @ContentChild(RdsCardImageDirective) image: RdsCardImageDirective;\n\n  @HostBinding('class') get class(): string {\n    return 'rds-card rds-focus-indicator rds-card-default';\n  }\n\n  @HostBinding('tabIndex')\n  @Input({ transform: (v: unknown) => numberAttribute(v, TAB_INDEX_DEFAULT) })\n  tabIndex = TAB_INDEX_DEFAULT;\n\n  @HostBinding('attr.id')\n  get inputId(): string {\n    return `${this.id || this._uniqueId}`;\n  }\n\n  @Input() id = this._uniqueId;\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, false);\n  }\n\n  ngAfterContentInit(): void {\n    this.contentObserver\n      .observe(this.elementRef.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  focus(options?: FocusOptions): void {\n    this.elementRef.nativeElement.focus(options);\n  }\n}\n","<div class=\"rds-card__overlay\"></div>\n<div class=\"rds-card-content-container\">\n  <div [class.rds-card-image-container]=\"image\">\n    <ng-content select=\"[rds-card-image], [rdsCardImage]\" />\n    @if (image) {\n      <div class=\"rds-card-image-divider\"></div>\n    }\n  </div>\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n</div>\n@if (!image) {\n  <div class=\"rds-card-bottom-divider\"></div>\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-card-bottom-text, [rds-card-bottom-text], [rdsCardBottomText]',\n  standalone: true,\n})\nexport class RdsCardBottomTextDirective {\n  @HostBinding('class') readonly class = 'rds-card-bottom-text';\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n} from '@angular/core';\nimport { RdsMinimalBadgeColor } from '../badge';\n\n@Directive({\n  selector: 'rds-card-label, [rds-card-label], [rdsCardLabel]',\n  standalone: true,\n})\nexport class RdsCardLabelDirective {\n  private readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n\n  @HostBinding('class') readonly class = 'rds-card-label';\n\n  @Input()\n  color: RdsMinimalBadgeColor = 'blue';\n\n  getTextContent(): string {\n    return this.nativeElement.innerText;\n  }\n}\n","import { booleanAttribute, Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: `rds-card-selectable, [rds-card-selectable], [rdsCardSelectable]`,\n  standalone: true,\n})\nexport class RdsCardSelectableDirective {\n  @HostBinding('class') readonly class = 'rds-card-selectable';\n\n  @HostBinding('class.rds-card-selected')\n  @HostBinding('attr.aria-checked')\n  @Input({ transform: booleanAttribute })\n  isSelected = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardComponent } from '../card.component';\nimport { RdsCardSelectableDirective } from '../card-selectable.directive';\nimport { RdsCardDashboardColor } from '../card.types';\nimport { RdsCardLabelDirective } from '../card-label.directive';\nimport { RdsBadgeComponent } from '../../badge';\n\n@Component({\n  selector: 'rds-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsDashboardCard',\n  standalone: true,\n  hostDirectives: [\n    {\n      directive: RdsCardSelectableDirective,\n      inputs: ['isSelected'],\n    },\n  ],\n  imports: [RdsBadgeComponent],\n})\nexport class RdsDashboardCardComponent extends RdsCardComponent {\n  private _label: RdsCardLabelDirective;\n\n  @ContentChild(RdsCardLabelDirective)\n  set label(value: RdsCardLabelDirective) {\n    if (value !== this._label) {\n      this._label = value;\n\n      // we need additional change detection to handle cases where\n      // user has *ngIf on the <rds-card-label>\n      this.cdr.markForCheck();\n    }\n  }\n  get label(): RdsCardLabelDirective {\n    return this._label;\n  }\n\n  override get class(): string {\n    return `rds-card rds-dashboard-card rds-dashboard-card-${this.color}`;\n  }\n\n  @Input()\n  color: RdsCardDashboardColor = 'default';\n}\n","<div class=\"rds-card__overlay\"></div>\n<div class=\"rds-card-content-container\">\n  @if (label) {\n    <rds-badge\n      [label]=\"label.getTextContent()\"\n      [color]=\"label.color\"\n      type=\"minimal\"\n      size=\"s\"\n    />\n  }\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n  <ng-content select=\"rds-card-extra-content\" />\n  <div class=\"rds-card-bottom-row\">\n    <ng-content select=\"button[rds-text-button], button[rdsTextButton]\" />\n    <ng-content select=\"button[rds-text-button], button[rdsTextButton]\" />\n    <ng-content select=\"button[rds-text-button], button[rdsTextButton]\" />\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardComponent } from '../card.component';\nimport { RdsCardSelectableDirective } from '../card-selectable.directive';\nimport { RdsCardLabelDirective } from '../card-label.directive';\nimport { RdsCardLayout } from '../card.types';\nimport { RdsBadgeComponent } from '../../badge';\n\n@Component({\n  selector: 'rds-basic-card',\n  templateUrl: './basic-card.component.html',\n  styleUrls: ['./basic-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsBasicCard',\n  standalone: true,\n  hostDirectives: [\n    {\n      directive: RdsCardSelectableDirective,\n      inputs: ['isSelected'],\n    },\n  ],\n  imports: [RdsBadgeComponent],\n})\nexport class RdsBasicCardComponent extends RdsCardComponent {\n  private _label: RdsCardLabelDirective;\n\n  @ContentChild(RdsCardLabelDirective)\n  set label(value: RdsCardLabelDirective) {\n    if (value !== this._label) {\n      this._label = value;\n\n      // we need additional change detection to handle cases where\n      // user has *ngIf on the <rds-card-label>\n      this.cdr.markForCheck();\n    }\n  }\n\n  get label(): RdsCardLabelDirective {\n    return this._label;\n  }\n\n  override get class(): string {\n    return `rds-card rds-basic-card rds-card-layout-${this.layout}`;\n  }\n\n  @Input()\n  layout: Omit<RdsCardLayout, 'vertical-reversed'> = 'vertical';\n}\n","<div class=\"rds-card__overlay\"></div>\n<ng-content select=\"rds-icon\" />\n<div class=\"rds-card-content-container\">\n  @if (label) {\n    <rds-badge\n      [label]=\"label.getTextContent()\"\n      [color]=\"label.color\"\n      type=\"minimal\"\n      size=\"s\"\n    />\n  }\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n  <ng-content select=\"rds-card-extra-content\" />\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardComponent } from '../card.component';\nimport { RdsCardSelectableDirective } from '../card-selectable.directive';\nimport { RdsCardLabelDirective } from '../card-label.directive';\nimport { RdsCardLayout } from '../card.types';\nimport { RdsBadgeComponent } from '../../badge';\n\n@Component({\n  selector: 'rds-visual-card',\n  templateUrl: './visual-card.component.html',\n  styleUrls: ['./visual-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsVisualCard',\n  standalone: true,\n  hostDirectives: [\n    {\n      directive: RdsCardSelectableDirective,\n      inputs: ['isSelected'],\n    },\n  ],\n  imports: [RdsBadgeComponent],\n})\nexport class RdsVisualCardComponent extends RdsCardComponent {\n  private _label: RdsCardLabelDirective;\n\n  @ContentChild(RdsCardLabelDirective)\n  set label(value: RdsCardLabelDirective) {\n    if (value !== this._label) {\n      this._label = value;\n\n      // we need additional change detection to handle cases where\n      // user has *ngIf on the <rds-card-label>\n      this.cdr.markForCheck();\n    }\n  }\n  get label(): RdsCardLabelDirective {\n    return this._label;\n  }\n\n  override get class(): string {\n    return `rds-card rds-visual-card rds-card-layout-${this.layout}`;\n  }\n\n  @Input()\n  layout: RdsCardLayout = 'vertical';\n}\n","<div class=\"rds-card__overlay\"></div>\n<div [class.rds-card-image-container]=\"image\">\n  <ng-content select=\"[rds-card-image], [rdsCardImage]\" />\n</div>\n<div class=\"rds-card-content-container\">\n  @if (label) {\n    <rds-badge\n      [label]=\"label.getTextContent()\"\n      [color]=\"label.color\"\n      type=\"minimal\"\n      size=\"s\"\n    />\n  }\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n  <div class=\"rds-card-bottom-row\">\n    <ng-content select=\"[rds-secondary-button]\" />\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardComponent } from '../card.component';\n\n@Component({\n  selector: 'rds-story-teaser-card',\n  templateUrl: './story-teaser-card.component.html',\n  styleUrls: ['./story-teaser-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  exportAs: 'rdsStoryTeaserCard',\n})\nexport class RdsStoryTeaserCardComponent extends RdsCardComponent {\n  override get class(): string {\n    return `rds-card rds-story-teaser-card`;\n  }\n}\n","<div class=\"rds-card__overlay\"></div>\n<div class=\"rds-card-content-container\">\n  <div [class.rds-card-image-container]=\"image\">\n    <ng-content select=\"[rds-card-image], [rdsCardImage]\" />\n  </div>\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n  <div class=\"rds-card-bottom-text-container\">\n    <ng-content select=\"rds-card-bottom-text\" />\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCardComponent } from '../card.component';\n\n@Component({\n  selector: 'rds-teaser-card',\n  templateUrl: './teaser-card.component.html',\n  styleUrls: ['./teaser-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  exportAs: 'rdsTeaserCard',\n})\nexport class RdsTeaserCardComponent extends RdsCardComponent {\n  override get class(): string {\n    return `rds-card rds-card-teaser-card`;\n  }\n}\n","<div class=\"rds-card__overlay\"></div>\n<div class=\"rds-card-content-container\">\n  <ng-content select=\"rds-card-header\" />\n  <ng-content select=\"rds-card-content\" />\n  <div class=\"rds-card-bottom-row\">\n    <ng-content select=\"button\" />\n  </div>\n</div>\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-card-extra-content',\n  standalone: true,\n})\nexport class RdsCardExtraContentDirective {\n  @HostBinding('class') readonly class = 'rds-card-extra-content';\n}\n","import { NgModule } from '@angular/core';\nimport { RdsBasicCardComponent } from './basic-card/basic-card.component';\nimport { RdsDashboardCardComponent } from './dashboard-card/dashboard-card.component';\nimport { RdsStoryTeaserCardComponent } from './story-teaser-card/story-teaser-card.component';\nimport { RdsVisualCardComponent } from './visual-card/visual-card.component';\nimport { RdsTeaserCardComponent } from './teaser-card/teaser-card.component';\nimport { RdsCardBottomTextDirective } from './card-bottom-text.directive';\nimport { RdsCardContentDirective } from './card-content.directive';\nimport { RdsCardHeaderComponent } from './card-header.component';\nimport { RdsCardSelectableDirective } from './card-selectable.directive';\nimport { RdsCardTitleDirective } from './card-title.directive';\nimport { RdsCardComponent } from './card.component';\nimport { RdsCardImageDirective } from './card-image.directive';\nimport { RdsCardLabelDirective } from './card-label.directive';\nimport { RdsCardOverlineDirective } from './card-overline.directive';\nimport { RdsCardExtraContentDirective } from './card-extra-content.directive';\n\nconst ELEMENTS = [\n  RdsBasicCardComponent,\n  RdsDashboardCardComponent,\n  RdsStoryTeaserCardComponent,\n  RdsTeaserCardComponent,\n  RdsVisualCardComponent,\n  RdsCardComponent,\n  RdsCardBottomTextDirective,\n  RdsCardContentDirective,\n  RdsCardHeaderComponent,\n  RdsCardImageDirective,\n  RdsCardLabelDirective,\n  RdsCardOverlineDirective,\n  RdsCardSelectableDirective,\n  RdsCardTitleDirective,\n  RdsCardExtraContentDirective,\n];\n\n@NgModule({\n  imports: [...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsCardModule {}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  HostBinding,\n  inject,\n} from '@angular/core';\n\n@Directive({\n  selector: 'rds-carousel-item',\n})\nexport class RdsCarouselItemDirective {\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  @HostBinding('class.rds-carousel__item') private readonly class = true;\n  @HostBinding('class.rds-carousel__item--visible') private _shown = false;\n\n  _hide(): void {\n    if (this._shown) {\n      this._shown = false;\n      this.cdr.markForCheck();\n    }\n  }\n\n  _show(): void {\n    if (!this._shown) {\n      this._shown = true;\n      this.cdr.markForCheck();\n    }\n  }\n\n  isShown(): boolean {\n    return this._shown;\n  }\n}\n","import { RdsCarouselItemDirective } from './carousel-item.directive';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  HostBinding,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsCarouselActiveItemChangedEvent } from './carousel.types';\nimport { BreakpointUtil } from '../utils';\nimport { delay, takeUntil, tap } from 'rxjs/operators';\nimport { interval, Subject, timer } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst INITIAL_AUTOPLAY_DELAY = 2000;\n\n@Component({\n  selector: 'rds-carousel',\n  template: `\n    <div class=\"rds-carousel__carousel-items\">\n      <ng-content />\n    </div>\n    <div class=\"rds-carousel__carousel-pagination\">\n      @if (showButtons) {\n        <div\n          class=\"rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--left\"\n        >\n          <button\n            rds-icon-button\n            (click)=\"prev()\"\n            [size]=\"_isMobile() ? 's' : 'm'\"\n          >\n            <rds-icon namespace=\"filled\" icon=\"chevron_left\" />\n          </button>\n        </div>\n      }\n      <div class=\"rds-carousel__carousel-pagination--text\">\n        {{ indexOfActiveCarouselItem + 1 }}/{{ carouselItems.length || 0 }}\n      </div>\n      @if (showButtons) {\n        <div\n          class=\"rds-carousel__carousel-navigation-button-wrapper rds-carousel__carousel-navigation-button-wrapper--right\"\n        >\n          <button\n            rds-icon-button\n            (click)=\"next()\"\n            [size]=\"_isMobile() ? 's' : 'm'\"\n          >\n            <rds-icon namespace=\"filled\" icon=\"chevron_right\" />\n          </button>\n        </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsCarousel',\n})\nexport class RdsCarouselComponent\n  implements AfterContentInit, OnDestroy, OnChanges\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  protected indexOfActiveCarouselItem = 0;\n\n  @HostBinding('class') hostClass = 'rds-carousel';\n\n  @Input({ transform: booleanAttribute }) autoplay = false;\n  @Input({\n    transform: (v: unknown) => numberAttribute(v, INITIAL_AUTOPLAY_DELAY),\n  })\n  autoplayDelay = INITIAL_AUTOPLAY_DELAY;\n  @Input({ transform: booleanAttribute }) showButtons = false;\n\n  @ContentChildren(RdsCarouselItemDirective)\n  carouselItems: QueryList<RdsCarouselItemDirective>;\n\n  get indexOfLastElement(): number {\n    return this.carouselItems.length - 1;\n  }\n\n  private readonly destroyTimeout$ = new Subject<void>();\n\n  ngAfterContentInit(): void {\n    this.selectActiveItem();\n    this.carouselItems.changes\n      .pipe(delay(0), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.selectActiveItem());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['autoplay'] || changes['autoplayDelay']) {\n      this.defineAutoplayInterval();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyTimeout$.next();\n    this.destroyTimeout$.complete();\n  }\n\n  prev(): void {\n    this.hideCurrentVisibleCarouselItem();\n\n    let indexOfNewCarouselItemToShow = this.indexOfActiveCarouselItem - 1;\n\n    if (this.indexOfActiveCarouselItem === 0) {\n      indexOfNewCarouselItemToShow = this.indexOfLastElement;\n    }\n\n    this.indexOfActiveCarouselItem = indexOfNewCarouselItemToShow;\n\n    this.showCarouselItemMatchedWithIndexOfActive();\n    this.defineAutoplayInterval();\n  }\n\n  next(): void {\n    this.hideCurrentVisibleCarouselItem();\n\n    let indexOfNewCarouselItemToShow = this.indexOfActiveCarouselItem + 1;\n\n    if (this.indexOfActiveCarouselItem === this.indexOfLastElement) {\n      indexOfNewCarouselItemToShow = 0;\n    }\n\n    this.indexOfActiveCarouselItem = indexOfNewCarouselItemToShow;\n\n    this.showCarouselItemMatchedWithIndexOfActive();\n    this.defineAutoplayInterval();\n  }\n\n  _changeActive({ index }: RdsCarouselActiveItemChangedEvent): void {\n    this.hideCurrentVisibleCarouselItem();\n    this.indexOfActiveCarouselItem = index;\n    this.showCarouselItemMatchedWithIndexOfActive();\n  }\n\n  _isMobile(): boolean {\n    return BreakpointUtil.isMobile();\n  }\n\n  private defineAutoplayInterval(): void {\n    this.destroyTimeout$.next();\n\n    if (this.autoplay) {\n      interval(this.autoplayDelay)\n        .pipe(\n          tap(() => this.next()),\n          takeUntil(this.destroyTimeout$),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe();\n    }\n  }\n\n  private showCarouselItemMatchedWithIndexOfActive(): void {\n    const carouselItemToShow = this.carouselItems.get(\n      this.indexOfActiveCarouselItem,\n    );\n\n    if (carouselItemToShow) {\n      carouselItemToShow._show();\n      timer(0)\n        .pipe(tap(() => this.cdr.markForCheck()))\n        .subscribe();\n    }\n  }\n\n  private hideCurrentVisibleCarouselItem(): void {\n    const carouselItemToHide = this.carouselItems.get(\n      this.indexOfActiveCarouselItem,\n    );\n\n    if (carouselItemToHide) {\n      carouselItemToHide._hide();\n    }\n  }\n\n  private selectActiveItem(): void {\n    this.indexOfActiveCarouselItem = Math.max(\n      this.carouselItems.toArray().findIndex((item) => item.isShown()),\n      0,\n    );\n    this.carouselItems.forEach((item, index) => {\n      if (index !== this.indexOfActiveCarouselItem && item.isShown()) {\n        item._hide();\n      }\n    });\n    this.showCarouselItemMatchedWithIndexOfActive();\n    this.defineAutoplayInterval();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsCarouselComponent } from './carousel.component';\nimport { RdsCarouselItemDirective } from './carousel-item.directive';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\n\nconst ELEMENTS = [RdsCarouselComponent, RdsCarouselItemDirective];\n\n@NgModule({\n  imports: [CommonModule, RdsIconComponent, RdsButtonModule],\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsCarouselModule {}\n","import { inject, InjectionToken, LOCALE_ID } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { RdsCalendarView } from '../calendar.types';\n\nexport const RDS_DATE_LOCALE = new InjectionToken<string>('RDS_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: RDS_DATE_LOCALE_FACTORY,\n});\n\nexport function RDS_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\nexport type RdsDateCompareGranularity = 'year' | 'month' | 'day';\n\nexport abstract class DateAdapter<D> {\n  protected locale: string | string[] | undefined;\n  protected _localeChanges = new Subject<void>();\n  readonly localeChanges: Observable<void> = this._localeChanges;\n\n  abstract getYear(date: D): number;\n\n  abstract getMonth(date: D): number;\n\n  abstract getDate(date: D): number;\n\n  abstract getDayOfWeek(date: D): number;\n\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  abstract getDateNames(): string[];\n\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  abstract getYearName(date: D): string;\n\n  abstract getFirstDayOfWeek(): number;\n\n  abstract getNumDaysInMonth(date: D): number;\n\n  abstract clone(date: D): D;\n\n  abstract createDate(year: number, month: number, date: number): D;\n\n  abstract today(): D;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  abstract parse(value: any, parseFormat: any): D | null;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  abstract format(\n    date: D,\n    displayFormat: any,\n    availableViews?: RdsCalendarView[],\n  ): string;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  abstract placeholderFormat(\n    displayFormat: any,\n    availableViews?: RdsCalendarView[],\n  ): string;\n\n  abstract addCalendarYears(date: D, years: number): D;\n\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  abstract addCalendarDays(date: D, days: number): D;\n\n  abstract toIso8601(date: D): string;\n\n  abstract isDateInstance(obj: unknown): boolean;\n\n  abstract isValid(date: D): boolean;\n\n  abstract invalid(): D;\n\n  getValidDateOrNull(obj: unknown): D | null {\n    return this.isDateInstance(obj) && this.isValid(obj as D)\n      ? (obj as D)\n      : null;\n  }\n\n  deserialize(value: D | null): D | null {\n    if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n      return value;\n    }\n\n    return this.invalid();\n  }\n\n  setLocale(locale: string | string[] | undefined): void {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  compareDate(\n    first: D,\n    second: D,\n    granularity: RdsDateCompareGranularity = 'day',\n  ): number {\n    if (granularity === 'year') {\n      return this.getYear(first) - this.getYear(second);\n    } else if (granularity === 'month') {\n      return (\n        this.compareDate(first, second, 'year') ||\n        this.getMonth(first) - this.getMonth(second)\n      );\n    } else {\n      return (\n        this.compareDate(first, second, 'month') ||\n        this.getDate(first) - this.getDate(second)\n      );\n    }\n  }\n\n  sameDate(\n    first: D | null,\n    second: D | null,\n    granularity: RdsDateCompareGranularity = 'day',\n  ): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second, granularity);\n      }\n\n      return firstValid == secondValid;\n    }\n\n    return first == second;\n  }\n\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n\n    return date;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { InjectionToken } from '@angular/core';\n\nexport type RdsDateFormats = {\n  parse: {\n    dateInput: any;\n  };\n  display: {\n    dateInput: any;\n    monthLabel?: any;\n    monthYearLabel: any;\n    dateA11yLabel: any;\n    monthYearA11yLabel: any;\n  };\n};\n\nexport const RDS_DATE_FORMATS = new InjectionToken<RdsDateFormats>(\n  'RDS_DATE_FORMATS',\n);\n/* eslint-disable @typescript-eslint/no-explicit-any */\n","export type RdsCalendarView = 'month' | 'year' | 'multi-year';\nexport const RDS_CALENDAR_VIEW_ORDERED: RdsCalendarView[] = [\n  'month',\n  'year',\n  'multi-year',\n];\n","import { Platform } from '@angular/cdk/platform';\nimport { inject, Injectable } from '@angular/core';\nimport { DateAdapter, RDS_DATE_LOCALE } from './date-adapter';\nimport { RDS_CALENDAR_VIEW_ORDERED, RdsCalendarView } from '../calendar.types';\n\nlet SUPPORTS_INTL_API: boolean;\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\nconst DEFAULT_MONTH_NAMES = {\n  long: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  short: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ],\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n};\n\nconst DEFAULT_DATE_NAMES = range(31, (i) => String(i + 1));\n\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  long: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ],\n  short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nconst ISO_8601_REGEX =\n  /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  private readonly rdsDateLocale = inject(RDS_DATE_LOCALE, {\n    optional: true,\n  }) as string;\n  private readonly platform = inject(Platform);\n\n  private readonly _clampDate: boolean;\n  useUtcForDisplay = true;\n\n  constructor() {\n    super();\n    super.setLocale(this.rdsDateLocale);\n\n    this.useUtcForDisplay = !this.platform.TRIDENT;\n    this._clampDate = this.platform.TRIDENT || this.platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc',\n      });\n\n      return range(12, (i) =>\n        this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, i, 1)),\n        ),\n      );\n    }\n\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc',\n      });\n\n      return range(31, (i) =>\n        this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1)),\n        ),\n      );\n    }\n\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc',\n      });\n\n      return range(7, (i) =>\n        this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1)),\n        ),\n      );\n    }\n\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc',\n      });\n\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(\n      this._createDateWithOverflow(\n        this.getYear(date),\n        this.getMonth(date) + 1,\n        0,\n      ),\n    );\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    if (month < 0 || month > 11) {\n      throw Error(\n        `Invalid month index \"${month}\". Month index has to be between 0 and 11.`,\n      );\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = this._createDateWithOverflow(year, month, date);\n\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  parse(value: any): Date | null {\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n\n    return value ? new Date(Date.parse(value as unknown as string)) : null;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  format(\n    date: Date,\n    displayFormat: any,\n    availableViews: RdsCalendarView[] = RDS_CALENDAR_VIEW_ORDERED,\n  ): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      if (\n        this._clampDate &&\n        (date.getFullYear() < 1 || date.getFullYear() > 9999)\n      ) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = { ...displayFormat, timeZone: 'utc' };\n\n      if (!availableViews.includes('multi-year')) {\n        displayFormat.year = undefined;\n      }\n\n      if (!availableViews.includes('year')) {\n        displayFormat.month = undefined;\n      }\n\n      if (!availableViews.includes('month')) {\n        displayFormat.day = undefined;\n      }\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  placeholderFormat(\n    displayFormat: any,\n    availableViews: RdsCalendarView[] = RDS_CALENDAR_VIEW_ORDERED,\n  ): string {\n    if (SUPPORTS_INTL_API) {\n      const dateFormat = new Intl.DateTimeFormat(this.locale, displayFormat);\n      const resolvedOptions = dateFormat.resolvedOptions();\n\n      let year = '';\n\n      if (availableViews.includes('multi-year')) {\n        switch (resolvedOptions.year) {\n          case 'numeric': {\n            year = 'YYYY';\n            break;\n          }\n\n          case '2-digit': {\n            year = 'YY';\n            break;\n          }\n        }\n      }\n\n      let month = '';\n\n      if (availableViews.includes('year')) {\n        switch (resolvedOptions.month) {\n          case '2-digit':\n\n          // eslint-disable-next-line no-fallthrough\n          case 'numeric': {\n            month = 'MM';\n            break;\n          }\n\n          case 'short': {\n            month = 'MMM';\n            break;\n          }\n\n          case 'long': {\n            month = 'MMMM';\n            break;\n          }\n        }\n      }\n\n      let day = '';\n\n      if (availableViews.includes('month')) {\n        switch (resolvedOptions.day) {\n          case '2-digit':\n\n          // eslint-disable-next-line no-fallthrough\n          case 'numeric': {\n            day = 'DD';\n            break;\n          }\n        }\n      }\n\n      const parts = dateFormat.formatToParts();\n\n      return parts\n        .map((p) => {\n          switch (p.type) {\n            case 'day':\n              return day;\n            case 'month':\n              return month;\n            case 'year':\n              return year;\n            default:\n              return p.value;\n          }\n        })\n        .join('')\n        .trim();\n    } else {\n      return '';\n    }\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date) + months,\n      this.getDate(date),\n    );\n\n    if (\n      this.getMonth(newDate) !=\n      (((this.getMonth(date) + months) % 12) + 12) % 12\n    ) {\n      newDate = this._createDateWithOverflow(\n        this.getYear(newDate),\n        this.getMonth(newDate),\n        0,\n      );\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date),\n      this.getMonth(date),\n      this.getDate(date) + days,\n    );\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate()),\n    ].join('-');\n  }\n\n  override deserialize(value: Date | string | null): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n\n      if (ISO_8601_REGEX.test(value)) {\n        const date = new Date(value);\n\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n\n    return super.deserialize(value as Date | null);\n  }\n\n  isDateInstance(obj: unknown): boolean {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date): boolean {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  private _createDateWithOverflow(\n    year: number,\n    month: number,\n    date: number,\n  ): Date {\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n\n    return d;\n  }\n\n  private _2digit(n: number): string {\n    return ('00' + n).slice(-2);\n  }\n\n  private _stripDirectionalityCharacters(str: string): string {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  private _format(dtf: Intl.DateTimeFormat, date: Date): string {\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    );\n\n    return dtf.format(d);\n  }\n}\n","import { RdsDateFormats } from './date-formats';\n\nexport const RDS_NATIVE_DATE_FORMATS: RdsDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    },\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  },\n};\n\nexport const RDS_NATIVE_LOCALE_DATE_FORMATS: RdsDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {},\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  },\n};\n","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { DateAdapter } from './date-adapter';\nimport { NativeDateAdapter } from './native-date-adapter';\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    { provide: DateAdapter, useClass: NativeDateAdapter },\n    { provide: LOCALE_ID, useValue: 'en-GB' },\n  ],\n})\nexport class NativeDateModule {}\n","import { NgModule } from '@angular/core';\nimport { RDS_DATE_FORMATS } from './date-formats';\nimport { RDS_NATIVE_DATE_FORMATS } from './native-date-formats';\nimport { NativeDateModule } from './native-date.module';\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{ provide: RDS_DATE_FORMATS, useValue: RDS_NATIVE_DATE_FORMATS }],\n})\nexport class RdsNativeDateModule {}\n","export function createMissingDateImplError(provider: string): Error {\n  return Error(\n    `RdsDatepicker: No provider found for ${provider}. You must import RdsNativeDateModule` +\n      `, or provide a custom implementation.`,\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RdsDatepickerIntl {\n  readonly changes: Subject<void> = new Subject<void>();\n\n  calendarLabel = 'Calendar';\n  openCalendarLabel = 'Open calendar';\n  closeCalendarLabel = 'Close calendar';\n  prevMonthLabel = 'Previous month';\n  nextMonthLabel = 'Next month';\n  prevYearLabel = 'Previous year';\n  nextYearLabel = 'Next year';\n  prevMultiYearLabel = 'Previous 20 years';\n  nextMultiYearLabel = 'Next 20 years';\n  switchToMonthViewLabel = 'Choose date';\n  switchToMultiYearViewLabel = 'Choose month and year';\n  monthLabel = 'Weekly';\n  yearLabel = 'Monthly';\n  multiYearLabel = 'Yearly';\n\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { RdsCalendarView } from './calendar.types';\n\nexport type RdsCalendarCellCssClasses =\n  | string\n  | string[]\n  | Set<string>\n  | { [key: string]: unknown };\n\nexport type RdsCalendarCellClassFunction<D> = (\n  date: D,\n  view: RdsCalendarView,\n) => RdsCalendarCellCssClasses;\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport class RdsCalendarCell<D = any> {\n  constructor(\n    public value: number,\n    public displayValue: string,\n    public ariaLabel: string,\n    public enabled: boolean,\n    public cssClasses: RdsCalendarCellCssClasses = {},\n    public rawValue: D,\n    public compareValue = value,\n  ) {}\n}\n\nexport interface RdsCalendarUserEvent<D> {\n  value: D;\n  event: Event;\n}\n\n@Component({\n  selector: '[rdsCalendarBody], [rds-calendar-body]',\n  templateUrl: './calendar-body.component.html',\n  styleUrls: ['./calendar-body.component.scss'],\n  exportAs: 'rdsCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsCalendarBodyComponent<D> implements OnChanges, OnDestroy {\n  private readonly elementRef = inject(ElementRef);\n  private readonly ngZone = inject(NgZone);\n\n  private _skipNextFocus: boolean | null = null;\n\n  @HostBinding('class') class = 'rds-calendar-body';\n  @HostBinding('attr.role') role = 'grid';\n  @HostBinding('attr.aria-readonly') ariaReadonly = 'true';\n\n  @Input() label: string | null = null;\n  @Input() rows: RdsCalendarCell<D>[][] | null = null;\n  @Input() todayValue: number | null = null;\n  @Input() startValue: number | null = null;\n  @Input() endValue: number | null = null;\n  @Input() labelMinRequiredCells: number | null = null;\n  @Input() numCols = 7;\n  @Input() activeCell: RdsCalendarCell<D> | null = null;\n  @Input({ transform: booleanAttribute }) isRange = false;\n  @Input() cellAspectRatio = 1;\n  @Input() comparisonStart: number | null = null;\n  @Input() comparisonEnd: number | null = null;\n  @Input() previewStart: number | null = null;\n  @Input() previewEnd: number | null = null;\n\n  @Output() readonly selectedValueChange = new EventEmitter<\n    RdsCalendarUserEvent<RdsCalendarCell<D>>\n  >();\n\n  @Output() previewChange = new EventEmitter<\n    RdsCalendarUserEvent<RdsCalendarCell<D> | null>\n  >();\n\n  _firstRowOffset: number | null = null;\n  _cellPadding: string | null = null;\n  _cellWidth: string | null = null;\n\n  constructor() {\n    this.ngZone.runOutsideAngular(() => {\n      const element = this.elementRef.nativeElement;\n      element.addEventListener('mouseenter', this._enterHandler, true);\n      element.addEventListener('focus', this._enterHandler, true);\n      element.addEventListener('mouseleave', this._leaveHandler, true);\n      element.addEventListener('blur', this._leaveHandler, true);\n    });\n  }\n\n  _cellClicked(cell: RdsCalendarCell<D>, event: MouseEvent): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit({ value: cell, event });\n    }\n  }\n\n  _isSelected(value: number): boolean {\n    return this.startValue === value || this.endValue === value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const columnChanges = changes['numCols'];\n    const { rows, numCols } = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset =\n        rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  ngOnDestroy(): void {\n    const element = this.elementRef.nativeElement;\n    element.removeEventListener('mouseenter', this._enterHandler, true);\n    element.removeEventListener('focus', this._enterHandler, true);\n    element.removeEventListener('mouseleave', this._leaveHandler, true);\n    element.removeEventListener('blur', this._leaveHandler, true);\n  }\n\n  _isActiveCell(item: RdsCalendarCell<D>): boolean {\n    return this.activeCell === item;\n  }\n\n  _focusActiveCell(movePreview = true): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n          this.elementRef.nativeElement.querySelector(\n            '.rds-calendar-body-active',\n          );\n\n        if (activeCell) {\n          if (!movePreview) {\n            this._skipNextFocus = true;\n          }\n\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n  _isRangeStart(value: number): boolean {\n    return isStart(value, this.startValue, this.endValue);\n  }\n\n  _isRangeEnd(value: number): boolean {\n    return isEnd(value, this.startValue, this.endValue);\n  }\n\n  _isInRange(value: number): boolean {\n    return isInRange(value, this.startValue, this.endValue, this.isRange);\n  }\n\n  _isComparisonStart(value: number): boolean {\n    return isStart(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  _isComparisonBridgeStart(\n    value: number,\n    rowIndex: number,\n    colIndex: number,\n  ): boolean {\n    if (\n      !this._isComparisonStart(value) ||\n      this._isRangeStart(value) ||\n      !this._isInRange(value)\n    ) {\n      return false;\n    }\n\n    let previousCell: RdsCalendarCell<D> | null = this.rows\n      ? this.rows[rowIndex][colIndex - 1]\n      : null;\n\n    if (!previousCell && this.rows) {\n      const previousRow = this.rows[rowIndex - 1];\n      previousCell = previousRow && previousRow[previousRow.length - 1];\n    }\n\n    return previousCell ? !this._isRangeEnd(previousCell.compareValue) : false;\n  }\n\n  _isComparisonBridgeEnd(\n    value: number,\n    rowIndex: number,\n    colIndex: number,\n  ): boolean {\n    if (\n      !this._isComparisonEnd(value) ||\n      this._isRangeEnd(value) ||\n      !this._isInRange(value)\n    ) {\n      return false;\n    }\n\n    let nextCell: RdsCalendarCell<D> | null = this.rows\n      ? this.rows[rowIndex][colIndex + 1]\n      : null;\n\n    if (!nextCell && this.rows) {\n      const nextRow = this.rows[rowIndex + 1];\n      nextCell = nextRow && nextRow[0];\n    }\n\n    return nextCell ? !this._isRangeStart(nextCell.compareValue) : false;\n  }\n\n  _isComparisonEnd(value: number): boolean {\n    return isEnd(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  _isInComparisonRange(value: number): boolean {\n    return isInRange(\n      value,\n      this.comparisonStart,\n      this.comparisonEnd,\n      this.isRange,\n    );\n  }\n\n  _isComparisonIdentical(value: number): boolean {\n    return (\n      this.comparisonStart === this.comparisonEnd &&\n      value === this.comparisonStart\n    );\n  }\n\n  _isPreviewStart(value: number): boolean {\n    return isStart(value, this.previewStart, this.previewEnd);\n  }\n\n  _isPreviewEnd(value: number): boolean {\n    return isEnd(value, this.previewStart, this.previewEnd);\n  }\n\n  _isInPreview(value: number): boolean {\n    return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n  }\n\n  private _enterHandler = (event: Event): void => {\n    if (this._skipNextFocus && event.type === 'focus') {\n      this._skipNextFocus = false;\n\n      return;\n    }\n\n    if (event.target && this.isRange) {\n      const cell = this._getCellFromElement(event.target as HTMLElement);\n\n      if (cell) {\n        this.ngZone.run(() =>\n          this.previewChange.emit({ value: cell.enabled ? cell : null, event }),\n        );\n      }\n    }\n  };\n\n  private _leaveHandler = (event: Event): void => {\n    if (this.previewEnd !== null && this.isRange) {\n      if (event.target && isTableCell(event.target as HTMLElement)) {\n        this.ngZone.run(() => this.previewChange.emit({ value: null, event }));\n      }\n    }\n  };\n\n  private _getCellFromElement(element: HTMLElement): RdsCalendarCell<D> | null {\n    let cell: HTMLElement | undefined;\n\n    if (isTableCell(element)) {\n      cell = element;\n    } else if (isTableCell(element.parentNode as Node)) {\n      cell = element.parentNode as HTMLElement;\n    }\n\n    if (cell) {\n      const row = cell.getAttribute('data-rds-row');\n      const col = cell.getAttribute('data-rds-col');\n\n      if (row && col && this.rows) {\n        return this.rows[parseInt(row)][parseInt(col)];\n      }\n    }\n\n    return null;\n  }\n}\n\nfunction isTableCell(node: Node): node is HTMLTableCellElement {\n  return node.nodeName === 'TD';\n}\n\nfunction isStart(\n  value: number,\n  start: number | null,\n  end: number | null,\n): boolean {\n  return end !== null && start !== end && value < end && value === start;\n}\n\nfunction isEnd(\n  value: number,\n  start: number | null,\n  end: number | null,\n): boolean {\n  return start !== null && start !== end && value >= start && value === end;\n}\n\nfunction isInRange(\n  value: number,\n  start: number | null,\n  end: number | null,\n  rangeEnabled: boolean,\n): boolean {\n  return (\n    rangeEnabled &&\n    start !== null &&\n    end !== null &&\n    start !== end &&\n    value >= start &&\n    value <= end\n  );\n}\n","@for (row of rows; track row; let rowIndex = $index) {\n  <tr role=\"row\">\n    @if (rowIndex === 0 && _firstRowOffset) {\n      <td\n        aria-hidden=\"true\"\n        class=\"rds-calendar-body-label\"\n        [attr.colspan]=\"_firstRowOffset\"\n        [style.paddingTop]=\"_cellPadding\"\n        [style.paddingBottom]=\"_cellPadding\"\n      ></td>\n    }\n    @for (item of row; track item; let colIndex = $index) {\n      <td\n        role=\"gridcell\"\n        class=\"rds-calendar-body-cell\"\n        [ngClass]=\"item.cssClasses\"\n        [tabindex]=\"_isActiveCell(item) ? 0 : -1\"\n        [attr.data-rds-row]=\"rowIndex\"\n        [attr.data-rds-col]=\"colIndex\"\n        [class.rds-calendar-body-disabled]=\"!item.enabled\"\n        [class.rds-calendar-body-active]=\"_isActiveCell(item)\"\n        [class.rds-calendar-body-range-start]=\"_isRangeStart(item.compareValue)\"\n        [class.rds-calendar-body-range-end]=\"_isRangeEnd(item.compareValue)\"\n        [class.rds-calendar-body-in-range]=\"_isInRange(item.compareValue)\"\n        [class.rds-calendar-body-comparison-bridge-start]=\"\n          _isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\n        \"\n        [class.rds-calendar-body-comparison-bridge-end]=\"\n          _isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\n        \"\n        [class.rds-calendar-body-comparison-start]=\"\n          _isComparisonStart(item.compareValue)\n        \"\n        [class.rds-calendar-body-comparison-end]=\"\n          _isComparisonEnd(item.compareValue)\n        \"\n        [class.rds-calendar-body-in-comparison-range]=\"\n          _isInComparisonRange(item.compareValue)\n        \"\n        [class.rds-calendar-body-preview-start]=\"\n          _isPreviewStart(item.compareValue)\n        \"\n        [class.rds-calendar-body-preview-end]=\"_isPreviewEnd(item.compareValue)\"\n        [class.rds-calendar-body-in-preview]=\"_isInPreview(item.compareValue)\"\n        [attr.aria-label]=\"item.ariaLabel\"\n        [attr.aria-disabled]=\"!item.enabled || null\"\n        [attr.aria-selected]=\"_isSelected(item.compareValue)\"\n        (click)=\"_cellClicked(item, $event)\"\n        [style.paddingTop]=\"_cellPadding\"\n        [style.paddingBottom]=\"_cellPadding\"\n      >\n        <div\n          class=\"rds-calendar-body-cell-content rds-focus-indicator\"\n          [class.rds-calendar-body-cell-content-disabled]=\"!item.enabled\"\n          [class.rds-calendar-body-selected]=\"_isSelected(item.compareValue)\"\n          [class.rds-calendar-body-comparison-identical]=\"\n            _isComparisonIdentical(item.compareValue)\n          \"\n          [class.rds-calendar-body-today]=\"todayValue === item.compareValue\"\n        >\n          {{ item.displayValue }}\n        </div>\n        <div class=\"rds-calendar-body-cell-preview\"></div>\n      </td>\n    }\n  </tr>\n}\n","import {\n  FactoryProvider,\n  Injectable,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { DateAdapter } from './adapter';\nimport { Observable, Subject } from 'rxjs';\n\nexport class DateRange<D> {\n  private _disableStructuralEquivalency: never;\n\n  constructor(\n    readonly start: D | null,\n    readonly end: D | null,\n  ) {}\n}\n\nexport type ExtractDateTypeFromSelection<T> =\n  T extends DateRange<infer D> ? D : NonNullable<T>;\n\nexport interface DateSelectionModelChange<S> {\n  selection: S;\n  source: unknown;\n  oldValue?: S;\n}\n\n@Injectable()\nexport abstract class RdsDateSelectionModel<\n  S,\n  D = ExtractDateTypeFromSelection<S>,\n> implements OnDestroy\n{\n  private _selectionChanged = new Subject<DateSelectionModelChange<S>>();\n  public selection: S | null = null;\n\n  selectionChanged: Observable<DateSelectionModelChange<S>> =\n    this._selectionChanged;\n\n  protected constructor(protected readonly _dateAdapter: DateAdapter<D>) {}\n\n  updateSelection(value: S, source: unknown): void {\n    const oldValue = this.selection;\n    this.selection = value;\n    this._selectionChanged.next({\n      selection: value,\n      source,\n      oldValue: oldValue as S,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._selectionChanged.complete();\n  }\n\n  protected _isValidDateInstance(date: D): boolean {\n    return (\n      this._dateAdapter.isDateInstance(date) && this._dateAdapter.isValid(date)\n    );\n  }\n\n  abstract add(date: D | null): void;\n\n  abstract isValid(): boolean;\n\n  abstract isComplete(): boolean;\n\n  abstract clone(): RdsDateSelectionModel<S, D>;\n}\n\n@Injectable()\nexport class RdsSingleDateSelectionModel<D> extends RdsDateSelectionModel<\n  D | null,\n  D\n> {\n  constructor(adapter: DateAdapter<D>) {\n    super(adapter);\n    this.selection = null;\n  }\n\n  add(date: D | null): void {\n    super.updateSelection(date, this);\n  }\n\n  isValid(): boolean {\n    return this.selection != null && this._isValidDateInstance(this.selection);\n  }\n\n  isComplete(): boolean {\n    return this.selection != null;\n  }\n\n  clone(): RdsDateSelectionModel<D | null, D> {\n    const clone = new RdsSingleDateSelectionModel<D>(this._dateAdapter);\n    clone.updateSelection(this.selection, this);\n\n    return clone;\n  }\n}\n\n@Injectable()\nexport class RdsRangeDateSelectionModel<D> extends RdsDateSelectionModel<\n  DateRange<D>,\n  D\n> {\n  public override selection: DateRange<D>;\n\n  constructor(dateAdapter: DateAdapter<D>) {\n    super(dateAdapter);\n    this.selection = new DateRange<D>(null, null);\n  }\n\n  add(date: D | null): void {\n    let { start, end } = this.selection;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    super.updateSelection(new DateRange<D>(start, end), this);\n  }\n\n  isValid(): boolean {\n    const { start, end } = this.selection;\n\n    // Empty ranges are valid.\n    if (start == null && end == null) {\n      return true;\n    }\n\n    // Complete ranges are only valid if both dates are valid and the start is before the end.\n    if (start != null && end != null) {\n      return (\n        this._isValidDateInstance(start) &&\n        this._isValidDateInstance(end) &&\n        this._dateAdapter.compareDate(start, end) <= 0\n      );\n    }\n\n    // Partial ranges are valid if the start/end is valid.\n    return (\n      (start == null || this._isValidDateInstance(start)) &&\n      (end == null || this._isValidDateInstance(end))\n    );\n  }\n\n  isComplete(): boolean {\n    return this.selection.start != null && this.selection.end != null;\n  }\n\n  clone(): RdsRangeDateSelectionModel<D> {\n    const clone = new RdsRangeDateSelectionModel<D>(this._dateAdapter);\n    clone.updateSelection(this.selection, this);\n\n    return clone;\n  }\n}\n\nexport function RDS_SINGLE_DATE_SELECTION_MODEL_FACTORY(\n  parent: RdsSingleDateSelectionModel<unknown>,\n  dateAdapter: DateAdapter<unknown>,\n): RdsSingleDateSelectionModel<unknown> {\n  return parent || new RdsSingleDateSelectionModel(dateAdapter);\n}\n\nexport const RDS_SINGLE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: RdsDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), RdsDateSelectionModel], DateAdapter],\n  useFactory: RDS_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n\nexport function RDS_RANGE_DATE_SELECTION_MODEL_FACTORY(\n  parent: RdsSingleDateSelectionModel<unknown>,\n  dateAdapter: DateAdapter<unknown>,\n): RdsSingleDateSelectionModel<unknown> {\n  return parent || new RdsRangeDateSelectionModel(dateAdapter);\n}\n\nexport const RDS_RANGE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: RdsDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), RdsDateSelectionModel], DateAdapter],\n  useFactory: RDS_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n","import {\n  FactoryProvider,\n  inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { DateAdapter } from './adapter';\nimport { DateRange } from './date-selection.model';\n\nexport const RDS_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken<\n  RdsDateRangeSelectionStrategy<unknown>\n>('RDS_DATE_RANGE_SELECTION_STRATEGY');\n\nexport interface RdsDateRangeSelectionStrategy<D> {\n  selectionFinished(\n    date: D | null,\n    currentRange: DateRange<D>,\n    event: Event,\n  ): DateRange<D>;\n\n  createPreview(\n    activeDate: D | null,\n    currentRange: DateRange<D>,\n    event: Event,\n  ): DateRange<D>;\n}\n\n@Injectable()\nexport class DefaultRdsCalendarRangeStrategy<D>\n  implements RdsDateRangeSelectionStrategy<D>\n{\n  protected readonly dateAdapter = inject<DateAdapter<D>>(DateAdapter);\n\n  selectionFinished(date: D, currentRange: DateRange<D>): DateRange<D> {\n    let { start, end } = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (\n      end == null &&\n      date &&\n      this.dateAdapter.compareDate(date, start) >= 0\n    ) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n\n  createPreview(\n    activeDate: D | null,\n    currentRange: DateRange<D>,\n  ): DateRange<D> {\n    let start: D | null = null;\n    let end: D | null = null;\n\n    if (currentRange.start && !currentRange.end && activeDate) {\n      start = currentRange.start;\n      end = activeDate;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n}\n\nexport function RDS_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(\n  parent: RdsDateRangeSelectionStrategy<unknown>,\n): RdsDateRangeSelectionStrategy<unknown> {\n  return parent || new DefaultRdsCalendarRangeStrategy();\n}\n\nexport const RDS_CALENDAR_RANGE_STRATEGY_PROVIDER: FactoryProvider = {\n  provide: RDS_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [\n    [new Optional(), new SkipSelf(), RDS_DATE_RANGE_SELECTION_STRATEGY],\n    DateAdapter,\n  ],\n  useFactory: RDS_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n","import {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  ESCAPE,\n  hasModifierKey,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter, RDS_DATE_FORMATS, RdsDateFormats } from './adapter';\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n  RdsCalendarBodyComponent,\n  RdsCalendarCell,\n  RdsCalendarCellClassFunction,\n  RdsCalendarCellCssClasses,\n  RdsCalendarUserEvent,\n} from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { DateRange } from './date-selection.model';\nimport {\n  RDS_DATE_RANGE_SELECTION_STRATEGY,\n  RdsDateRangeSelectionStrategy,\n} from './date-range-selection.strategy';\n\nconst DAYS_PER_WEEK = 7;\n\n@Component({\n  selector: 'rds-month-view',\n  templateUrl: './month-view.component.html',\n  exportAs: 'rdsMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsMonthViewComponent<D>\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly dateFormats = inject(RDS_DATE_FORMATS, {\n    optional: true,\n  }) as RdsDateFormats;\n  private readonly dateAdapter = inject(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly dir = inject(Directionality, { optional: true });\n  private readonly rangeStrategy = inject<RdsDateRangeSelectionStrategy<D>>(\n    RDS_DATE_RANGE_SELECTION_STRATEGY,\n    { optional: true },\n  );\n\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n      this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      ) || this.dateAdapter.today();\n    this._activeDate = this.dateAdapter.clampDate(\n      validDate,\n      this.minDate,\n      this.maxDate,\n    );\n\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n\n  private _activeDate: D;\n\n  @Input()\n  get selected(): DateRange<D> | D | null {\n    return this._selected;\n  }\n\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      );\n    }\n\n    this._setRanges(this._selected);\n  }\n\n  private _selected: DateRange<D> | D | null = null;\n\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _minDate: D | null = null;\n\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _maxDate: D | null = null;\n\n  @Input() dateFilter: ((date: D) => boolean) | null = null;\n  @Input() dateClass: RdsCalendarCellClassFunction<D> | null = null;\n  @Input() comparisonStart: D | null = null;\n  @Input() comparisonEnd: D | null = null;\n\n  @Output() readonly selectedChange = new EventEmitter<D | null>();\n  @Output() readonly _userSelection = new EventEmitter<\n    RdsCalendarUserEvent<D | null>\n  >();\n  @Output() readonly activeDateChange = new EventEmitter<D>();\n\n  @ViewChild(RdsCalendarBodyComponent)\n  _rdsCalendarBody: RdsCalendarBodyComponent<D> | null = null;\n\n  _monthLabel: string | null = null;\n  _weeks: RdsCalendarCell<D>[][] | null = null;\n  _firstWeekOffset: number | null = null;\n  _rangeStart: number | null = null;\n  _rangeEnd: number | null = null;\n  _comparisonRangeStart: number | null = null;\n  _comparisonRangeEnd: number | null = null;\n  _previewStart: number | null = null;\n  _previewEnd: number | null = null;\n  _isRange = false;\n  _todayDate: number | null = null;\n  _weekdays: { long: string; narrow: string }[] | null = null;\n\n  constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this.dateFormats && isDevMode()) {\n      throw createMissingDateImplError('RDS_DATE_FORMATS');\n    }\n\n    this._activeDate = this.dateAdapter.today();\n  }\n\n  ngAfterContentInit(): void {\n    this._rerenderSubscription = this.dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const comparisonChange =\n      changes['comparisonStart'] || changes['comparisonEnd'];\n\n    if (comparisonChange && !comparisonChange.firstChange) {\n      this._setRanges(this.selected);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  _onDateSelected(event: RdsCalendarUserEvent<RdsCalendarCell<D>>): void {\n    this._dateSelected({\n      value: this.dateAdapter.clone(event.value.rawValue),\n      event: event.event,\n    });\n  }\n\n  _dateSelected(event: RdsCalendarUserEvent<D>): void {\n    let rangeStartDate: D | null;\n    let rangeEndDate: D | null;\n\n    if (this._selected instanceof DateRange) {\n      rangeStartDate = this._selected.start;\n      rangeEndDate = this._selected.end;\n    } else {\n      rangeStartDate = rangeEndDate = this._selected;\n    }\n\n    if (\n      !this.dateAdapter.sameDate(rangeStartDate, event.value) ||\n      !this.dateAdapter.sameDate(rangeEndDate, event.value)\n    ) {\n      this.selectedChange.emit(event.value);\n    }\n\n    this._userSelection.emit({ value: event.value, event: event.event });\n    this._previewStart = this._previewEnd = null;\n    this.cdr.markForCheck();\n  }\n\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarDays(\n          this._activeDate,\n          isRtl ? 1 : -1,\n        );\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarDays(\n          this._activeDate,\n          isRtl ? -1 : 1,\n        );\n        break;\n      case UP_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarDays(\n          this._activeDate,\n          -7,\n        );\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this.dateAdapter.addCalendarDays(\n          this._activeDate,\n          1 - this.dateAdapter.getDate(this._activeDate),\n        );\n        break;\n      case END:\n        this.activeDate = this.dateAdapter.addCalendarDays(\n          this._activeDate,\n          this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n            this.dateAdapter.getDate(this._activeDate),\n        );\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey\n          ? this.dateAdapter.addCalendarYears(this._activeDate, -1)\n          : this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey\n          ? this.dateAdapter.addCalendarYears(this._activeDate, 1)\n          : this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected({\n            value: this.dateAdapter.createDate(\n              this.dateAdapter.getYear(this._activeDate),\n              this.dateAdapter.getMonth(this._activeDate),\n              this.dateAdapter.getDate(this._activeDate),\n            ),\n            event,\n          });\n          event.preventDefault();\n        }\n\n        return;\n      case ESCAPE:\n        if (this._previewEnd != null && !hasModifierKey(event)) {\n          this._previewStart = this._previewEnd = null;\n          this.selectedChange.emit(null);\n          this._userSelection.emit({ value: null, event });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        return;\n      default:\n        return;\n    }\n\n    if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    event.preventDefault();\n  }\n\n  _init(): void {\n    this._setRanges(this.selected);\n    this._todayDate = this._getCellCompareValue(this.dateAdapter.today());\n    this._monthLabel = this.dateFormats.display.monthLabel\n      ? this.dateAdapter.format(\n          this.activeDate,\n          this.dateFormats.display.monthLabel,\n        )\n      : this.dateAdapter\n          .getMonthNames('short')\n          [this.dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n\n    const firstOfMonth = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(this.activeDate),\n      this.dateAdapter.getMonth(this.activeDate),\n      1,\n    );\n    this._firstWeekOffset =\n      (DAYS_PER_WEEK +\n        this.dateAdapter.getDayOfWeek(firstOfMonth) -\n        this.dateAdapter.getFirstDayOfWeek()) %\n      DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this.cdr.markForCheck();\n  }\n\n  _focusActiveCell(movePreview?: boolean): void {\n    this._rdsCalendarBody?._focusActiveCell(movePreview);\n  }\n\n  _previewChanged({\n    event,\n    value: cell,\n  }: RdsCalendarUserEvent<RdsCalendarCell<D> | null>): void {\n    if (this.rangeStrategy) {\n      const value = cell && cell.rawValue ? cell.rawValue : null;\n      const previewRange = this.rangeStrategy.createPreview(\n        value,\n        this.selected as DateRange<D>,\n        event,\n      );\n      this._previewStart = this._getCellCompareValue(previewRange.start);\n      this._previewEnd = this._getCellCompareValue(previewRange.end);\n      this.cdr.detectChanges();\n    }\n  }\n\n  _getActiveCell(): RdsCalendarCell<D> | null {\n    if (this._weeks) {\n      for (let i = 0; i < this._weeks.length; i++) {\n        for (let j = 0; j < this._weeks[i].length; j++) {\n          const cell = this._weeks[i][j];\n\n          if (\n            cell &&\n            this.dateAdapter.sameDate(cell.rawValue, this.activeDate)\n          ) {\n            return cell;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  private _initWeekdays(): void {\n    const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n    const weekdays = longWeekdays.map((long, i) => {\n      return { long, narrow: narrowWeekdays[i] };\n    });\n    this._weekdays = weekdays\n      .slice(firstDayOfWeek)\n      .concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  private _createWeekCells(): void {\n    const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this.dateAdapter.getDateNames();\n    this._weeks = [[]];\n\n    // previous month\n    for (let i = this._firstWeekOffset || 0; i > 0; i--) {\n      const date = this._getPreviousMonthDate(i - 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this.dateAdapter.format(\n        date,\n        this.dateFormats.display.dateA11yLabel,\n      );\n      const cellClasses = this._getClasses(date, [\n        'rds-calendar-body-cell-prev-month',\n      ]);\n\n      this._weeks[this._weeks.length - 1].push(\n        new RdsCalendarCell<D>(\n          this.dateAdapter.getDate(date),\n          dateNames[this.dateAdapter.getDate(date) - 1],\n          ariaLabel,\n          enabled,\n          cellClasses,\n          date,\n          this._getCellCompareValue(date) as number,\n        ),\n      );\n    }\n\n    // current month\n    for (\n      let i = 0, cell = this._firstWeekOffset || 0;\n      i < daysInMonth;\n      i++, cell++\n    ) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n\n      const date = this._getCurrentMonthDate(i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this.dateAdapter.format(\n        date,\n        this.dateFormats.display.dateA11yLabel,\n      );\n      const cellClasses = this._getClasses(date);\n\n      this._weeks[this._weeks.length - 1].push(\n        new RdsCalendarCell<D>(\n          i + 1,\n          dateNames[i],\n          ariaLabel,\n          enabled,\n          cellClasses,\n          date,\n          this._getCellCompareValue(date) as number,\n        ),\n      );\n    }\n\n    // next month\n    const nextMonthDays =\n      DAYS_PER_WEEK -\n      this._weeks[this._weeks.length - 1].length +\n      (this._weeks.length < 6 ? DAYS_PER_WEEK : 0);\n\n    for (let i = 0; i < nextMonthDays; i++) {\n      if (this._weeks[this._weeks.length - 1].length == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n      }\n\n      const date = this._getNextMonthDate(i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this.dateAdapter.format(\n        date,\n        this.dateFormats.display.dateA11yLabel,\n      );\n      const cellClasses = this._getClasses(date, [\n        'rds-calendar-body-cell-next-month',\n      ]);\n\n      this._weeks[this._weeks.length - 1].push(\n        new RdsCalendarCell<D>(\n          this.dateAdapter.getDate(date),\n          dateNames[this.dateAdapter.getDate(date) - 1],\n          ariaLabel,\n          enabled,\n          cellClasses,\n          date,\n          this._getCellCompareValue(date) as number,\n        ),\n      );\n    }\n  }\n\n  private _shouldEnableDate(date: D): boolean {\n    return (\n      !!date &&\n      (!this.minDate ||\n        this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n      (!this.maxDate ||\n        this.dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n      (!this.dateFilter || this.dateFilter(date))\n    );\n  }\n\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(\n      d1 &&\n      d2 &&\n      this.dateAdapter.getMonth(d1) == this.dateAdapter.getMonth(d2) &&\n      this.dateAdapter.getYear(d1) == this.dateAdapter.getYear(d2)\n    );\n  }\n\n  private _getCellCompareValue(date: D | null): number | null {\n    if (date) {\n      const year = this.dateAdapter.getYear(date);\n      const month = this.dateAdapter.getMonth(date);\n      const day = this.dateAdapter.getDate(date);\n\n      return new Date(year, month, day).getTime();\n    }\n\n    return null;\n  }\n\n  private _isRtl(): boolean {\n    return !!(this.dir && this.dir.value === 'rtl');\n  }\n\n  private _setRanges(selectedValue: DateRange<D> | D | null): void {\n    if (selectedValue instanceof DateRange) {\n      this._rangeStart = this._getCellCompareValue(selectedValue.start);\n      this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n      this._isRange = true;\n    } else {\n      this._rangeStart = this._rangeEnd =\n        this._getCellCompareValue(selectedValue);\n      this._isRange = false;\n    }\n\n    this._comparisonRangeStart = this._getCellCompareValue(\n      this.comparisonStart,\n    );\n    this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n  }\n\n  private _getCurrentMonthDate(day: number): D {\n    return this.dateAdapter.createDate(\n      this.dateAdapter.getYear(this.activeDate),\n      this.dateAdapter.getMonth(this.activeDate),\n      day,\n    );\n  }\n\n  private _getPreviousMonthDate(minusDays: number): D {\n    let year = this.dateAdapter.getYear(this.activeDate);\n    let month = this.dateAdapter.getMonth(this.activeDate);\n\n    if (month - 1 === -1) {\n      year--;\n      month = 11;\n    } else {\n      month--;\n    }\n\n    const day =\n      this.dateAdapter.getNumDaysInMonth(\n        this.dateAdapter.createDate(year, month, 1),\n      ) - minusDays;\n\n    return this.dateAdapter.createDate(year, month, day);\n  }\n\n  private _getNextMonthDate(day: number): D {\n    let year = this.dateAdapter.getYear(this.activeDate);\n    let month = this.dateAdapter.getMonth(this.activeDate);\n\n    if (month + 1 === 12) {\n      year++;\n      month = 0;\n    } else {\n      month++;\n    }\n\n    return this.dateAdapter.createDate(year, month, day);\n  }\n\n  private _getClasses(\n    date: D,\n    cssClasses: string[] = [],\n  ): RdsCalendarCellCssClasses | undefined {\n    const classes = this.dateClass ? this.dateClass(date, 'month') : undefined;\n\n    if (classes instanceof Set) {\n      cssClasses.forEach((c) => classes.add(c));\n\n      return classes;\n    } else if (classes instanceof Array) {\n      cssClasses.forEach((c) => classes.push(c));\n\n      return classes;\n    } else if (typeof classes === 'string') {\n      return classes + ' ' + cssClasses.join(' ');\n    } else if (typeof classes === 'object') {\n      cssClasses.forEach((c) => (classes[c] = true));\n\n      return cssClasses;\n    } else {\n      return cssClasses;\n    }\n  }\n}\n","<table class=\"rds-calendar-table\" role=\"presentation\">\n  <thead class=\"rds-calendar-table-header\">\n    <tr>\n      @for (day of _weekdays; track day) {\n        <th scope=\"col\" [attr.aria-label]=\"day.long\">\n          {{ day.narrow }}\n        </th>\n      }\n    </tr>\n    <tr>\n      <th\n        class=\"rds-calendar-table-header-divider\"\n        colspan=\"7\"\n        aria-hidden=\"true\"\n      ></th>\n    </tr>\n  </thead>\n  <tbody\n    rds-calendar-body\n    [label]=\"_monthLabel\"\n    [rows]=\"_weeks\"\n    [todayValue]=\"_todayDate\"\n    [startValue]=\"_rangeStart\"\n    [endValue]=\"_rangeEnd\"\n    [comparisonStart]=\"_comparisonRangeStart\"\n    [comparisonEnd]=\"_comparisonRangeEnd\"\n    [previewStart]=\"_previewStart\"\n    [previewEnd]=\"_previewEnd\"\n    [isRange]=\"_isRange\"\n    [labelMinRequiredCells]=\"3\"\n    [activeCell]=\"_getActiveCell()\"\n    (selectedValueChange)=\"_onDateSelected($event)\"\n    (previewChange)=\"_previewChanged($event)\"\n    (keydown)=\"_handleCalendarBodyKeydown($event)\"\n  ></tbody>\n</table>\n","import {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter } from './adapter';\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n  RdsCalendarBodyComponent,\n  RdsCalendarCell,\n  RdsCalendarCellClassFunction,\n  RdsCalendarUserEvent,\n} from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { DateRange } from './date-selection.model';\n\nexport const yearsPerPage = 28;\nexport const yearsPerRow = 4;\n\n@Component({\n  selector: 'rds-multi-year-view',\n  templateUrl: './multi-year-view.component.html',\n  exportAs: 'rdsMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsMultiYearViewComponent<D>\n  implements AfterContentInit, OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly dateAdapter = inject(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly dir = inject(Directionality, { optional: true });\n\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n      this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      ) || this.dateAdapter.today();\n    this._activeDate = this.dateAdapter.clampDate(\n      validDate,\n      this.minDate,\n      this.maxDate,\n    );\n\n    if (\n      !isSameMultiYearView(\n        this.dateAdapter,\n        oldActiveDate,\n        this._activeDate,\n        this.minDate,\n        this.maxDate,\n      )\n    ) {\n      this._init();\n    }\n  }\n\n  private _activeDate: D;\n\n  @Input()\n  get selected(): DateRange<D> | D | null {\n    return this._selected;\n  }\n\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      );\n    }\n\n    this._setSelectedYear(value);\n  }\n\n  private _selected: DateRange<D> | D | null = null;\n\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _minDate: D | null = null;\n\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _maxDate: D | null = null;\n\n  @Input() dateFilter: ((date: D) => boolean) | null = null;\n  @Input() dateClass: RdsCalendarCellClassFunction<D> | null = null;\n\n  @Output() readonly selectedChange = new EventEmitter<D>();\n  @Output() readonly yearSelected = new EventEmitter<RdsCalendarUserEvent<D>>();\n  @Output() readonly activeDateChange = new EventEmitter<D>();\n\n  @ViewChild(RdsCalendarBodyComponent)\n  _rdsCalendarBody: RdsCalendarBodyComponent<D> | null = null;\n\n  _years: RdsCalendarCell[][] | null = null;\n  _todayYear: number | null = null;\n  _selectedYear: number | null = null;\n\n  constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this.dateAdapter.today();\n  }\n\n  ngAfterContentInit(): void {\n    this._rerenderSubscription = this.dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  _init(): void {\n    this._todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n    const activeYear = this.dateAdapter.getYear(this._activeDate);\n    const minYearOfPage =\n      activeYear -\n      getActiveOffset(\n        this.dateAdapter,\n        this.activeDate,\n        this.minDate,\n        this.maxDate,\n      );\n\n    this._years = [];\n\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map((year) => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  _onYearSelected(event: RdsCalendarUserEvent<RdsCalendarCell<D>>): void {\n    this._yearSelected({\n      value: this.dateAdapter.clone(event.value.rawValue),\n      event: event.event,\n    });\n  }\n\n  _yearSelected(event: RdsCalendarUserEvent<D>): void {\n    const month = this.dateAdapter.getMonth(this.activeDate);\n    const daysInMonth = this.dateAdapter.getNumDaysInMonth(\n      this.dateAdapter.createDate(\n        this.dateAdapter.getYear(event.value),\n        month,\n        1,\n      ),\n    );\n    const date = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(event.value),\n      month,\n      Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth),\n    );\n    this.yearSelected.emit({ value: date, event: event.event });\n    this.selectedChange.emit(date);\n  }\n\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          isRtl ? 1 : -1,\n        );\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          isRtl ? -1 : 1,\n        );\n        break;\n      case UP_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          -yearsPerRow,\n        );\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          yearsPerRow,\n        );\n        break;\n      case HOME:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          -getActiveOffset(\n            this.dateAdapter,\n            this.activeDate,\n            this.minDate,\n            this.maxDate,\n          ),\n        );\n        break;\n      case END:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          yearsPerPage -\n            getActiveOffset(\n              this.dateAdapter,\n              this.activeDate,\n              this.minDate,\n              this.maxDate,\n            ) -\n            1,\n        );\n        break;\n      case PAGE_UP:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          event.altKey ? -yearsPerPage * 10 : -yearsPerPage,\n        );\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          event.altKey ? yearsPerPage * 10 : yearsPerPage,\n        );\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected({\n          value: this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this._activeDate),\n            0,\n            1,\n          ),\n          event,\n        });\n        break;\n      default:\n        return;\n    }\n\n    if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    event.preventDefault();\n  }\n\n  _getActiveCell(): RdsCalendarCell<D> | null {\n    if (this._years) {\n      for (let i = 0; i < this._years.length; i++) {\n        for (let j = 0; j < this._years[i].length; j++) {\n          const cell = this._years[i][j];\n\n          if (\n            cell &&\n            this.dateAdapter.sameDate(cell.rawValue, this.activeDate, 'year')\n          ) {\n            return cell;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  _focusActiveCell(): void {\n    this._rdsCalendarBody?._focusActiveCell();\n  }\n\n  private _createCellForYear(year: number): RdsCalendarCell<D> {\n    const date = this.dateAdapter.createDate(year, 0, 1);\n    const yearName = this.dateAdapter.getYearName(date);\n    const cellClasses = this.dateClass\n      ? this.dateClass(date, 'multi-year')\n      : undefined;\n\n    return new RdsCalendarCell(\n      year,\n      yearName,\n      yearName,\n      this._shouldEnableYear(year),\n      cellClasses,\n      date,\n    );\n  }\n\n  private _shouldEnableYear(year: number): boolean {\n    if (\n      year === undefined ||\n      year === null ||\n      (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n      (this.minDate && year < this.dateAdapter.getYear(this.minDate))\n    ) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n    for (\n      let date = firstOfYear;\n      this.dateAdapter.getYear(date) == year;\n      date = this.dateAdapter.addCalendarDays(date, 1)\n    ) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _isRtl(): boolean {\n    return !!(this.dir && this.dir.value === 'rtl');\n  }\n\n  private _setSelectedYear(value: DateRange<D> | D | null): void {\n    this._selectedYear = null;\n\n    if (value instanceof DateRange) {\n      const displayValue = value.start || value.end;\n\n      if (displayValue) {\n        this._selectedYear = this.dateAdapter.getYear(displayValue);\n      }\n    } else if (value) {\n      this._selectedYear = this.dateAdapter.getYear(value);\n    }\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>,\n  date1: D,\n  date2: D,\n  minDate: D | null,\n  maxDate: D | null,\n): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n\n  return (\n    Math.floor((year1 - startingYear) / yearsPerPage) ===\n    Math.floor((year2 - startingYear) / yearsPerPage)\n  );\n}\n\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>,\n  activeDate: D,\n  minDate: D | null,\n  maxDate: D | null,\n): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n\n  return euclideanModulo(\n    activeYear - getStartingYear(dateAdapter, minDate, maxDate),\n    yearsPerPage,\n  );\n}\n\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>,\n  minDate: D | null,\n  maxDate: D | null,\n): number {\n  let startingYear = 0;\n\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n\n  return startingYear;\n}\n\nfunction euclideanModulo(a: number, b: number): number {\n  return ((a % b) + b) % b;\n}\n","<table class=\"rds-calendar-table\" role=\"presentation\">\n  <thead class=\"rds-calendar-table-header\">\n    <tr>\n      <th class=\"rds-calendar-table-header-divider\" colspan=\"4\"></th>\n    </tr>\n  </thead>\n  <tbody\n    rds-calendar-body\n    [rows]=\"_years\"\n    [todayValue]=\"_todayYear\"\n    [startValue]=\"_selectedYear\"\n    [endValue]=\"_selectedYear\"\n    [numCols]=\"4\"\n    [cellAspectRatio]=\"4 / 7\"\n    [activeCell]=\"_getActiveCell()\"\n    (selectedValueChange)=\"_onYearSelected($event)\"\n    (keydown)=\"_handleCalendarBodyKeydown($event)\"\n  ></tbody>\n</table>\n","import {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter, RDS_DATE_FORMATS, RdsDateFormats } from './adapter';\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n  RdsCalendarBodyComponent,\n  RdsCalendarCell,\n  RdsCalendarCellClassFunction,\n  RdsCalendarUserEvent,\n} from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { DateRange } from './date-selection.model';\n\n@Component({\n  selector: 'rds-year-view',\n  templateUrl: './year-view.component.html',\n  exportAs: 'rdsYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsYearViewComponent<D> implements AfterContentInit, OnDestroy {\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly dateFormats = inject(RDS_DATE_FORMATS, {\n    optional: true,\n  }) as RdsDateFormats;\n  private readonly dateAdapter = inject(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly dir = inject(Directionality, { optional: true });\n\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n      this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      ) || this.dateAdapter.today();\n    this._activeDate = this.dateAdapter.clampDate(\n      validDate,\n      this.minDate,\n      this.maxDate,\n    );\n\n    if (\n      this.dateAdapter.getYear(oldActiveDate) !==\n      this.dateAdapter.getYear(this._activeDate)\n    ) {\n      this._init();\n    }\n  }\n\n  private _activeDate: D;\n\n  @Input()\n  get selected(): DateRange<D> | D | null {\n    return this._selected;\n  }\n\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      );\n    }\n\n    this._setSelectedMonth(value);\n  }\n\n  private _selected: DateRange<D> | D | null = null;\n\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _minDate: D | null = null;\n\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _maxDate: D | null = null;\n\n  @Input() dateFilter: ((date: D) => boolean) | null = null;\n  @Input() dateClass: RdsCalendarCellClassFunction<D> | null = null;\n\n  @Output() readonly selectedChange = new EventEmitter<D>();\n  @Output() readonly monthSelected = new EventEmitter<\n    RdsCalendarUserEvent<D>\n  >();\n  @Output() readonly activeDateChange = new EventEmitter<D>();\n\n  @ViewChild(RdsCalendarBodyComponent)\n  _rdsCalendarBody: RdsCalendarBodyComponent<D> | null = null;\n\n  _months: RdsCalendarCell[][] | null = null;\n  _yearLabel: string | null = null;\n  _todayMonth: number | null = null;\n  _selectedMonth: number | null = null;\n\n  constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this.dateFormats && isDevMode()) {\n      throw createMissingDateImplError('RDS_DATE_FORMATS');\n    }\n\n    this._activeDate = this.dateAdapter.today();\n  }\n\n  ngAfterContentInit(): void {\n    this._rerenderSubscription = this.dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy(): void {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  _onMonthSelected(event: RdsCalendarUserEvent<RdsCalendarCell<D>>): void {\n    this._monthSelected({\n      value: this.dateAdapter.clone(event.value.rawValue),\n      event: event.event,\n    });\n  }\n\n  _monthSelected(event: RdsCalendarUserEvent<D>): void {\n    const daysInMonth = this.dateAdapter.getNumDaysInMonth(event.value);\n    const date = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(event.value),\n      this.dateAdapter.getMonth(event.value),\n      Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth),\n    );\n    this.monthSelected.emit({ value: date, event: event.event });\n    this.selectedChange.emit(date);\n  }\n\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          isRtl ? 1 : -1,\n        );\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          isRtl ? -1 : 1,\n        );\n        break;\n      case UP_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          -4,\n        );\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          4,\n        );\n        break;\n      case HOME:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          -this.dateAdapter.getMonth(this._activeDate),\n        );\n        break;\n      case END:\n        this.activeDate = this.dateAdapter.addCalendarMonths(\n          this._activeDate,\n          11 - this.dateAdapter.getMonth(this._activeDate),\n        );\n        break;\n      case PAGE_UP:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          event.altKey ? -10 : -1,\n        );\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this.dateAdapter.addCalendarYears(\n          this._activeDate,\n          event.altKey ? 10 : 1,\n        );\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected({\n          value: this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate),\n            Math.min(\n              this.dateAdapter.getDate(this.activeDate),\n              this.dateAdapter.getNumDaysInMonth(this.activeDate),\n            ),\n          ),\n          event,\n        });\n        break;\n      default:\n        return;\n    }\n\n    if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    event.preventDefault();\n  }\n\n  _init(): void {\n    this._setSelectedMonth(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this.dateAdapter.today());\n    this._yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n    const monthNames = this.dateAdapter.getMonthNames('short');\n    this._months = [\n      [0, 1, 2, 3],\n      [4, 5, 6, 7],\n      [8, 9, 10, 11],\n    ].map((row) =>\n      row.map((month) => this._createCellForMonth(month, monthNames[month])),\n    );\n    this.cdr.markForCheck();\n  }\n\n  _focusActiveCell(): void {\n    this._rdsCalendarBody?._focusActiveCell();\n  }\n\n  _getActiveCell(): RdsCalendarCell<D> | null {\n    if (this._months) {\n      for (let i = 0; i < this._months.length; i++) {\n        for (let j = 0; j < this._months[i].length; j++) {\n          const cell = this._months[i][j];\n\n          if (\n            cell &&\n            this.dateAdapter.sameDate(cell.rawValue, this.activeDate, 'month')\n          ) {\n            return cell;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  private _getMonthInCurrentYear(date: D | null): number | null {\n    return date &&\n      this.dateAdapter.getYear(date) ==\n        this.dateAdapter.getYear(this.activeDate)\n      ? this.dateAdapter.getMonth(date)\n      : null;\n  }\n\n  private _createCellForMonth(\n    month: number,\n    monthName: string,\n  ): RdsCalendarCell {\n    const date = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(this.activeDate),\n      month,\n      1,\n    );\n    const ariaLabel = this.dateAdapter.format(\n      date,\n      this.dateFormats.display.monthYearA11yLabel,\n    );\n    const cellClasses = this.dateClass\n      ? this.dateClass(date, 'year')\n      : undefined;\n\n    return new RdsCalendarCell(\n      month,\n      monthName.toLocaleUpperCase(),\n      ariaLabel,\n      this._shouldEnableMonth(month),\n      cellClasses,\n      date,\n    );\n  }\n\n  private _shouldEnableMonth(month: number): boolean {\n    const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n    if (\n      month === undefined ||\n      month === null ||\n      this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n      this._isYearAndMonthBeforeMinDate(activeYear, month)\n    ) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n    for (\n      let date = firstOfMonth;\n      this.dateAdapter.getMonth(date) == month;\n      date = this.dateAdapter.addCalendarDays(date, 1)\n    ) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _isYearAndMonthAfterMaxDate(year: number, month: number): boolean {\n    if (this.maxDate) {\n      const maxYear = this.dateAdapter.getYear(this.maxDate);\n      const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  private _isYearAndMonthBeforeMinDate(year: number, month: number): boolean {\n    if (this.minDate) {\n      const minYear = this.dateAdapter.getYear(this.minDate);\n      const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  private _isRtl(): boolean {\n    return !!(this.dir && this.dir.value === 'rtl');\n  }\n\n  private _setSelectedMonth(value: DateRange<D> | D | null): void {\n    if (value instanceof DateRange) {\n      this._selectedMonth =\n        this._getMonthInCurrentYear(value.start) ||\n        this._getMonthInCurrentYear(value.end);\n    } else {\n      this._selectedMonth = this._getMonthInCurrentYear(value);\n    }\n  }\n}\n","<table class=\"rds-calendar-table\" role=\"presentation\">\n  <thead class=\"rds-calendar-table-header\">\n    <tr>\n      <th class=\"rds-calendar-table-header-divider\" colspan=\"4\"></th>\n    </tr>\n  </thead>\n  <tbody\n    rds-calendar-body\n    [label]=\"_yearLabel\"\n    [rows]=\"_months\"\n    [todayValue]=\"_todayMonth\"\n    [startValue]=\"_selectedMonth\"\n    [endValue]=\"_selectedMonth\"\n    [labelMinRequiredCells]=\"2\"\n    [numCols]=\"4\"\n    [cellAspectRatio]=\"4 / 7\"\n    [activeCell]=\"_getActiveCell()\"\n    (selectedValueChange)=\"_onMonthSelected($event)\"\n    (keydown)=\"_handleCalendarBodyKeydown($event)\"\n  ></tbody>\n</table>\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsToggleChangedEvent } from './model/toggle-changed-event';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Component({\n  selector: 'rds-toggle-button',\n  template: `\n    <button\n      class=\"rds-toggle__button\"\n      [class.rds-toggle__button--checked]=\"checked\"\n      type=\"button\"\n      [attr.disabled]=\"disabled ? 'disabled' : null\"\n      [attr.tabindex]=\"disabled ? -1 : tabindex\"\n      [attr.aria-pressed]=\"checked\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      (click)=\"onButtonClick()\"\n    >\n      <ng-content />\n    </button>\n    @if (showSeparator) {\n      <div class=\"rds-toggle__separator\"></div>\n    }\n  `,\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsToggleButtonComponent<T>\n  implements AfterViewInit, OnDestroy, FocusableOption\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  private _showSeparator = false;\n  tabindex = 0;\n\n  @HostBinding('tabIndex') readonly hostTabindex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @Input('aria-label') ariaLabel: string;\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  @Input() value: T;\n\n  get showSeparator(): boolean {\n    return this._showSeparator;\n  }\n\n  set showSeparator(value: boolean) {\n    this._showSeparator = booleanAttribute(value);\n    this.cdr.markForCheck();\n  }\n\n  @Input({ transform: booleanAttribute }) checked = false;\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @Output() readonly changed = new EventEmitter<RdsToggleChangedEvent<T>>();\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true);\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n  }\n\n  onButtonClick(): void {\n    this.changed.emit({\n      buttonToggle: this,\n      checked: !this.checked,\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  ErrorHandler,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { asyncScheduler, merge, Subject } from 'rxjs';\nimport { delay, filter, takeUntil } from 'rxjs/operators';\nimport { RdsToggleButtonComponent } from './toggle-button.component';\nimport { RdsToggleChangedEvent } from './model/toggle-changed-event';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\nexport type RdsToggleType = 'basic' | 'outlined';\n\n@Directive({\n  selector: 'rds-toggle',\n})\nexport class RdsToggleDirective<T>\n  implements OnChanges, AfterContentInit, OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly errorHandler = inject(ErrorHandler);\n  private readonly _changedDestroy$ = new Subject<void>();\n\n  private selected: RdsToggleButtonComponent<T>;\n  private rawValue: T;\n\n  @Input()\n  type: RdsToggleType = 'basic';\n\n  @HostBinding('attr.role') hostRole = 'group';\n\n  @HostBinding('class') get hostClass(): string[] {\n    return ['rds-toggle', `rds-toggle--${this.type}`];\n  }\n\n  @HostBinding('attr.aria-disabled')\n  @HostBinding('class.rds-toggle--disabled')\n  @Input()\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n\n    if (this.buttonToggles) {\n      this.buttonToggles.forEach((item) => (item.disabled = this._disabled));\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled = false;\n\n  @Input() value: T;\n  @Output() valueChange = new EventEmitter<T>();\n\n  @ContentChildren(RdsToggleButtonComponent) buttonToggles: QueryList<\n    RdsToggleButtonComponent<T>\n  >;\n\n  ngAfterContentInit(): void {\n    Promise.resolve().then(() => {\n      const valueItem = this.buttonToggles.find((b) => b.value === this.value);\n\n      if (valueItem) {\n        this.selected = valueItem;\n        valueItem.checked = true;\n        const checkedButtons = this.buttonToggles.filter(\n          (b) => b.checked && b.value !== this.value,\n        );\n\n        if (checkedButtons.length > 0) {\n          checkedButtons.forEach((b) => (b.checked = false));\n        }\n      } else {\n        const checkedToggles = this.buttonToggles.filter((b) => b.checked);\n\n        if (checkedToggles.length > 1) {\n          this.errorHandler.handleError(\n            new Error('Invalid status, more than one toggle is checked'),\n          );\n        }\n\n        const firstCheckedToggle = checkedToggles[0];\n\n        if (firstCheckedToggle) {\n          firstCheckedToggle.checked = true;\n          this.rawValue = firstCheckedToggle.value;\n          this.selected = firstCheckedToggle;\n        }\n\n        if (this.disabled) {\n          this.buttonToggles.forEach((item) => (item.disabled = this.disabled));\n        }\n      }\n\n      this.refreshSeparators();\n      this.refreshChangeListener();\n    });\n\n    this.buttonToggles.changes\n      .pipe(delay(0, asyncScheduler), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.refreshChangeListener();\n        this.refreshSeparators();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['value'] &&\n      changes['value'].previousValue !== changes['value'].currentValue &&\n      this.buttonToggles &&\n      this.buttonToggles.some((bc) => bc.value === this.value)\n    ) {\n      this.buttonToggles.find((bc) => bc.value === this.value)?.onButtonClick();\n    }\n\n    this.refreshSeparators();\n  }\n\n  ngOnDestroy(): void {\n    this._changedDestroy$.next();\n    this._changedDestroy$.complete();\n  }\n\n  private handleToggleButtonChange(\n    toggleChangedEvent: RdsToggleChangedEvent<T>,\n  ): void {\n    const { buttonToggle, checked } = toggleChangedEvent;\n\n    if (this.selected === buttonToggle) {\n      return; // cannot deselect\n    }\n\n    if (this.selected) {\n      this.selected.checked = false;\n    }\n\n    buttonToggle.checked = checked;\n    this.rawValue = buttonToggle.value;\n    this.selected = buttonToggle;\n  }\n\n  private refreshSeparators(): void {\n    if (this.buttonToggles && this.type === 'outlined') {\n      this.buttonToggles.forEach((item, index, array) => {\n        if (item.disabled) {\n          item.showSeparator = true;\n        } else if (index === array.length - 1) {\n          item.showSeparator = false;\n        } else if (index !== array.length - 1) {\n          item.showSeparator = !item.checked;\n        } else if (item.showSeparator) {\n          item.showSeparator = false;\n        }\n\n        if (item.checked && index > 0) {\n          array[index - 1].showSeparator = false;\n        }\n      });\n    } else if (this.buttonToggles && this.type === 'basic') {\n      this.buttonToggles.forEach((item, index, array) => {\n        item.showSeparator = index !== array.length - 1;\n      });\n    }\n  }\n\n  private refreshChangeListener(): void {\n    this._changedDestroy$.next();\n    merge<RdsToggleChangedEvent<T>[]>(\n      ...this.buttonToggles.map((toggle) => toggle.changed),\n    )\n      .pipe(\n        filter((event) => event.checked),\n        takeUntil(this._changedDestroy$),\n      )\n      .subscribe((toggleChangedEvent: RdsToggleChangedEvent<T>) => {\n        this.handleToggleButtonChange(toggleChangedEvent);\n        this.valueChange.emit(this.rawValue);\n      });\n  }\n}\n","import { ComponentPortal, ComponentType, Portal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter, RDS_DATE_FORMATS, RdsDateFormats } from './adapter';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  RdsCalendarCellClassFunction,\n  RdsCalendarUserEvent,\n} from './calendar-body.component';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { RdsDatepickerIntl } from './datepicker.intl';\nimport { RdsMonthViewComponent } from './month-view.component';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  RdsMultiYearViewComponent,\n  yearsPerPage,\n} from './multi-year-view.component';\nimport { RdsYearViewComponent } from './year-view.component';\nimport {\n  DateRange,\n  RDS_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n} from './date-selection.model';\nimport { RdsCalendarView } from './calendar.types';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\nlet uniqueId = 0;\n\n@Component({\n  selector: 'rds-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n  exportAs: 'rdsCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RDS_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n})\nexport class RdsCalendarComponent<D>\n  implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges\n{\n  private readonly intl = inject(RdsDatepickerIntl);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly dateAdapter = inject(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly dateFormats = inject(RDS_DATE_FORMATS, {\n    optional: true,\n  }) as RdsDateFormats;\n\n  @HostBinding('class') class = 'rds-calendar';\n\n  @Input() headerComponent: ComponentType<unknown> | null = null;\n\n  _calendarHeaderPortal: Portal<unknown> | null = null;\n\n  private _intlChanges: Subscription;\n\n  private _moveFocusOnNextTick = false;\n\n  @Input()\n  get startAt(): D | null {\n    return this._startAt;\n  }\n\n  set startAt(value: D | null) {\n    this._startAt = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _startAt: D | null = null;\n\n  @Input() startView: RdsCalendarView = 'month';\n\n  @Input()\n  get selected(): DateRange<D> | D | null {\n    return this._selected;\n  }\n\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this.dateAdapter.getValidDateOrNull(\n        this.dateAdapter.deserialize(value),\n      );\n    }\n  }\n\n  private _selected: DateRange<D> | D | null = null;\n\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _minDate: D | null = null;\n\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _maxDate: D | null = null;\n\n  @Input() dateFilter: ((date: D) => boolean) | null = null;\n\n  @Input() dateClass: RdsCalendarCellClassFunction<D> | null = null;\n\n  @Input() comparisonStart: D | null = null;\n\n  @Input() comparisonEnd: D | null = null;\n\n  @Input({ transform: booleanAttribute }) isMonthDisabled = false;\n\n  @Input({ transform: booleanAttribute }) isMultiYearDisabled = false;\n\n  @Input({ transform: booleanAttribute }) isYearDisabled = false;\n\n  @Input()\n  set showToggle(value: BooleanInput | null) {\n    const newValue = booleanAttribute(value);\n\n    if (this._showToggle !== newValue) {\n      this._showToggle = newValue;\n      this.stateChanges.next();\n      this.cdr.markForCheck();\n    }\n  }\n\n  get showToggle(): boolean | null {\n    return this._showToggle;\n  }\n\n  @Output() readonly selectedChange = new EventEmitter<D | null>();\n\n  @Output() readonly yearSelected = new EventEmitter<D>();\n\n  @Output() readonly monthSelected = new EventEmitter<D>();\n\n  @Output() readonly viewChanged = new EventEmitter<RdsCalendarView>(true);\n\n  @Output() readonly _userSelection = new EventEmitter<\n    RdsCalendarUserEvent<D | null>\n  >();\n\n  @ViewChild(RdsMonthViewComponent) monthView: RdsMonthViewComponent<D> | null =\n    null;\n\n  @ViewChild(RdsYearViewComponent) yearView: RdsYearViewComponent<D> | null =\n    null;\n\n  @ViewChild(RdsMultiYearViewComponent)\n  multiYearView: RdsMultiYearViewComponent<D> | null = null;\n\n  get activeDate(): D {\n    return this._clampedActiveDate as D;\n  }\n\n  set activeDate(value: D) {\n    this._clampedActiveDate = this.dateAdapter.clampDate(\n      value,\n      this.minDate,\n      this.maxDate,\n    );\n    this.stateChanges.next();\n    this.cdr.markForCheck();\n  }\n\n  private _clampedActiveDate: D | null = null;\n\n  get currentView(): RdsCalendarView {\n    return this._currentView as RdsCalendarView;\n  }\n\n  set currentView(value: RdsCalendarView) {\n    const viewChangedResult = this._currentView !== value ? value : null;\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this.cdr.markForCheck();\n\n    if (viewChangedResult) {\n      this.viewChanged.emit(viewChangedResult);\n    }\n  }\n\n  @Input()\n  get availableViews(): RdsCalendarView[] {\n    return this._availableViews;\n  }\n\n  set availableViews(value: RdsCalendarView[]) {\n    this._availableViews = value;\n    this._moveFocusOnNextTick = true;\n    this.cdr.markForCheck();\n  }\n\n  private _currentView: RdsCalendarView | null = null;\n  private _availableViews: RdsCalendarView[] = ['month', 'year', 'multi-year'];\n  private _showToggle: boolean | null = null;\n\n  stateChanges = new Subject<void>();\n\n  constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this.dateFormats && isDevMode()) {\n      throw createMissingDateImplError('RDS_DATE_FORMATS');\n    }\n\n    this._intlChanges = this.intl.changes.subscribe(() => {\n      this.cdr.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this._calendarHeaderPortal = new ComponentPortal(\n      this.headerComponent || RdsCalendarHeaderComponent,\n    );\n    this.activeDate = this.startAt || this.dateAdapter.today();\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked(): void {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const change =\n      changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        this.cdr.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell(): void {\n    this._getCurrentViewComponent()?._focusActiveCell(false);\n  }\n\n  updateTodaysDate(): void {\n    const currentView = this.currentView;\n    let view:\n      | RdsMonthViewComponent<D>\n      | RdsYearViewComponent<D>\n      | RdsMultiYearViewComponent<D>\n      | null;\n\n    if (currentView === 'month') {\n      view = this.monthView;\n    } else if (currentView === 'year') {\n      view = this.yearView;\n    } else {\n      view = this.multiYearView;\n    }\n\n    view?._init();\n  }\n\n  _dateSelected(event: RdsCalendarUserEvent<D | null>): void {\n    const date = event.value;\n\n    if (\n      date &&\n      !this.dateAdapter.sameDate(this.activeDate, date, 'month') &&\n      !(this.selected instanceof DateRange)\n    ) {\n      this.activeDate = date;\n    }\n\n    if (\n      this.selected instanceof DateRange ||\n      (date && !this.dateAdapter.sameDate(date, this.selected))\n    ) {\n      this.selectedChange.emit(date);\n    }\n\n    this._userSelection.emit(event);\n  }\n\n  _yearSelectedInMultiYearView(event: RdsCalendarUserEvent<D>): void {\n    const normalizedYear = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(event.value),\n      0,\n      1,\n    );\n    this.yearSelected.emit(normalizedYear);\n    this._goToDateInViewIfAvailable(event, normalizedYear, 'year');\n  }\n\n  _monthSelectedInYearView(event: RdsCalendarUserEvent<D>): void {\n    const normalizedMonth = this.dateAdapter.createDate(\n      this.dateAdapter.getYear(event.value),\n      this.dateAdapter.getMonth(event.value),\n      1,\n    );\n    this.monthSelected.emit(normalizedMonth);\n    this._goToDateInViewIfAvailable(event, normalizedMonth, 'month');\n  }\n\n  private _goToDateInViewIfAvailable(\n    event: RdsCalendarUserEvent<D>,\n    normalizedDate: D,\n    view?: RdsCalendarView,\n  ): void {\n    this.activeDate = event.value;\n\n    if (view && this.availableViews.includes(view)) {\n      this.currentView = view;\n    } else {\n      this._dateSelected({\n        value: this.dateAdapter.clone(normalizedDate),\n        event: event.event,\n      });\n    }\n  }\n\n  private _getCurrentViewComponent():\n    | RdsMonthViewComponent<D>\n    | RdsYearViewComponent<D>\n    | RdsMultiYearViewComponent<D>\n    | null {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n\n@Component({\n  selector: 'rds-calendar-header',\n  templateUrl: './calendar-header.component.html',\n  exportAs: 'rdsCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsCalendarHeaderComponent<D> {\n  private readonly cdr = inject(ChangeDetectorRef);\n  public readonly intl = inject(RdsDatepickerIntl);\n  public readonly calendar = inject<RdsCalendarComponent<D>>(\n    forwardRef(() => RdsCalendarComponent),\n  );\n  private readonly dateAdapter = inject<DateAdapter<D>>(DateAdapter);\n  private readonly dateFormats = inject(RDS_DATE_FORMATS);\n\n  _buttonDescriptionId = `rds-calendar-button-${uniqueId++}`;\n\n  constructor() {\n    this.calendar.stateChanges.subscribe(() => this.cdr.markForCheck());\n  }\n\n  get periodButtonText(): string {\n    if (this.calendar.currentView === 'month') {\n      return this.dateAdapter.format(\n        this.calendar.activeDate,\n        this.dateFormats.display.monthYearLabel,\n      );\n    }\n\n    if (this.calendar.currentView === 'year') {\n      return this.dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage =\n      activeYear -\n      getActiveOffset(\n        this.dateAdapter,\n        this.calendar.activeDate,\n        this.calendar.minDate,\n        this.calendar.maxDate,\n      );\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName = this.dateAdapter.getYearName(\n      this.dateAdapter.createDate(minYearOfPage, 0, 1),\n    );\n    const maxYearName = this.dateAdapter.getYearName(\n      this.dateAdapter.createDate(maxYearOfPage, 0, 1),\n    );\n\n    return this.intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView === 'month'\n      ? this.intl.switchToMultiYearViewLabel\n      : this.intl.switchToMonthViewLabel;\n  }\n\n  get prevButtonLabel(): string {\n    return {\n      month: this.intl.prevMonthLabel,\n      year: this.intl.prevYearLabel,\n      'multi-year': this.intl.prevMultiYearLabel,\n    }[this.calendar.currentView];\n  }\n\n  get nextButtonLabel(): string {\n    return {\n      month: this.intl.nextMonthLabel,\n      year: this.intl.nextYearLabel,\n      'multi-year': this.intl.nextMultiYearLabel,\n    }[this.calendar.currentView];\n  }\n\n  currentPeriodClicked(): void {\n    this.calendar.currentView =\n      this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  previousClicked(): void {\n    this.calendar.activeDate =\n      this.calendar.currentView === 'month'\n        ? this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n        : this.dateAdapter.addCalendarYears(\n            this.calendar.activeDate,\n            this.calendar.currentView === 'year' ? -1 : -yearsPerPage,\n          );\n  }\n\n  nextClicked(): void {\n    this.calendar.activeDate =\n      this.calendar.currentView === 'month'\n        ? this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n        : this.dateAdapter.addCalendarYears(\n            this.calendar.activeDate,\n            this.calendar.currentView === 'year' ? 1 : yearsPerPage,\n          );\n  }\n\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n\n    return (\n      !this.calendar.minDate ||\n      !this._isSameView(this.calendar.activeDate, this.calendar.minDate)\n    );\n  }\n\n  nextEnabled(): boolean {\n    return (\n      !this.calendar.maxDate ||\n      !this._isSameView(this.calendar.activeDate, this.calendar.maxDate)\n    );\n  }\n\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView === 'month') {\n      return (\n        this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n        this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2)\n      );\n    }\n\n    if (this.calendar.currentView === 'year') {\n      return (\n        this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2)\n      );\n    }\n\n    return isSameMultiYearView(\n      this.dateAdapter,\n      date1,\n      date2,\n      this.calendar.minDate,\n      this.calendar.maxDate,\n    );\n  }\n}\n","<ng-template [cdkPortalOutlet]=\"_calendarHeaderPortal\" />\n\n<div class=\"rds-calendar-content\" cdkMonitorSubtreeFocus tabindex=\"-1\">\n  @switch (currentView) {\n    @case ('month') {\n      <rds-month-view\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        [dateClass]=\"dateClass\"\n        [comparisonStart]=\"comparisonStart\"\n        [comparisonEnd]=\"comparisonEnd\"\n        (_userSelection)=\"_dateSelected($event)\"\n      />\n    }\n    @case ('year') {\n      <rds-year-view\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        [dateClass]=\"dateClass\"\n        (monthSelected)=\"_monthSelectedInYearView($event)\"\n      />\n    }\n    @case ('multi-year') {\n      <rds-multi-year-view\n        [(activeDate)]=\"activeDate\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [maxDate]=\"maxDate\"\n        [minDate]=\"minDate\"\n        [dateClass]=\"dateClass\"\n        (yearSelected)=\"_yearSelectedInMultiYearView($event)\"\n      />\n    }\n  }\n</div>\n","<div class=\"rds-calendar-header\">\n  @if (calendar.showToggle) {\n    <div class=\"rds-calendar-controls rds-calendar-view-mode\">\n      <rds-toggle\n        [(value)]=\"calendar.currentView\"\n        [attr.aria-label]=\"periodButtonLabel\"\n        [attr.aria-describedby]=\"_buttonDescriptionId\"\n        [attr.id]=\"_buttonDescriptionId\"\n        type=\"outlined\"\n        cdkAriaLive=\"polite\"\n      >\n        @if (calendar.availableViews.includes('month')) {\n          <rds-toggle-button [disabled]=\"calendar.isMonthDisabled\" value=\"month\"\n            >{{ intl.monthLabel }}\n          </rds-toggle-button>\n        }\n        @if (calendar.availableViews.includes('year')) {\n          <rds-toggle-button [disabled]=\"calendar.isYearDisabled\" value=\"year\"\n            >{{ intl.yearLabel }}\n          </rds-toggle-button>\n        }\n        @if (calendar.availableViews.includes('multi-year')) {\n          <rds-toggle-button\n            [disabled]=\"calendar.isMultiYearDisabled\"\n            value=\"multi-year\"\n            >{{ intl.multiYearLabel }}\n          </rds-toggle-button>\n        }\n      </rds-toggle>\n    </div>\n  }\n  <div class=\"rds-calendar-controls rds-calendar-period-arrows\">\n    <span\n      [attr.id]=\"_buttonDescriptionId\"\n      class=\"rds-calendar-period-button-text\"\n      >{{ periodButtonText }}</span\n    >\n    <div class=\"rds-calendar-controls-button-wrapper\">\n      <button\n        rds-icon-button\n        size=\"m\"\n        type=\"button\"\n        [attr.aria-label]=\"prevButtonLabel\"\n        [disabled]=\"!previousEnabled()\"\n        (click)=\"previousClicked()\"\n        class=\"rds-calendar-previous-button\"\n      >\n        <rds-icon icon=\"chevron_left\" namespace=\"filled\" />\n      </button>\n      <button\n        rds-icon-button\n        size=\"m\"\n        type=\"button\"\n        [attr.aria-label]=\"nextButtonLabel\"\n        [disabled]=\"!nextEnabled()\"\n        (click)=\"nextClicked()\"\n        class=\"rds-calendar-next-button\"\n      >\n        <rds-icon icon=\"chevron_right\" namespace=\"filled\" />\n      </button>\n    </div>\n    <ng-content />\n  </div>\n</div>\n","import { ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\n\nexport type RdsDialogRole = 'dialog' | 'alertdialog';\nexport type RdsDialogSize = 's' | 'm' | 'l' | 'xl';\n\n// if you changed this value then adjust $rds-dialog-margin accordingly (dialog-container.component.scss)\nexport const DialogTotalInlineMargin = 128;\nexport enum DialogSizeWidth {\n  xl = 1480 + DialogTotalInlineMargin,\n  l = 976 + DialogTotalInlineMargin,\n  m = 724 + DialogTotalInlineMargin,\n  s = 472 + DialogTotalInlineMargin,\n}\n\nexport class RdsDialogConfig<D> {\n  ariaDescribedBy?: string;\n  ariaLabel?: string;\n  ariaLabelledBy?: string;\n  closeOnNavigation = true;\n  componentFactoryResolver?: ComponentFactoryResolver;\n  data?: D | null = null;\n  disableClose? = false;\n  hasBackdrop? = true;\n  height? = '';\n  id?: string;\n  maxHeight: number | string = '684px';\n  minHeight?: number | string;\n  panelClass: string | string[] = '';\n  role: RdsDialogRole = 'dialog';\n  viewContainerRef?: ViewContainerRef;\n  size: RdsDialogSize = 'm';\n}\n","import { Observable, Subject } from 'rxjs';\nimport { RdsDialogState } from './dialog.state';\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\nimport { RdsDialogContainerComponent } from '../dialog-container.component';\nimport { filter, take } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { AnimationEvent } from '@angular/animations';\n\nlet uniqueId = 0;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RdsDialogRef<T, D = any, R = any> {\n  private readonly afterOpened$ = new Subject<void>();\n  private readonly afterClosed$ = new Subject<R | undefined>();\n  private readonly beforeClosed$ = new Subject<R | undefined>();\n\n  private result: R | undefined;\n\n  private dialogState = RdsDialogState.OPEN;\n\n  private closeFallbackTimeout: null | ReturnType<typeof setTimeout>;\n\n  componentInstance: T | null;\n\n  disableClose: boolean | undefined = this.dialogContainer.config.disableClose;\n\n  constructor(\n    private readonly overlayRef: OverlayRef,\n    public readonly dialogContainer: RdsDialogContainerComponent<D>,\n    public readonly id = `rds-dialog-${uniqueId++}`,\n  ) {\n    this.dialogContainer.id = id;\n\n    // Emit when opening animation completes\n    this.dialogContainer.animationStateChanged\n      .pipe(\n        filter(\n          (event: AnimationEvent) =>\n            event.phaseName === 'done' && event.toState === 'enter',\n        ),\n        take(1),\n      )\n      .subscribe(() => {\n        this.afterOpened$.next();\n        this.afterOpened$.complete();\n      });\n\n    dialogContainer.animationStateChanged\n      .pipe(\n        filter(\n          (event: AnimationEvent) =>\n            event.phaseName === 'done' && event.toState === 'exit',\n        ),\n        take(1),\n      )\n      .subscribe(() => {\n        if (this.closeFallbackTimeout) {\n          clearTimeout(this.closeFallbackTimeout);\n        }\n\n        this.finishDialogClose();\n      });\n\n    overlayRef.detachments().subscribe(() => {\n      this.beforeClosed$.next(this.result);\n      this.beforeClosed$.complete();\n      this.afterClosed$.next(this.result);\n      this.afterClosed$.complete();\n      this.componentInstance = null;\n      this.overlayRef.dispose();\n    });\n\n    overlayRef\n      .keydownEvents()\n      .pipe(\n        filter(\n          (event) =>\n            event.keyCode === ESCAPE &&\n            !this.disableClose &&\n            !hasModifierKey(event),\n        ),\n      )\n      .subscribe((event) => {\n        event.preventDefault();\n        this.close();\n      });\n\n    overlayRef.backdropClick().subscribe(() => {\n      if (this.disableClose) {\n        this.dialogContainer.recaptureFocus();\n      } else {\n        this.close();\n      }\n    });\n  }\n\n  close(dialogResult?: R): void {\n    this.result = dialogResult;\n\n    this.dialogContainer.animationStateChanged\n      .pipe(\n        filter((event: AnimationEvent) => event.phaseName === 'start'),\n        take(1),\n      )\n      .subscribe((event: AnimationEvent) => {\n        this.beforeClosed$.next(dialogResult);\n        this.beforeClosed$.complete();\n        this.overlayRef.detachBackdrop();\n\n        this.closeFallbackTimeout = setTimeout(\n          () => this.finishDialogClose(),\n          event.totalTime + 100,\n        );\n      });\n\n    this.dialogContainer.startExitAnimation();\n    this.dialogState = RdsDialogState.CLOSING;\n  }\n\n  afterOpened(): Observable<void> {\n    return this.afterOpened$.asObservable();\n  }\n\n  afterClosed(): Observable<R | undefined> {\n    return this.afterClosed$.asObservable();\n  }\n\n  beforeClosed(): Observable<R | undefined> {\n    return this.beforeClosed$.asObservable();\n  }\n\n  backdropClick(): Observable<MouseEvent> {\n    return this.overlayRef.backdropClick();\n  }\n\n  centerDialog(): void {\n    const positionStrategy = this.getPositionStrategy();\n    positionStrategy.centerHorizontally();\n    positionStrategy.centerVertically();\n  }\n\n  changeSize(width = '', height = ''): void {\n    this.getPositionStrategy().width(width).height(height);\n  }\n\n  updateOverlayPosition(): void {\n    this.overlayRef.updatePosition();\n  }\n\n  private finishDialogClose(): void {\n    this.dialogState = RdsDialogState.CLOSED;\n    this.overlayRef.dispose();\n  }\n\n  private getPositionStrategy(): GlobalPositionStrategy {\n    return this.overlayRef.getConfig()\n      .positionStrategy as GlobalPositionStrategy;\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: `[rds-dialog-actions-container], [rdsDialogActionsContainer]`,\n})\nexport class RdsDialogActionsContainerDirective {\n  @HostBinding('class') hostClasses = 'rds-dialog__actions-container';\n}\n","import { ElementRef } from '@angular/core';\nimport { RdsDialogRef } from './model';\n\nexport function getClosestDialog<T, D, R>(\n  element: ElementRef<HTMLElement>,\n  openDialogs: RdsDialogRef<T, D, R>[],\n): RdsDialogRef<T, D, R> | null {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('rds-dialog')) {\n    parent = parent.parentElement;\n  }\n\n  return parent\n    ? openDialogs.find((dialog) => dialog.id === parent?.id) || null\n    : null;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  DomPortal,\n  TemplatePortal,\n} from '@angular/cdk/portal';\nimport {\n  ConfigurableFocusTrap,\n  ConfigurableFocusTrapFactory,\n} from '@angular/cdk/a11y';\nimport {\n  animate,\n  AnimationEvent,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { RdsDialogConfig } from './model';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\nconst animations: {\n  readonly dialogComponent: AnimationTriggerMetadata;\n} = {\n  dialogComponent: trigger('dialogContainer', [\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n    state('enter', style({ transform: 'none' })),\n    transition(\n      '* => enter',\n      animate(\n        '150ms cubic-bezier(0, 0, 0.2, 1)',\n        style({ transform: 'none', opacity: 1 }),\n      ),\n    ),\n    transition(\n      '* => void, * => exit',\n      animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n    ),\n  ]),\n};\n\n@Component({\n  selector: 'rds-dialog',\n  template: ` <ng-template cdkPortalOutlet /> `,\n  styleUrls: ['./dialog-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [animations.dialogComponent],\n})\nexport class RdsDialogContainerComponent<D> extends BasePortalOutlet {\n  private readonly elementRef = inject(ElementRef);\n  private readonly focusTrapFactory = inject(ConfigurableFocusTrapFactory);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly document = inject(DOCUMENT);\n  public readonly config = inject<RdsDialogConfig<D>>(RdsDialogConfig);\n\n  private focusTrap: ConfigurableFocusTrap;\n  private elementFocusedBeforeDialogWasOpened: HTMLElement;\n\n  ariaLabelledBy = this.config.ariaLabelledBy || null;\n  id: string;\n\n  animationState: 'void' | 'enter' | 'exit' = 'enter';\n\n  readonly animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  @ViewChild(CdkPortalOutlet, { static: true }) portalOutlet: CdkPortalOutlet;\n\n  @HostBinding('class') readonly hostClass = 'rds-dialog';\n  @HostBinding('tabIndex') readonly hostTabindex = TAB_INDEX_NOT_FOCUSABLE;\n  @HostBinding('attr.aria-dialog') readonly hostAriaDialog = true;\n\n  @HostBinding('attr.id') get hostId(): string {\n    return this.id;\n  }\n\n  @HostBinding('attr.size') get hostSize(): string {\n    return this.config.size;\n  }\n\n  @HostBinding('attr.role') get hostRole(): string {\n    return this.config.role;\n  }\n\n  @HostBinding('attr.aria-labelledby') get hostAriaLabelledby(): string | null {\n    return this.config.ariaLabel ? null : this.ariaLabelledBy;\n  }\n\n  @HostBinding('attr.aria-label') get hostAriaLabel(): string | null {\n    return this.config.ariaLabel || null;\n  }\n\n  @HostBinding('attr.aria-describedby') get hostAriaDescribedby():\n    | string\n    | null {\n    return this.config.ariaDescribedBy || null;\n  }\n\n  @HostBinding('@dialogContainer') get hostDialogContainer(): string {\n    return this.animationState;\n  }\n\n  @HostListener('@dialogContainer.start', ['$event'])\n  onAnimationStart($event: AnimationEvent): void {\n    this.animationStateChanged.emit($event);\n  }\n\n  @HostListener('@dialogContainer.done', ['$event'])\n  onAnimationDone(event: AnimationEvent): void {\n    if (event.toState === 'enter') {\n      this.trapFocus();\n    } else if (event.toState === 'exit') {\n      this.restoreFocus();\n    }\n\n    this.animationStateChanged.emit(event);\n  }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this.portalOutlet.hasAttached()) {\n      this.throwCannotAttachError();\n    }\n\n    this.setupFocusTrap();\n\n    return this.portalOutlet.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this.portalOutlet.hasAttached()) {\n      this.throwCannotAttachError();\n    }\n\n    this.setupFocusTrap();\n\n    return this.portalOutlet.attachTemplatePortal(portal);\n  }\n\n  override attachDomPortal = (portal: DomPortal): void => {\n    if (this.portalOutlet.hasAttached()) {\n      this.throwCannotAttachError();\n    }\n\n    this.setupFocusTrap();\n\n    return this.portalOutlet.attachDomPortal(portal);\n  };\n\n  startExitAnimation(): void {\n    this.animationState = 'exit';\n\n    this.cdr.markForCheck();\n  }\n\n  recaptureFocus(): void {\n    if (!this.isFocusInsideDialog()) {\n      const focusContainer = !this.focusTrap.focusInitialElement();\n\n      if (focusContainer) {\n        this.elementRef.nativeElement.focus();\n      }\n    }\n  }\n\n  private trapFocus(): void {\n    this.focusTrap.focusInitialElementWhenReady();\n  }\n\n  private restoreFocus(): void {\n    const elementToFocus = this.elementFocusedBeforeDialogWasOpened;\n\n    // extra check, because IE can set the `activeElement` to null\n    if (elementToFocus && typeof elementToFocus.focus === 'function') {\n      const activeElement = this.document.activeElement;\n      const hostNativeElement = this.elementRef.nativeElement;\n\n      // Make sure that focus is still inside the dialog or is on the body\n      if (\n        !activeElement ||\n        activeElement === this.document.body ||\n        activeElement === hostNativeElement ||\n        hostNativeElement.contains(activeElement)\n      ) {\n        elementToFocus.focus();\n      }\n    }\n\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n\n  private setupFocusTrap(): void {\n    if (!this.focusTrap) {\n      this.focusTrap = this.focusTrapFactory.create(\n        this.elementRef.nativeElement,\n      );\n    }\n\n    if (this.document) {\n      this.elementFocusedBeforeDialogWasOpened = this.document\n        .activeElement as HTMLElement;\n    }\n  }\n\n  private isFocusInsideDialog(): boolean {\n    const element = this.elementRef.nativeElement;\n    const activeElement = this.document.activeElement;\n\n    return element === activeElement || element.contains(activeElement);\n  }\n\n  private throwCannotAttachError(): void {\n    throw Error(\n      'Attempting to attach dialog content after content is already attached',\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const RDS_DIALOG_DATA = new InjectionToken<unknown>('RDS_DIALOG_DATA');\n","import {\n  inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  StaticProvider,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { DialogSizeWidth, RdsDialogConfig, RdsDialogRef } from './model';\nimport { defer, Observable, Subject } from 'rxjs';\nimport {\n  ComponentType,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { startWith } from 'rxjs/operators';\nimport { RdsDialogContainerComponent } from './dialog-container.component';\nimport { ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { RDS_DIALOG_DATA } from './tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class RdsDialogService implements OnDestroy {\n  private readonly overlay = inject(Overlay);\n  private readonly injector = inject(Injector);\n  private readonly scrollStrategyOptions = inject(ScrollStrategyOptions);\n  private readonly parentDialogService = inject(RdsDialogService, {\n    optional: true,\n    skipSelf: true,\n  });\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private dialogsOpenAtCurrentLevel: RdsDialogRef<any>[] = [];\n  private readonly afterAllClosedAtCurrentLevel = new Subject<void>();\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  private readonly afterOpenedAtCurrentLevel = new Subject<RdsDialogRef<any>>();\n  private readonly scrollStrategy: () => ScrollStrategy = () =>\n    this.scrollStrategyOptions.block();\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  get openDialogs(): RdsDialogRef<any>[] {\n    return this.parentDialogService\n      ? this.parentDialogService.openDialogs\n      : this.dialogsOpenAtCurrentLevel;\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  get afterOpened(): Subject<RdsDialogRef<any>> {\n    return this.parentDialogService\n      ? this.parentDialogService.afterOpened\n      : this.afterOpenedAtCurrentLevel;\n  }\n\n  get _afterAllClosed(): Subject<void> {\n    const parent = this.parentDialogService;\n\n    return parent ? parent._afterAllClosed : this.afterAllClosedAtCurrentLevel;\n  }\n\n  readonly afterAllClosed: Observable<void> = defer(() =>\n    this.openDialogs.length\n      ? this._afterAllClosed\n      : this._afterAllClosed.pipe(startWith([undefined])),\n  ) as Observable<void>;\n\n  ngOnDestroy(): void {\n    this.closeDialogs(this.dialogsOpenAtCurrentLevel);\n    this.afterAllClosedAtCurrentLevel.complete();\n    this.afterOpenedAtCurrentLevel.complete();\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  open<T, D = any, R = any>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    dialogConfig?: Partial<RdsDialogConfig<D>>,\n  ): RdsDialogRef<T, D, R> {\n    const mergedDialogConfig =\n      this.mergeDialogConfigWithDefaultDialogConfigValues(dialogConfig);\n\n    if (mergedDialogConfig.id && this.getDialogById(mergedDialogConfig.id)) {\n      throw Error(\n        `Dialog with id \"${mergedDialogConfig.id}\" exists already. The dialog id must be unique.`,\n      );\n    }\n\n    const overlayRef = this.createOverlayRef(mergedDialogConfig);\n    const dialogContainer = this.attachDialogContainer(\n      overlayRef,\n      mergedDialogConfig,\n    );\n    const dialogRef = this.attachDialogContent<T, D, R>(\n      componentOrTemplateRef,\n      dialogContainer,\n      overlayRef,\n      mergedDialogConfig,\n    );\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this.removeDialogRef(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    return dialogRef;\n  }\n\n  closeAll(): void {\n    this.closeDialogs(this.openDialogs);\n  }\n\n  private createOverlayRef<T>(dialogConfig: RdsDialogConfig<T>): OverlayRef {\n    const overlayConfig = this.buildOverlayConfig({\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      size: dialogConfig.size,\n      minHeight: dialogConfig.minHeight,\n      maxHeight: dialogConfig.maxHeight,\n      closeOnNavigation: dialogConfig.closeOnNavigation,\n      role: dialogConfig.role,\n    });\n\n    return this.overlay.create(overlayConfig);\n  }\n\n  private getDialogById<T>(id: string): RdsDialogRef<T> | undefined {\n    return this.openDialogs.find((dialog) => dialog.id === id);\n  }\n\n  private buildOverlayConfig<D>({\n    panelClass,\n    hasBackdrop,\n    size,\n    minHeight,\n    maxHeight,\n    closeOnNavigation,\n  }: RdsDialogConfig<D>): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.overlay.position().global(),\n      scrollStrategy: this.scrollStrategy(),\n      panelClass,\n      hasBackdrop,\n      minWidth: '0px',\n      maxWidth: `${DialogSizeWidth[size]}px`,\n      minHeight,\n      maxHeight,\n      disposeOnNavigation: closeOnNavigation,\n    });\n  }\n\n  private attachDialogContainer<D>(\n    overlayRef: OverlayRef,\n    dialogConfig: RdsDialogConfig<D>,\n  ): RdsDialogContainerComponent<D> {\n    const userInjector =\n      dialogConfig.viewContainerRef && dialogConfig.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this.injector,\n      providers: [{ provide: RdsDialogConfig, useValue: dialogConfig }],\n    });\n\n    const containerPortal = new ComponentPortal<RdsDialogContainerComponent<D>>(\n      RdsDialogContainerComponent,\n      dialogConfig.viewContainerRef,\n      injector,\n      dialogConfig.componentFactoryResolver,\n    );\n    const containerRef =\n      overlayRef.attach<RdsDialogContainerComponent<D>>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private attachDialogContent<T, D, R>(\n    componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n    dialogContainer: RdsDialogContainerComponent<D>,\n    overlayRef: OverlayRef,\n    dialogConfig: RdsDialogConfig<D>,\n  ): RdsDialogRef<T, D, R> {\n    const dialogRef = new RdsDialogRef<T, D, R>(\n      overlayRef,\n      dialogContainer,\n      dialogConfig.id,\n    );\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(\n          componentOrTemplateRef,\n          null as unknown as ViewContainerRef,\n          /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n          { $implicit: dialogConfig.data, dialogRef } as any,\n        ),\n      );\n    } else {\n      const injector = this.createInjector<T, D>(\n        dialogConfig,\n        dialogRef,\n        dialogContainer,\n      );\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n        new ComponentPortal(\n          componentOrTemplateRef,\n          dialogConfig.viewContainerRef,\n          injector,\n        ),\n      );\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef.changeSize(\n      `${DialogSizeWidth[dialogConfig.size]}px`,\n      dialogConfig.height,\n    );\n    dialogRef.centerDialog();\n    dialogRef.updateOverlayPosition();\n\n    return dialogRef;\n  }\n\n  private createInjector<T, D>(\n    dialogConfig: RdsDialogConfig<D>,\n    dialogRef: RdsDialogRef<T>,\n    dialogContainer: RdsDialogContainerComponent<D>,\n  ): Injector {\n    const userInjector =\n      dialogConfig.viewContainerRef && dialogConfig.viewContainerRef.injector;\n\n    const providers: StaticProvider[] = [\n      { provide: RdsDialogContainerComponent, useValue: dialogContainer },\n      { provide: RDS_DIALOG_DATA, useValue: dialogConfig.data },\n      { provide: RdsDialogRef, useValue: dialogRef },\n    ];\n\n    return Injector.create({\n      parent: userInjector || this.injector,\n      providers,\n    });\n  }\n\n  private removeDialogRef<T, D, R>(dialogRef: RdsDialogRef<T, D, R>): void {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n    }\n  }\n\n  private closeDialogs<T, D, R>(dialogs: RdsDialogRef<T, D, R>[]): void {\n    let i = dialogs.length;\n\n    while (i--) {\n      dialogs[i].close();\n    }\n  }\n\n  private mergeDialogConfigWithDefaultDialogConfigValues<D>(\n    dialogConfig?: Partial<RdsDialogConfig<D>>,\n  ): RdsDialogConfig<D> {\n    const config = { ...new RdsDialogConfig<D>(), ...dialogConfig };\n\n    if (!config.panelClass) {\n      config.panelClass = 'rds-dialog-overlay';\n    } else if (typeof config.panelClass === 'string') {\n      config.panelClass = ['rds-dialog-overlay', config.panelClass];\n    } else {\n      config.panelClass = ['rds-dialog-overlay', ...config.panelClass];\n    }\n\n    return config;\n  }\n}\n","import { getClosestDialog } from './get-closet-dialog';\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { RdsDialogRef } from './model';\nimport { RdsDialogService } from './dialog.service';\n\nexport type RdsDialogHostType = 'submit' | 'button' | 'reset';\n\n@Directive({\n  selector: '[rds-dialog-close], [rdsDialogClose]',\n})\nexport class RdsDialogCloseDirective<T, D, R> implements OnInit {\n  private readonly elementRef = inject(ElementRef);\n  private readonly dialogService = inject(RdsDialogService);\n  private dialogRef = inject<RdsDialogRef<T, D, R>>(RdsDialogRef, {\n    optional: true,\n  });\n\n  private _type: RdsDialogHostType = 'button';\n\n  @Input('rds-dialog-close') dialogResult: R;\n\n  @Input('type')\n  @HostBinding('attr.type')\n  get hostType(): RdsDialogHostType {\n    return this._type;\n  }\n\n  set hostType(newValue: RdsDialogHostType) {\n    this._type = newValue;\n  }\n\n  @HostListener('click') onHostClick(): void {\n    this.dialogRef?.close(this.dialogResult);\n  }\n\n  ngOnInit(): void {\n    if (!this.dialogRef) {\n      this.dialogRef = getClosestDialog<T, D, R>(\n        this.elementRef,\n        this.dialogService.openDialogs,\n      ) as RdsDialogRef<T, D, R>;\n    }\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: `[rds-dialog-icon-placeholder], [rdsDialogIconPlaceholder]`,\n})\nexport class RdsDialogIconPlaceholderDirective {\n  @HostBinding('class') readonly hostClass = 'rds-dialog__icon-placeholder';\n}\n","import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  NgZone,\n  Renderer2,\n} from '@angular/core';\nimport { concat, merge } from 'rxjs';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { DimensionsObserver } from '../utils';\nimport { debounceTime, take } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst HEADER_SELECTOR = '.rds-dialog__header';\nconst SCROLLABLE_CLASS = 'rds-dialog--scrollable';\nconst ACTIONS_SELECTOR = '.rds-dialog__actions-container';\n\n@Directive({\n  selector: `[rds-dialog-content], [rdsDialogContent]`,\n})\nexport class RdsDialogContentDirective implements AfterContentInit {\n  private readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly renderer = inject(Renderer2);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly ngZone = inject(NgZone);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly dimensionsObserver = inject(DimensionsObserver);\n\n  private _height = '100%';\n\n  @HostBinding('class') readonly hostClass = 'rds-dialog__content';\n\n  @HostBinding('style.height') get hostHeight(): string {\n    return this._height;\n  }\n\n  ngAfterContentInit(): void {\n    const refreshTriggers$ = merge(\n      this.dimensionsObserver.observe(this.nativeElement),\n      this.contentObserver.observe(this.nativeElement),\n    );\n\n    // thanks to this concat we debounce all but first emission\n    concat(\n      refreshTriggers$.pipe(take(1)),\n      refreshTriggers$.pipe(debounceTime(200)),\n    )\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.ngZone.runOutsideAngular(() => {\n          this._refreshHeight();\n        });\n      });\n  }\n\n  private _refreshHeight(): void {\n    const parentElement = this.nativeElement.parentElement as HTMLElement;\n\n    this.toggleScrollableClass();\n\n    const header = parentElement.querySelector(HEADER_SELECTOR);\n    const actionsContainer = parentElement.querySelector(ACTIONS_SELECTOR);\n\n    const actionsContainerHeight = actionsContainer?.scrollHeight || 0;\n\n    Promise.resolve().then(() => {\n      const headerHeight = header?.scrollHeight || 0;\n      const newHeight = `calc(100% - ${headerHeight}px - ${actionsContainerHeight}px)`;\n\n      if (this._height !== newHeight) {\n        this.ngZone.run(() => {\n          this._height = newHeight;\n          this.cdr.markForCheck();\n        });\n      }\n    });\n  }\n\n  private toggleScrollableClass(): void {\n    const rdsDialog = this.nativeElement.parentElement?.parentElement;\n\n    if (!rdsDialog) {\n      return;\n    }\n\n    if (this.nativeElement.scrollHeight > this.nativeElement.offsetHeight) {\n      this.renderer.addClass(rdsDialog, SCROLLABLE_CLASS);\n    } else {\n      this.renderer.removeChild(rdsDialog, SCROLLABLE_CLASS);\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  OnInit,\n} from '@angular/core';\nimport { RdsDialogRef } from './model';\nimport { RdsDialogService } from './dialog.service';\nimport { getClosestDialog } from './get-closet-dialog';\nimport { debounceTime } from 'rxjs';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextId = 0;\n\n@Directive({\n  selector: '[rds-dialog-header], [rdsDialogHeader]',\n})\nexport class RdsDialogHeaderDirective<T, R> implements AfterViewInit, OnInit {\n  private readonly dialogService = inject(RdsDialogService);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly ngZone = inject(NgZone);\n  private readonly contentObserver = inject(ContentObserver);\n  private dialogRef = inject<RdsDialogRef<T, R>>(RdsDialogRef, {\n    optional: true,\n  });\n\n  private _id = `rds-dialog-header-${nextId++}`;\n\n  @HostBinding('style.width')\n  private _width = '100%';\n\n  @HostBinding('class') readonly hostClass = 'rds-dialog__header';\n\n  @Input()\n  @HostBinding('id')\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newValue: string) {\n    this._id = newValue;\n  }\n\n  ngOnInit(): void {\n    if (!this.dialogRef) {\n      const dialogRef = getClosestDialog(\n        this.elementRef,\n        this.dialogService.openDialogs,\n      );\n\n      if (dialogRef) {\n        this.dialogRef = dialogRef;\n      }\n    }\n\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        if (this.dialogRef && !this.dialogRef.dialogContainer.ariaLabelledBy) {\n          this.dialogRef.dialogContainer.ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.ngZone.runOutsideAngular(() => this._refreshWidth());\n    this.contentObserver\n      .observe(this.elementRef)\n      .pipe(debounceTime(50), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this._refreshWidth());\n  }\n\n  private _refreshWidth(): void {\n    const contentElement = this.elementRef.nativeElement;\n    const parentElement = contentElement.parentElement as HTMLElement;\n\n    const iconPlaceholder = parentElement.querySelector(\n      '.rds-dialog__icon-placeholder',\n    );\n\n    const iconsWidth = iconPlaceholder?.clientWidth || 0;\n\n    Promise.resolve().then(() => {\n      const newWidth = `calc(100% - ${iconsWidth}px)`;\n\n      if (newWidth !== this._width) {\n        this.ngZone.run(() => {\n          this._width = newWidth;\n          this.cdr.markForCheck();\n        });\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsDialogContainerComponent } from './dialog-container.component';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { RdsDialogHeaderDirective } from './dialog-header.directive';\nimport { RdsDialogActionsContainerDirective } from './dialog-actions-container.directive';\nimport { RdsDialogContentDirective } from './dialog-content.directive';\nimport { RdsDialogIconPlaceholderDirective } from './dialog-icon-placeholder.directive';\nimport { RdsDialogCloseDirective } from './dialog-close.directive';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nconst ELEMENTS = [\n  RdsDialogHeaderDirective,\n  RdsDialogActionsContainerDirective,\n  RdsDialogContentDirective,\n  RdsDialogIconPlaceholderDirective,\n  RdsDialogCloseDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    A11yModule,\n    OverlayModule,\n    ObserversModule,\n  ],\n  declarations: [RdsDialogContainerComponent, ...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsDialogModule {}\n","import {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceStringArray,\n} from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {\n  ComponentPortal,\n  ComponentType,\n  TemplatePortal,\n} from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  InjectionToken,\n  Input,\n  isDevMode,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter } from './adapter';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, startWith, take } from 'rxjs/operators';\nimport { RdsCalendarComponent } from './calendar.component';\nimport { RDS_CALENDAR_VIEW_ORDERED, RdsCalendarView } from './calendar.types';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport {\n  RdsCalendarCellClassFunction,\n  RdsCalendarUserEvent,\n} from './calendar-body.component';\nimport { DateFilterFn } from './datepicker-input.base';\nimport {\n  DateRange,\n  ExtractDateTypeFromSelection,\n  RdsDateSelectionModel,\n} from './date-selection.model';\nimport {\n  RDS_DATE_RANGE_SELECTION_STRATEGY,\n  RdsDateRangeSelectionStrategy,\n} from './date-range-selection.strategy';\nimport { RdsDatepickerIntl } from './datepicker.intl';\nimport { RdsDialogRef, RdsDialogService } from '../dialog';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet datepickerUid = 0;\n\nexport const RDS_DATEPICKER_SCROLL_STRATEGY = new InjectionToken<\n  () => ScrollStrategy\n>('RDS_DATEPICKER_SCROLL_STRATEGY');\n\nexport function RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY(\n  overlay: Overlay,\n): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\nexport type DatepickerDropdownPositionX = 'start' | 'end';\nexport type DatepickerDropdownPositionY = 'above' | 'below';\n\nexport const RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: RDS_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\nclass RdsDatepickerContentBase {\n  public readonly _elementRef = inject(ElementRef);\n}\n\n@Component({\n  selector: 'rds-datepicker-content',\n  templateUrl: './datepicker-content.html',\n  styleUrls: ['./datepicker-content.scss'],\n  animations: [\n    trigger('transformPanel', [\n      state(\n        'void',\n        style({\n          opacity: 0,\n          transform: 'scale(1, 0.8)',\n        }),\n      ),\n      transition(\n        'void => enter',\n        animate(\n          '120ms cubic-bezier(0, 0, 0.2, 1)',\n          style({\n            opacity: 1,\n            transform: 'scale(1, 1)',\n          }),\n        ),\n      ),\n      transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    trigger('fadeInCalendar', [\n      state('void', style({ opacity: 0 })),\n      state('enter', style({ opacity: 1 })),\n      transition(\n        'void => *',\n        animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n      ),\n    ]),\n  ],\n  exportAs: 'rdsDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsDatepickerContentComponent<\n    C extends RdsDatepickerControl<D>,\n    S,\n    D = ExtractDateTypeFromSelection<S>,\n  >\n  extends RdsDatepickerContentBase\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  public override readonly _elementRef = inject(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly globalModel = inject<RdsDateSelectionModel<S, D>>(\n    RdsDateSelectionModel,\n  );\n  private readonly dateAdapter = inject<DateAdapter<D>>(DateAdapter);\n  private readonly rangeSelectionStrategy = inject<\n    RdsDateRangeSelectionStrategy<D>\n  >(RDS_DATE_RANGE_SELECTION_STRATEGY, { optional: true });\n  private readonly intl = inject(RdsDatepickerIntl);\n\n  private _subscriptions = new Subscription();\n  private _model: RdsDateSelectionModel<S, D> | null = null;\n\n  @HostBinding('class') class = 'rds-datepicker-content';\n\n  @HostBinding('class.rds-datepicker-content-touch') get isContentTouch():\n    | boolean\n    | null {\n    return this.datepicker && this.datepicker.touchUi ? true : null;\n  }\n\n  @HostBinding('@transformPanel') get transformPanel(): 'enter' | 'void' {\n    return this._animationState;\n  }\n\n  @ViewChild(forwardRef(() => RdsCalendarComponent))\n  _calendar: RdsCalendarComponent<D> | null = null;\n\n  datepicker: RdsDatepickerBaseDirective<C, S, D> | null = null;\n  comparisonStart: D | null = null;\n  comparisonEnd: D | null = null;\n  _animationState: 'enter' | 'void' = 'enter';\n  _animationDone = new Subject<void>();\n  _closeButtonText: string | null = null;\n  _closeButtonFocused: boolean | null = null;\n  _actionsPortal: TemplatePortal | null = null;\n\n  @HostListener('@transformPanel.done')\n  _onAnimationDone(): void {\n    this._animationDone.next();\n  }\n\n  constructor() {\n    super();\n    this.intl.changes\n      .pipe(\n        startWith(this.intl.closeCalendarLabel),\n        map(() => this.intl.closeCalendarLabel || 'Close calendar'),\n        takeUntilDestroyed(),\n      )\n      .subscribe((value) => {\n        this._closeButtonText = value;\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    this._model = this._actionsPortal\n      ? this.globalModel.clone()\n      : this.globalModel;\n  }\n\n  ngAfterViewInit(): void {\n    this._subscriptions.add(\n      this.datepicker?.stateChanges.subscribe(() => {\n        this.cdr.markForCheck();\n      }),\n    );\n    this._calendar?.focusActiveCell();\n  }\n\n  ngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n    this._animationDone.complete();\n  }\n\n  _handleUserSelection(event: RdsCalendarUserEvent<D | null>): void {\n    const selection = this._model?.selection;\n    const value = event.value;\n    const isRange = selection instanceof DateRange;\n\n    if (isRange && this.rangeSelectionStrategy) {\n      const newSelection = this.rangeSelectionStrategy.selectionFinished(\n        value,\n        selection as unknown as DateRange<D>,\n        event.event,\n      );\n      this._model?.updateSelection(newSelection as unknown as S, this);\n    } else if (\n      value &&\n      (isRange || !this.dateAdapter.sameDate(value, selection as unknown as D))\n    ) {\n      this._model?.add(value);\n    }\n\n    if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n      this.datepicker?.close();\n    }\n  }\n\n  _startExitAnimation(): void {\n    this._animationState = 'void';\n    this.cdr.markForCheck();\n  }\n\n  _getSelected(): D | DateRange<D> | null {\n    return (this._model?.selection as D | DateRange<D> | null) || null;\n  }\n\n  _applyPendingSelection(): void {\n    if (this._model !== this.globalModel) {\n      this.globalModel.updateSelection(this._model?.selection as S, this);\n    }\n  }\n}\n\nexport interface RdsDatepickerControl<D> {\n  getStartValue(): D | null;\n\n  min: D | null;\n  max: D | null;\n  disabled: boolean;\n  dateFilter: DateFilterFn<D>;\n\n  getConnectedOverlayOrigin(): ElementRef;\n\n  stateChanges: Observable<void>;\n}\n\nexport interface RdsDatepickerPanel<\n  C extends RdsDatepickerControl<D>,\n  S,\n  D = ExtractDateTypeFromSelection<S>,\n> {\n  closedStream: EventEmitter<void>;\n  datepickerInput: C;\n  disabled: boolean;\n  id: string;\n  opened: boolean;\n  openedStream: EventEmitter<void>;\n  stateChanges: Subject<void>;\n  availableViews: RdsCalendarView[];\n\n  open(): void;\n\n  registerInput(input: C): RdsDateSelectionModel<S, D>;\n}\n\n@Directive()\nexport abstract class RdsDatepickerBaseDirective<\n  C extends RdsDatepickerControl<D>,\n  S,\n  D = ExtractDateTypeFromSelection<S>,\n> implements RdsDatepickerPanel<C, S, D>, OnDestroy, OnChanges\n{\n  private readonly dialog = inject(RdsDialogService);\n  private readonly overlay = inject(Overlay);\n  private readonly ngZone = inject(NgZone);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly scrollStrategy = inject(RDS_DATEPICKER_SCROLL_STRATEGY);\n  private readonly dateAdapter = inject<DateAdapter<D>>(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly document = inject(DOCUMENT, { optional: true });\n  private readonly model = inject<RdsDateSelectionModel<S, D>>(\n    RdsDateSelectionModel,\n  );\n  private _originalShowToggle: boolean | null = null;\n\n  private _inputStateChanges = Subscription.EMPTY;\n\n  @Input() calendarHeaderComponent: ComponentType<unknown> | null = null;\n\n  @Input()\n  get startAt(): D | null {\n    return (\n      this._startAt ||\n      (this.datepickerInput ? this.datepickerInput.getStartValue() : null)\n    );\n  }\n\n  set startAt(value: D | null) {\n    this._startAt = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n  }\n\n  private _startAt: D | null = null;\n\n  @Input() startView: RdsCalendarView = 'month';\n\n  @Input()\n  set touchUi(value: BooleanInput) {\n    const isTouchUi = booleanAttribute(value);\n\n    if (isTouchUi !== this._touchUi) {\n      this._touchUi = isTouchUi;\n      this.stateChanges.next();\n    }\n  }\n\n  get touchUi(): boolean {\n    return this._touchUi;\n  }\n\n  private _touchUi = false;\n\n  @Input()\n  set disabled(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled === null && this.datepickerInput\n      ? this.datepickerInput.disabled\n      : !!this._disabled;\n  }\n\n  private _disabled: boolean | null = null;\n\n  @Input()\n  set availableViews(newViews: RdsCalendarView[]) {\n    const views = RDS_CALENDAR_VIEW_ORDERED.filter((view) =>\n      newViews.includes(view),\n    );\n\n    if (views.join('') !== this._availableViews.join('')) {\n      this._availableViews = views;\n      this._updateShowToggleIfNeeded();\n      this.stateChanges.next();\n    }\n  }\n\n  get availableViews(): RdsCalendarView[] {\n    return this._availableViews;\n  }\n\n  private _availableViews: RdsCalendarView[] = RDS_CALENDAR_VIEW_ORDERED;\n\n  @Input()\n  set showToggle(value: BooleanInput | null) {\n    const newValue = value === null ? value : coerceBooleanProperty(value);\n\n    if (this._originalShowToggle !== newValue) {\n      this._originalShowToggle = newValue;\n      this._updateShowToggleIfNeeded();\n      this.stateChanges.next();\n    }\n  }\n\n  get showToggle(): boolean | null {\n    return this._showToggle;\n  }\n\n  private _showToggle: boolean | null = true;\n\n  @Input()\n  xPosition: DatepickerDropdownPositionX = 'start';\n\n  @Input()\n  yPosition: DatepickerDropdownPositionY = 'below';\n\n  @Input({ transform: booleanAttribute }) restoreFocus = true;\n\n  @Output() readonly yearSelected = new EventEmitter<D>();\n  @Output() readonly monthSelected = new EventEmitter<D>();\n  @Output() readonly viewChanged = new EventEmitter<RdsCalendarView>(true);\n\n  @Input() dateClass: RdsCalendarCellClassFunction<D> | null = null;\n  @Output() openedStream = new EventEmitter<void>();\n  @Output() closedStream = new EventEmitter<void>();\n\n  @Input({ transform: coerceStringArray }) panelClass: string[] | string = '';\n\n  @Input()\n  set opened(value: BooleanInput) {\n    booleanAttribute(value) ? this.open() : this.close();\n  }\n\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  private _opened = false;\n\n  id = `rds-datepicker-${datepickerUid++}`;\n\n  private _popupRef: OverlayRef | null = null;\n  private _dialogRef: RdsDialogRef<\n    RdsDatepickerContentComponent<C, S, D>,\n    D\n  > | null = null;\n  private _popupComponentRef: ComponentRef<\n    RdsDatepickerContentComponent<C, S, D>\n  > | null = null;\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n  private _backdropHarnessClass = `${this.id}-backdrop`;\n  private _actionsPortal: TemplatePortal | null = null;\n  datepickerInput: C;\n\n  readonly stateChanges = new Subject<void>();\n\n  _getStartView(): RdsCalendarView {\n    return this.availableViews.includes(this.startView)\n      ? this.startView\n      : this.availableViews[0];\n  }\n\n  _getMinDate(): D | null {\n    return this.datepickerInput && this.datepickerInput.min;\n  }\n\n  _getMaxDate(): D | null {\n    return this.datepickerInput && this.datepickerInput.max;\n  }\n\n  _getDateFilter(): DateFilterFn<D> {\n    return this.datepickerInput && this.datepickerInput.dateFilter;\n  }\n\n  constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const positionChange = changes['xPosition'] || changes['yPosition'];\n\n    if (positionChange && !positionChange.firstChange && this._popupRef) {\n      this._setConnectedPositions(\n        this._popupRef.getConfig()\n          .positionStrategy as FlexibleConnectedPositionStrategy,\n      );\n\n      if (this.opened) {\n        this._popupRef.updatePosition();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyPopup();\n    this.close();\n    this._inputStateChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  select(date: D): void {\n    this.model.add(date);\n  }\n\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _viewChanged(view: RdsCalendarView): void {\n    this.viewChanged.emit(view);\n  }\n\n  registerInput(input: C): RdsDateSelectionModel<S, D> {\n    if (this.datepickerInput) {\n      throw Error(\n        'A RdsDatepicker can only be associated with a single input.',\n      );\n    }\n\n    this._inputStateChanges.unsubscribe();\n    this.datepickerInput = input;\n    this._inputStateChanges = input.stateChanges.subscribe(() =>\n      this.stateChanges.next(undefined),\n    );\n\n    return this.model;\n  }\n\n  registerActions(portal: TemplatePortal): void {\n    if (this._actionsPortal) {\n      throw Error(\n        'A RdsDatepicker can only be associated with a single actions row.',\n      );\n    }\n\n    this._actionsPortal = portal;\n  }\n\n  removeActions(portal: TemplatePortal): void {\n    if (portal === this._actionsPortal) {\n      this._actionsPortal = null;\n    }\n  }\n\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n\n    if (!this.datepickerInput) {\n      throw Error(\n        'Attempted to open an RdsDatepicker with no associated input.',\n      );\n    }\n\n    if (this.document) {\n      this._focusedElementBeforeOpen = this.document\n        .activeElement as HTMLElement | null;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n\n    if (this._popupComponentRef && this._popupRef) {\n      const instance = this._popupComponentRef.instance;\n      instance._startExitAnimation();\n      instance._animationDone\n        .pipe(take(1))\n        .subscribe(() => this._destroyPopup());\n    }\n\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n\n    const completeClose = (): void => {\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (\n      this.restoreFocus &&\n      this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function'\n    ) {\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  _applyPendingSelection(): void {\n    const instance =\n      this._popupComponentRef?.instance || this._dialogRef?.componentInstance;\n    instance?._applyPendingSelection();\n  }\n\n  private _updateShowToggleIfNeeded(): void {\n    const shouldShowToggle =\n      this._originalShowToggle === null\n        ? this._availableViews.length > 1\n        : coerceBooleanProperty(this._originalShowToggle);\n\n    if (this._showToggle !== shouldShowToggle) {\n      this._showToggle = shouldShowToggle;\n    }\n  }\n\n  private _openAsDialog(): void {\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this.dialog.open<\n      RdsDatepickerContentComponent<C, S, D>,\n      D\n    >(RdsDatepickerContentComponent, {\n      viewContainerRef: this.viewContainerRef,\n      panelClass: 'rds-datepicker-dialog',\n      hasBackdrop: true,\n      disableClose: false,\n      size: 'xl',\n      height: '',\n      minHeight: '',\n      maxHeight: '',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n\n    if (this._dialogRef.componentInstance) {\n      this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n  }\n\n  private _openAsPopup(): void {\n    const portal = new ComponentPortal<RdsDatepickerContentComponent<C, S, D>>(\n      RdsDatepickerContentComponent,\n      this.viewContainerRef,\n    );\n\n    this._destroyPopup();\n    this._createPopup();\n    this._popupComponentRef = (this._popupRef as OverlayRef).attach(portal);\n    this._forwardContentValues(this._popupComponentRef?.instance);\n\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._popupRef?.updatePosition();\n    });\n  }\n\n  protected _forwardContentValues(\n    instance: RdsDatepickerContentComponent<C, S, D>,\n  ): void {\n    instance.datepicker = this;\n    instance._actionsPortal = this._actionsPortal;\n  }\n\n  private _createPopup(): void {\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.rds-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition();\n\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._setConnectedPositions(positionStrategy),\n      hasBackdrop: true,\n      backdropClass: [\n        'rds-overlay-transparent-backdrop',\n        this._backdropHarnessClass,\n      ],\n      scrollStrategy: this.scrollStrategy(),\n      panelClass: 'rds-datepicker-popup',\n    });\n\n    this._popupRef = this.overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(\n        filter((event) => {\n          return (\n            (event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n            (this.datepickerInput &&\n              hasModifierKey(event, 'altKey') &&\n              event.keyCode === UP_ARROW)\n          );\n        }),\n      ),\n    ).subscribe((event) => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  private _destroyPopup(): void {\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupRef = this._popupComponentRef = null;\n    }\n  }\n\n  private _setConnectedPositions(\n    strategy: FlexibleConnectedPositionStrategy,\n  ): FlexibleConnectedPositionStrategy {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n\n    return strategy.withPositions([\n      {\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY,\n      },\n      {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY,\n      },\n      {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY,\n      },\n      {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY,\n      },\n    ]);\n  }\n}\n","<div\n  cdkTrapFocus\n  class=\"rds-datepicker-content-container\"\n  [class.rds-datepicker-content-container-with-actions]=\"_actionsPortal\"\n>\n  <rds-calendar\n    [id]=\"datepicker?.id|| ''\"\n    [ngClass]=\"datepicker?.panelClass || ''\"\n    [class.rds-datepicker-with-toggle]=\"datepicker?.showToggle\"\n    [startAt]=\"datepicker?.startAt || null\"\n    [startView]=\"datepicker?._getStartView() || 'month'\"\n    [availableViews]=\"datepicker?.availableViews || ['month', 'year', 'multi-year']\"\n    [minDate]=\"datepicker?._getMinDate() || null\"\n    [maxDate]=\"datepicker?._getMaxDate() || null\"\n    [dateFilter]=\"datepicker?._getDateFilter() || null\"\n    [headerComponent]=\"datepicker?.calendarHeaderComponent || null\"\n    [selected]=\"_getSelected()\"\n    [dateClass]=\"datepicker?.dateClass || null\"\n    [comparisonStart]=\"comparisonStart\"\n    [comparisonEnd]=\"comparisonEnd\"\n    [showToggle]=\"datepicker?.showToggle || null\"\n    [@fadeInCalendar]=\"'enter'\"\n    (yearSelected)=\"datepicker?._selectYear($event)\"\n    (monthSelected)=\"datepicker?._selectMonth($event)\"\n    (viewChanged)=\"datepicker?._viewChanged($event)\"\n    (_userSelection)=\"_handleUserSelection($event)\"\n  />\n\n  <ng-template [cdkPortalOutlet]=\"_actionsPortal\" />\n\n  <!--&lt;!&ndash;   Invisible close button for screen reader users. &ndash;&gt;-->\n  <button\n    type=\"button\"\n    rds-primary-button\n    class=\"rds-datepicker-close-button\"\n    [class.cdk-visually-hidden]=\"!_closeButtonFocused\"\n    (focus)=\"_closeButtonFocused = true\"\n    (blur)=\"_closeButtonFocused = false\"\n    (click)=\"datepicker?.close()\"\n  >\n    {{ _closeButtonText }}\n  </button>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  RdsDatepickerBaseDirective,\n  RdsDatepickerControl,\n} from './datepicker-base';\nimport { RDS_SINGLE_DATE_SELECTION_MODEL_PROVIDER } from './date-selection.model';\n\n@Component({\n  selector: 'rds-datepicker',\n  template: '',\n  exportAs: 'rdsDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    RDS_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n    {\n      provide: RdsDatepickerBaseDirective,\n      useExisting: RdsDatepickerComponent,\n    },\n  ],\n})\nexport class RdsDatepickerComponent<D> extends RdsDatepickerBaseDirective<\n  RdsDatepickerControl<D>,\n  D | null,\n  D\n> {}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n} from '@angular/forms';\nimport { DateAdapter, RDS_DATE_FORMATS, RdsDateFormats } from './adapter';\nimport { noop, Subject, Subscription } from 'rxjs';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport {\n  DateSelectionModelChange,\n  ExtractDateTypeFromSelection,\n  RdsDateSelectionModel,\n} from './date-selection.model';\n\nexport class RdsDatepickerInputEvent<D, S = unknown> {\n  value: D | null;\n\n  constructor(\n    public readonly target: RdsDatepickerInputBaseDirective<S, D>,\n    public readonly targetElement: HTMLElement,\n  ) {\n    this.value = this.target.value;\n  }\n}\n\nexport type DateFilterFn<D> = (date: D | null) => boolean;\n\n@Directive()\nexport abstract class RdsDatepickerInputBaseDirective<\n    S,\n    D = ExtractDateTypeFromSelection<S>,\n  >\n  implements\n    ControlValueAccessor,\n    AfterViewInit,\n    OnChanges,\n    OnDestroy,\n    Validator\n{\n  protected readonly elementRef =\n    inject<ElementRef<HTMLInputElement>>(ElementRef);\n  public readonly dateAdapter = inject<DateAdapter<D>>(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  protected readonly dateFormats = inject(RDS_DATE_FORMATS, {\n    optional: true,\n  }) as RdsDateFormats;\n  private _isInitialized = false;\n\n  @Input()\n  get value(): D | null {\n    return this._model\n      ? this._getValueFromModel(this._model.selection)\n      : this._pendingValue;\n  }\n\n  set value(value: D | null) {\n    this._assignValueProgrammatically(value);\n  }\n\n  protected _model: RdsDateSelectionModel<S, D> | undefined;\n\n  @Input()\n  set disabled(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n    const element = this.elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.stateChanges.next();\n    }\n\n    if (newValue && this._isInitialized && element.blur) {\n      element.blur();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled || this._parentDisabled();\n  }\n\n  private _disabled?: boolean;\n  private _valueChangesSubscription = Subscription.EMPTY;\n  private _localeSubscription = Subscription.EMPTY;\n\n  @Output() readonly dateChange = new EventEmitter<\n    RdsDatepickerInputEvent<D, S>\n  >();\n\n  @Output() readonly dateInput = new EventEmitter<\n    RdsDatepickerInputEvent<D, S>\n  >();\n\n  stateChanges = new Subject<void>();\n\n  _onTouched = noop;\n  _validatorOnChange = noop;\n  private _cvaOnChange: (value: D | null) => void = noop;\n  private _pendingValue: D | null = null;\n  protected _lastValueValid = false;\n\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid\n      ? null\n      : { rdsDatepickerParse: { text: this.elementRef.nativeElement.value } };\n  };\n\n  private _filterValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const controlValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(control.value),\n    );\n\n    return !controlValue || this._matchesFilter(controlValue)\n      ? null\n      : { rdsDatepickerFilter: true };\n  };\n\n  private _minValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const controlValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(control.value),\n    );\n    const min = this._getMinDate();\n\n    return !min ||\n      !controlValue ||\n      this.dateAdapter.compareDate(min, controlValue) <= 0\n      ? null\n      : { rdsDatepickerMin: { min: min, actual: controlValue } };\n  };\n\n  private _maxValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const controlValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(control.value),\n    );\n    const max = this._getMaxDate();\n\n    return !max ||\n      !controlValue ||\n      this.dateAdapter.compareDate(max, controlValue) >= 0\n      ? null\n      : { rdsDatepickerMax: { max: max, actual: controlValue } };\n  };\n\n  protected _getValidators(): ValidatorFn[] {\n    return [\n      this._parseValidator,\n      this._minValidator,\n      this._maxValidator,\n      this._filterValidator,\n    ];\n  }\n\n  abstract _getMinDate(): D | null;\n\n  abstract _getMaxDate(): D | null;\n\n  protected abstract _getDateFilter(): DateFilterFn<D> | undefined;\n\n  _registerModel(model: RdsDateSelectionModel<S, D>): void {\n    this._model = model;\n    this._valueChangesSubscription.unsubscribe();\n\n    if (this._pendingValue) {\n      this._assignValue(this._pendingValue);\n    }\n\n    this._valueChangesSubscription = this._model.selectionChanged.subscribe(\n      (event) => {\n        if (this._shouldHandleChangeEvent(event)) {\n          const value = this._getValueFromModel(event.selection);\n          this._lastValueValid = this._isValidValue(value);\n          this._cvaOnChange(value);\n          this._onTouched();\n          this._formatValue(value);\n          this.dateInput.emit(\n            new RdsDatepickerInputEvent(this, this.elementRef.nativeElement),\n          );\n          this.dateChange.emit(\n            new RdsDatepickerInputEvent(this, this.elementRef.nativeElement),\n          );\n        }\n      },\n    );\n  }\n\n  protected abstract _openPopup(): void;\n\n  protected abstract _assignValueToModel(model: D | null): void;\n\n  protected abstract _getValueFromModel(modelValue: S | null): D | null;\n\n  protected abstract _validator: ValidatorFn | null;\n\n  protected abstract _shouldHandleChangeEvent(\n    event: DateSelectionModelChange<S>,\n  ): boolean;\n\n  protected constructor() {\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this.dateFormats && isDevMode()) {\n      throw createMissingDateImplError('RDS_DATE_FORMATS');\n    }\n\n    this._localeSubscription = this.dateAdapter.localeChanges.subscribe(() => {\n      this._assignValueProgrammatically(this.value);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this._isInitialized = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (dateInputsHaveChanged(changes, this.dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._valueChangesSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  writeValue(value: D): void {\n    this._assignValueProgrammatically(value);\n  }\n\n  registerOnChange(fn: (value: D | null) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent): void {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n      this._openPopup();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string): void {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n    this._lastValueValid = this._isValidValue(date);\n    date = this.dateAdapter.getValidDateOrNull(date);\n\n    if (!this.dateAdapter.sameDate(date, this.value)) {\n      this._assignValue(date);\n      this._cvaOnChange(date);\n      this.dateInput.emit(\n        new RdsDatepickerInputEvent(this, this.elementRef.nativeElement),\n      );\n    } else {\n      // Call the CVA change handler for invalid values\n      // since this is what marks the control as dirty.\n      if (value && !this.value) {\n        this._cvaOnChange(date);\n      }\n\n      if (lastValueWasValid !== this._lastValueValid) {\n        this._validatorOnChange();\n      }\n    }\n  }\n\n  _onChange(): void {\n    this.dateChange.emit(\n      new RdsDatepickerInputEvent(this, this.elementRef.nativeElement),\n    );\n  }\n\n  _onBlur(): void {\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  protected _formatValue(value: D | null): void {\n    this.elementRef.nativeElement.value = value\n      ? this.dateAdapter.format(value, this.dateFormats.display.dateInput)\n      : '';\n  }\n\n  private _assignValue(value: D | null): void {\n    if (this._model) {\n      this._assignValueToModel(value);\n      this._pendingValue = null;\n    } else {\n      this._pendingValue = value;\n    }\n  }\n\n  private _isValidValue(value: D | null): boolean {\n    return !value || this.dateAdapter.isValid(value);\n  }\n\n  protected _parentDisabled(): boolean {\n    return false;\n  }\n\n  protected _assignValueProgrammatically(value: D | null): void {\n    value = this.dateAdapter.deserialize(value);\n    this._lastValueValid = this._isValidValue(value);\n    value = this.dateAdapter.getValidDateOrNull(value);\n    this._assignValue(value);\n    this._formatValue(value);\n  }\n\n  _matchesFilter(value: D | null): boolean {\n    const filter = this._getDateFilter();\n\n    return !filter || filter(value);\n  }\n}\n\nexport function dateInputsHaveChanged<D>(\n  changes: SimpleChanges,\n  adapter: DateAdapter<D>,\n): boolean {\n  const keys = Object.keys(changes);\n\n  for (const key of keys) {\n    const { previousValue, currentValue } = changes[key];\n\n    if (\n      adapter.isDateInstance(previousValue) &&\n      adapter.isDateInstance(currentValue)\n    ) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {\n  AfterViewInit,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Provider,\n  Renderer2,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { merge, Subject } from 'rxjs';\nimport {\n  DateFilterFn,\n  RdsDatepickerInputBaseDirective,\n} from './datepicker-input.base';\nimport { RdsDatepickerControl, RdsDatepickerPanel } from './datepicker-base';\nimport { DateSelectionModelChange } from './date-selection.model';\nimport { RDS_FORM_FIELD, RdsFormFieldComponent } from '../form-field';\nimport { takeUntil } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nexport const RDS_DATEPICKER_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RdsDatepickerInputDirective),\n  multi: true,\n};\n\nexport const RDS_DATEPICKER_VALIDATORS: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RdsDatepickerInputDirective),\n  multi: true,\n};\n\nexport const RDS_INPUT_VALUE_ACCESSOR = new InjectionToken<{ value: unknown }>(\n  'RDS_INPUT_VALUE_ACCESSOR',\n);\n\n@Directive({\n  selector: 'input[rdsDatepicker], input[rds-datepicker]',\n  providers: [\n    RDS_DATEPICKER_VALUE_ACCESSOR,\n    RDS_DATEPICKER_VALIDATORS,\n    {\n      provide: RDS_INPUT_VALUE_ACCESSOR,\n      useExisting: RdsDatepickerInputDirective,\n    },\n  ],\n  exportAs: 'rdsDatepickerInput',\n})\nexport class RdsDatepickerInputDirective<D>\n  extends RdsDatepickerInputBaseDirective<D | null, D>\n  implements RdsDatepickerControl<D | null>, AfterViewInit, OnDestroy\n{\n  protected readonly renderer = inject(Renderer2);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly formField = inject<RdsFormFieldComponent<D>>(\n    RDS_FORM_FIELD,\n    { optional: true },\n  ) as RdsFormFieldComponent<D>;\n\n  private _destroyDatepickerSubscriptions$ = new Subject<void>();\n\n  @HostBinding('class') class = 'rds-datepicker-input';\n\n  @HostBinding('attr.aria-haspopup') get ariaHasPopup(): string | null {\n    return this._datepicker ? 'dialog' : null;\n  }\n\n  @HostBinding('attr.aria-owns') get ariaOwns(): string | null {\n    return (this._datepicker?.opened && this._datepicker.id) || null;\n  }\n\n  @HostBinding('attr.min') get attrMin(): string | null {\n    return this.min ? this.dateAdapter.toIso8601(this.min) : null;\n  }\n\n  @HostBinding('attr.max') get attrMax(): string | null {\n    return this.max ? this.dateAdapter.toIso8601(this.max) : null;\n  }\n\n  @HostBinding('attr.data-rds-calendar') get attrDataRdsCalendar():\n    | string\n    | null {\n    return this._datepicker ? this._datepicker.id : null;\n  }\n\n  @HostBinding('disabled') get attrDisabled(): boolean | null {\n    return this.disabled ? true : null;\n  }\n\n  @Input()\n  set rdsDatepicker(\n    datepicker: RdsDatepickerPanel<RdsDatepickerControl<D>, D | null, D>,\n  ) {\n    this._destroyDatepickerSubscriptions$.next();\n\n    if (datepicker) {\n      this._datepicker = datepicker;\n      this._datepicker.closedStream\n        .pipe(\n          takeUntil(this._destroyDatepickerSubscriptions$),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe(() => this._onTouched());\n      this._registerModel(datepicker.registerInput(this));\n      merge(this._datepicker.stateChanges, this.dateAdapter.localeChanges)\n        .pipe(\n          takeUntil(this._destroyDatepickerSubscriptions$),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe(() => {\n          this._setDefaultPlaceholder();\n          this._formatValue(this.value);\n        });\n    }\n  }\n\n  _datepicker?: RdsDatepickerPanel<RdsDatepickerControl<D>, D | null, D>;\n\n  @Input()\n  get min(): D | null {\n    return this._min;\n  }\n\n  set min(value: D | null) {\n    const validValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n\n    if (!this.dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._validatorOnChange();\n    }\n  }\n\n  private _min: D | null = null;\n\n  @Input()\n  get max(): D | null {\n    return this._max;\n  }\n\n  set max(value: D | null) {\n    const validValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n\n    if (!this.dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._validatorOnChange();\n    }\n  }\n\n  private _max: D | null = null;\n\n  @Input('rdsDatepickerFilter')\n  get dateFilter(): DateFilterFn<D | null> {\n    return this._dateFilter as DateFilterFn<D | null>;\n  }\n\n  set dateFilter(value: DateFilterFn<D | null>) {\n    const wasMatchingValue = this._matchesFilter(this.value);\n    this._dateFilter = value;\n\n    if (this._matchesFilter(this.value) !== wasMatchingValue) {\n      this._validatorOnChange();\n    }\n  }\n\n  private _dateFilter?: DateFilterFn<D | null>;\n\n  protected _validator = Validators.compose(super._getValidators());\n\n  @HostListener('input', ['$event'])\n  onInput($event: Event): void {\n    this._onInput(($event.target as HTMLInputElement).value);\n  }\n\n  @HostListener('change')\n  override _onChange(): void {\n    super._onChange();\n  }\n\n  @HostListener('blur')\n  override _onBlur(): void {\n    super._onBlur();\n  }\n\n  @HostListener('keydown', ['$event'])\n  override _onKeydown($event: KeyboardEvent): void {\n    super._onKeydown($event);\n  }\n\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.formField\n      ? this.formField.getConnectedOverlayOrigin()\n      : this.elementRef;\n  }\n\n  getStartValue(): D | null {\n    return this.value;\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    this._setDefaultPlaceholder();\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._destroyDatepickerSubscriptions$.complete();\n  }\n\n  protected override _formatValue(value: D | null): void {\n    this.elementRef.nativeElement.value = value\n      ? this.dateAdapter.format(\n          value,\n          this.dateFormats.display.dateInput,\n          this._datepicker?.availableViews,\n        )\n      : '';\n  }\n\n  protected _openPopup(): void {\n    if (this._datepicker) {\n      this._datepicker.open();\n    }\n  }\n\n  protected _getValueFromModel(modelValue: D | null): D | null {\n    return modelValue;\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      this._model.updateSelection(value, this);\n    }\n  }\n\n  _getMinDate(): D {\n    return this._min as D;\n  }\n\n  _getMaxDate(): D {\n    return this._max as D;\n  }\n\n  protected _getDateFilter(): DateFilterFn<D | null> {\n    return this._dateFilter as DateFilterFn<D | null>;\n  }\n\n  protected _shouldHandleChangeEvent(\n    event: DateSelectionModelChange<D>,\n  ): boolean {\n    return event.source !== this;\n  }\n\n  protected _setDefaultPlaceholder(): void {\n    if (this.elementRef && this.elementRef.nativeElement) {\n      this.renderer.setAttribute(\n        this.elementRef.nativeElement,\n        'date-placeholder',\n        this._calculateDefaultPlaceholder(),\n      );\n    }\n  }\n\n  protected _calculateDefaultPlaceholder(): string {\n    return this.dateAdapter.placeholderFormat(\n      this.dateFormats.display.dateInput,\n      this._datepicker?.availableViews,\n    );\n  }\n}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, of, Subscription } from 'rxjs';\nimport { RdsDatepickerIntl } from './datepicker.intl';\nimport { RdsDatepickerControl, RdsDatepickerPanel } from './datepicker-base';\nimport { ExtractDateTypeFromSelection } from './date-selection.model';\nimport { RdsFormFieldComponent, RdsFormFieldSize } from '../form-field';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT } from '../utils';\n\n@Directive({\n  selector: '[rdsDatepickerToggleIcon], [rds-datepicker-toggle-icon]',\n})\nexport class RdsDatepickerToggleIconDirective {}\n\n@Component({\n  selector: 'rds-datepicker-toggle',\n  templateUrl: './datepicker-toggle.component.html',\n  styleUrls: ['./datepicker-toggle.component.scss'],\n  exportAs: 'rdsDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsDatepickerToggleComponent<\n    S,\n    D = ExtractDateTypeFromSelection<S>,\n  >\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  public readonly intl = inject(RdsDatepickerIntl);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly formField = inject<RdsFormFieldComponent<D>>(\n    forwardRef(() => RdsFormFieldComponent),\n    { optional: true },\n  );\n\n  private _stateChanges = Subscription.EMPTY;\n\n  @HostBinding('class') get classes(): string[] {\n    const classes = ['rds-datepicker-toggle'];\n\n    if (this.forDatepicker && this.forDatepicker.opened) {\n      classes.push('rds-datepicker-toggle-active');\n    }\n\n    return classes;\n  }\n\n  @HostBinding('attr.data-rds-calendar') get dataRdsCalendar(): string | null {\n    return this.forDatepicker ? this.forDatepicker.id : null;\n  }\n\n  @HostBinding('attr.tabindex') _tabIndex = null;\n\n  @Input() forDatepicker?: RdsDatepickerPanel<RdsDatepickerControl<D>, S, D>;\n  @Input({ transform: numberAttribute }) tabIndex: number | null;\n  @Input('aria-label') ariaLabel = '';\n\n  @Input()\n  set disabled(value: BooleanInput) {\n    const newValue = value === undefined ? undefined : booleanAttribute(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this.cdr.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.forDatepicker) {\n      return this.forDatepicker.disabled;\n    }\n\n    return this._disabled || false;\n  }\n\n  private _disabled: boolean | undefined;\n\n  @ContentChild(RdsDatepickerToggleIconDirective)\n  _customIcon: RdsDatepickerToggleIconDirective | null = null;\n\n  get _buttonSize(): RdsFormFieldSize {\n    if (this.formField) {\n      return this.formField?.size !== 'l' ? this.formField?.size : 'm';\n    } else {\n      return 's';\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  _onClick($event: Event): void {\n    this._open($event);\n  }\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    const parsedTabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n    this.tabIndex =\n      parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit(): void {\n    this._watchStateChanges();\n\n    if (this.formField) {\n      this.formField.control.stateChanges\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  _open(event: Event): void {\n    if (this.forDatepicker && !this.disabled) {\n      this.forDatepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges(): void {\n    const datepickerStateChanged = this.forDatepicker\n      ? this.forDatepicker.stateChanges.asObservable()\n      : of(null);\n    const inputStateChanged =\n      this.forDatepicker && this.forDatepicker.datepickerInput\n        ? this.forDatepicker.datepickerInput.stateChanges\n        : of(null);\n    const datepickerToggled = this.forDatepicker\n      ? merge(this.forDatepicker.openedStream, this.forDatepicker.closedStream)\n      : of(null);\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this.intl.changes,\n      datepickerStateChanged,\n      inputStateChanged,\n      datepickerToggled,\n    ).subscribe(() => this.cdr.markForCheck());\n  }\n}\n","<button\n  rds-icon-button\n  type=\"button\"\n  [size]=\"_buttonSize\"\n  [ngClass]=\"{ active: forDatepicker?.opened }\"\n  class=\"rds-button--with-only-icon\"\n  [attr.aria-haspopup]=\"forDatepicker ? 'dialog' : null\"\n  [attr.aria-label]=\"ariaLabel || intl.openCalendarLabel\"\n  [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n  [disabled]=\"disabled\"\n>\n  @if (!_customIcon) {\n    <rds-icon\n      class=\"rds-datepicker-toggle-default-icon\"\n      icon=\"calendar\"\n      namespace=\"outlined\"\n    />\n  }\n  <ng-content\n    select=\"[rdsDatepickerToggleIcon], [rds-datepicker-toggle-icon]\"\n  />\n</button>\n","import {\n  booleanAttribute,\n  Directive,\n  DoCheck,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  InjectionToken,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroupDirective,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n  NgForm,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport {\n  DateFilterFn,\n  RdsDatepickerInputBaseDirective,\n  RdsDatepickerInputEvent,\n} from './datepicker-input.base';\nimport { DateRange, DateSelectionModelChange } from './date-selection.model';\nimport { Subject } from 'rxjs';\nimport { ErrorStateMatcher } from '../core';\nimport { updateErrorState } from '../utils';\n\nexport interface RdsDateRangeInputParent<D> {\n  id: string;\n  min: D | null;\n  max: D | null;\n  dateFilter: DateFilterFn<D>;\n  rangePicker: {\n    opened: boolean;\n    id: string;\n  };\n  _startInput: RdsDateRangeInputPartBaseDirective<D>;\n  _endInput: RdsDateRangeInputPartBaseDirective<D>;\n  _groupDisabled: boolean;\n\n  _handleChildValueChange(): void;\n\n  _openDatepicker(): void;\n}\n\nexport const RDS_DATE_RANGE_INPUT_PARENT = new InjectionToken<\n  RdsDateRangeInputParent<unknown>\n>('RDS_DATE_RANGE_INPUT_PARENT');\n\n@Directive()\nabstract class RdsDateRangeInputPartBaseDirective<D>\n  extends RdsDatepickerInputBaseDirective<DateRange<D>>\n  implements OnInit, DoCheck\n{\n  protected readonly rangeInput = inject<RdsDateRangeInputParent<D>>(\n    RDS_DATE_RANGE_INPUT_PARENT,\n  );\n  protected readonly defaultErrorStateMatcher = inject(ErrorStateMatcher);\n  protected readonly injector = inject(Injector);\n  protected readonly parentForm = inject(NgForm, { optional: true });\n  protected readonly parentFormGroup = inject(FormGroupDirective, {\n    optional: true,\n  });\n\n  errorStateMatcher: ErrorStateMatcher | null = null;\n  errorState = false;\n\n  ngControl: NgControl;\n\n  protected abstract override _validator: ValidatorFn | null;\n\n  protected abstract override _assignValueToModel(value: D | null): void;\n\n  protected abstract override _getValueFromModel(\n    modelValue: DateRange<D>,\n  ): D | null;\n\n  ngOnInit(): void {\n    try {\n      const ngControl = this.injector.get(NgControl, null, { self: true });\n\n      if (ngControl) {\n        this.ngControl = ngControl;\n      }\n    } catch (e) {\n      //do nothing\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      const oldState = this.errorState;\n      this.errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this.ngControl?.control ?? null,\n        this.errorStateMatcher || this.defaultErrorStateMatcher,\n      );\n\n      if (this.errorState !== oldState) {\n        this.stateChanges.next();\n      }\n    }\n  }\n\n  isEmpty(): boolean {\n    return this.elementRef.nativeElement.value.length === 0;\n  }\n\n  _getPlaceholder(): string {\n    return this.elementRef.nativeElement.placeholder;\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  override _onInput(value: string): void {\n    super._onInput(value);\n    this.rangeInput._handleChildValueChange();\n  }\n\n  protected _openPopup(): void {\n    this.rangeInput._openDatepicker();\n  }\n\n  _getMinDate(): D {\n    return this.rangeInput.min as D;\n  }\n\n  _getMaxDate(): D {\n    return this.rangeInput.max as D;\n  }\n\n  protected _getDateFilter(): DateFilterFn<D> {\n    return this.rangeInput.dateFilter;\n  }\n\n  protected override _parentDisabled(): boolean {\n    return this.rangeInput._groupDisabled;\n  }\n\n  protected _shouldHandleChangeEvent({\n    source,\n  }: DateSelectionModelChange<DateRange<D>>): boolean {\n    return (\n      source !== this.rangeInput._startInput &&\n      source !== this.rangeInput._endInput\n    );\n  }\n\n  protected override _assignValueProgrammatically(value: D | null): void {\n    super._assignValueProgrammatically(value);\n    const opposite = (\n      this === this.rangeInput._startInput\n        ? this.rangeInput._endInput\n        : this.rangeInput._startInput\n    ) as RdsDateRangeInputPartBaseDirective<D> | undefined;\n    opposite?._validatorOnChange();\n  }\n}\n\n@Directive({\n  selector: 'input[rdsStartDate], input[rds-start-date]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RdsStartDateDirective,\n      multi: true,\n    },\n    { provide: NG_VALIDATORS, useExisting: RdsStartDateDirective, multi: true },\n  ],\n})\nexport class RdsStartDateDirective<D>\n  extends RdsDateRangeInputPartBaseDirective<D>\n  implements DoCheck, OnInit\n{\n  protected override _validator: ValidatorFn | null = null;\n\n  override readonly stateChanges = new Subject<void>();\n\n  @Input()\n  override errorStateMatcher: ErrorStateMatcher | null = null;\n\n  @Output() override readonly dateChange = new EventEmitter<\n    RdsDatepickerInputEvent<D, DateRange<D>>\n  >();\n\n  @Output() override readonly dateInput = new EventEmitter<\n    RdsDatepickerInputEvent<D, DateRange<D>>\n  >();\n\n  @HostBinding('class') class = 'rds-start-date rds-date-range-input-inner';\n  @HostBinding('attr.type') type = 'text';\n\n  @HostBinding('disabled') get isDisabled(): boolean | null {\n    return this.disabled ? true : null;\n  }\n\n  @HostBinding('attr.id') get id(): string {\n    return `${this.rangeInput.id}-start`;\n  }\n\n  @HostBinding('attr.aria-haspopup') get hasPopup(): string | null {\n    return this.rangeInput.rangePicker ? 'dialog' : null;\n  }\n\n  @HostBinding('attr.aria-owns') get ariaOwns(): string | null {\n    return (\n      (this.rangeInput.rangePicker?.opened && this.rangeInput.rangePicker.id) ||\n      null\n    );\n  }\n\n  @HostBinding('attr.min') get min(): string | null {\n    return this._getMinDate()\n      ? this.dateAdapter.toIso8601(this._getMinDate())\n      : null;\n  }\n\n  @HostBinding('attr.max') get max(): string | null {\n    return this._getMaxDate()\n      ? this.dateAdapter.toIso8601(this._getMaxDate())\n      : null;\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(Validators.required) ??\n      null\n    );\n  }\n\n  @Input()\n  set required(value: BooleanInput) {\n    const isRequired = booleanAttribute(value);\n\n    if (isRequired !== this._required) {\n      this._required = isRequired;\n      this.stateChanges.next();\n    }\n  }\n\n  get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  protected _required: boolean;\n\n  private _startValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const start = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(control.value),\n    );\n    const end = this._model ? this._model.selection?.end : null;\n\n    return !start ||\n      !end ||\n      (this.dateAdapter && this.dateAdapter.compareDate(start, end) <= 0)\n      ? null\n      : { rdsStartDateInvalid: { end: end, actual: start } };\n  };\n\n  @HostListener('blur')\n  onBlur(): void {\n    this._onBlur();\n  }\n\n  @HostListener('change')\n  onChange(): void {\n    this._onChange();\n  }\n\n  @HostListener('input', ['$event'])\n  onKeydown($event: Event): void {\n    this._onInput(($event.target as HTMLInputElement).value);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onInput($event: KeyboardEvent): void {\n    this._onKeydown($event);\n  }\n\n  constructor() {\n    super();\n    this._validator = Validators.compose([\n      ...super._getValidators(),\n      this._startValidator,\n    ]);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  override ngDoCheck(): void {\n    super.ngDoCheck();\n  }\n\n  protected _getValueFromModel(modelValue: DateRange<D>): D | null {\n    return modelValue.start;\n  }\n\n  protected override _shouldHandleChangeEvent(\n    change: DateSelectionModelChange<DateRange<D>>,\n  ): boolean {\n    if (!super._shouldHandleChangeEvent(change)) {\n      return false;\n    } else {\n      return !change.oldValue?.start\n        ? !!change.selection.start\n        : !change.selection.start ||\n            !!this.dateAdapter.compareDate(\n              change.oldValue.start,\n              change.selection.start,\n            );\n    }\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      const range = new DateRange(value, this._model.selection?.end);\n      this._model.updateSelection(range as DateRange<D>, this);\n    }\n  }\n\n  protected override _formatValue(value: D | null): void {\n    super._formatValue(value);\n\n    // Any time the input value is reformatted we need to tell the parent.\n    this.rangeInput._handleChildValueChange();\n  }\n\n  /** Gets the value that should be used when mirroring the input's size. */\n  getMirrorValue(): string {\n    const element = this.elementRef.nativeElement;\n    const value = element.value;\n\n    return value.length > 0 ? value : element.placeholder;\n  }\n}\n\n@Directive({\n  selector: 'input[rdsEndDate], input[rds-end-date]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RdsEndDateDirective,\n      multi: true,\n    },\n    { provide: NG_VALIDATORS, useExisting: RdsEndDateDirective, multi: true },\n  ],\n})\nexport class RdsEndDateDirective<D>\n  extends RdsDateRangeInputPartBaseDirective<D>\n  implements DoCheck, OnInit\n{\n  override readonly stateChanges = new Subject<void>();\n\n  @Input()\n  override errorStateMatcher: ErrorStateMatcher | null = null;\n\n  @Output() override readonly dateChange = new EventEmitter<\n    RdsDatepickerInputEvent<D, DateRange<D>>\n  >();\n\n  @Output() override readonly dateInput = new EventEmitter<\n    RdsDatepickerInputEvent<D, DateRange<D>>\n  >();\n\n  @HostBinding('class') class = 'rds-end-date rds-date-range-input-inner';\n  @HostBinding('attr.type') type = 'text';\n\n  @HostBinding('disabled') get isDisabled(): boolean | null {\n    return this.disabled ? true : null;\n  }\n\n  @HostBinding('attr.id') get id(): string {\n    return `${this.rangeInput.id}-end`;\n  }\n\n  @HostBinding('attr.aria-haspopup') get hasPopup(): string | null {\n    return this.rangeInput.rangePicker ? 'dialog' : null;\n  }\n\n  @HostBinding('attr.aria-owns') get ariaOwns(): string | null {\n    return (\n      (this.rangeInput.rangePicker?.opened && this.rangeInput.rangePicker.id) ||\n      null\n    );\n  }\n\n  @HostBinding('attr.min') get min(): string | null {\n    return this._getMinDate()\n      ? this.dateAdapter.toIso8601(this._getMinDate())\n      : null;\n  }\n\n  @HostBinding('attr.max') get max(): string | null {\n    return this._getMaxDate()\n      ? this.dateAdapter.toIso8601(this._getMaxDate())\n      : null;\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(Validators.required) ??\n      null\n    );\n  }\n\n  @Input()\n  set required(value: BooleanInput) {\n    const isRequired = booleanAttribute(value);\n\n    if (isRequired !== this._required) {\n      this._required = isRequired;\n      this.stateChanges.next();\n    }\n  }\n  get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  protected _required: boolean | undefined;\n\n  private _endValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const end = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(control.value),\n    );\n    const start = this._model ? this._model.selection?.start : null;\n\n    return !end || !start || this.dateAdapter.compareDate(end, start) >= 0\n      ? null\n      : { rdsEndDateInvalid: { start: start, actual: end } };\n  };\n\n  protected _validator = Validators.compose([\n    ...super._getValidators(),\n    this._endValidator,\n  ]);\n\n  @HostListener('blur')\n  onBlur(): void {\n    this._onBlur();\n  }\n\n  @HostListener('change')\n  onChange(): void {\n    this._onChange();\n  }\n\n  @HostListener('input', ['$event'])\n  onKeydown($event: Event): void {\n    this._onInput(($event.target as HTMLInputElement).value);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onInput($event: KeyboardEvent): void {\n    this._onKeydown($event);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  override ngDoCheck(): void {\n    super.ngDoCheck();\n  }\n\n  protected _getValueFromModel(modelValue: DateRange<D>): D | null {\n    return modelValue.end;\n  }\n\n  protected override _shouldHandleChangeEvent(\n    change: DateSelectionModelChange<DateRange<D>>,\n  ): boolean {\n    if (!super._shouldHandleChangeEvent(change)) {\n      return false;\n    } else {\n      return !change.oldValue?.end\n        ? !!change.selection.end\n        : !change.selection.end ||\n            !!this.dateAdapter.compareDate(\n              change.oldValue.end,\n              change.selection.end,\n            );\n    }\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      const range = new DateRange(this._model.selection?.start, value);\n      this._model.updateSelection(range as DateRange<D>, this);\n    }\n  }\n\n  override _onKeydown(event: KeyboardEvent): void {\n    // If the user is pressing backspace on an empty end input, move focus back to the start.\n    if (event.keyCode === BACKSPACE && !this.elementRef.nativeElement.value) {\n      this.rangeInput._startInput.focus();\n    }\n\n    super._onKeydown(event);\n  }\n}\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateAdapter } from './adapter';\nimport { Validators } from '@angular/forms';\nimport { merge, Subscription } from 'rxjs';\nimport { FocusOrigin } from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { DateFilterFn, dateInputsHaveChanged } from './datepicker-input.base';\nimport { DateRange, RdsDateSelectionModel } from './date-selection.model';\nimport {\n  RDS_DATE_RANGE_INPUT_PARENT,\n  RdsDateRangeInputParent,\n  RdsEndDateDirective,\n  RdsStartDateDirective,\n} from './date-range-input.parts';\nimport { RdsDatepickerControl, RdsDatepickerPanel } from './datepicker-base';\nimport { RDS_FORM_FIELD, RdsFormFieldComponent } from '../form-field';\nimport { RdsAbstractFormFieldControl } from '../form-field';\nimport { RdsControlType } from '../form-field/control.type';\nimport { RdsDateRangePickerInput } from './date-range-picker.component';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'rds-date-range-input',\n  templateUrl: './date-range-input.component.html',\n  styleUrls: ['./date-range-input.component.scss'],\n  exportAs: 'rdsDateRangeInput',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RdsAbstractFormFieldControl,\n      useExisting: RdsDateRangeInputComponent,\n    },\n    {\n      provide: RDS_DATE_RANGE_INPUT_PARENT,\n      useExisting: RdsDateRangeInputComponent,\n    },\n  ],\n})\nexport class RdsDateRangeInputComponent<D>\n  extends RdsAbstractFormFieldControl<DateRange<D>>\n  implements\n    RdsDatepickerControl<D>,\n    RdsDateRangeInputParent<D>,\n    RdsDateRangePickerInput<D>,\n    AfterContentInit,\n    OnChanges,\n    OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly dateAdapter = inject(DateAdapter, {\n    optional: true,\n  }) as DateAdapter<D>;\n  private readonly formField = inject(RDS_FORM_FIELD, {\n    optional: true,\n  }) as RdsFormFieldComponent<DateRange<D>>;\n\n  private _closedSubscription = Subscription.EMPTY;\n  protected override _id = `rds-date-range-input-${nextUniqueId++}`;\n\n  @HostBinding('class') get classes(): string[] {\n    const classes = ['rds-date-range-input'];\n\n    if (this._shouldHidePlaceholders()) {\n      classes.push('rds-date-range-input-hide-placeholders');\n    }\n\n    if (this.required) {\n      classes.push('rds-date-range-input-required');\n    }\n\n    if (this.disabled) {\n      classes.push('rds-date-range-input-disabled');\n    }\n\n    return classes;\n  }\n\n  @HostBinding('attr.id') idAttr = null;\n  @HostBinding('attr.role') role = 'group';\n\n  @HostBinding('attr.aria-labelledby') get _ariaLabelledby(): string {\n    return this._getAriaLabelledby();\n  }\n\n  @HostBinding('attr.data-rds-calendar') get dataRdsCalendar(): string | null {\n    return this.rangePicker ? this.rangePicker.id : null;\n  }\n\n  override get value(): DateRange<D> {\n    return this._model?.selection as DateRange<D>;\n  }\n\n  controlType: RdsControlType = 'date-range';\n\n  private _dateFilter: DateFilterFn<D> | null = null;\n  private _min: D | null = null;\n  private _max: D | null = null;\n  private _rangePicker: RdsDatepickerPanel<\n    RdsDatepickerControl<D>,\n    DateRange<D>,\n    D\n  > | null = null;\n\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  get placeholder(): string {\n    const start = this._startInput?._getPlaceholder() || '';\n    const end = this._endInput?._getPlaceholder() || '';\n\n    return start || end ? `${start} ${this.separator} ${end}` : '';\n  }\n\n  @Input()\n  get rangePicker(): RdsDatepickerPanel<\n    RdsDatepickerControl<D>,\n    DateRange<D>,\n    D\n  > {\n    return this._rangePicker as RdsDatepickerPanel<\n      RdsDatepickerControl<D>,\n      DateRange<D>,\n      D\n    >;\n  }\n\n  set rangePicker(\n    rangePicker: RdsDatepickerPanel<RdsDatepickerControl<D>, DateRange<D>, D>,\n  ) {\n    if (rangePicker) {\n      this._model = rangePicker.registerInput(this);\n      this._rangePicker = rangePicker;\n      this._closedSubscription.unsubscribe();\n      this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n        this._startInput?._onTouched();\n        this._endInput?._onTouched();\n      });\n\n      if (this._model) {\n        this._registerModel(this._model);\n      }\n    }\n  }\n\n  @HostBinding('attr.required')\n  get attrRequired(): boolean | null {\n    if (this.isBoolean(this._required) && this._required) {\n      this.stateChanges.next();\n\n      return this._required;\n    } else if (this.ngControl?.control) {\n      this.stateChanges.next();\n\n      return this.ngControl?.control?.hasValidator(Validators.required);\n    } else if (\n      this._startInput &&\n      this._endInput &&\n      this.isBoolean(this._startInput.attrRequired) &&\n      this.isBoolean(this._endInput.attrRequired) &&\n      (this._startInput.attrRequired || this._endInput.attrRequired)\n    ) {\n      this.stateChanges.next();\n\n      return this._startInput.attrRequired || this._endInput.attrRequired;\n    } else {\n      return null;\n    }\n  }\n\n  @Input()\n  override set required(value: BooleanInput) {\n    const isRequired = booleanAttribute(value);\n\n    if (isRequired !== this._required) {\n      this._required = isRequired;\n      this.stateChanges.next();\n    }\n  }\n\n  override get required(): boolean {\n    return this.attrRequired ?? false;\n  }\n\n  @Input()\n  get dateFilter(): DateFilterFn<D> {\n    return this._dateFilter as DateFilterFn<D>;\n  }\n\n  set dateFilter(value: DateFilterFn<D>) {\n    const start = this._startInput;\n    const end = this._endInput;\n    const wasMatchingStart = start && start._matchesFilter(start.value);\n    const wasMatchingEnd =\n      end && end._matchesFilter((start as RdsStartDateDirective<D>).value);\n    this._dateFilter = value;\n\n    if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n      start._validatorOnChange();\n    }\n\n    if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n      end._validatorOnChange();\n    }\n  }\n\n  @Input()\n  get min(): D | null {\n    return this._min;\n  }\n\n  set min(value: D | null) {\n    const validValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n\n    if (!this.dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._revalidate();\n    }\n  }\n\n  @Input()\n  get max(): D | null {\n    return this._max;\n  }\n\n  set max(value: D | null) {\n    const validValue = this.dateAdapter.getValidDateOrNull(\n      this.dateAdapter.deserialize(value),\n    );\n\n    if (!this.dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._revalidate();\n    }\n  }\n\n  @Input()\n  override get disabled(): boolean {\n    return this._startInput && this._endInput\n      ? this._startInput.disabled && this._endInput.disabled\n      : this._groupDisabled;\n  }\n\n  override set disabled(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (newValue !== this._groupDisabled) {\n      this._groupDisabled = newValue;\n      this.stateChanges.next();\n    }\n  }\n\n  _groupDisabled = false;\n\n  get errorState(): boolean {\n    if (this._startInput && this._endInput) {\n      return this._startInput.errorState || this._endInput.errorState;\n    }\n\n    return false;\n  }\n\n  get empty(): boolean {\n    const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n    const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n\n    return startEmpty && endEmpty;\n  }\n\n  @HostBinding('attr.aria-describedby')\n  _ariaDescribedBy: string | null = null;\n  private _model?: RdsDateSelectionModel<DateRange<D>>;\n\n  @Input() separator = '–';\n  @Input() comparisonStart: D | null = null;\n  @Input() comparisonEnd: D | null = null;\n\n  @ContentChild(RdsStartDateDirective) _startInput: RdsStartDateDirective<D>;\n  @ContentChild(RdsEndDateDirective) _endInput: RdsEndDateDirective<D>;\n\n  constructor() {\n    super();\n\n    if (!this.dateAdapter && isDevMode()) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n\n  setDescribedByIds(ids: string[]): void {\n    this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n  }\n\n  onContainerClick(): void {\n    if (!this.focused && !this.disabled) {\n      if (!this._model || !this._model.selection?.start) {\n        this._startInput?.focus();\n      } else {\n        this._endInput?.focus();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this._startInput) {\n      throw Error('rds-date-range-input must contain a rdsStartDate input');\n    }\n\n    if (!this._endInput) {\n      throw Error('rds-date-range-input must contain a rdsEndDate input');\n    }\n\n    if (this._model) {\n      this._registerModel(this._model);\n    }\n\n    merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(\n      () => {\n        this.stateChanges.next(undefined);\n      },\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.dateAdapter && dateInputsHaveChanged(changes, this.dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._closedSubscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  getStartValue(): D | null {\n    return this.value ? this.value.start : null;\n  }\n\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.formField\n      ? this.formField.getConnectedOverlayOrigin()\n      : this.elementRef;\n  }\n\n  _getInputMirrorValue(): string {\n    return this._startInput ? this._startInput.getMirrorValue() : '';\n  }\n\n  _shouldHidePlaceholders(): boolean {\n    if (this.formField?.labelPosition !== 'floating') {\n      return false;\n    }\n\n    return this._startInput\n      ? !this.focused && this._startInput.isEmpty()\n      : !this.focused;\n  }\n\n  _handleChildValueChange(): void {\n    this.stateChanges.next(undefined);\n    this.cdr.markForCheck();\n  }\n\n  _openDatepicker(): void {\n    if (this._rangePicker) {\n      this._rangePicker.open();\n    }\n  }\n\n  _shouldHideSeparator(): boolean {\n    return !this.focused && this.empty;\n  }\n\n  _getAriaLabelledby(): string {\n    return this.formField?.labelId as string;\n  }\n\n  _updateFocus(origin: FocusOrigin): void {\n    this._focused = origin !== null;\n    this.stateChanges.next();\n  }\n\n  private _revalidate(): void {\n    if (this._startInput) {\n      this._startInput._validatorOnChange();\n    }\n\n    if (this._endInput) {\n      this._endInput._validatorOnChange();\n    }\n  }\n\n  private _registerModel(model: RdsDateSelectionModel<DateRange<D>>): void {\n    if (this._startInput) {\n      this._startInput._registerModel(model);\n    }\n\n    if (this._endInput) {\n      this._endInput._registerModel(model);\n    }\n  }\n\n  private isBoolean(value: boolean | undefined | null): boolean {\n    return value === true || value === false;\n  }\n}\n","<div\n  class=\"rds-date-range-input-container\"\n  cdkMonitorSubtreeFocus\n  (cdkFocusChange)=\"_updateFocus($event)\"\n>\n  <div class=\"rds-date-range-input-start-wrapper\">\n    <ng-content select=\"input[rdsStartDate]\" />\n    <span class=\"rds-date-range-input-mirror\" aria-hidden=\"true\">{{\n      _getInputMirrorValue()\n    }}</span>\n  </div>\n\n  <span\n    class=\"rds-date-range-input-separator\"\n    [class.rds-date-range-input-separator-hidden]=\"_shouldHideSeparator()\"\n    >{{ separator }}</span\n  >\n\n  <div class=\"rds-date-range-input-end-wrapper\">\n    <ng-content select=\"input[rdsEndDate]\" />\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  RdsDatepickerBaseDirective,\n  RdsDatepickerContentComponent,\n  RdsDatepickerControl,\n} from './datepicker-base';\nimport {\n  DateRange,\n  RDS_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n} from './date-selection.model';\nimport { RDS_CALENDAR_RANGE_STRATEGY_PROVIDER } from './date-range-selection.strategy';\n\nexport interface RdsDateRangePickerInput<D> extends RdsDatepickerControl<D> {\n  comparisonStart: D | null;\n  comparisonEnd: D | null;\n}\n\n@Component({\n  selector: 'rds-date-range-picker',\n  template: '',\n  exportAs: 'rdsDateRangePicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    RDS_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n    RDS_CALENDAR_RANGE_STRATEGY_PROVIDER,\n    {\n      provide: RdsDatepickerBaseDirective,\n      useExisting: RdsDateRangePickerComponent,\n    },\n  ],\n})\nexport class RdsDateRangePickerComponent<D> extends RdsDatepickerBaseDirective<\n  RdsDateRangePickerInput<D>,\n  DateRange<D>,\n  D\n> {\n  protected override _forwardContentValues(\n    instance: RdsDatepickerContentComponent<\n      RdsDateRangePickerInput<D>,\n      DateRange<D>,\n      D\n    >,\n  ): void {\n    super._forwardContentValues(instance);\n\n    const input = this.datepickerInput;\n\n    if (input) {\n      instance.comparisonStart = input.comparisonStart;\n      instance.comparisonEnd = input.comparisonEnd;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  HostListener,\n  inject,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  RdsDatepickerBaseDirective,\n  RdsDatepickerControl,\n} from './datepicker-base';\n\n@Directive({\n  selector:\n    '[rdsDatepickerApply], [rdsDateRangePickerApply], [rds-datepicker-apply], [rds-date-range-picker-apply]',\n})\nexport class RdsDatepickerApplyDirective {\n  private readonly datepicker = inject<\n    RdsDatepickerBaseDirective<\n      RdsDatepickerControl<Record<string, unknown>>,\n      unknown\n    >\n  >(RdsDatepickerBaseDirective);\n\n  @HostListener('click')\n  _applySelection(): void {\n    this.datepicker._applyPendingSelection();\n    this.datepicker.close();\n  }\n}\n\n@Directive({\n  selector:\n    '[rdsDatepickerCancel], [rdsDateRangePickerCancel], [rds-datepicker-cancel], [rds-date-range-picker-cancel]',\n})\nexport class RdsDatepickerCancelDirective {\n  private readonly datepicker = inject<\n    RdsDatepickerBaseDirective<\n      RdsDatepickerControl<Record<string, unknown>>,\n      unknown\n    >\n  >(RdsDatepickerBaseDirective);\n\n  @HostListener('click')\n  _applySelection(): void {\n    this.datepicker.close();\n  }\n}\n\n@Component({\n  selector: 'rds-datepicker-actions, rds-date-range-picker-actions',\n  styleUrls: ['./datepicker-actions.component.scss'],\n  template: `\n    <ng-template>\n      <div class=\"rds-datepicker-actions\">\n        <ng-content />\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsDatepickerActionsComponent implements AfterViewInit, OnDestroy {\n  private readonly datepicker = inject<\n    RdsDatepickerBaseDirective<\n      RdsDatepickerControl<Record<string, unknown>>,\n      unknown\n    >\n  >(RdsDatepickerBaseDirective);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  @ViewChild(TemplateRef) _template: TemplateRef<unknown> | null = null;\n  private _portal: TemplatePortal | null = null;\n\n  ngAfterViewInit(): void {\n    this._portal = new TemplatePortal(\n      this._template as TemplateRef<unknown>,\n      this.viewContainerRef,\n    );\n    this.datepicker.registerActions(this._portal);\n  }\n\n  ngOnDestroy(): void {\n    this.datepicker.removeActions(this._portal as TemplatePortal);\n\n    if (this._portal && this._portal.isAttached) {\n      this._portal?.detach();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsToggleButtonComponent } from './toggle-button.component';\nimport { RdsToggleDirective } from './toggle.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RdsToggleButtonComponent, RdsToggleDirective],\n  exports: [RdsToggleButtonComponent, RdsToggleDirective],\n})\nexport class RdsToggleButtonModule {}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport {\n  RdsCalendarComponent,\n  RdsCalendarHeaderComponent,\n} from './calendar.component';\nimport { RdsCalendarBodyComponent } from './calendar-body.component';\nimport { RdsDatepickerComponent } from './datepicker.component';\nimport {\n  RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  RdsDatepickerContentComponent,\n} from './datepicker-base';\nimport { RdsDatepickerInputDirective } from './datepicker-input';\nimport { RdsDatepickerIntl } from './datepicker.intl';\nimport {\n  RdsDatepickerToggleComponent,\n  RdsDatepickerToggleIconDirective,\n} from './datepicker-toggle.component';\nimport { RdsMonthViewComponent } from './month-view.component';\nimport { RdsMultiYearViewComponent } from './multi-year-view.component';\nimport { RdsYearViewComponent } from './year-view.component';\nimport { RdsDateRangeInputComponent } from './date-range-input.component';\nimport {\n  RdsEndDateDirective,\n  RdsStartDateDirective,\n} from './date-range-input.parts';\nimport { RdsDateRangePickerComponent } from './date-range-picker.component';\nimport {\n  RdsDatepickerActionsComponent,\n  RdsDatepickerApplyDirective,\n  RdsDatepickerCancelDirective,\n} from './datepicker-actions.component';\nimport { RdsButtonModule } from '../button';\nimport { RdsDialogModule } from '../dialog';\nimport { RdsIconComponent } from '../icons';\nimport { RdsToggleButtonModule } from '../toggle-button';\n\nconst ELEMENTS = [\n  RdsCalendarComponent,\n  RdsCalendarHeaderComponent,\n  RdsCalendarBodyComponent,\n  RdsDatepickerComponent,\n  RdsDatepickerContentComponent,\n  RdsDatepickerInputDirective,\n  RdsDatepickerToggleComponent,\n  RdsDatepickerToggleIconDirective,\n  RdsMonthViewComponent,\n  RdsYearViewComponent,\n  RdsMultiYearViewComponent,\n  RdsDateRangeInputComponent,\n  RdsStartDateDirective,\n  RdsEndDateDirective,\n  RdsDateRangePickerComponent,\n  RdsDatepickerActionsComponent,\n  RdsDatepickerCancelDirective,\n  RdsDatepickerApplyDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RdsButtonModule,\n    RdsDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n    RdsIconComponent,\n    RdsToggleButtonModule,\n  ],\n  exports: [CdkScrollableModule, OverlayModule, ...ELEMENTS],\n  declarations: [...ELEMENTS],\n  providers: [\n    RdsDatepickerIntl,\n    RDS_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n})\nexport class RdsDatepickerModule {}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n\nexport type RdsDividerOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'rds-divider',\n  template: '',\n  styleUrls: ['./divider.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsDividerComponent {\n  @HostBinding('attr.role') readonly hostRole = 'separator';\n  @HostBinding('class') readonly class = 'rds-divider';\n\n  @HostBinding('attr.aria-orientation')\n  get orientation(): RdsDividerOrientation {\n    return this.vertical ? 'vertical' : 'horizontal';\n  }\n\n  @HostBinding('class.rds-divider-vertical')\n  @Input({ transform: booleanAttribute })\n  vertical = false;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsDividerComponent } from './divider.component';\n\n@NgModule({\n  declarations: [RdsDividerComponent],\n  exports: [RdsDividerComponent],\n  imports: [CommonModule],\n})\nexport class RdsDividerModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'rds-drawer-actions, [rds-drawer-actions], [rdsDrawerActions]',\n  standalone: true,\n})\nexport class RdsDrawerActionsDirective {}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const rdsDrawerAnimations = {\n  expandDrawer: trigger('transform', [\n    state(\n      'open, open-instant',\n      style({\n        transform: 'none',\n        visibility: 'visible',\n      }),\n    ),\n    state(\n      'void',\n      style({\n        'box-shadow': 'none',\n        visibility: 'hidden',\n      }),\n    ),\n    transition('void => open-instant', animate('0ms')),\n    transition(\n      'void <=> open, open-instant => void',\n      animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n    ),\n  ]),\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ConfigurableFocusTrap,\n  ConfigurableFocusTrapFactory,\n  FocusMonitor,\n  FocusOrigin,\n  InteractivityChecker,\n} from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject, filter, fromEvent, Observable, Subject } from 'rxjs';\nimport { RdsDrawerActionsDirective } from './drawer-actions.directive';\nimport { rdsDrawerAnimations } from './drawer-animations';\nimport {\n  AutoFocusTarget,\n  RdsDrawerMode,\n  RdsDrawerPosition,\n  RdsDrawerSize,\n} from './drawer-types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_NOT_FOCUSABLE } from '../utils';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\n\n@Component({\n  selector: 'rds-drawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['drawer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [rdsDrawerAnimations.expandDrawer],\n  standalone: true,\n  imports: [RdsIconComponent, RdsButtonModule],\n})\nexport class RdsDrawerComponent\n  implements AfterViewInit, AfterContentInit, OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly ngZone = inject(NgZone);\n  private readonly focusTrapFactory = inject(ConfigurableFocusTrapFactory);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly document = inject(DOCUMENT);\n  private readonly interactivityChecker = inject(InteractivityChecker);\n  private readonly platformId = inject<Record<string, unknown>>(PLATFORM_ID);\n\n  readonly _modeChanged = new Subject<void>();\n  readonly _animationStarted = new Subject<AnimationEvent>();\n  readonly _animationEnd = new Subject<AnimationEvent>();\n\n  _animationState: 'open-instant' | 'open' | 'void' = 'void';\n  _animating: 'expanding' | 'collapsing' | null = null;\n\n  private readonly _isOpened$ = new BehaviorSubject(false);\n\n  private _focusTrap: ConfigurableFocusTrap;\n  private _elementFocusedBeforeDrawerWasOpened: HTMLElement | null = null;\n\n  @Input() size: RdsDrawerSize = 'm';\n\n  @Input() closeBtnAriaLabel = 'Close';\n\n  @Input()\n  get mode(): RdsDrawerMode {\n    return this._mode;\n  }\n\n  set mode(value: RdsDrawerMode) {\n    this._mode = value;\n    this.updateFocusTrapState();\n    this._modeChanged.next();\n  }\n\n  private _mode: RdsDrawerMode = 'overlay';\n\n  @Input()\n  get position(): RdsDrawerPosition {\n    return this._position;\n  }\n\n  set position(value: RdsDrawerPosition) {\n    this._position = value === 'end' ? 'end' : 'start';\n    this.positionChanged.emit(this._position);\n  }\n\n  private _position: RdsDrawerPosition = 'start';\n\n  @Input({ transform: booleanAttribute }) closable = true;\n\n  @Input()\n  set expanded(value: BooleanInput) {\n    this.toggle(booleanAttribute(value));\n  }\n\n  get expanded(): boolean {\n    return this.isOpened;\n  }\n\n  private _openedVia: FocusOrigin | null;\n\n  @Input({ transform: booleanAttribute }) disableClose = false;\n\n  @Input()\n  set autoFocus(value: AutoFocusTarget | string | BooleanInput) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = booleanAttribute(value);\n    }\n\n    this._autoFocus = value;\n  }\n\n  get autoFocus(): AutoFocusTarget | string | boolean {\n    const value = this._autoFocus;\n\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n\n    return value;\n  }\n\n  private _autoFocus: AutoFocusTarget | string | boolean | undefined;\n\n  @Output() readonly closeDrawer = new EventEmitter<void>();\n\n  @Output() readonly openDrawer = new EventEmitter<void>();\n\n  @Output() readonly positionChanged = new EventEmitter<RdsDrawerPosition>();\n\n  @ContentChild(RdsDrawerActionsDirective) actions: RdsDrawerActionsDirective;\n\n  @ViewChild('body') body: ElementRef = { nativeElement: undefined };\n\n  @HostBinding('class') get class(): string[] {\n    const classes = ['rds-drawer', `rds-drawer-${this.size}`];\n\n    if (this.mode === 'overlay') {\n      classes.push('rds-drawer-overlay');\n    }\n\n    if (this.position === 'end') {\n      classes.push('rds-drawer-end');\n    } else {\n      classes.push('rds-drawer-start');\n    }\n\n    return classes;\n  }\n\n  @HostBinding('tabIndex') tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n  @HostBinding('@transform')\n  get transform(): string {\n    return this._animationState;\n  }\n\n  get isOpened(): boolean {\n    return this._isOpened$.getValue();\n  }\n\n  get isOpened$(): Observable<boolean> {\n    return this._isOpened$.asObservable();\n  }\n\n  @HostBinding('class.rds-drawer-scrollable')\n  scrollable = false;\n\n  constructor() {\n    this.ngZone.runOutsideAngular(() => {\n      if (isPlatformBrowser(this.platformId)) {\n        fromEvent<KeyboardEvent>(window, 'keydown')\n          .pipe(\n            filter(\n              (event) =>\n                event.keyCode === ESCAPE &&\n                !this.disableClose &&\n                !hasModifierKey(event),\n            ),\n            takeUntilDestroyed(),\n          )\n          .subscribe((event) =>\n            this.ngZone.run(() => {\n              this.close();\n              event.stopPropagation();\n              event.preventDefault();\n            }),\n          );\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this._focusTrap = this.focusTrapFactory.create(\n      this.elementRef.nativeElement,\n    );\n    this.updateFocusTrapState();\n  }\n\n  ngAfterContentInit(): void {\n    this.contentObserver\n      .observe(this.elementRef.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.scrollable = this.isScrollable();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n  }\n\n  @HostListener('@transform.start', ['$event'])\n  transformStart(event: AnimationEvent): void {\n    if (event.toState === 'void') {\n      this._animating = 'collapsing';\n    } else if (event.toState === 'open') {\n      this._animating = 'expanding';\n    }\n\n    this._animationStarted.next(event);\n  }\n\n  @HostListener('@transform.done', ['$event'])\n  transformEnd(event: AnimationEvent): void {\n    this._animating = null;\n    this._animationEnd.next(event);\n\n    // animation.done changes opened value\n    const isOpened =\n      event.toState === 'open' || event.toState === 'open-instant';\n\n    if (isOpened) {\n      if (this.document) {\n        this._elementFocusedBeforeDrawerWasOpened = this.document\n          .activeElement as HTMLElement;\n      }\n\n      this.takeFocus();\n    } else if (this.isFocusWithinDrawer()) {\n      this.restoreFocus(this._openedVia || 'program');\n    }\n\n    this._isOpened$.next(isOpened);\n\n    if (event.fromState !== event.toState) {\n      if (isOpened) {\n        this.openDrawer.emit();\n      } else {\n        this.closeDrawer.emit();\n      }\n    }\n\n    this.scrollable = this.isScrollable();\n  }\n\n  toggle(\n    expanded = !this._isOpened$.getValue(),\n    openedVia?: FocusOrigin,\n  ): void {\n    if (expanded && openedVia) {\n      this._openedVia = openedVia;\n    }\n\n    if (this.isOpened !== expanded) {\n      if (expanded) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n  }\n\n  open(): void {\n    this._animationState = 'open';\n  }\n\n  close(): void {\n    this._animationState = 'void';\n  }\n\n  private forceFocus(element: HTMLElement, options?: FocusOptions): void {\n    if (!this.interactivityChecker.isFocusable(element)) {\n      element.tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n      this.ngZone.runOutsideAngular(() => {\n        const callback = (): void => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n\n    element.focus(options);\n  }\n\n  private focusByCssSelector(selector: string, options?: FocusOptions): void {\n    const elementToFocus =\n      this.elementRef.nativeElement.querySelector<HTMLElement>(selector);\n\n    if (elementToFocus) {\n      this.forceFocus(elementToFocus, options);\n    }\n  }\n\n  private takeFocus(): void {\n    if (!this._focusTrap) {\n      return;\n    }\n\n    const element = this.elementRef.nativeElement;\n\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap.focusInitialElementWhenReady().then((hasMovedFocus) => {\n          if (\n            !hasMovedFocus &&\n            typeof this.elementRef.nativeElement.focus === 'function'\n          ) {\n            element.focus();\n          }\n        });\n        break;\n      case 'first-heading':\n        this.focusByCssSelector(\n          'rds-drawer-header, [rds-drawer-header], [rdsDrawerHeader]',\n        );\n        break;\n      default:\n        this.focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n\n  private restoreFocus(focusOrigin: Exclude<FocusOrigin, null>): void {\n    if (this.autoFocus === 'dialog') {\n      return;\n    } else if (this._elementFocusedBeforeDrawerWasOpened) {\n      this.focusMonitor.focusVia(\n        this._elementFocusedBeforeDrawerWasOpened,\n        focusOrigin,\n      );\n    } else {\n      this.elementRef.nativeElement.blur();\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n\n  private isFocusWithinDrawer(): boolean {\n    const activeEl = this.document.activeElement;\n\n    return !!activeEl && this.elementRef.nativeElement.contains(activeEl);\n  }\n\n  private updateFocusTrapState(): void {\n    if (this._focusTrap) {\n      this._focusTrap.enabled = this.expanded && this.mode !== 'side';\n    }\n  }\n\n  private isScrollable(): boolean {\n    return (\n      this.body.nativeElement.scrollHeight >\n      this.body.nativeElement.clientHeight\n    );\n  }\n}\n","<div class=\"rds-drawer-header\">\n  <ng-content\n    select=\"rds-drawer-header, [rds-drawer-header], [rdsDrawerHeader]\"\n  />\n  @if (closable) {\n    <button\n      rds-icon-button\n      size=\"m\"\n      (click)=\"toggle(false)\"\n      [attr.aria-label]=\"closeBtnAriaLabel\"\n    >\n      <rds-icon icon=\"close\" />\n    </button>\n  }\n</div>\n<div class=\"rds-drawer-body\" #body>\n  <ng-content />\n</div>\n<div [class.rds-drawer-actions]=\"actions\">\n  <ng-content\n    select=\"rds-drawer-actions, [rds-drawer-actions], [rdsDrawerActions]\"\n  />\n</div>\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject, filter, merge } from 'rxjs';\nimport {\n  RdsDrawerBackdrop,\n  RdsDrawerContainerContentMargins,\n} from './drawer-types';\nimport { RdsDrawerComponent } from './drawer.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-drawer-container',\n  templateUrl: './drawer-container.component.html',\n  styleUrls: ['./drawer-container.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n})\nexport class RdsDrawerContainerComponent\n  implements AfterContentInit, OnDestroy\n{\n  private readonly ngZone = inject(NgZone);\n  private readonly elementRef = inject(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly renderer = inject(Renderer2);\n\n  @HostBinding('class') readonly class = [\n    'rds-drawer-container',\n    'rds-drawer-overlay',\n  ];\n  @ContentChild(RdsDrawerComponent, { descendants: true })\n  private drawer: RdsDrawerComponent;\n  @ContentChild(RdsDrawerComponent, { descendants: true, read: ElementRef })\n  private drawerElement: ElementRef;\n\n  @Output() readonly backdropClick = new EventEmitter<void>();\n\n  private readonly _contentMargin$ =\n    new BehaviorSubject<RdsDrawerContainerContentMargins>({\n      left: 0,\n      right: 0,\n    });\n  readonly contentMargins$ = this._contentMargin$.asObservable();\n\n  private start: RdsDrawerComponent | null;\n  private end: RdsDrawerComponent | null;\n\n  @Input()\n  set backdrop(value: RdsDrawerBackdrop | BooleanInput) {\n    if (value !== 'transparent') {\n      value = booleanAttribute(value);\n    }\n\n    this._backdrop = value;\n  }\n\n  get backdrop(): RdsDrawerBackdrop {\n    if (this._backdrop == null) {\n      return !this.start || !this.end;\n    }\n\n    return this._backdrop;\n  }\n\n  private _backdrop: RdsDrawerBackdrop = false;\n\n  ngAfterContentInit(): void {\n    this.watchDrawerToggle();\n    merge(this.drawer.positionChanged, this.drawer._modeChanged)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.updateContentMargins());\n  }\n\n  ngOnDestroy(): void {\n    this._contentMargin$.complete();\n  }\n\n  /** for internal purposes only */\n  _onBackdropClicked(): void {\n    this.drawer.toggle(false);\n    this.backdropClick.emit();\n  }\n\n  isShowingBackdrop(): boolean {\n    return this.isDrawerOpen() && !!this.backdrop;\n  }\n\n  updateContentMargins(): void {\n    let left = 0;\n    let right = 0;\n\n    if (\n      this.drawer &&\n      this.drawer._animating === 'expanding' &&\n      this.drawer.position == 'start'\n    ) {\n      if (this.drawer.mode == 'side') {\n        left += this.getDrawerWidth();\n      } else if (this.drawer.mode == 'push') {\n        const width = this.getDrawerWidth();\n        left += width;\n        right -= width;\n      }\n    }\n\n    if (\n      this.drawer &&\n      this.drawer._animating === 'expanding' &&\n      this.drawer.position == 'end'\n    ) {\n      if (this.drawer.mode == 'side') {\n        right += this.getDrawerWidth();\n      } else if (this.drawer.mode == 'push') {\n        const width = this.getDrawerWidth();\n        right += width;\n        left -= width;\n      }\n    }\n\n    this.ngZone.run(() => this._contentMargin$.next({ left, right }));\n  }\n\n  private isDrawerOpen(): boolean {\n    return (\n      this.drawer != null &&\n      (this.drawer._animating !== null || this.drawer.expanded)\n    );\n  }\n\n  private watchDrawerToggle(): void {\n    this.drawer._animationStarted\n      .pipe(\n        filter((event) => event.fromState !== event.toState),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((event) => {\n        if (event.toState !== 'open-instant') {\n          this.renderer.addClass(\n            this.elementRef.nativeElement,\n            'rds-drawer-transition',\n          );\n        }\n\n        this.updateContentMargins();\n      });\n  }\n\n  private getDrawerWidth(): number {\n    return this.drawerElement?.nativeElement?.offsetWidth ?? 0;\n  }\n}\n","@if (backdrop) {\n  <div\n    (click)=\"_onBackdropClicked()\"\n    class=\"rds-drawer-backdrop\"\n    [class.cdk-overlay-dark-backdrop]=\"backdrop !== 'transparent'\"\n    [class.rds-drawer-backdrop--transparent]=\"backdrop === 'transparent'\"\n    [class.rds-drawer-shown]=\"isShowingBackdrop()\"\n  ></div>\n}\n<ng-content select=\"rds-drawer\" />\n<ng-content select=\"rds-drawer-content\" />\n","import { CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  inject,\n  NgZone,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsDrawerContainerComponent } from './drawer-container.component';\nimport { RdsDrawerContainerContentMargins } from './drawer-types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-drawer-content',\n  template: '<ng-content />',\n  styleUrls: ['./drawer-content.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class RdsDrawerContentComponent\n  extends CdkScrollable\n  implements AfterContentInit\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly container = inject<RdsDrawerContainerComponent>(\n    forwardRef(() => RdsDrawerContainerComponent),\n  );\n\n  @HostBinding('class') class = 'rds-drawer-content';\n\n  @HostBinding('style.margin-right.px') get marginRight(): number | null {\n    return this.contentMargins.right ?? 0;\n  }\n\n  @HostBinding('style.margin-left.px') get marginLeft(): number | null {\n    return this.contentMargins.left ?? 0;\n  }\n\n  private contentMargins: RdsDrawerContainerContentMargins;\n\n  constructor() {\n    super(inject(ElementRef), inject(ScrollDispatcher), inject(NgZone));\n  }\n\n  ngAfterContentInit(): void {\n    this.container.contentMargins$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((m) => {\n        this.contentMargins = m;\n        this.cdr.markForCheck();\n      });\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'rds-drawer-header, [rds-drawer-header], [rdsDrawerHeader]',\n  standalone: true,\n})\nexport class RdsDrawerHeaderDirective {}\n","import { NgModule } from '@angular/core';\nimport { RdsDrawerActionsDirective } from './drawer-actions.directive';\nimport { RdsDrawerContainerComponent } from './drawer-container.component';\nimport { RdsDrawerContentComponent } from './drawer-content.component';\nimport { RdsDrawerHeaderDirective } from './drawer-header.directive';\nimport { RdsDrawerComponent } from './drawer.component';\n\nexport const RDS_DRAWER_DIRECTIVES = [\n  RdsDrawerContainerComponent,\n  RdsDrawerContentComponent,\n  RdsDrawerComponent,\n  RdsDrawerHeaderDirective,\n  RdsDrawerActionsDirective,\n] as const;\n\n@NgModule({\n  imports: [...RDS_DRAWER_DIRECTIVES],\n  exports: [...RDS_DRAWER_DIRECTIVES],\n})\nexport class RdsDrawerModule {}\n","import {\n  AfterContentInit,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RdsDropdownToggleTrigger } from './dropdown.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Directive({\n  selector: '[rdsDropdownToggle], [rds-dropdown-toggle]',\n  exportAs: 'rdsDropdownToggle',\n})\nexport class RdsDropdownToggleDirective\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  private static readonly TRIGGER_SPLITTER = ', ';\n\n  public readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly destroyRef = inject(DestroyRef);\n\n  readonly toggle = new Subject<MouseEvent | KeyboardEvent>();\n  protected _isOpen = false;\n  private readonly _eventsDestroyer$ = new Subject<void>();\n\n  @Input()\n  trigger: RdsDropdownToggleTrigger = 'click';\n\n  @HostBinding('class')\n  class = 'rds-dropdown-toggle';\n\n  @HostBinding('disabled')\n  disabled = false;\n\n  @Input()\n  @HostBinding('attr.aria-expanded')\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  set isOpen(isOpen: boolean) {\n    this._isOpen = isOpen;\n  }\n\n  @HostListener('keydown.enter', ['$event'])\n  onEnter($event: KeyboardEvent): void {\n    this.toggle.next($event);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['trigger'] && !changes['trigger'].isFirstChange()) {\n      this._refreshEvents();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._refreshEvents();\n  }\n\n  ngOnDestroy(): void {\n    this._eventsDestroyer$.next();\n    this._eventsDestroyer$.complete();\n  }\n\n  private _refreshEvents(): void {\n    this._eventsDestroyer$.next();\n\n    if (this.trigger === null || this.trigger === undefined) {\n      this.trigger = 'click';\n    }\n\n    this.trigger\n      .split(RdsDropdownToggleDirective.TRIGGER_SPLITTER)\n      .forEach((trigger) =>\n        fromEvent<MouseEvent>(this.elementRef.nativeElement, trigger)\n          .pipe(\n            takeUntil(this._eventsDestroyer$),\n            takeUntilDestroyed(this.destroyRef),\n          )\n          .subscribe((event) => this.toggle.next(event)),\n      );\n  }\n}\n","import { Directive, inject, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[rdsDropdownMenu], [rds-dropdown-menu]',\n  exportAs: 'rdsDropdownMenu',\n})\nexport class RdsDropdownMenuDirective {\n  public readonly templateRef = inject(TemplateRef);\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'rds-dropdown-container',\n  template: '<ng-container *ngTemplateOutlet=\"templateRef\" />',\n  styleUrls: ['./dropdown-container.component.scss'],\n})\nexport class RdsDropdownContainerComponent {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() templateRef: TemplateRef<any>;\n}\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectorRef,\n  ContentChild,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { fromEvent, noop, PartialObserver, race, Subject } from 'rxjs';\nimport {\n  delay,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  timeout,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { RdsDropdownToggleDirective } from './dropdown-toggle.directive';\nimport { RdsDropdownMenuDirective } from './dropdown-menu.directive';\nimport {\n  CdkOverlayOrigin,\n  ConnectedPosition,\n  Overlay,\n  OverlayRef,\n  PositionStrategy,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { RdsDropdownContainerComponent } from './dropdown-container.component';\nimport {\n  RdsDropdownAutoClose,\n  RdsDropdownBackdrop,\n  RdsDropdownCloseSource,\n  RdsDropdownPlacement,\n} from './dropdown.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst SECONDARY_MOUSE_BUTTON_CLICK = 2;\n\n@Directive({\n  selector: '[rdsDropdown], [rds-dropdown]',\n  exportAs: 'rdsDropdown',\n})\nexport class RdsDropdownDirective\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  protected readonly cdr = inject(ChangeDetectorRef);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly renderer = inject(Renderer2);\n  protected readonly overlay = inject(Overlay);\n\n  @ContentChild(RdsDropdownMenuDirective, { static: false })\n  private _menu: RdsDropdownMenuDirective;\n\n  @ContentChild(RdsDropdownToggleDirective, { static: false })\n  private _toggle: RdsDropdownToggleDirective;\n\n  @Input() autoClose: RdsDropdownAutoClose = true;\n  @Input() placement: RdsDropdownPlacement = 'bottom-left';\n  @Input({ transform: booleanAttribute }) disabled = false;\n  @Input() backdrop: RdsDropdownBackdrop = false;\n  @Output() openChanged = new EventEmitter<boolean>();\n  @Output() shown = new EventEmitter<void>();\n  @Output() hidden = new EventEmitter<void>();\n\n  private _open = false;\n  private _overlayRef: OverlayRef | null = null;\n  private _portal: ComponentPortal<RdsDropdownContainerComponent>;\n  private readonly _closed$ = new Subject<void>();\n\n  @HostListener('mouseover')\n  onHover(): void {\n    this._handleMouseOver(this.elementRef);\n  }\n\n  @HostListener('mouseleave')\n  onLeave(): void {\n    this._handleMouseLeave(this.elementRef);\n  }\n\n  ngAfterContentInit(): void {\n    const target = this.elementRef.nativeElement.firstElementChild;\n\n    if (target) {\n      fromEvent(target, 'focus')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          this._handleFocus(this.elementRef);\n        });\n      fromEvent(target, 'blur')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          this._handleBlur(this.elementRef);\n        });\n    }\n\n    this.ngZone.onStable\n      .pipe(take(1), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this._open) {\n          this._setCloseHandlers();\n        }\n      });\n\n    this._toggle.toggle\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((event) => {\n        if (this._toggle.trigger === 'mouseenter, mouseleave') {\n          if (event.type === 'mouseenter' && !this.isOpen()) {\n            this.show();\n          } else if (event.type === 'mouseleave' && this.isOpen()) {\n            const hideObserver: PartialObserver<Event> = {\n              next: noop,\n              error: () => this.hide(),\n            };\n\n            if (this._overlayRef) {\n              fromEvent(this._overlayRef.overlayElement, 'mouseenter')\n                .pipe(\n                  take(1),\n                  tap(() => {\n                    if (this._overlayRef) {\n                      fromEvent(this._overlayRef.overlayElement, 'mouseleave')\n                        .pipe(\n                          take(1),\n                          switchMap(() =>\n                            fromEvent(\n                              this._toggle.elementRef.nativeElement,\n                              'mouseenter',\n                            ).pipe(\n                              take(1),\n                              timeout(1),\n                              takeUntil(this._closed$),\n                            ),\n                          ),\n                          takeUntil(this._closed$),\n                        )\n                        .subscribe(hideObserver);\n                    }\n                  }),\n                  timeout(1),\n                  takeUntil(this._closed$),\n                )\n                .subscribe(hideObserver);\n            }\n          }\n        } else {\n          this.toggle();\n        }\n      });\n\n    this._toggle.disabled = this.disabled;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['backdrop']) {\n      this._checkToggle();\n\n      this.hide();\n      this._overlayRef = null;\n    }\n\n    if (changes['placement']) {\n      if (this.placement === null || this.placement === undefined) {\n        this.placement = 'bottom-left';\n      }\n\n      if (this._overlayRef !== null) {\n        this._overlayRef.updatePositionStrategy(this._getPositionStrategy());\n      }\n    }\n\n    if (\n      this._toggle &&\n      changes['disabled'] &&\n      changes['disabled'].previousValue !== changes['disabled'].currentValue\n    ) {\n      this._toggle.disabled = this.disabled;\n\n      if (this.disabled) {\n        this.hide();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n    }\n\n    this._closed$.next();\n    this._closed$.complete();\n  }\n\n  isOpen(): boolean {\n    return this._open;\n  }\n\n  show(): void {\n    if (!this.disabled && !this._open) {\n      this._checkToggle();\n      this._open = true;\n\n      if (!this._overlayRef) {\n        this._overlayRef = this.overlay.create({\n          hasBackdrop: this.backdrop !== false,\n          backdropClass:\n            this.backdrop === 'transparent'\n              ? 'cdk-overlay-transparent-backdrop'\n              : undefined,\n          positionStrategy: this._getPositionStrategy(),\n        });\n\n        this._overlayRef.backdropClick().subscribe(() => this.hide());\n        this._portal = new ComponentPortal(RdsDropdownContainerComponent, null);\n      }\n\n      const dropdownContainerComponentRef = this._overlayRef.attach(\n        this._portal,\n      );\n      dropdownContainerComponentRef.instance.templateRef =\n        this._menu.templateRef;\n      dropdownContainerComponentRef.changeDetectorRef.markForCheck();\n\n      this.openChanged.emit(true);\n      this.shown.emit();\n      this._setCloseHandlers();\n\n      if (this._toggle) {\n        this._toggle.isOpen = true;\n        this._toggle.elementRef.nativeElement.focus();\n      }\n    }\n  }\n\n  hide(): void {\n    if (this._open) {\n      this._open = false;\n      this._toggle.isOpen = false;\n\n      if (this._overlayRef) {\n        this._overlayRef.detach();\n      }\n\n      this._closed$.next();\n      this.openChanged.emit(false);\n      this.hidden.emit();\n      this.cdr.markForCheck();\n    }\n  }\n\n  toggle(): void {\n    if (this.isOpen()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  private _getPlacement(): RdsDropdownPlacement {\n    return this.placement !== null && this.placement !== undefined\n      ? this.placement\n      : 'bottom-left';\n  }\n\n  private _setCloseHandlers(): void {\n    if (this.autoClose) {\n      this.ngZone.runOutsideAngular(() => {\n        const shouldCloseOnClick = (event: MouseEvent): boolean => {\n          const element = event.target as HTMLElement;\n\n          if (\n            event.button === SECONDARY_MOUSE_BUTTON_CLICK ||\n            this._toggle.elementRef.nativeElement.contains(element)\n          ) {\n            return false;\n          }\n\n          if (this.autoClose === 'inside') {\n            return this._overlayRef?.overlayElement.contains(element) || true;\n          } else if (this.autoClose === 'outside') {\n            return !this._overlayRef?.overlayElement.contains(element) || false;\n          } else {\n            return true;\n          }\n        };\n\n        const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown').pipe(\n          filter((e) => e.key === 'Escape'),\n          tap((e) => e.preventDefault()),\n          takeUntil(this._closed$),\n        );\n\n        const mouseDowns$ = fromEvent<MouseEvent>(document, 'mousedown').pipe(\n          map((e) => shouldCloseOnClick(e)),\n          takeUntil(this._closed$),\n        );\n\n        const closeableClicks$ = fromEvent<MouseEvent>(\n          document,\n          'mouseup',\n        ).pipe(\n          withLatestFrom(mouseDowns$),\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          filter(([_, shouldClose]) => shouldClose),\n          delay(0),\n          takeUntil(this._closed$),\n        );\n\n        race<RdsDropdownCloseSource[]>([\n          escapes$.pipe(map(() => 'ESCAPE')),\n          closeableClicks$.pipe(map(() => 'CLICK')),\n        ])\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe((source: RdsDropdownCloseSource) =>\n            this.ngZone.run(() => {\n              this.hide();\n\n              if (source === 'ESCAPE') {\n                this._toggle.elementRef.nativeElement.focus();\n              }\n            }),\n          );\n      });\n    }\n  }\n\n  private _handleMouseOver(el: ElementRef): void {\n    this.handleIsPrevButton();\n    this.handleIsPrevFocused();\n    this.renderer.addClass(el.nativeElement, 'rds-dropdown--hover');\n  }\n\n  private _handleMouseLeave(el: ElementRef): void {\n    this.handleIsPrevButton();\n    this.handleIsPrevFocused();\n    this.renderer.removeClass(el.nativeElement, 'rds-dropdown--hover');\n  }\n\n  private _handleFocus(el: ElementRef): void {\n    this.handleIsPrevButton();\n    this.renderer.addClass(el.nativeElement, 'rds-dropdown--focused');\n  }\n\n  private _handleBlur(el: ElementRef): void {\n    this.handleIsPrevButton();\n    this.renderer.removeClass(el.nativeElement, 'rds-dropdown--focused');\n  }\n\n  private _getPositions(): ConnectedPosition {\n    const placement = this._getPlacement();\n    const positions: ConnectedPosition = {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: 0,\n      offsetY: 0,\n    };\n\n    if (placement.includes('top')) {\n      positions.originY = 'top';\n      positions.overlayY = 'bottom';\n    }\n\n    if (placement.includes('center')) {\n      positions.originX = 'center';\n      positions.overlayX = 'center';\n    }\n\n    if (placement.includes('right')) {\n      positions.originX = placement.includes('start') ? 'start' : 'end';\n      positions.overlayX = 'end';\n    } else if (placement.includes('end')) {\n      positions.originX = 'end';\n    }\n\n    return positions;\n  }\n\n  private _getPositionStrategy(): PositionStrategy {\n    const overlayOrigin = new CdkOverlayOrigin(this._toggle.elementRef);\n\n    return this.overlay\n      .position()\n      .flexibleConnectedTo(overlayOrigin.elementRef)\n      .withPositions([this._getPositions()]);\n  }\n\n  private _checkToggle(): void {\n    if (this.backdrop && this._toggle && this._toggle.trigger !== 'click') {\n      throw new Error(`Backdrop is only allowed for 'click' trigger`);\n    }\n  }\n\n  private handleIsPrevButton(): void {\n    const isPrevButton =\n      this.elementRef?.nativeElement?.nextElementSibling?.tagName === 'BUTTON';\n\n    if (isPrevButton) {\n      this.renderer.addClass(\n        this.elementRef.nativeElement,\n        'rds-dropdown--prev-button',\n      );\n    } else {\n      this.renderer.removeClass(\n        this.elementRef.nativeElement,\n        'rds-dropdown--prev-button',\n      );\n    }\n  }\n\n  private handleIsPrevFocused(): void {\n    const input =\n      this.elementRef.nativeElement.nextElementSibling?.querySelector('input');\n\n    if (input) {\n      if (\n        input.parentElement?.classList.contains(\n          'rds-form-field_content-infix--focused',\n        )\n      ) {\n        this.renderer.addClass(\n          this.elementRef.nativeElement,\n          'rds-dropdown--prev-focused',\n        );\n      } else {\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'rds-dropdown--prev-focused',\n        );\n      }\n    } else {\n      this.renderer.removeClass(\n        this.elementRef.nativeElement,\n        'rds-dropdown--prev-focused',\n      );\n    }\n  }\n}\n","import {\n  FocusableOption,\n  FocusMonitor,\n  FocusOptions,\n  FocusOrigin,\n} from '@angular/cdk/a11y';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { throwInvalidSizeError } from '../core/errors';\nimport { RdsDropdownToggleDirective } from './dropdown-toggle.directive';\n\nexport type RdsDropdownToggleButtonSize = 's' | 'm' | 'l';\ndeclare type RdsDropdownToggleButtonIcon = 'caret_up' | 'caret_down';\n\n@Component({\n  selector: `\n    button[rdsDropdownToggleButton], button[rds-dropdown-toggle-button],\n    button[rdsDropdownToggleBorderlessButton], button[rds-dropdown-toggle-borderless-button],\n    button[rdsDropdownTogglePrimaryButton], button[rds-dropdown-toggle-primary-button],\n    button[rdsDropdownToggleSecondaryButton], button[rds-dropdown-toggle-secondary-button],\n    button[rdsDropdownToggleTextButton], button[rds-dropdown-toggle-text-button],\n    button[rdsDropdownToggleWarningButton], button[rds-dropdown-toggle-warning-button],\n    button[rdsDropdownToggleIconButton], button[rds-dropdown-toggle-icon-button],\n  `,\n  template: `\n    <span class=\"rds-dropdown-toggle-button__content\">\n      @if (!showIcon) {\n        <ng-content select=\"rds-icon\" />\n      }\n      @if (showIcon) {\n        <ng-content />\n      }\n    </span>\n    @if (showIcon) {\n      <rds-icon\n        class=\"rds-dropdown-toggle-button__icon\"\n        namespace=\"filled\"\n        [icon]=\"icon\"\n      />\n    }\n  `,\n  styleUrls: ['./dropdown-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RdsDropdownToggleDirective,\n      useExisting: forwardRef(() => RdsDropdownToggleButtonComponent),\n    },\n  ],\n})\nexport class RdsDropdownToggleButtonComponent\n  extends RdsDropdownToggleDirective\n  implements\n    OnChanges,\n    AfterContentInit,\n    AfterViewInit,\n    AfterContentChecked,\n    OnDestroy,\n    FocusableOption\n{\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly cdr = inject(ChangeDetectorRef);\n\n  protected icon: RdsDropdownToggleButtonIcon = 'caret_down';\n  protected showIcon = !this._isIconButton();\n  private _size: RdsDropdownToggleButtonSize = this._getDefaultSize();\n\n  @ViewChild('imageWrapper', { static: true }) imageWrapper: ElementRef;\n\n  @Input()\n  get size(): RdsDropdownToggleButtonSize {\n    return this._size;\n  }\n\n  set size(size: RdsDropdownToggleButtonSize) {\n    if (size !== 's' && size !== 'm' && size !== 'l') {\n      throwInvalidSizeError(this, size);\n    }\n\n    this._size = size;\n  }\n\n  @HostBinding('class')\n  override class = '';\n\n  @HostBinding('attr.disabled')\n  get isDisabled(): 'disabled' | null {\n    return this.disabled ? 'disabled' : null;\n  }\n\n  @Input()\n  @HostBinding('attr.aria-expanded')\n  override get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  override set isOpen(isOpen: boolean) {\n    this._isOpen = isOpen;\n    this.icon = this.isOpen ? 'caret_up' : 'caret_down';\n    this.class = this._getCssClass();\n    this.cdr.markForCheck();\n  }\n\n  @HostListener('keydown.enter', ['$event'])\n  override onEnter($event: KeyboardEvent): void {\n    this.toggle.next($event);\n  }\n\n  override ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n    this.showIcon = !this._isIconButton();\n    this.class = this._getCssClass();\n  }\n\n  override ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n    this.class = this._getCssClass();\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterContentInit();\n    this.focusMonitor.monitor(this.elementRef, true);\n    this.class = this._getCssClass();\n  }\n\n  ngAfterContentChecked(): void {\n    super.ngAfterContentInit();\n    this.class = this._getCssClass();\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.hostElement, origin, options);\n  }\n\n  private _isDefault(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-button')\n    );\n  }\n  private _isBorderless(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleBorderlessButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-borderless-button')\n    );\n  }\n  private _isPrimary(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownTogglePrimaryButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-primary-button')\n    );\n  }\n  private _isSecondary(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleSecondaryButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-secondary-button')\n    );\n  }\n  private _isText(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleTextButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-text-button')\n    );\n  }\n  private _isWarning(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleWarningButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-warning-button')\n    );\n  }\n  private _isIconButton(): boolean {\n    return (\n      this.hostElement.hasAttribute('rdsDropdownToggleIconButton') ||\n      this.hostElement.hasAttribute('rds-dropdown-toggle-icon-button')\n    );\n  }\n\n  private _getCssClass(): string {\n    const classes = [\n      'rds-dropdown-toggle-button',\n      `rds-dropdown-toggle-button--${this.size}`,\n    ];\n\n    if (this._isSecondary()) {\n      classes.push('rds-dropdown-toggle-button--secondary');\n    }\n\n    if (this._isIconButton()) {\n      classes.push('rds-dropdown-toggle-button--icon');\n    }\n\n    if (this._isPrimary()) {\n      classes.push('rds-dropdown-toggle-button--primary');\n    }\n\n    if (this._isBorderless()) {\n      classes.push('rds-dropdown-toggle-button--borderless');\n    }\n\n    if (this._isText()) {\n      classes.push('rds-dropdown-toggle-button--text');\n    }\n\n    if (this._isWarning()) {\n      classes.push('rds-dropdown-toggle-button--warning');\n    }\n\n    if (this._isDefault()) {\n      classes.push('rds-dropdown-toggle-button--default');\n    }\n\n    if (this.isOpen) {\n      classes.push('rds-dropdown-toggle-button--open');\n    }\n\n    return classes.join(' ');\n  }\n\n  get hostElement(): HTMLButtonElement {\n    return this.elementRef.nativeElement as HTMLButtonElement;\n  }\n\n  private _getDefaultSize(): RdsDropdownToggleButtonSize {\n    return 'm';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsDropdownContainerComponent } from './dropdown-container.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { RdsDropdownDirective } from './dropdown.directive';\nimport { RdsDropdownToggleDirective } from './dropdown-toggle.directive';\nimport { RdsDropdownMenuDirective } from './dropdown-menu.directive';\nimport { RdsDropdownToggleButtonComponent } from './dropdown-toggle-button.component';\nimport { RdsIconComponent } from '../icons';\n\nconst COMPONENTS = [\n  RdsDropdownContainerComponent,\n  RdsDropdownToggleButtonComponent,\n];\n\nconst DIRECTIVES = [\n  RdsDropdownDirective,\n  RdsDropdownMenuDirective,\n  RdsDropdownToggleDirective,\n];\n\n@NgModule({\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n  imports: [CommonModule, OverlayModule, RdsIconComponent],\n})\nexport class RdsDropdownModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-empty-state-button], [rdsEmptyStateButton]',\n})\nexport class RdsEmptyStateButtonDirective {\n  @HostBinding('class') class = 'rds-empty-state-button';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-icon[rds-empty-state-icon], rds-icon[rdsEmptyStateIcon]',\n})\nexport class RdsEmptyStateIconDirective {\n  @HostBinding('class') class = 'rds-empty-state-icon';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-empty-state-image], [rdsEmptyStateImage]',\n})\nexport class RdsEmptyStateImageDirective {\n  @HostBinding('class') class = 'rds-empty-state-image';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-empty-state-subtitle',\n})\nexport class RdsEmptyStateSubtitleDirective {\n  @HostBinding('class') class = 'rds-empty-state-subtitle';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-empty-state-title',\n})\nexport class RdsEmptyStateTitleDirective {\n  @HostBinding('class') class = 'rds-empty-state-title';\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  HostBinding,\n  inject,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsButtonComponent } from '../button';\nimport { RdsEmptyStateImageDirective } from './empty-state-image.directive';\n\nexport type RdsEmptyStateSize = 'xs' | 's' | 'm' | 'l';\n\nexport type RdsEmptyStateAlignment = 'left' | 'center';\n\n@Component({\n  selector: 'rds-empty-state',\n  templateUrl: './empty-state.component.html',\n  styleUrls: ['./empty-state.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsEmptyStateComponent {\n  protected readonly cdr = inject(ChangeDetectorRef);\n\n  @ContentChild(RdsEmptyStateImageDirective, { static: false })\n  _image: RdsEmptyStateImageDirective | null = null;\n  @ContentChild(RdsButtonComponent, { static: false })\n  button: RdsButtonComponent | null = null;\n\n  private _size: RdsEmptyStateSize = 'l';\n\n  @Input()\n  set size(value: RdsEmptyStateSize) {\n    this._size = value;\n\n    if (this.button) {\n      if (this._size === 'l') {\n        this.button.size = 'm';\n      } else {\n        this.button.size = 's';\n      }\n    }\n  }\n  get size(): RdsEmptyStateSize {\n    return this._size;\n  }\n\n  @Input()\n  alignment: RdsEmptyStateAlignment = 'left';\n\n  @HostBinding('class') get class(): string[] {\n    const classList = ['rds-empty-state-container'];\n\n    if (this.size) {\n      classList.push(`rds-empty-state--${this.size}`);\n    }\n\n    if (this.alignment) {\n      classList.push(`rds-empty-state--${this.alignment}`);\n    }\n\n    return classList;\n  }\n}\n","<div\n  class=\"rds-empty-state-image-container\"\n  (cdkObserveContent)=\"cdr.markForCheck()\"\n>\n  <ng-content select=\"[rds-empty-state-image], [rdsEmptyStateImage]\" />\n</div>\n<ng-content\n  select=\"rds-icon[rds-empty-state-icon], rds-icon[rdsEmptyStateIcon]\"\n/>\n@if (size !== 'xs' && _image && alignment !== 'center') {\n  <div class=\"rds-empty-state-divider\">\n    <rds-divider vertical=\"true\" />\n  </div>\n}\n<div class=\"rds-empty-state-items-container\">\n  <ng-content select=\"rds-empty-state-title\" />\n  <ng-content select=\"rds-empty-state-subtitle\" />\n  <ng-content select=\"[rds-empty-state-button], [rdsEmptyStateButton]\" />\n</div>\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsDividerModule } from '../divider';\nimport { RdsEmptyStateButtonDirective } from './empty-state-button.directive';\nimport { RdsEmptyStateIconDirective } from './empty-state-icon.directive';\nimport { RdsEmptyStateImageDirective } from './empty-state-image.directive';\nimport { RdsEmptyStateSubtitleDirective } from './empty-state-subtitle.directive';\nimport { RdsEmptyStateTitleDirective } from './empty-state-title.directive';\nimport { RdsEmptyStateComponent } from './empty-state.component';\n\nconst ELEMENTS = [\n  RdsEmptyStateComponent,\n  RdsEmptyStateButtonDirective,\n  RdsEmptyStateImageDirective,\n  RdsEmptyStateSubtitleDirective,\n  RdsEmptyStateTitleDirective,\n  RdsEmptyStateIconDirective,\n];\n\n@NgModule({\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n  imports: [CommonModule, ObserversModule, RdsDividerModule],\n})\nexport class RdsEmptyStateModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-caption',\n})\nexport class RdsFooterCaptionDirective {\n  @HostBinding('class') class = 'rds-footer-caption';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-custom-content',\n})\nexport class RdsFooterCustomContentDirective {\n  @HostBinding('class') class = 'rds-footer-custom-content';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-disclaimer',\n})\nexport class RdsFooterDisclaimerDirective {\n  @HostBinding('class') class = 'rds-footer-disclaimer';\n}\n","import { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\nexport type RdsLinkType = 'primary' | 'secondary';\nexport type RdsLinkSize = 's' | 'm' | 'l';\n\n@Component({\n  selector: 'a[rds-link], a[rdsLink], button[rds-link], button[rdsLink]',\n  template: '<ng-content/>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class RdsLinkComponent\n  implements FocusableOption, AfterViewInit, OnDestroy\n{\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly cdr = inject(ChangeDetectorRef);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly contentObserver = inject(ContentObserver);\n  protected readonly routerLink = inject(RouterLink, { optional: true });\n\n  @HostBinding('class') get hostClasses(): string[] {\n    const classes = ['rds-link'];\n\n    if (this.standalone) {\n      classes.push(`rds-link--${this.type}`, `rds-link-${this.size}`);\n    } else if (this.elementRef) {\n      classes.push(`rds-link-inline`);\n    }\n\n    return classes;\n  }\n\n  @HostBinding('class.rds-link-before-icon')\n  get hasFirstIcon(): boolean {\n    return (\n      this.elementRef?.nativeElement.firstChild?.tagName?.toUpperCase() ===\n      'RDS-ICON'\n    );\n  }\n\n  @HostBinding('class.rds-link-after-icon')\n  get hasLastIcon(): boolean {\n    return (\n      this.elementRef?.nativeElement.lastChild?.tagName?.toUpperCase() ===\n      'RDS-ICON'\n    );\n  }\n\n  @Input()\n  @HostBinding('class.rds-link-standalone')\n  set standalone(isStandalone: BooleanInput) {\n    this._standalone = booleanAttribute(isStandalone);\n  }\n\n  get standalone(): boolean {\n    return (\n      this._standalone ||\n      this.elementRef.nativeElement.tagName === 'BUTTON' ||\n      this.hasFirstIcon ||\n      this.hasLastIcon\n    );\n  }\n\n  protected _standalone = false;\n\n  @HostBinding('class.rds-link--active')\n  @Input({ transform: booleanAttribute })\n  active = false;\n\n  @HostBinding('attr.disabled')\n  get attrDisabled(): boolean | null {\n    return this.disabled ? this.disabled : null;\n  }\n\n  @HostBinding('attr.aria-disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n\n  @HostBinding('tabIndex')\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  private _tabIndex = TAB_INDEX_DEFAULT;\n\n  @Input() type: RdsLinkType = 'primary';\n  @Input() size: RdsLinkSize = 'l';\n\n  constructor() {\n    this._preventDisabledLinkClick();\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true);\n    this.contentObserver\n      .observe(this.elementRef.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr?.markForCheck());\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n  }\n\n  private _preventDisabledLinkClick(): void {\n    const link = this.routerLink;\n\n    if (link) {\n      const onClick = link.onClick;\n\n      link.onClick = (...args) => {\n        if (this.disabled) {\n          return !this.routerLink;\n        } else {\n          return onClick.apply(link, args);\n        }\n      };\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RdsLinkComponent } from './link.component';\n\n@NgModule({\n  imports: [RdsLinkComponent],\n  exports: [RdsLinkComponent],\n})\nexport class RdsLinkModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsLinkComponent, RdsLinkType } from '../link';\n\n@Component({\n  selector: 'rds-footer-link',\n  template: `<ng-content />`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsFooterLinkComponent extends RdsLinkComponent {\n  @HostBinding('class') class = 'rds-footer-link';\n\n  override readonly type: RdsLinkType = 'secondary';\n  override readonly size = 's';\n  protected override _standalone = true;\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-navigation',\n})\nexport class RdsFooterNavigationDirective {\n  @HostBinding('class') class = 'rds-footer-navigation';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-sitemap-section',\n})\nexport class RdsFooterSitemapSectionDirective {\n  @HostBinding('class') class = 'rds-footer-sitemap-section';\n}\n\n@Directive({\n  selector: 'rds-footer-sitemap',\n})\nexport class RdsFooterSitemapDirective {\n  @HostBinding('class') class = 'rds-footer-sitemap';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-footer-title',\n})\nexport class RdsFooterTitleDirective {\n  @HostBinding('class') class = 'rds-footer-title';\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RdsFooterIntl {\n  readonly changes: Subject<void> = new Subject<void>();\n\n  private _copyrightText = `© ${new Date().getFullYear()} F. Hoffmann-La Roche Ltd`;\n\n  get copyrightText(): string {\n    return this._copyrightText;\n  }\n\n  set copyrightText(copyrightText: string) {\n    this._copyrightText = copyrightText;\n    this.changes.next();\n  }\n}\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  inject,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge } from 'rxjs';\nimport { RdsFooterCustomContentDirective } from './footer-custom-content.directive';\nimport { RdsFooterDisclaimerDirective } from './footer-disclaimer.directive';\nimport { RdsFooterNavigationDirective } from './footer-navigation.directive';\nimport { RdsFooterSitemapDirective } from './footer-sitemap.directive';\nimport { RdsFooterIntl } from './footer.intl';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-footer, footer[rds-footer], footer[rdsFooter]',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsFooterComponent implements AfterViewInit {\n  protected readonly intl = inject(RdsFooterIntl);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly contentObserver = inject(ContentObserver);\n\n  @ContentChild(RdsFooterSitemapDirective, { static: false })\n  _sitemap: RdsFooterSitemapDirective;\n  @ContentChild(RdsFooterCustomContentDirective, { static: false })\n  _customContent: RdsFooterCustomContentDirective;\n  @ContentChild(RdsFooterNavigationDirective, { static: false })\n  _navigation: RdsFooterNavigationDirective;\n  @ContentChild(RdsFooterDisclaimerDirective, { static: false })\n  _disclaimer: RdsFooterDisclaimerDirective;\n\n  @Input({ transform: booleanAttribute }) neutral = false;\n\n  ngAfterViewInit(): void {\n    merge(this.intl.changes, this.contentObserver.observe(this.elementRef))\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n}\n","<div class=\"rds-footer\" [class.rds-footer-neutral]=\"neutral\">\n  <div class=\"rds-footer-content\">\n    <ng-content select=\"rds-footer-sitemap\" />\n    @if (_sitemap) {\n      <div class=\"rds-footer-divider\"></div>\n    }\n    <ng-content select=\"rds-footer-custom-content\" />\n    @if (_customContent) {\n      <div class=\"rds-footer-divider\"></div>\n    }\n    <div class=\"rds-footer-basic\">\n      <div class=\"rds-footer-basic-content\">\n        <div class=\"rds-footer-copy-rights\">{{ intl.copyrightText }}</div>\n      </div>\n      <ng-content select=\"rds-footer-navigation\" />\n    </div>\n    <ng-content select=\"rds-footer-disclaimer\" />\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RdsButtonModule } from '../button';\nimport { RdsDividerModule } from '../divider';\nimport { RdsFormFieldModule } from '../form-field';\nimport { RdsFooterCaptionDirective } from './footer-caption.directive';\nimport { RdsFooterCustomContentDirective } from './footer-custom-content.directive';\nimport { RdsFooterDisclaimerDirective } from './footer-disclaimer.directive';\nimport { RdsFooterLinkComponent } from './footer-link.component';\nimport { RdsFooterNavigationDirective } from './footer-navigation.directive';\nimport {\n  RdsFooterSitemapDirective,\n  RdsFooterSitemapSectionDirective,\n} from './footer-sitemap.directive';\nimport { RdsFooterTitleDirective } from './footer-title.directive';\nimport { RdsFooterComponent } from './footer.component';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nconst ELEMENTS = [\n  RdsFooterCaptionDirective,\n  RdsFooterCustomContentDirective,\n  RdsFooterComponent,\n  RdsFooterNavigationDirective,\n  RdsFooterLinkComponent,\n  RdsFooterDisclaimerDirective,\n  RdsFooterSitemapDirective,\n  RdsFooterSitemapSectionDirective,\n  RdsFooterTitleDirective,\n];\n\n@NgModule({\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ObserversModule,\n    ReactiveFormsModule,\n    RdsDividerModule,\n    RdsFormFieldModule,\n    RdsButtonModule,\n  ],\n})\nexport class RdsFooterModule {}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-header-actions',\n})\nexport class RdsHeaderActionsDirective {\n  @HostBinding('class') class = 'rds-header-actions';\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Directive({\n  selector: 'rds-header-app-name',\n})\nexport class RdsHeaderAppNameDirective implements OnDestroy, OnInit {\n  private readonly elementRef = inject(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  @HostBinding('class') class = 'rds-header-app-name';\n\n  @HostBinding('class.rds-header-app-name-triggerable')\n  get isTriggerable(): boolean {\n    return this.triggered.observed;\n  }\n\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.isTriggerable ? TAB_INDEX_DEFAULT : TAB_INDEX_NOT_FOCUSABLE;\n  }\n\n  @Output() triggered = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n  }\n\n  @HostListener('click', ['$event'])\n  @HostListener('keydown', ['$event'])\n  onLogoClick(event: MouseEvent | KeyboardEvent): void {\n    if (\n      (event instanceof KeyboardEvent &&\n        !hasModifierKey(event, 'shiftKey', 'altKey', 'ctrlKey') &&\n        (event.keyCode === SPACE || event.keyCode === ENTER)) ||\n      event instanceof MouseEvent\n    ) {\n      if (event instanceof KeyboardEvent && event.keyCode === SPACE) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.triggered.next(event);\n    }\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsLinkComponent } from '../link';\n\n@Component({\n  selector: 'rds-header-link',\n  template: `<ng-content />`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsHeaderLinkComponent\n  extends RdsLinkComponent\n  implements OnInit, AfterViewInit, FocusableOption, OnDestroy\n{\n  @HostBinding('class') class = 'rds-header-link';\n\n  @Output()\n  toggle = new EventEmitter<boolean>();\n\n  protected override _standalone = true;\n\n  ngOnInit(): void {\n    this.type = 'secondary';\n    this.size = 's';\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent): void {\n    const code = event.keyCode;\n\n    if ((code === ENTER || code === SPACE) && !hasModifierKey(event)) {\n      this.toggle.next(!this.active);\n\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('click')\n  onClick(): void {\n    if (!this.disabled) {\n      this.toggle.next(!this.active);\n    }\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-header-navigation-primary',\n})\nexport class RdsHeaderNavigationPrimaryDirective {\n  @HostBinding('class') class = [\n    'rds-header-navigation',\n    'rds-header-navigation--primary',\n  ];\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'rds-header-navigation-secondary',\n})\nexport class RdsHeaderNavigationSecondaryDirective {\n  @HostBinding('class') class = [\n    'rds-header-navigation',\n    'rds-header-navigation--secondary',\n  ];\n}\n","import { ENTER, hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'rds-header-searchbar',\n  template: `\n    <button\n      rds-icon-button\n      size=\"m\"\n      class=\"rds-header-search-search-icon\"\n      (click)=\"emitValue()\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"search\" />\n    </button>\n    <input\n      #input\n      [ngModel]=\"searchValue\"\n      (ngModelChange)=\"onInputChange($event)\"\n      (keydown)=\"onKeyPress($event)\"\n      class=\"rds-header-search-input\"\n      [placeholder]=\"getPlaceholder()\"\n    />\n    <button\n      rds-icon-button\n      (click)=\"onCloseSearch()\"\n      class=\"rds-header-search-close-icon\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"close\" />\n    </button>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsHeaderSearchbarComponent {\n  private readonly _defaultPlaceholder =\n    'Search for the products, page, document…';\n\n  @HostBinding('class') class = 'rds-header-search';\n  @Input() placeholder: string;\n  @Input() searchValue = '';\n  @Output() searchChange = new EventEmitter<string>();\n  @Output() closeSearch = new EventEmitter<void>();\n  @Output() search = new EventEmitter<string>();\n  @ViewChild('input', { static: true }) searchInput: ElementRef;\n\n  onInputChange(newValue: string): void {\n    this.searchValue = newValue;\n    this.searchChange.next(this.searchValue);\n  }\n\n  onCloseSearch(): void {\n    this.closeSearch.emit();\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER && !hasModifierKey(event)) {\n      this.emitValue();\n    }\n  }\n\n  emitValue(): void {\n    this.search.emit(this.searchValue);\n  }\n\n  focusSearch(): void {\n    this.searchInput.nativeElement.focus();\n  }\n\n  getPlaceholder(): string {\n    return this.placeholder || this._defaultPlaceholder;\n  }\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const HEADER_SEARCH_EXPANSION_TIMING_VALUE = 300;\nexport const HEADER_SEARCH_EXPANSION_TIMING = `${HEADER_SEARCH_EXPANSION_TIMING_VALUE}ms ease-in`;\n\nexport const rdsHeaderSearchAnimations: {\n  readonly searchExpansion: AnimationTriggerMetadata;\n  readonly headerCollapse: AnimationTriggerMetadata;\n} = {\n  searchExpansion: trigger('searchExpansion', [\n    state(\n      'collapsed, void',\n      style({ display: 'none', opacity: 0, transform: 'translateX(-100%)' }),\n    ),\n    state(\n      'expanded',\n      style({ display: 'flex', opacity: 1, transform: 'translateX(0)' }),\n    ),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(HEADER_SEARCH_EXPANSION_TIMING),\n    ),\n  ]),\n  headerCollapse: trigger('headerCollapse', [\n    state(\n      'collapsed, void',\n      style({ transform: 'translateX(-100%)', display: 'none', opacity: 0 }),\n    ),\n    state(\n      'expanded',\n      style({ transform: 'translateX(0)', display: 'flex', opacity: 1 }),\n    ),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(HEADER_SEARCH_EXPANSION_TIMING),\n    ),\n  ]),\n};\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RdsSearchIntl {\n  private readonly _changes = new Subject<void>();\n  private _searchInputPlaceholder = 'Search...';\n  private _searchButtonText = 'Search';\n  private _emptyValue = '';\n  private _ariaInputLabel = 'Global';\n  private _ariaClearLabel = 'Clear search';\n\n  get changes(): Observable<void> {\n    return this._changes.asObservable();\n  }\n\n  get searchInputPlaceholder(): string {\n    return this._searchInputPlaceholder;\n  }\n\n  set searchInputPlaceholder(placeholderText: string) {\n    this._searchInputPlaceholder = placeholderText;\n    this._changes.next();\n  }\n\n  get searchButtonText(): string {\n    return this._searchButtonText;\n  }\n\n  set searchButtonText(buttonText: string) {\n    this._searchButtonText = buttonText;\n    this._changes.next();\n  }\n\n  get emptyValue(): string {\n    return this._emptyValue;\n  }\n\n  set emptyValue(emptyValue: string) {\n    this._emptyValue = emptyValue;\n    this._changes.next();\n  }\n\n  get ariaInputLabel(): string {\n    return this._ariaInputLabel;\n  }\n\n  set ariaInputLabel(ariaInputLabel: string) {\n    this._ariaInputLabel = ariaInputLabel;\n    this._changes.next();\n  }\n\n  get ariaClearLabel(): string {\n    return this._ariaClearLabel;\n  }\n\n  set ariaClearLabel(ariaClearLabel: string) {\n    this._ariaClearLabel = ariaClearLabel;\n    this._changes.next();\n  }\n}\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectorRef,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, EMPTY, noop, Observable, of, skip } from 'rxjs';\nimport { RdsSearchIntl } from './search.intl';\nimport { ControlValueAccessor } from '@angular/forms';\nimport {\n  FocusableOption,\n  FocusMonitor,\n  FocusOptions,\n  FocusOrigin,\n} from '@angular/cdk/a11y';\nimport {\n  RdsSearchEvent,\n  RdsSearchEventTrigger,\n  RdsSearchSize,\n} from './search.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Directive()\nexport abstract class RdsAbstractSearchComponent\n  implements\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    AfterViewInit,\n    ControlValueAccessor,\n    FocusableOption\n{\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly intl = inject(RdsSearchIntl);\n  protected readonly cdr = inject(ChangeDetectorRef);\n  protected readonly elementRef = inject(ElementRef);\n  protected readonly focusMonitor = inject(FocusMonitor);\n\n  @Input() placeholder: string;\n  @Input() buttonText: string;\n  @Input() emptyValue: string;\n  @Input() ariaClearLabel: string;\n  @Input({ transform: booleanAttribute }) disabled = false;\n  @Input({ transform: booleanAttribute }) includeButton = false;\n  @Input({ transform: booleanAttribute }) autoSearch = false;\n\n  @Input()\n  size: RdsSearchSize = 'l';\n\n  get value(): string {\n    return this._value;\n  }\n\n  protected _value: string;\n  protected readonly _lastEmitted = new BehaviorSubject<RdsSearchEvent>({\n    query: '',\n    trigger: 'input',\n  });\n\n  @Output()\n  search = this._lastEmitted.pipe(skip(1));\n\n  @Output()\n  clear = new EventEmitter<void>();\n\n  @ViewChild('searchInput') searchInput: ElementRef<HTMLInputElement>;\n\n  @HostBinding('attr.role') role = 'search';\n  @Input()\n  @HostBinding('attr.aria-label')\n  ariaInputLabel: string;\n\n  _onChange: (value: string) => void = noop;\n  _onTouched: () => void = noop;\n\n  ngOnInit(): void {\n    this.setIntlValues();\n    this.setNewValue(this.intl.emptyValue).subscribe();\n    this.intl.changes\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.setIntlValues();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['placeholder'] ||\n      changes['buttonText'] ||\n      changes['emptyValue'] ||\n      changes['ariaClearLabel'] ||\n      changes['ariaInputLabel']\n    ) {\n      this.setIntlValues();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this._onTouched());\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.disabled !== isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n\n  writeValue(value: string): void {\n    this.setNewValue(value).subscribe(() => this.emitValue('form'));\n  }\n\n  onInput(event: Event): void {\n    this.setNewValue((event.target as HTMLInputElement).value).subscribe(() =>\n      this.emitValue('input', event),\n    );\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n  }\n\n  isDirtyValue(): boolean {\n    return this._value !== this.intl.emptyValue;\n  }\n\n  resetInput(event: Event): void {\n    if (!this.disabled && this.isDirtyValue()) {\n      this.setNewValue(this.intl.emptyValue).subscribe();\n      this.emitValue('reset', event);\n      this.clear.emit();\n      this.searchInput.nativeElement.focus();\n    }\n  }\n\n  emitValue(trigger: RdsSearchEventTrigger, event?: Event): void {\n    if (this._lastEmitted.getValue().query !== this._value) {\n      this._lastEmitted.next({ query: this._value, trigger, event });\n      this._onChange(this._value);\n    }\n  }\n\n  protected setIntlValues(): void {\n    this.placeholder =\n      this.placeholder && this.placeholder !== ''\n        ? this.placeholder\n        : this.intl.searchInputPlaceholder;\n    this.buttonText =\n      this.buttonText && this.buttonText !== ''\n        ? this.buttonText\n        : this.intl.searchButtonText;\n    this.emptyValue = this.emptyValue || this.intl.emptyValue;\n    this.ariaInputLabel =\n      this.ariaInputLabel && this.ariaInputLabel !== ''\n        ? this.ariaInputLabel\n        : this.intl.ariaInputLabel;\n    this.ariaClearLabel =\n      this.ariaClearLabel && this.ariaClearLabel !== ''\n        ? this.ariaClearLabel\n        : this.intl.ariaClearLabel;\n  }\n\n  private setNewValue(value: string): Observable<void> {\n    if (\n      value !== null &&\n      value !== undefined &&\n      this._value !== String(value)\n    ) {\n      this._value = String(value);\n      this.cdr.markForCheck();\n\n      if (this.autoSearch) {\n        return of(void 0);\n      }\n    }\n\n    return EMPTY;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsAbstractSearchComponent } from './abstract-search.component';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'rds-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RdsSearchComponent),\n      multi: true,\n    },\n  ],\n})\nexport class RdsSearchComponent extends RdsAbstractSearchComponent {}\n","<div\n  class=\"rds-search rds-search-{{ size }}\"\n  [class.rds-search--with-clear-button]=\"isDirtyValue()\"\n  (click)=\"searchInput.focus()\"\n>\n  <rds-form-field [size]=\"size\" labelPosition=\"none\">\n    <rds-icon\n      class=\"rds-search-icon\"\n      namespace=\"filled\"\n      icon=\"search\"\n      rds-control-prefix\n      aria-hidden=\"true\"\n    />\n    <input\n      [disabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (input)=\"onInput($event)\"\n      type=\"search\"\n      #searchInput\n      rdsInput\n      (keydown.enter)=\"emitValue('input-enter-key', $event)\"\n      (search)=\"$event.preventDefault(); $event.stopPropagation()\"\n      [placeholder]=\"placeholder\"\n    />\n    <div class=\"rds-search-clear-button-container\">\n      @if (isDirtyValue()) {\n        <button\n          rds-icon-button\n          rds-control-suffix\n          [size]=\"'s'\"\n          [attr.aria-label]=\"ariaClearLabel\"\n          (click)=\"resetInput($event); $event.stopPropagation()\"\n          [disabled]=\"disabled\"\n          class=\"rds-search-reset-button\"\n        >\n          <rds-icon namespace=\"filled\" icon=\"close\" aria-hidden=\"true\" />\n        </button>\n      }\n    </div>\n  </rds-form-field>\n  @if (includeButton) {\n    <button\n      class=\"rds-search-button\"\n      rds-primary-button\n      [disabled]=\"disabled\"\n      [size]=\"size\"\n      (click)=\"emitValue('button', $event); $event.stopPropagation()\"\n    >\n      {{ buttonText }}\n    </button>\n  }\n</div>\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { rdsHeaderSearchAnimations } from './header-search-animations';\nimport { fromEvent } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RdsHeaderSearchbarComponent } from './header-searchbar.component';\nimport { RdsIconButtonComponent } from '../button';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { AnimationEvent } from '@angular/animations';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nexport type RdsHeaderExpandedMode = 'expanded' | 'collapsed';\nexport type RdsHeaderSearchPosition = 'none' | 'start' | 'end' | 'animated';\n\n@Component({\n  selector: 'rds-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  animations: [\n    rdsHeaderSearchAnimations.headerCollapse,\n    rdsHeaderSearchAnimations.searchExpansion,\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsHeaderComponent implements AfterViewInit, OnInit, OnDestroy {\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly renderer = inject(Renderer2);\n  private readonly elementRef = inject(ElementRef);\n  private readonly ngZone = inject(NgZone);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly contentObserver = inject(ContentObserver);\n\n  searchMode = false;\n\n  @Input() scrollTarget:\n    | HTMLElement\n    | ElementRef<HTMLElement>\n    | string\n    | undefined\n    | null;\n  @Input() searchbarPlaceholder: string;\n  @Input() searchValue = '';\n\n  @Output() search = new EventEmitter<string>();\n  @Output() searchChange = new EventEmitter<string>();\n  @Output() logoTriggered = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  @HostBinding('class') class = 'rds-header';\n  @ViewChild(RdsHeaderSearchbarComponent, { static: false })\n  searchbar: RdsHeaderSearchbarComponent;\n  @ViewChild('searchIcon', { static: false })\n  searchIcon: RdsIconButtonComponent;\n  @ViewChild('logoElement', { static: true }) logoElement: ElementRef;\n\n  @Input()\n  get searchPosition(): RdsHeaderSearchPosition {\n    return this._searchPosition;\n  }\n\n  set searchPosition(value: RdsHeaderSearchPosition) {\n    this._searchPosition = value;\n  }\n\n  @Input({ transform: booleanAttribute })\n  @HostBinding('class.rds-header-minimal-margins')\n  minimalMargins = false;\n\n  private _searchPosition: RdsHeaderSearchPosition = 'none';\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      const scrollTarget = this.getScrollTarget();\n      fromEvent(scrollTarget, 'scroll')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          const scrollTop =\n            scrollTarget instanceof HTMLElement\n              ? scrollTarget.scrollTop\n              : scrollTarget.scrollY;\n\n          if (\n            scrollTop === 0 &&\n            this.elementRef.nativeElement.classList.contains('rds-header-fixed')\n          ) {\n            this.ngZone.run(() =>\n              this.renderer.removeClass(\n                this.elementRef.nativeElement,\n                'rds-header-fixed',\n              ),\n            );\n          } else if (\n            scrollTop !== 0 &&\n            !this.elementRef.nativeElement.classList.contains(\n              'rds-header-fixed',\n            )\n          ) {\n            this.ngZone.run(() =>\n              this.renderer.addClass(\n                this.elementRef.nativeElement,\n                'rds-header-fixed',\n              ),\n            );\n          }\n        });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.logoElement.nativeElement, true);\n    this.contentObserver\n      .observe(this.elementRef.nativeElement)\n      .pipe(\n        tap(() => this.cdr.markForCheck()),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.logoElement.nativeElement);\n  }\n\n  startSearching(): void {\n    this.searchMode = true;\n  }\n\n  endSearching(): void {\n    this.searchMode = false;\n  }\n\n  getExpandedState(): RdsHeaderExpandedMode {\n    return this.searchMode ? 'expanded' : 'collapsed';\n  }\n\n  getCollapsedState(): RdsHeaderExpandedMode {\n    return this.searchMode ? 'collapsed' : 'expanded';\n  }\n\n  onSearch(value: string): void {\n    this.search.emit(value);\n  }\n\n  emitSearch(event: Event): void {\n    if (\n      event instanceof KeyboardEvent &&\n      event.keyCode === ENTER &&\n      !hasModifierKey(event)\n    ) {\n      this.search.emit(this.searchValue);\n    }\n  }\n\n  onLogoClick(event: MouseEvent | KeyboardEvent): void {\n    if (\n      (event instanceof KeyboardEvent &&\n        !hasModifierKey(event, 'shiftKey', 'altKey', 'ctrlKey') &&\n        (event.keyCode === SPACE || event.keyCode === ENTER)) ||\n      event instanceof MouseEvent\n    ) {\n      if (event instanceof KeyboardEvent && event.keyCode === SPACE) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.logoTriggered.next(event);\n    }\n  }\n\n  focusSearchInput(state: AnimationEvent): void {\n    if (this.searchbar && state.fromState !== 'void') {\n      if (this.getExpandedState() === 'expanded') {\n        Promise.resolve().then(() => this.searchbar.focusSearch());\n      } else if (this.getExpandedState() === 'collapsed') {\n        Promise.resolve().then(() => this.searchIcon?.focus());\n      }\n    }\n  }\n\n  private getScrollTarget(): HTMLElement | Window {\n    if (this.scrollTarget instanceof ElementRef) {\n      return this.scrollTarget.nativeElement;\n    } else if (this.scrollTarget instanceof HTMLElement) {\n      return this.scrollTarget;\n    } else if (typeof this.scrollTarget === 'string') {\n      return document.querySelector(\n        this.scrollTarget,\n      ) as unknown as HTMLElement;\n    } else if (this.scrollTarget === undefined || this.scrollTarget === null) {\n      return window;\n    } else {\n      throw new Error(\n        'ScrollTarget for RdsHeader is provided in a wrong format, pass ElementRef, selector or null.',\n      );\n    }\n  }\n}\n","<div class=\"rds-header-container\">\n  <div class=\"rds-header-top\">\n    <div class=\"rds-header-base\" [@headerCollapse]=\"getCollapsedState()\">\n      <div class=\"rds-header-title\">\n        <div\n          class=\"rds-header-logo\"\n          [class.rds-header-logo-trigger]=\"logoTriggered.observed\"\n          [tabIndex]=\"logoTriggered.observed ? 0 : -1\"\n          #logoElement\n          (click)=\"onLogoClick($event)\"\n          (keydown)=\"onLogoClick($event)\"\n        >\n          <svg\n            height=\"32\"\n            viewBox=\"0 0 152 79\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M124.203 34.7693C123.519 33.3633 122.55 32.2994 121.315 31.5394C120.08 30.7794 118.655 30.3994 117.059 30.3994C115.463 30.3994 114.038 30.7794 112.803 31.5394C111.568 32.2994 110.599 33.3823 109.915 34.7693C109.231 36.1753 108.889 37.8092 108.889 39.6712V43.8701C108.889 45.732 109.231 47.366 109.915 48.772C110.599 50.1779 111.568 51.2419 112.803 52.0019C114.038 52.7619 115.463 53.1228 117.059 53.1228C118.655 53.1228 120.08 52.7429 121.315 52.0019C122.55 51.2419 123.31 50.3869 123.994 48.9809C124.317 48.316 124.602 47.48 124.754 46.625L120.84 45.732C120.669 46.568 120.384 47.366 119.947 47.917C119.244 48.8289 118.218 49.2279 117.059 49.2279C115.9 49.2279 114.874 48.8099 114.171 47.917C113.468 47.005 113.126 45.713 113.126 44.1171V42.5401H125.248V39.6522C125.229 37.7902 124.887 36.1753 124.203 34.7693ZM117.059 34.2943C118.218 34.2943 119.244 34.6933 119.947 35.5863C120.574 36.3843 120.916 37.6002 120.992 38.9872H113.126C113.183 37.6002 113.525 36.3843 114.171 35.5863C114.855 34.6933 115.881 34.2943 117.059 34.2943Z\"\n              fill=\"#0B41CD\"\n            />\n            <path\n              d=\"M94.0119 52.6287V38.3031C94.0119 37.1061 94.3539 36.1371 95.0189 35.4341C95.7029 34.7312 96.5389 34.3702 97.5839 34.3702C98.6099 34.3702 99.4649 34.7312 100.149 35.4341C100.833 36.1371 101.156 37.0871 101.156 38.3031V52.6287H105.393V37.4101C105.393 35.2061 104.823 33.4962 103.683 32.2612C102.543 31.0262 100.985 30.4183 99.0089 30.4183C97.9259 30.4183 96.9569 30.6273 96.0449 31.0642C95.1519 31.5012 94.4299 32.0712 94.0309 32.6792V21.7925H89.7939V52.6287H94.0119Z\"\n              fill=\"#0B41CD\"\n            />\n            <path\n              d=\"M74.632 44.0791C74.632 45.675 74.993 46.967 75.696 47.86C76.418 48.7529 77.444 49.1519 78.603 49.1519C80.693 49.1519 82.004 47.803 82.498 45.124L86.431 46.036C86.108 48.278 85.291 50.0259 83.98 51.2609C82.669 52.4959 80.883 53.1228 78.603 53.1228C76.133 53.1228 74.138 52.2869 72.637 50.6149C71.136 48.9429 70.376 46.663 70.376 43.8131V39.7092C70.376 36.8593 71.117 34.5793 72.637 32.9074C74.138 31.2354 76.133 30.3994 78.603 30.3994C80.883 30.3994 82.669 31.0264 83.98 32.2614C85.291 33.4963 86.108 35.2443 86.431 37.4862L82.498 38.3982C82.004 35.7193 80.712 34.3703 78.603 34.3703C77.444 34.3703 76.399 34.7693 75.696 35.6623C74.974 36.5553 74.632 37.8282 74.632 39.4432V44.0791Z\"\n              fill=\"#0B41CD\"\n            />\n            <path\n              d=\"M58.957 49.152C57.798 49.152 56.772 48.734 56.069 47.841C55.366 46.929 55.024 45.6371 55.024 44.0411V39.4432C55.024 37.8473 55.366 36.5553 56.069 35.6623C56.772 34.7693 57.798 34.3704 58.957 34.3704C60.116 34.3704 61.142 34.7693 61.845 35.6623C62.548 36.5553 62.89 37.8283 62.89 39.4432V44.0411C62.89 45.6371 62.548 46.929 61.845 47.841C61.142 48.753 60.116 49.152 58.957 49.152ZM58.957 53.1419C60.553 53.1419 61.978 52.7619 63.213 52.0209C64.448 51.2609 65.417 50.178 66.101 48.791C66.785 47.385 67.127 45.7511 67.127 43.8891V39.6902C67.127 37.8283 66.785 36.1943 66.101 34.7883C65.417 33.3824 64.448 32.3184 63.213 31.5584C61.978 30.7984 60.553 30.4185 58.957 30.4185C57.361 30.4185 55.936 30.7984 54.701 31.5584C53.466 32.3184 52.497 33.4014 51.813 34.7883C51.129 36.1943 50.787 37.8283 50.787 39.6902V43.8891C50.787 45.7511 51.129 47.385 51.813 48.791C52.497 50.197 53.466 51.2609 54.701 52.0209C55.936 52.7619 57.361 53.1419 58.957 53.1419Z\"\n              fill=\"#0B41CD\"\n            />\n            <path\n              d=\"M36.271 34.8073V25.8205H40.546C41.686 25.8205 42.579 26.1815 43.206 26.9225C43.833 27.6635 44.156 28.7845 44.156 30.3234C44.156 31.8434 43.833 32.9834 43.206 33.7243C42.579 34.4653 41.686 34.8263 40.546 34.8263L36.271 34.8073ZM36.271 52.6289V38.8732H39.9C40.945 38.8732 41.629 39.1202 42.085 39.5952C42.541 40.0702 42.788 40.8302 42.921 41.9131L44.118 52.6289H48.374L47.101 41.5141C46.949 40.1842 46.778 39.3102 46.246 38.5312C45.752 37.8282 45.049 37.2392 44.232 36.9733C45.524 36.3653 46.55 35.4913 47.291 34.3893C48.032 33.2873 48.412 31.7674 48.412 29.8294C48.412 27.3405 47.709 25.3645 46.322 23.9206C44.916 22.4766 42.997 21.7546 40.565 21.7546H32.053V52.6289H36.271Z\"\n              fill=\"#0B41CD\"\n            />\n            <path\n              d=\"M152 39.5L117.667 79H34.333L0 39.5L34.333 0H117.648L152 39.5ZM115.824 74.9911L146.68 39.5L115.824 4.0089H36.157L5.32 39.5L36.157 74.9911H115.824Z\"\n              fill=\"#0B41CD\"\n            />\n          </svg>\n        </div>\n        <ng-content\n          select=\"rds-divider[rds-header-start-divider], rds-header-app-name\"\n        />\n        @if (searchPosition === 'start') {\n          <ng-container [ngTemplateOutlet]=\"searchTemplate\" />\n        }\n      </div>\n\n      <div class=\"rds-header-right-section\">\n        @if (searchPosition === 'end') {\n          <ng-container [ngTemplateOutlet]=\"searchTemplate\" />\n        }\n        <div class=\"rds-header-actions-nav\">\n          <ng-content select=\"rds-header-navigation-primary\" />\n        </div>\n        <ng-content select=\"rds-divider[rds-header-end-divider]\" />\n        <div class=\"rds-header-actions\">\n          @if (searchPosition === 'animated') {\n            <button\n              #searchIcon\n              rds-icon-button\n              size=\"m\"\n              (click)=\"startSearching()\"\n              class=\"rds-header-action\"\n            >\n              <rds-icon namespace=\"outlined\" icon=\"search\" />\n            </button>\n          }\n          <div>\n            <ng-content select=\"rds-header-actions\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    @if (searchPosition === 'animated') {\n      <div\n        [@searchExpansion]=\"getExpandedState()\"\n        (@searchExpansion.done)=\"focusSearchInput($event)\"\n        class=\"rds-header-searchbar-container\"\n      >\n        <rds-header-searchbar\n          (search)=\"onSearch($event)\"\n          (closeSearch)=\"endSearching()\"\n          [placeholder]=\"searchbarPlaceholder\"\n          [searchValue]=\"searchValue\"\n          (searchChange)=\"searchChange.emit($event)\"\n        />\n      </div>\n    }\n  </div>\n  <div>\n    <ng-content select=\"rds-header-navigation-secondary\" />\n  </div>\n</div>\n\n<ng-template #searchTemplate>\n  <rds-search\n    size=\"s\"\n    [(ngModel)]=\"searchValue\"\n    (ngModelChange)=\"searchChange.emit($event)\"\n    (keydown.enter)=\"emitSearch($event)\"\n    [placeholder]=\"searchbarPlaceholder\"\n    class=\"rds-header-search-input rds-header-search-position-{{\n      searchPosition\n    }}\"\n  />\n</ng-template>\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { RdsAbstractSearchComponent } from './abstract-search.component';\nimport { RdsFormFieldComponent } from '../form-field';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'rds-global-search',\n  templateUrl: './global-search.component.html',\n  styleUrls: ['./global-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RdsGlobalSearchComponent),\n      multi: true,\n    },\n  ],\n})\nexport class RdsGlobalSearchComponent extends RdsAbstractSearchComponent {\n  @ViewChild(RdsFormFieldComponent, { static: true })\n  formField: RdsFormFieldComponent<string>;\n\n  @Input({ transform: booleanAttribute }) override includeButton = true;\n\n  private btnFocused: false | 'reset' | 'search' = false;\n\n  get active(): boolean {\n    return this.formField?.control?.focused || this.btnFocused !== false;\n  }\n\n  setBtnFocused(\n    btnName: 'reset' | 'search',\n    eventType: 'focus' | 'blur',\n  ): void {\n    if (eventType === 'focus') {\n      this.btnFocused = btnName;\n    } else if (eventType === 'blur' && this.btnFocused === btnName) {\n      this.btnFocused = false;\n    }\n  }\n}\n","<div\n  class=\"rds-global-search rds-global-search-{{ size }}\"\n  [class.rds-global-search-active]=\"active\"\n  [class.rds-global-search-disabled]=\"disabled\"\n  (click)=\"searchInput.focus()\"\n>\n  <rds-form-field [size]=\"size\" labelPosition=\"none\">\n    <rds-icon\n      class=\"rds-global-search-icon\"\n      namespace=\"filled\"\n      icon=\"search\"\n      rds-control-prefix\n      aria-hidden=\"true\"\n    />\n    <input\n      [disabled]=\"disabled\"\n      [ngModel]=\"value\"\n      (input)=\"onInput($event)\"\n      type=\"search\"\n      #searchInput\n      rdsInput\n      (keydown.enter)=\"emitValue('input-enter-key', $event)\"\n      (search)=\"$event.preventDefault(); $event.stopPropagation()\"\n      [placeholder]=\"placeholder\"\n    />\n    @if (isDirtyValue()) {\n      <button\n        rds-icon-button\n        rds-control-suffix\n        [size]=\"'s'\"\n        [attr.aria-label]=\"ariaClearLabel\"\n        (click)=\"resetInput($event); $event.stopPropagation()\"\n        [disabled]=\"disabled\"\n        (focus)=\"setBtnFocused('reset', 'focus')\"\n        (blur)=\"setBtnFocused('reset', 'blur')\"\n        class=\"rds-global-search-reset-button\"\n      >\n        <rds-icon namespace=\"filled\" icon=\"close\" aria-hidden=\"true\" />\n      </button>\n    }\n  </rds-form-field>\n  @if (includeButton) {\n    <button\n      class=\"rds-global-search-button\"\n      rds-primary-button\n      (focus)=\"setBtnFocused('search', 'focus')\"\n      (blur)=\"setBtnFocused('search', 'blur')\"\n      [disabled]=\"disabled\"\n      [size]=\"size\"\n      (click)=\"emitValue('button', $event); $event.stopPropagation()\"\n    >\n      {{ buttonText }}\n    </button>\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { RdsSearchComponent } from './search.component';\nimport { RdsFormFieldModule } from '../form-field';\nimport { RdsIconComponent } from '../icons';\nimport { FormsModule } from '@angular/forms';\nimport { RdsButtonModule } from '../button';\nimport { RdsGlobalSearchComponent } from './global-search.component';\n\nconst COMPONENTS = [RdsSearchComponent, RdsGlobalSearchComponent];\n\n@NgModule({\n  imports: [RdsFormFieldModule, RdsIconComponent, FormsModule, RdsButtonModule],\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS],\n})\nexport class RdsSearchModule {}\n","import { Directive, forwardRef, HostBinding, inject } from '@angular/core';\nimport { RdsDividerComponent } from '../divider';\n\n@Directive({\n  selector: 'rds-divider[rds-header-start-divider]',\n})\nexport class RdsHeaderStartDividerDirective {\n  private readonly divider = inject<RdsDividerComponent>(\n    forwardRef(() => RdsDividerComponent),\n  );\n\n  @HostBinding('class') class = 'rds-header-start-divider';\n\n  constructor() {\n    this.divider.vertical = true;\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\nimport { RdsHeaderStartDividerDirective } from './header-start-divider.directive';\n\n@Directive({\n  selector: 'rds-divider[rds-header-end-divider]',\n})\nexport class RdsHeaderEndDividerDirective extends RdsHeaderStartDividerDirective {\n  @HostBinding('class') override class = 'rds-header-end-divider';\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RdsButtonModule } from '../button';\nimport { RdsFormFieldModule } from '../form-field';\nimport { RdsLinkComponent } from '../link';\nimport { RdsIconComponent } from '../icons';\nimport { RdsHeaderActionsDirective } from './header-actions.directive';\nimport { RdsHeaderAppNameDirective } from './header-app-name.directive';\nimport { RdsHeaderLinkComponent } from './header-link.component';\nimport { RdsHeaderNavigationPrimaryDirective } from './header-navigation-primary.directive';\nimport { RdsHeaderNavigationSecondaryDirective } from './header-navigation-secondary.directive';\nimport { RdsHeaderSearchbarComponent } from './header-searchbar.component';\nimport { RdsHeaderComponent } from './header.component';\nimport { RdsSearchModule } from '../search';\nimport { RdsHeaderStartDividerDirective } from './header-start-divider.directive';\nimport { RdsDividerModule } from '../divider';\nimport { RdsHeaderEndDividerDirective } from './header-end-divider.directive';\n\nconst ELEMENTS = [\n  RdsHeaderComponent,\n  RdsHeaderActionsDirective,\n  RdsHeaderAppNameDirective,\n  RdsHeaderLinkComponent,\n  RdsHeaderNavigationPrimaryDirective,\n  RdsHeaderNavigationSecondaryDirective,\n  RdsHeaderSearchbarComponent,\n  RdsHeaderStartDividerDirective,\n  RdsHeaderEndDividerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RdsIconComponent,\n    OverlayModule,\n    RdsFormFieldModule,\n    RdsButtonModule,\n    FormsModule,\n    ObserversModule,\n    RdsLinkComponent,\n    RdsSearchModule,\n    RdsDividerModule,\n  ],\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsHeaderModule {}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const rdsMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  transformMenu: trigger('transformMenu', [\n    state(\n      'void',\n      style({\n        opacity: 0,\n        transform: 'scale(0.8)',\n      }),\n    ),\n    transition(\n      'void => enter',\n      animate(\n        '120ms cubic-bezier(0, 0, 0.2, 1)',\n        style({\n          opacity: 1,\n          transform: 'scale(1)',\n        }),\n      ),\n    ),\n    transition(\n      '* => void',\n      animate('100ms 25ms linear', style({ opacity: 0 })),\n    ),\n  ]),\n  fadeInItems: trigger('fadeInItems', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => *', [\n      style({ opacity: 0 }),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n","import { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  inject,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport const RDS_MENU_CONTENT = new InjectionToken<RdsMenuContentDirective>(\n  'RDS_MENU_CONTENT',\n);\n\n@Directive({\n  selector: 'ng-template[rds-menu-content], ng-template[rdsMenuContent]',\n  providers: [\n    { provide: RDS_MENU_CONTENT, useExisting: RdsMenuContentDirective },\n  ],\n})\nexport class RdsMenuContentDirective implements OnDestroy {\n  private readonly template = inject<TemplateRef<HTMLElement>>(TemplateRef);\n  private readonly componentFactoryResolver = inject(ComponentFactoryResolver);\n  private readonly appRef = inject(ApplicationRef);\n  private readonly injector = inject(Injector);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly document = inject(DOCUMENT);\n  private readonly cdr = inject(ChangeDetectorRef, { optional: true });\n\n  readonly _attached = new Subject<void>();\n  private _portal: TemplatePortal;\n  private _outlet: DomPortalOutlet;\n\n  attach(context: any = {}): void {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this.template, this.viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(\n        this.document.createElement('div'),\n        this.componentFactoryResolver,\n        this.appRef,\n        this.injector,\n      );\n    }\n\n    const element: HTMLElement = this.template.elementRef.nativeElement;\n\n    if (element.parentNode) {\n      element.parentNode.insertBefore(this._outlet.outletElement, element);\n    }\n\n    if (this.cdr) {\n      this.cdr.markForCheck();\n    }\n\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  detach(): void {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\n","export function throwRdsMenuMissingError(): void {\n  throw Error(`rdsMenuTriggerFor: must pass in an rds-menu instance.\n    Example:\n      <rds-menu-component #menu=\"rdsMenu\"></rds-menu-component>\n      <button [rdsMenuTriggerFor]=\"menu\"></button>`);\n}\n\nexport function throwRdsMenuInvalidPositionX(): void {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <rds-menu xPosition=\"before\" #menu=\"rdsMenu\"></rds-menu>`);\n}\n\nexport function throwRdsMenuInvalidPositionY(): void {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <rds-menu yPosition=\"above\" #menu=\"rdsMenu\"></rds-menu>`);\n}\n\nexport function throwRdsMenuRecursiveError(): void {\n  throw Error(\n    `rdsMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n      `not a parent of the trigger or move the trigger outside of the menu.`,\n  );\n}\n","import { EventEmitter, InjectionToken, TemplateRef } from '@angular/core';\nimport { Direction } from '@angular/cdk/bidi';\nimport { FocusOrigin } from '@angular/cdk/a11y';\nimport { RdsMenuContentDirective } from './menu-content.directive';\nimport {\n  RdsMenuPositionX,\n  RdsMenuPositionY,\n  RdsMenuCloseReason,\n  RdsMenuBackdrop,\n} from './menu.types';\n\nexport const RDS_MENU_PANEL = new InjectionToken<RdsMenuPanel>(\n  'RDS_MENU_PANEL',\n);\n\nexport interface RdsMenuPanel<T = any> {\n  xPosition: RdsMenuPositionX;\n  yPosition: RdsMenuPositionY;\n  overlapTrigger: boolean;\n  templateRef: TemplateRef<any>;\n  readonly closed: EventEmitter<RdsMenuCloseReason>;\n  parentMenu?: RdsMenuPanel | undefined;\n  direction?: Direction;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  resetActiveItem: () => void;\n  setPositionClasses?: (x: RdsMenuPositionX, y: RdsMenuPositionY) => void;\n\n  setElevation?(depth: number): void;\n\n  lazyContent?: RdsMenuContentDirective;\n  backdrop?: RdsMenuBackdrop;\n  overlayPanelClass?: string | string[];\n  hasBackdrop?: boolean;\n  readonly panelId?: string;\n}\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  HostListener,\n  inject,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {\n  RdsListItemComponent,\n  RdsNestableListItemComponent,\n} from '../list-item';\nimport { RDS_NESTABLE_LIST_ITEM_TEMPLATE } from '../list-item';\nimport { RDS_MENU_PANEL, RdsMenuPanel } from './menu-panel';\n\n@Component({\n  selector: '[rds-menu-item], [rdsMenuItem]',\n  exportAs: 'rdsMenuItem',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: RDS_NESTABLE_LIST_ITEM_TEMPLATE,\n})\nexport class RdsMenuItemComponent\n  extends RdsNestableListItemComponent\n  implements AfterViewInit, OnDestroy\n{\n  public readonly _parentMenu = inject<RdsMenuPanel<RdsMenuItemComponent>>(\n    RDS_MENU_PANEL,\n    { optional: true },\n  );\n  protected readonly focusMonitor = inject(FocusMonitor);\n\n  @HostBinding('class.rds-menu-item') rdsMenuItemClass = true;\n  readonly _hovered = new Subject<RdsListItemComponent>();\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, false);\n  }\n\n  ngOnDestroy(): void {\n    this._hovered.complete();\n    this._focused.complete();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  _getHostElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  @HostListener('mouseenter')\n  protected handleMouseEnter(): void {\n    this._hovered.next(this);\n  }\n\n  override focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (this.focusMonitor && origin) {\n      this.focusMonitor.focusVia(\n        this.elementRef.nativeElement,\n        origin,\n        options,\n      );\n    } else {\n      super.focus();\n    }\n\n    this._focused.next(this);\n  }\n\n  @HostListener('blur')\n  override blur(): void {\n    this.markAsInactive();\n  }\n}\n","import { FocusKeyManager, FocusOrigin } from '@angular/cdk/a11y';\nimport { Direction } from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  ESCAPE,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { rdsMenuAnimations } from './menu-animations';\nimport {\n  RDS_MENU_CONTENT,\n  RdsMenuContentDirective,\n} from './menu-content.directive';\nimport {\n  throwRdsMenuInvalidPositionX,\n  throwRdsMenuInvalidPositionY,\n} from './menu-error';\nimport { RdsMenuItemComponent } from './menu-item.component';\nimport { RDS_MENU_PANEL, RdsMenuPanel } from './menu-panel';\nimport { AnimationEvent } from '@angular/animations';\nimport {\n  RdsMenuBackdrop,\n  RdsMenuCloseReason,\n  RdsMenuPositionX,\n  RdsMenuPositionY,\n  RdsMenuSize,\n} from './menu.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\nexport interface RdsMenuDefaultOptions {\n  xPosition: RdsMenuPositionX;\n  yPosition: RdsMenuPositionY;\n  overlapTrigger: boolean;\n  backdrop: RdsMenuBackdrop;\n  overlayPanelClass?: string | string[];\n}\n\nexport const RDS_MENU_DEFAULT_OPTIONS =\n  new InjectionToken<RdsMenuDefaultOptions>('RDS_MENU_DEFAULT_OPTIONS', {\n    providedIn: 'root',\n    factory: RDS_MENU_DEFAULT_OPTIONS_FACTORY,\n  });\n\nexport function RDS_MENU_DEFAULT_OPTIONS_FACTORY(): RdsMenuDefaultOptions {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdrop: 'transparent',\n  };\n}\n\nlet menuPanelUid = 0;\n\n@Component({\n  selector: 'rds-menu',\n  template: ` <ng-template>\n    <div\n      class=\"rds-menu-panel rds-menu-panel--{{ size }}\"\n      [id]=\"panelId\"\n      [ngClass]=\"_classList\"\n      (keydown)=\"_handleKeydown($event)\"\n      (click)=\"closed.emit('click')\"\n      [@transformMenu]=\"_panelAnimationState\"\n      (@transformMenu.start)=\"_onAnimationStart($event)\"\n      (@transformMenu.done)=\"_onAnimationDone($event)\"\n      tabindex=\"-1\"\n      role=\"menu\"\n      [attr.aria-label]=\"ariaLabel || null\"\n      [attr.aria-labelledby]=\"ariaLabelledby || null\"\n      [attr.aria-describedby]=\"ariaDescribedby || null\"\n    >\n      <div class=\"rds-menu-content\">\n        <ng-content />\n      </div>\n    </div>\n  </ng-template>`,\n  styleUrls: ['./menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsMenu',\n  animations: [rdsMenuAnimations.transformMenu, rdsMenuAnimations.fadeInItems],\n  providers: [{ provide: RDS_MENU_PANEL, useExisting: RdsMenuComponent }],\n})\nexport class RdsMenuComponent\n  implements\n    AfterContentInit,\n    RdsMenuPanel<RdsMenuItemComponent>,\n    OnInit,\n    OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly ngZone = inject(NgZone);\n  private readonly defaultOptions = inject(RDS_MENU_DEFAULT_OPTIONS);\n\n  private _keyManager: FocusKeyManager<RdsMenuItemComponent>;\n  private _xPosition: RdsMenuPositionX = this.defaultOptions.xPosition;\n  private _yPosition: RdsMenuPositionY = this.defaultOptions.yPosition;\n  private _previousElevation: string;\n  private _size: RdsMenuSize = 'm';\n  protected _elevationPrefix = 'rds-elevation-z';\n  protected _baseElevation = 4;\n\n  @ContentChildren(RdsMenuItemComponent, { descendants: true })\n  _allItems: QueryList<RdsMenuItemComponent>;\n\n  @HostBinding('attr.aria-label') attrAriaLabel = null;\n  @HostBinding('attr.aria-labelledby') attrAriaLabelledBy = null;\n  @HostBinding('attr.aria-describedby') attrAriaDescribedBy = null;\n\n  @HostBinding('tabIndex')\n  protected tabIndex = TAB_INDEX_NOT_FOCUSABLE;\n\n  private _directDescendantItems = new QueryList<RdsMenuItemComponent>();\n\n  private _tabSubscription = Subscription.EMPTY;\n\n  _classList: { [key: string]: boolean } = {};\n\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  readonly _animationDone = new Subject<AnimationEvent>();\n\n  _isAnimating: boolean;\n\n  parentMenu: RdsMenuPanel | undefined;\n\n  direction: Direction;\n\n  overlayPanelClass: string | string[] =\n    this.defaultOptions.overlayPanelClass || '';\n\n  @Input() backdrop: RdsMenuBackdrop = this.defaultOptions.backdrop;\n\n  @Input('aria-label') ariaLabel: string | null = null;\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n  @Input('aria-describedby') ariaDescribedby: string | null = null;\n\n  @Input()\n  get size(): RdsMenuSize {\n    return this._size;\n  }\n\n  set size(size: RdsMenuSize) {\n    this._size = size;\n    this._allItems?.forEach((item) => (item.size = size));\n  }\n\n  @Input()\n  get xPosition(): RdsMenuPositionX {\n    return this._xPosition;\n  }\n\n  set xPosition(value: RdsMenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwRdsMenuInvalidPositionX();\n    }\n\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  @Input()\n  get yPosition(): RdsMenuPositionY {\n    return this._yPosition;\n  }\n\n  set yPosition(value: RdsMenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwRdsMenuInvalidPositionY();\n    }\n\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  @ContentChild(RDS_MENU_CONTENT) lazyContent: RdsMenuContentDirective;\n\n  @Input({ transform: booleanAttribute }) overlapTrigger =\n    this.defaultOptions.overlapTrigger;\n\n  /**\n   * This method takes classes set on the host rds-menu-component element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('class')\n  set panelClass(classes: string) {\n    const previousPanelClass = this._previousPanelClass;\n\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach((className: string) => {\n        this._classList[className] = false;\n      });\n    }\n\n    this._previousPanelClass = classes;\n\n    if (classes && classes.length) {\n      classes.split(' ').forEach((className: string) => {\n        this._classList[className] = true;\n      });\n\n      this.elementRef.nativeElement.className = '';\n    }\n  }\n\n  private _previousPanelClass: string;\n\n  @Output() readonly closed = new EventEmitter<RdsMenuCloseReason>();\n\n  readonly panelId = `rds-menu-panel-${menuPanelUid++}`;\n\n  ngOnInit(): void {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit(): void {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems)\n      .skipPredicate((i) => i.disabled)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() =>\n      this.closed.emit('tab'),\n    );\n\n    this._directDescendantItems.changes\n      .pipe(\n        startWith(this._directDescendantItems),\n        tap(() => {\n          this.tabIndex = this._directDescendantItems.filter((i) => !i.disabled)\n            ? TAB_INDEX_DEFAULT\n            : TAB_INDEX_NOT_FOCUSABLE;\n        }),\n        switchMap((items) =>\n          merge(...items.map((item: RdsMenuItemComponent) => item._focused)),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((focusedItem) => {\n        this._keyManager.updateActiveItem(focusedItem as RdsMenuItemComponent);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._directDescendantItems.destroy();\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  _hovered(): Observable<RdsMenuItemComponent> {\n    const itemChanges = this._directDescendantItems.changes as Observable<\n      QueryList<RdsMenuItemComponent>\n    >;\n\n    return itemChanges.pipe(\n      startWith(this._directDescendantItems),\n      switchMap((items) =>\n        merge(...items.map((item: RdsMenuItemComponent) => item._hovered)),\n      ),\n    ) as Observable<RdsMenuItemComponent>;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  @HostListener('focus')\n  focus(): void {\n    if (!this._keyManager.activeItem) {\n      this._keyManager.setFirstItemActive();\n    }\n\n    if (this._keyManager.activeItem) {\n      const firstActivated = this._directDescendantItems\n        .toArray()\n        .findIndex((i) => (i as RdsMenuItemComponent).activated);\n\n      if (firstActivated) {\n        this._directDescendantItems.get(firstActivated)?.focus('keyboard');\n      }\n\n      this._keyManager.activeItem.focus('keyboard');\n      // this.ariaActiveDescendant = this._keyManager.activeItem.getLabel();\n    }\n  }\n\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    if (this.lazyContent) {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => this._focusFirstItem(origin));\n    } else {\n      this._focusFirstItem(origin);\n    }\n  }\n\n  private _focusFirstItem(origin: FocusOrigin): void {\n    const manager = this._keyManager;\n\n    manager.setFocusOrigin(origin).setFirstItemActive();\n\n    if (!manager.activeItem && this._directDescendantItems.length) {\n      let element =\n        this._directDescendantItems.first._getHostElement().parentElement;\n\n      while (element) {\n        if (element.getAttribute('role') === 'menu') {\n          element.focus();\n          break;\n        } else {\n          element = element.parentElement;\n        }\n      }\n    }\n  }\n\n  resetActiveItem(): void {\n    this._keyManager.activeItem?.blur();\n    this._keyManager.setActiveItem(-1);\n  }\n\n  setElevation(depth: number): void {\n    const elevation = Math.min(this._baseElevation + depth, 24);\n    const newElevation = `${this._elevationPrefix}${elevation}`;\n    const customElevation = Object.keys(this._classList).find((className) => {\n      return className.startsWith(this._elevationPrefix);\n    });\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  setPositionClasses(\n    posX: RdsMenuPositionX = this.xPosition,\n    posY: RdsMenuPositionY = this.yPosition,\n  ): void {\n    const classes = this._classList;\n    classes['rds-menu-before'] = posX === 'before';\n    classes['rds-menu-after'] = posX === 'after';\n    classes['rds-menu-above'] = posY === 'above';\n    classes['rds-menu-below'] = posY === 'below';\n  }\n\n  _startAnimation(): void {\n    this._panelAnimationState = 'enter';\n  }\n\n  _resetAnimation(): void {\n    this._panelAnimationState = 'void';\n  }\n\n  _onAnimationDone(event: AnimationEvent): void {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n\n  _onAnimationStart(event: AnimationEvent): void {\n    this._isAnimating = true;\n\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n\n  private _updateDirectDescendants(): void {\n    this._allItems.changes\n      .pipe(startWith(this._allItems), takeUntilDestroyed(this.destroyRef))\n      .subscribe((items: QueryList<RdsMenuItemComponent>) => {\n        this._directDescendantItems.reset(\n          items.filter((item) => item._parentMenu === this),\n        );\n        this._directDescendantItems.notifyOnChanges();\n      });\n  }\n}\n","import {\n  FocusMonitor,\n  FocusOrigin,\n  isFakeMousedownFromScreenReader,\n  isFakeTouchstartFromScreenReader,\n} from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  EMPTY,\n  Observable,\n  Subscription,\n  asapScheduler,\n  merge,\n  of,\n} from 'rxjs';\nimport { delay, filter, take, takeUntil } from 'rxjs/operators';\nimport {\n  throwRdsMenuMissingError,\n  throwRdsMenuRecursiveError,\n} from './menu-error';\nimport { RdsMenuItemComponent } from './menu-item.component';\nimport { RDS_MENU_PANEL, RdsMenuPanel } from './menu-panel';\nimport { RdsMenuComponent } from './menu.component';\nimport {\n  RdsMenuPositionX,\n  RdsMenuPositionY,\n  RdsMenuCloseReason,\n} from './menu.types';\n\nexport const RDS_MENU_SCROLL_STRATEGY = new InjectionToken<\n  () => ScrollStrategy\n>('RDS_MENU_SCROLL_STRATEGY');\n\nexport function RDS_MENU_SCROLL_STRATEGY_FACTORY(\n  overlay: Overlay,\n): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\nexport const RDS_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: RDS_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: RDS_MENU_SCROLL_STRATEGY_FACTORY,\n};\n\nexport const MENU_PANEL_TOP_PADDING = 8;\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n});\n\n@Directive({\n  selector: `[rds-menu-trigger-for], [rdsMenuTriggerFor]`,\n  exportAs: 'rdsMenuTrigger',\n})\nexport class RdsMenuTriggerDirective implements AfterContentInit, OnDestroy {\n  private readonly overlay = inject(Overlay);\n  private readonly element = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly scrollStrategy = inject<() => ScrollStrategy>(\n    RDS_MENU_SCROLL_STRATEGY,\n  );\n  private readonly parentMenu = inject(RDS_MENU_PANEL, { optional: true });\n  private readonly menuItemInstance = inject(RdsMenuItemComponent, {\n    optional: true,\n    self: true,\n  });\n  private readonly _dir = inject(Directionality, {\n    optional: true,\n  }) as Directionality;\n  private readonly focusMonitor = inject(FocusMonitor, { optional: true });\n\n  @Input() rdsMenuTriggerData: any;\n  @Input({ transform: booleanAttribute }) rdsMenuTriggerRestoreFocus = true;\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostBinding('attr.aria-haspopup') _ariaHaspopup = true;\n  @HostBinding('class') class = 'rds-menu-trigger';\n  _openedBy: Exclude<FocusOrigin, 'program' | null> | undefined = undefined;\n\n  private _menu: RdsMenuPanel;\n\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen = false;\n  private _closingActionsSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n  private _menuCloseSubscription = Subscription.EMPTY;\n  private _parentMenu =\n    this.parentMenu instanceof RdsMenuComponent ? this.parentMenu : undefined;\n\n  private _handleTouchStart = (event: TouchEvent): void => {\n    if (!isFakeTouchstartFromScreenReader(event)) {\n      this._openedBy = 'touch';\n    }\n  };\n\n  @HostBinding('attr.aria-expanded')\n  get _ariaExpanded(): boolean | null {\n    return this.menuOpen || null;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get _ariaControl(): string | undefined | null {\n    return this.menuOpen ? this.menu.panelId : null;\n  }\n\n  @Input('rdsMenuTriggerFor')\n  get menu(): RdsMenuPanel {\n    return this._menu;\n  }\n\n  set menu(menu: RdsMenuPanel) {\n    if (menu === this._menu) {\n      return;\n    }\n\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      if (menu === this._parentMenu) {\n        throwRdsMenuRecursiveError();\n      }\n\n      this._menuCloseSubscription = menu.closed.subscribe(\n        (reason: RdsMenuCloseReason) => {\n          this._destroyMenu(reason);\n\n          if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n            this._parentMenu.closed.emit(reason);\n          }\n        },\n      );\n    }\n  }\n\n  constructor() {\n    this.element.nativeElement.addEventListener(\n      'touchstart',\n      this._handleTouchStart,\n      passiveEventListenerOptions,\n    );\n\n    if (this.menuItemInstance) {\n      this.menuItemInstance.hasChildItems = this.triggersSubmenu();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._checkMenu();\n    this._handleHover();\n  }\n\n  ngOnDestroy(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this.element.nativeElement.removeEventListener(\n      'touchstart',\n      this._handleTouchStart,\n      passiveEventListenerOptions,\n    );\n\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  triggersSubmenu(): boolean {\n    return !!(this.menuItemInstance && this._parentMenu);\n  }\n\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    const overlayRef = this._createOverlay();\n    const overlayConfig = overlayRef.getConfig();\n\n    this._setPosition(\n      overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy,\n    );\n    overlayConfig.hasBackdrop = !this.triggersSubmenu();\n    overlayRef.attach(this._getPortal());\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.rdsMenuTriggerData);\n    }\n\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(\n      () => this.closeMenu(),\n    );\n    this._initMenu();\n\n    if (this.menu instanceof RdsMenuComponent) {\n      this.menu._startAnimation();\n    }\n  }\n\n  closeMenu(): void {\n    this.menu.closed.emit();\n  }\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (this.focusMonitor && origin) {\n      this.focusMonitor.focusVia(this.element, origin, options);\n    } else {\n      this.element.nativeElement.focus(options);\n    }\n  }\n\n  updatePosition(): void {\n    this._overlayRef?.updatePosition();\n  }\n\n  private _destroyMenu(reason: RdsMenuCloseReason): void {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n\n    if (\n      this.rdsMenuTriggerRestoreFocus &&\n      (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())\n    ) {\n      this.focus(this._openedBy);\n    }\n\n    this._openedBy = undefined;\n\n    if (menu instanceof RdsMenuComponent) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        menu._animationDone\n          .pipe(\n            filter((event) => event.toState === 'void'),\n            take(1),\n            takeUntil(menu.lazyContent._attached),\n          )\n          .subscribe({\n            next: () => menu.lazyContent.detach(),\n            complete: () => this._setIsMenuOpen(false),\n          });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu()\n      ? this._parentMenu\n      : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this.menu.focusFirstItem(this._openedBy || 'program');\n\n    this._setIsMenuOpen(true);\n  }\n\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu() && this.menuItemInstance) {\n      this.menuItemInstance.activated = isOpen;\n    }\n  }\n\n  private _checkMenu(): void {\n    if (!this.menu) {\n      throwRdsMenuMissingError();\n    }\n  }\n\n  private _createOverlay(): OverlayRef {\n    const config = this._getOverlayConfig();\n\n    if (\n      !this._overlayRef ||\n      this._overlayRef.getConfig().backdropClass !== config.backdropClass ||\n      this._overlayRef.getConfig().panelClass !== config.panelClass ||\n      this._overlayRef.getConfig().direction !== config.direction\n    ) {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n      }\n\n      this._subscribeToPositions(\n        config.positionStrategy as FlexibleConnectedPositionStrategy,\n      );\n      this._overlayRef = this.overlay.create(config);\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.overlay\n        .position()\n        .flexibleConnectedTo(this.element)\n        .withLockedPosition()\n        .withGrowAfterOpen()\n        .withTransformOriginOn('.rds-menu-panel, .rds-mdc-menu-panel'),\n      backdropClass:\n        this.menu.backdrop === 'transparent'\n          ? 'cdk-overlay-transparent-backdrop'\n          : undefined,\n      panelClass: this.menu.overlayPanelClass,\n      scrollStrategy: this.scrollStrategy(),\n      direction: this._dir,\n    });\n  }\n\n  private _subscribeToPositions(\n    position: FlexibleConnectedPositionStrategy,\n  ): void {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe((change) => {\n        const posX: RdsMenuPositionX =\n          change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY: RdsMenuPositionY =\n          change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n        if (this.menu.setPositionClasses) {\n          this.menu.setPositionClasses(posX, posY);\n        }\n      });\n    }\n  }\n\n  private _setPosition(\n    positionStrategy: FlexibleConnectedPositionStrategy,\n  ): void {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n      this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n      this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      overlayFallbackX = originX =\n        this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY =\n        overlayY === 'bottom'\n          ? MENU_PANEL_TOP_PADDING\n          : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([\n      { originX, originY, overlayX, overlayY, offsetY },\n      {\n        originX: originFallbackX,\n        originY,\n        overlayX: overlayFallbackX,\n        overlayY,\n        offsetY,\n      },\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY,\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY,\n      },\n    ]);\n  }\n\n  private _menuClosingActions(): Observable<\n    MouseEvent | RdsMenuCloseReason | RdsMenuItemComponent | void\n  > {\n    const backdrop = this._overlayRef\n      ? this._overlayRef.backdropClick()\n      : EMPTY;\n    const detachments = this._overlayRef\n      ? this._overlayRef.detachments()\n      : EMPTY;\n    const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n    const hover = this._parentMenu\n      ? this._parentMenu._hovered().pipe(\n          filter((active) => active !== this.menuItemInstance),\n          filter(() => this._menuOpen),\n        )\n      : of();\n\n    return merge(\n      backdrop,\n      parentClose as Observable<RdsMenuCloseReason>,\n      hover,\n      detachments,\n    );\n  }\n\n  @HostListener('mousedown', ['$event'])\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n\n      if (\n        !['BUTTON', 'A'].includes(\n          this.element.nativeElement.tagName.toUpperCase(),\n        )\n      ) {\n        this.openMenu();\n      }\n    }\n\n    if (\n      this.triggersSubmenu() &&\n      ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n        (keyCode === LEFT_ARROW && this.dir === 'rtl'))\n    ) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  private _handleHover(): void {\n    if (!this.triggersSubmenu() || !this._parentMenu) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMenu\n      ._hovered()\n      .pipe(\n        filter(\n          (active) => active === this.menuItemInstance && !active.disabled,\n        ),\n        delay(0, asapScheduler),\n      )\n      .subscribe(() => {\n        this._openedBy = 'mouse';\n\n        if (this.menu instanceof RdsMenuComponent && this.menu._isAnimating) {\n          const untilHovered = this._parentMenu\n            ? this._parentMenu._hovered()\n            : EMPTY;\n\n          this.menu._animationDone\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(untilHovered))\n            .subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n  }\n\n  private _getPortal(): TemplatePortal {\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(\n        this.menu.templateRef,\n        this.viewContainerRef,\n      );\n    }\n\n    return this._portal;\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-menu-separator], [rdsMenuSeparator]',\n})\nexport class RdsMenuSeparatorDirective {\n  @HostBinding('class') class = 'rds-menu-separator';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rds-menu-header], [rdsMenuHeader]',\n})\nexport class RdsMenuHeaderDirective {\n  @HostBinding('class') class = 'rds-menu-header';\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { RdsMenuComponent } from './menu.component';\nimport { RdsMenuContentDirective } from './menu-content.directive';\nimport { RdsMenuItemComponent } from './menu-item.component';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport {\n  RDS_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  RdsMenuTriggerDirective,\n} from './menu-trigger.directive';\nimport { RdsIconComponent } from '../icons';\nimport { RdsMenuSeparatorDirective } from './menu-separator.directive';\nimport { RdsMenuHeaderDirective } from './menu-header.directive';\nimport { RdsListItemModule } from '../list-item';\n\nconst ELEMENTS = [\n  RdsMenuComponent,\n  RdsMenuItemComponent,\n  RdsMenuTriggerDirective,\n  RdsMenuContentDirective,\n  RdsMenuHeaderDirective,\n  RdsMenuSeparatorDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BidiModule,\n    OverlayModule,\n    RdsIconComponent,\n    RdsListItemModule,\n  ],\n  declarations: [...ELEMENTS],\n  exports: [CdkScrollableModule, ...ELEMENTS],\n  providers: [RDS_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class RdsMenuModule {}\n","import { Injectable, Optional, Provider, SkipSelf } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RdsPaginatorIntl {\n  readonly changes: Subject<void> = new Subject<void>();\n\n  nextPageLabel = 'Next page';\n  previousPageLabel = 'Previous page';\n  firstPageLabel = 'First page';\n  lastPageLabel = 'Last page';\n  ofPagesLabel = 'of';\n\n  getRangeLabel = (page: number, pageSize: number, length: number): string => {\n    if (length == 0 || pageSize == 0) {\n      return `0 of ${length}`;\n    }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    const endIndex =\n      startIndex < length\n        ? Math.min(startIndex + pageSize, length)\n        : startIndex + pageSize;\n\n    return `${startIndex + 1} – ${endIndex} of ${length}`;\n  };\n}\n\nexport function RDS_PAGINATOR_INTL_PROVIDER_FACTORY(\n  parentIntl: RdsPaginatorIntl,\n): RdsPaginatorIntl {\n  return parentIntl || new RdsPaginatorIntl();\n}\n\nexport const RDS_PAGINATOR_INTL_PROVIDER: Provider = {\n  provide: RdsPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), RdsPaginatorIntl]],\n  useFactory: RDS_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n","import { RdsTooltipDefaultOptions } from './types';\nimport { InjectionToken } from '@angular/core';\nimport { Overlay, ScrollStrategy } from '@angular/cdk/overlay';\n\nconst SCROLL_THROTTLE_MS = 20;\n\nexport const RDS_TOOLTIP_SCROLL_STRATEGY = new InjectionToken<\n  () => ScrollStrategy\n>('RDS_TOOLTIP_SCROLL_STRATEGY');\n\n/** @docs-private */\nexport function RDS_TOOLTIP_SCROLL_STRATEGY_FACTORY(\n  overlay: Overlay,\n): () => ScrollStrategy {\n  return () =>\n    overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n\n/** @docs-private */\nexport const RDS_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: RDS_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: RDS_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\nexport const RDS_TOOLTIP_DEFAULT_OPTIONS =\n  new InjectionToken<RdsTooltipDefaultOptions>('RDS_TOOLTIP_DEFAULT_OPTIONS', {\n    providedIn: 'root',\n    factory: RDS_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n  });\n\n/** @docs-private */\nexport function RDS_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): RdsTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n    hideArrow: false,\n  };\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const tooltipAnimation: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0 })),\n    transition(\n      '* => visible',\n      animate(\n        '200ms cubic-bezier(0, 0, 0.2, 1)',\n        keyframes([\n          style({ opacity: 0, offset: 0 }),\n          style({ opacity: 0.5, offset: 0.5 }),\n          style({ opacity: 1, offset: 1 }),\n        ]),\n      ),\n    ),\n    transition(\n      '* => hidden',\n      animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 })),\n    ),\n  ]),\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  RdsTooltipClass,\n  RdsTooltipPosition,\n  RdsTooltipVisibility,\n} from './types';\nimport { tooltipAnimation } from './tooltip.animations';\nimport { RdsTooltipDirective } from './tooltip.directive';\nimport { getFirstFocusableChild } from '../utils';\n\nlet rdsTooltipCounter = 0;\n\n@Component({\n  selector: 'rds-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tooltipAnimation.tooltipState],\n})\nexport class RdsTooltipComponent implements OnDestroy {\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n\n  _content: string | TemplateRef<unknown>;\n\n  _tooltipClass: RdsTooltipClass;\n  _tooltipArrow = false;\n\n  _showTimeout: ReturnType<typeof setTimeout> | null;\n  _hideTimeout: ReturnType<typeof setTimeout> | null;\n\n  _position: RdsTooltipPosition;\n  _visibility: RdsTooltipVisibility = 'initial';\n\n  // close tooltip on body click\n  private _closeOnInteraction = false;\n  private readonly _onHide = new Subject<void>();\n\n  triggerDirectiveRef?: RdsTooltipDirective;\n  isPopover: boolean;\n  showCloseButton: boolean;\n\n  @ViewChild('closeButton', { read: ElementRef })\n  closeButton: ElementRef<HTMLElement> | undefined;\n\n  @HostBinding('attr.role')\n  role: 'dialog' | null;\n\n  @HostBinding('attr.id')\n  id = `rdsTooltip-${rdsTooltipCounter++}`;\n\n  @HostBinding('attr.aria-modal')\n  isModal = false;\n\n  @HostListener('body:click')\n  closeOnBodyClick(): void {\n    if (!this.isPopover && this._closeOnInteraction) {\n      this.hide();\n    }\n  }\n\n  get contentIsString(): boolean {\n    return typeof this._content === 'string';\n  }\n\n  get tooltipIconClass(): string {\n    return this._tooltipArrow ? 'rds-tooltip--hide-arrow ' : '';\n  }\n\n  ngOnDestroy(): void {\n    this._onHide.complete();\n  }\n\n  /**\n   * Show tooltip\n   * @param delay in ms\n   */\n  show(delay = 0): void {\n    // Cancel hide if it is scheduled\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n\n    this._closeOnInteraction = !this.isPopover;\n    this._showTimeout = setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeout = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyway\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Hide tooltip\n   * @param delay in ms\n   */\n  hide(delay = 0): void {\n    // Cancel show if it is scheduled\n    if (this._showTimeout) {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = null;\n    }\n\n    this._hideTimeout = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeout = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyway\n      this._markForCheck();\n    }, delay);\n  }\n\n  getFirstFocusableElement(): HTMLElement | null {\n    return getFirstFocusableChild(this.nativeElement);\n  }\n\n  getLastFocusableElement(): HTMLElement | null {\n    return this.closeButton?.nativeElement ?? null;\n  }\n\n  afterHidden(): Observable<void> {\n    return this._onHide;\n  }\n\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  onCloseButtonClick(): void {\n    this.triggerDirectiveRef?.hide();\n  }\n\n  _animationStart(): void {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as RdsTooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = !this.isPopover;\n    }\n  }\n\n  _markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n}\n","<div\n  [ngClass]=\"_tooltipClass\"\n  [className]=\"\n    'rds-tooltip rds-tooltip--' +\n    _position +\n    tooltipIconClass +\n    (isPopover ? ' rds-popover' : '')\n  \"\n  [@state]=\"_visibility\"\n  (@state.start)=\"_animationStart()\"\n  (@state.done)=\"_animationDone($event)\"\n>\n  @if (contentIsString) {\n    {{ _content }}\n  } @else {\n    <ng-container *ngTemplateOutlet=\"$any(_content)\" />\n  }\n  @if (isPopover && showCloseButton) {\n    <button\n      #closeButton\n      class=\"rds-popover-close-button\"\n      rds-icon-button\n      aria-label=\"close\"\n      (click)=\"onCloseButtonClick()\"\n    >\n      <rds-icon namespace=\"filled\" icon=\"close\" />\n    </button>\n  }\n</div>\n","import { AriaDescriber, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport {\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollDispatcher,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {\n  normalizePassiveListenerOptions,\n  Platform,\n} from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  NgZone,\n  numberAttribute,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport {\n  RDS_TOOLTIP_DEFAULT_OPTIONS,\n  RDS_TOOLTIP_SCROLL_STRATEGY,\n} from './tokens';\nimport { RdsTooltipComponent } from './tooltip.component';\nimport {\n  RdsTooltipClass,\n  RdsTooltipOverlayConnectionPosition,\n  RdsTooltipPosition,\n  RdsTooltipPositionOffset,\n  RdsTooltipTouchGestures,\n} from './types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst PRESS_DELAY = 500;\n\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n});\n\nconst rdsTooltipPositionToRdsTooltipOverlayConnectionPosition: {\n  [key in RdsTooltipPosition]: RdsTooltipOverlayConnectionPosition;\n} = {\n  'top-left': { overlayX: 'start', overlayY: 'bottom', offsetY: -10 },\n  'top-center': { overlayX: 'center', overlayY: 'bottom', offsetY: -10 },\n  'top-right': { overlayX: 'end', overlayY: 'bottom', offsetY: -10 },\n  'right-top': { overlayX: 'start', overlayY: 'top', offsetX: 10 },\n  'right-center': { overlayX: 'start', overlayY: 'center', offsetX: 10 },\n  'right-bottom': { overlayX: 'start', overlayY: 'bottom', offsetX: 10 },\n  'bottom-right': { overlayX: 'end', overlayY: 'top', offsetY: 10 },\n  'bottom-center': { overlayX: 'center', overlayY: 'top', offsetY: 10 },\n  'bottom-left': { overlayX: 'start', overlayY: 'top', offsetY: 10 },\n  'left-bottom': { overlayX: 'end', overlayY: 'bottom', offsetX: -10 },\n  'left-center': { overlayX: 'end', overlayY: 'center', offsetX: -10 },\n  'left-top': { overlayX: 'end', overlayY: 'top', offsetX: -10 },\n};\n\nconst rdsTooltipPositionToRdsTooltipOverlayConnectionPositionWithIcon: {\n  [key in RdsTooltipPosition]: RdsTooltipOverlayConnectionPosition;\n} = {\n  'top-left': { overlayX: 'start', overlayY: 'bottom', offsetY: -4 },\n  'top-center': { overlayX: 'center', overlayY: 'bottom', offsetY: -4 },\n  'top-right': { overlayX: 'end', overlayY: 'bottom', offsetY: -4 },\n  'right-top': { overlayX: 'start', overlayY: 'top', offsetX: 4 },\n  'right-center': { overlayX: 'start', overlayY: 'center', offsetX: 4 },\n  'right-bottom': { overlayX: 'start', overlayY: 'bottom', offsetX: 4 },\n  'bottom-right': { overlayX: 'end', overlayY: 'top', offsetY: 4 },\n  'bottom-center': { overlayX: 'center', overlayY: 'top', offsetY: 4 },\n  'bottom-left': { overlayX: 'start', overlayY: 'top', offsetY: 4 },\n  'left-bottom': { overlayX: 'end', overlayY: 'bottom', offsetX: -4 },\n  'left-center': { overlayX: 'end', overlayY: 'center', offsetX: -4 },\n  'left-top': { overlayX: 'end', overlayY: 'top', offsetX: -4 },\n};\n\nconst rdsTooltipPositionToOriginConnectionPosition: {\n  [key in RdsTooltipPosition]: OriginConnectionPosition;\n} = {\n  'top-left': { originX: 'start', originY: 'top' },\n  'top-center': { originX: 'center', originY: 'top' },\n  'top-right': { originX: 'end', originY: 'top' },\n  'right-top': { originX: 'end', originY: 'top' },\n  'right-center': { originX: 'end', originY: 'center' },\n  'right-bottom': { originX: 'end', originY: 'bottom' },\n  'bottom-right': { originX: 'end', originY: 'bottom' },\n  'bottom-center': { originX: 'center', originY: 'bottom' },\n  'bottom-left': { originX: 'start', originY: 'bottom' },\n  'left-bottom': { originX: 'start', originY: 'bottom' },\n  'left-center': { originX: 'start', originY: 'center' },\n  'left-top': { originX: 'start', originY: 'top' },\n};\n\n@Directive({\n  selector: '[rdsTooltip], [rds-tooltip]',\n  exportAs: 'rdsTooltip',\n})\nexport class RdsTooltipDirective implements OnDestroy, AfterViewInit {\n  protected readonly overlay = inject(Overlay);\n  protected readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  protected readonly scrollDispatcher = inject(ScrollDispatcher);\n  protected readonly viewContainerRef = inject(ViewContainerRef);\n  protected readonly ngZone = inject(NgZone);\n  protected readonly platform = inject(Platform);\n  protected readonly ariaDescriber = inject(AriaDescriber);\n  protected readonly renderer = inject(Renderer2);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly scrollStrategy = inject<() => ScrollStrategy>(\n    RDS_TOOLTIP_SCROLL_STRATEGY,\n  );\n  protected readonly defaultOptions = inject(RDS_TOOLTIP_DEFAULT_OPTIONS, {\n    optional: true,\n  });\n  protected readonly document = inject(DOCUMENT);\n\n  protected readonly isPopover: boolean = false;\n  protected _hasBackdrop = false;\n  protected _showCloseButton = true;\n\n  /** Manually-bound passive event listeners. */\n  private readonly _passiveListeners: (readonly [\n    string,\n    EventListenerOrEventListenerObject,\n  ])[] = [];\n\n  private _overlayRef: OverlayRef | null;\n  private _touchstartTimeout: ReturnType<typeof setTimeout>;\n  private _portal: ComponentPortal<RdsTooltipComponent>;\n  private _tooltipClass: RdsTooltipClass;\n  private _disabled = false;\n  private _viewInitialized = false;\n  private _pointerExitEventsInitialized = false;\n  private _content: string | TemplateRef<unknown> = '';\n  private _position: RdsTooltipPosition = 'bottom-center';\n  protected origin: FocusOrigin;\n\n  _tooltipInstance: RdsTooltipComponent | null;\n\n  @Input('rdsTooltipAriaDescription') ariaDescription = '';\n  @Input({ alias: 'rdsTooltipShowDelay', transform: numberAttribute })\n  showDelay: number;\n  @Input({ alias: 'rdsTooltipHideDelay', transform: numberAttribute })\n  hideDelay: number;\n\n  protected _hideArrow: boolean | null = null;\n\n  @Input('rdsTooltipHideArrow')\n  set hideArrow(shouldHideArrow: BooleanInput) {\n    if (shouldHideArrow === null || shouldHideArrow === undefined) {\n      this._hideArrow = null;\n    } else {\n      this._hideArrow = booleanAttribute(shouldHideArrow);\n    }\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow !== null\n      ? this._hideArrow\n      : this.defaultOptions?.hideArrow || false;\n  }\n\n  /**\n   * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n   * uses a long press gesture to show and hide, however it can conflict with the native browser\n   * gestures. To work around the conflict, Angular Material disables native gestures on the\n   * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n   * elements). The different values for this option configure the touch event handling as follows:\n   * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n   *   browser gestures on particular elements. In particular, it allows text selection on inputs\n   *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n   * - `on` - Enables touch gestures for all elements and disables native\n   *   browser gestures with no exceptions.\n   * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n   *   showing on touch devices.\n   */\n  @Input('rdsTooltipTouchGestures') touchGestures: RdsTooltipTouchGestures =\n    'auto';\n\n  @Input('rdsTooltipPosition')\n  get position(): RdsTooltipPosition {\n    return this._position;\n  }\n\n  set position(value: RdsTooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this.updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance.show();\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  @Input('rdsTooltipDisabled')\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n\n    if (this._disabled) {\n      this.hide(0);\n    } else {\n      this.setupPointerEnterEventsIfNeeded();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @Input('rdsTooltip')\n  get content(): string | TemplateRef<unknown> {\n    return this._content;\n  }\n\n  set content(value: string | TemplateRef<unknown>) {\n    this.ariaDescriber.removeDescription(\n      this.elementRef.nativeElement,\n      this.tooltipDescription,\n    );\n\n    this._content = value;\n\n    if (!this._content && this.isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this.setupPointerEnterEventsIfNeeded();\n      this.updateTooltipContent();\n      this.ngZone.runOutsideAngular(() => {\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        Promise.resolve().then(() => {\n          this.ariaDescriber.describe(\n            this.elementRef.nativeElement,\n            this.tooltipDescription,\n          );\n        });\n      });\n    }\n  }\n\n  @Input('rdsTooltipClass')\n  get tooltipClass(): RdsTooltipClass {\n    return this._tooltipClass;\n  }\n\n  set tooltipClass(value: RdsTooltipClass) {\n    this._tooltipClass = value;\n\n    if (this._tooltipInstance) {\n      if (this.shouldHideArrow()) {\n        this._tooltipClass = 'rds-tooltip--hide-arrow';\n      }\n\n      this.setTooltipClassIfTooltipInstanceExists(this._tooltipClass);\n    }\n  }\n\n  get tooltipDescription(): string {\n    return this.ariaDescription\n      ? this.ariaDescription\n      : typeof this.content === 'string'\n        ? this.content\n        : '';\n  }\n\n  get hasBackdrop(): boolean {\n    return this._hasBackdrop;\n  }\n\n  set hasBackdrop(v: BooleanInput) {\n    const newValue = booleanAttribute(v);\n\n    if (newValue !== this._hasBackdrop) {\n      this._hasBackdrop = newValue;\n\n      // whole overlay has to be recreated\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n        this._tooltipInstance = null;\n      }\n    }\n  }\n\n  get showCloseButton(): boolean {\n    return this._showCloseButton;\n  }\n\n  set showCloseButton(v: BooleanInput) {\n    this._showCloseButton = booleanAttribute(v);\n  }\n\n  @HostBinding('attr.aria-controls')\n  private ariaControls: string | null = null;\n\n  @HostBinding('attr.aria-expanded')\n  protected ariaExpanded: boolean | null = null;\n\n  constructor() {\n    if (this.defaultOptions) {\n      if (this.defaultOptions.position) {\n        this.position = this.defaultOptions.position;\n      }\n\n      if (this.defaultOptions.touchGestures) {\n        this.touchGestures = this.defaultOptions.touchGestures;\n      }\n\n      if (this.defaultOptions.showDelay) {\n        this.showDelay = this.defaultOptions.showDelay;\n      }\n\n      if (this.defaultOptions.hideDelay) {\n        this.hideDelay = this.defaultOptions.hideDelay;\n      }\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this.elementRef.nativeElement.addEventListener(\n        'keydown',\n        this.handleHostKeydown,\n      );\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this._viewInitialized = true;\n    this.setupPointerEnterEventsIfNeeded();\n    this.setupFocusMonitor();\n  }\n\n  ngOnDestroy(): void {\n    const nativeElement = this.elementRef.nativeElement;\n\n    clearTimeout(this._touchstartTimeout);\n\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    nativeElement.removeEventListener('keydown', this.handleHostKeydown);\n    this._passiveListeners.forEach(([event, listener]) => {\n      nativeElement.removeEventListener(\n        event,\n        listener,\n        passiveListenerOptions,\n      );\n    });\n    this._passiveListeners.length = 0;\n\n    this.ariaDescriber.removeDescription(\n      nativeElement,\n      this.tooltipDescription,\n    );\n    this.focusMonitor.stopMonitoring(nativeElement);\n  }\n\n  show(delay: number = this.showDelay): void {\n    if (\n      this.disabled ||\n      !this.content ||\n      (this.isTooltipVisible() &&\n        !this._tooltipInstance?._showTimeout &&\n        !this._tooltipInstance?._hideTimeout)\n    ) {\n      return;\n    }\n\n    const overlayRef = this.createOverlay();\n\n    this.detachTooltip();\n    this._portal =\n      this._portal ||\n      new ComponentPortal(RdsTooltipComponent, this.viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance._position = this.position;\n    this._tooltipInstance.isPopover = this.isPopover;\n\n    if (this.isPopover) {\n      this._tooltipInstance.triggerDirectiveRef = this;\n      this._tooltipInstance.role = 'dialog';\n      this._tooltipInstance.isModal = this.hasBackdrop;\n      this._tooltipInstance.showCloseButton = this.showCloseButton;\n      this.ariaControls = this._tooltipInstance.id;\n      this.ariaExpanded = true;\n    }\n\n    if (this.shouldHideArrow()) {\n      this._tooltipInstance._tooltipArrow = true;\n    }\n\n    this._tooltipInstance\n      .afterHidden()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.detachTooltip();\n\n        if (this.isPopover) {\n          this.restoreTriggerFocus();\n        }\n      });\n    this.setTooltipClassIfTooltipInstanceExists(this._tooltipClass);\n    this.updateTooltipContent();\n    this._tooltipInstance.show(delay);\n    this.handleFocus();\n  }\n\n  /**\n   * Hides the tooltip\n   * @param delay ms\n   */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n\n    if (this.isPopover) {\n      this.ariaControls = null;\n      this.ariaExpanded = false;\n    }\n  }\n\n  /**\n   * Shows/hides tooltip\n   */\n  toggle(): void {\n    this.isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  isHideArrowSet(): boolean {\n    return this._hideArrow !== null && this._hideArrow !== undefined;\n  }\n\n  private isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  private handleHostKeydown = (event: KeyboardEvent): void => {\n    if (\n      this.isTooltipVisible() &&\n      event.keyCode === ESCAPE &&\n      !hasModifierKey(event)\n    ) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.ngZone.run(() => this.hide(0));\n    }\n  };\n\n  private createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n      this.scrollDispatcher.getAncestorScrollContainers(this.elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withTransformOriginOn('.rds-tooltip')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((change) => {\n        if (this._tooltipInstance) {\n          this.ngZone.run(() =>\n            this.updateTooltipStyling(change.connectionPair),\n          );\n\n          if (\n            change.scrollableViewProperties.isOverlayClipped &&\n            this._tooltipInstance.isVisible()\n          ) {\n            // After position changes occur and the overlay is clipped by\n            // a parent scrollable then close the tooltip.\n            this.ngZone.run(() => this.hide(0));\n          }\n        }\n      });\n\n    this._overlayRef = this.overlay.create({\n      positionStrategy: strategy,\n      panelClass: 'rds-tooltip-panel',\n      scrollStrategy: this.scrollStrategy(),\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      hasBackdrop: this.isPopover && this.hasBackdrop,\n    });\n\n    this.updatePosition();\n\n    this._overlayRef\n      .keydownEvents()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(this.handleHostKeydown);\n\n    this._overlayRef\n      .backdropClick()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.hide());\n\n    this._overlayRef\n      .detachments()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.detachTooltip();\n      });\n\n    return this._overlayRef;\n  }\n\n  // for override by popover\n  protected handleFocus(): void {\n    return;\n  }\n\n  private updateTooltipStyling(connectionPair: ConnectionPositionPair): void {\n    if (!this._tooltipInstance) {\n      return;\n    }\n\n    const xRename = { start: 'left', center: 'center', end: 'right' };\n    const originX = xRename[connectionPair.originX];\n    const originY = connectionPair.originY;\n    const isYFirst = connectionPair.originX === connectionPair.overlayX;\n    const newPosition = (\n      isYFirst ? `${originY}-${originX}` : `${originX}-${originY}`\n    ) as RdsTooltipPosition;\n\n    if (newPosition !== this._tooltipInstance._position) {\n      this._tooltipInstance._position = newPosition;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  protected restoreTriggerFocus(): void {\n    this.focusMonitor.focusVia(this.elementRef, this.origin);\n  }\n\n  private detachTooltip(): void {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  private updatePosition(): void {\n    const position = this._overlayRef?.getConfig()\n      .positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this.getOrigin();\n    const overlay = this.getOverlayPosition();\n\n    if (this.position && this._tooltipInstance) {\n      this._tooltipInstance._position = this.position;\n    }\n\n    position.withPositions([\n      { ...origin.main, ...overlay.main },\n      { ...origin.fallback, ...overlay.fallback },\n    ]);\n  }\n\n  private getOrigin(): {\n    main: OriginConnectionPosition;\n    fallback: OriginConnectionPosition;\n  } {\n    const originPosition =\n      rdsTooltipPositionToOriginConnectionPosition[this.position];\n\n    const { x, y } = this.invertPosition(\n      originPosition.originX,\n      originPosition.originY,\n    );\n\n    return {\n      main: originPosition,\n      fallback: { originX: x, originY: y },\n    };\n  }\n\n  private getOverlayPosition(): {\n    main: RdsTooltipOverlayConnectionPosition;\n    fallback: OverlayConnectionPosition;\n  } {\n    const overlayPosition = this.shouldHideArrow()\n      ? rdsTooltipPositionToRdsTooltipOverlayConnectionPositionWithIcon[\n          this.position\n        ]\n      : rdsTooltipPositionToRdsTooltipOverlayConnectionPosition[this.position];\n\n    const { x, y } = this.invertPosition(\n      overlayPosition.overlayX,\n      overlayPosition.overlayY,\n    );\n\n    return {\n      main: overlayPosition,\n      fallback: {\n        overlayX: x,\n        overlayY: y,\n        ...this.invertOffset(overlayPosition),\n      },\n    };\n  }\n\n  private updateTooltipContent(): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance._content = this.content;\n      this._tooltipInstance._markForCheck();\n\n      this.ngZone.onMicrotaskEmpty\n        .pipe(take(1), takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          if (this._tooltipInstance) {\n            this._overlayRef?.updatePosition();\n          }\n\n          const overlayTemplate = this._overlayRef?.hostElement;\n          const header = overlayTemplate?.querySelector('.rds-popover-header');\n\n          if (header && this.showCloseButton) {\n            this.renderer.addClass(header, 'rds-popover-with-close-button');\n          }\n        });\n    }\n  }\n\n  private setTooltipClassIfTooltipInstanceExists(\n    tooltipClass: RdsTooltipClass,\n  ): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance._tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  private invertPosition(\n    x: HorizontalConnectionPos,\n    y: VerticalConnectionPos,\n  ): { x: HorizontalConnectionPos; y: VerticalConnectionPos } {\n    if (this.position.startsWith('top') || this.position.startsWith('bottom')) {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return { x, y };\n  }\n\n  private invertOffset({\n    offsetX,\n    offsetY,\n  }: RdsTooltipPositionOffset): RdsTooltipPositionOffset {\n    const result = {} as RdsTooltipPositionOffset;\n\n    if (offsetX) {\n      result.offsetX = offsetX * -1;\n    }\n\n    if (offsetY) {\n      result.offsetY = offsetY * -1;\n    }\n\n    return result;\n  }\n\n  private setupFocusMonitor(): void {\n    this.focusMonitor\n      .monitor(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((origin) => {\n        if (this.isPopover) {\n          this.origin = origin;\n\n          return;\n        }\n\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this.ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this.ngZone.run(() => this.show());\n        }\n      });\n  }\n\n  private setupPointerEnterEventsIfNeeded(): void {\n    if (\n      this.isPopover ||\n      this._disabled ||\n      !this.content ||\n      !this._viewInitialized ||\n      this._passiveListeners.length\n    ) {\n      return;\n    }\n\n    if (this.platformSupportsMouseEvents()) {\n      this._passiveListeners.push([\n        'mouseenter',\n        () => {\n          this.setupPointerExitEventsIfNeeded();\n          this.show();\n        },\n      ]);\n    } else if (this.touchGestures !== 'off') {\n      this.disableNativeGestures();\n\n      this._passiveListeners.push([\n        'touchstart',\n        () => {\n          this.setupPointerExitEventsIfNeeded();\n          clearTimeout(this._touchstartTimeout);\n          this._touchstartTimeout = setTimeout(() => this.show(), PRESS_DELAY);\n        },\n      ]);\n    }\n\n    this.addListeners(this._passiveListeners);\n  }\n\n  private setupPointerExitEventsIfNeeded(): void {\n    if (this._pointerExitEventsInitialized) {\n      return;\n    }\n\n    this._pointerExitEventsInitialized = true;\n\n    const exitListeners: (readonly [\n      string,\n      EventListenerOrEventListenerObject,\n    ])[] = [];\n\n    if (this.platformSupportsMouseEvents()) {\n      exitListeners.push(\n        ['mouseleave', () => this.hide()],\n        ['wheel', (event) => this.wheelListener(event as WheelEvent)],\n      );\n    } else if (this.touchGestures !== 'off') {\n      this.disableNativeGestures();\n\n      const touchendListener = (): void => {\n        clearTimeout(this._touchstartTimeout);\n        this.hide(this.defaultOptions?.touchendHideDelay);\n      };\n\n      exitListeners.push(\n        ['touchend', touchendListener],\n        ['touchcancel', touchendListener],\n      );\n    }\n\n    this.addListeners(exitListeners);\n    this._passiveListeners.push(...exitListeners);\n  }\n\n  private addListeners(\n    listeners: ReadonlyArray<\n      readonly [string, EventListenerOrEventListenerObject]\n    >,\n  ): void {\n    listeners.forEach(([event, listener]) => {\n      this.elementRef.nativeElement.addEventListener(\n        event,\n        listener,\n        passiveListenerOptions,\n      );\n    });\n  }\n\n  private platformSupportsMouseEvents(): boolean {\n    return !this.platform.IOS && !this.platform.ANDROID;\n  }\n\n  private wheelListener(event: WheelEvent): void {\n    if (this.isTooltipVisible()) {\n      const doc = this.document || document;\n      const elementUnderPointer = doc.elementFromPoint(\n        event.clientX,\n        event.clientY,\n      );\n      const element = this.elementRef.nativeElement;\n\n      // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n      // won't fire if the user scrolls away using the wheel without moving their cursor. We\n      // work around it by finding the element under the user's cursor and closing the tooltip\n      // if it's not the trigger.\n      if (\n        elementUnderPointer !== element &&\n        !element.contains(elementUnderPointer)\n      ) {\n        this.hide();\n      }\n    }\n  }\n\n  private disableNativeGestures(): void {\n    const element = this.elementRef.nativeElement;\n    const style = element.style as CSSStyleDeclaration & {\n      userSelect: string;\n      webkitUserSelect: string;\n      MozUserSelect: string;\n      msUserSelect: string;\n      webkitUserDrag: string;\n      webkitTapHighlightColor: string;\n    };\n\n    // If gestures are set to `auto`, we don't disable text selection on inputs and\n    // textareas, because it prevents the user from typing into them on iOS Safari.\n    if (\n      this.touchGestures === 'on' ||\n      (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')\n    ) {\n      style.userSelect =\n        style.msUserSelect =\n        style.webkitUserSelect =\n        style.MozUserSelect =\n          'none';\n    }\n\n    // If we have `auto` this.touchGestures and the element uses native HTML dragging,\n    // we don't set `-webkit-user-drag` because it prevents the native behavior.\n    if (this.touchGestures === 'on' || !element.draggable) {\n      style.webkitUserDrag = 'none';\n    }\n\n    style.touchAction = 'none';\n    style.webkitTapHighlightColor = 'transparent';\n  }\n\n  private shouldHideArrow(): boolean {\n    return this.isHideArrowSet()\n      ? this.hideArrow\n      : this.elementRef.nativeElement.tagName.toUpperCase() === 'RDS-ICON' ||\n          this.elementRef.nativeElement.hasAttribute('rds-icon-button') ||\n          this.elementRef.nativeElement.hasAttribute('rdsiconbutton');\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { RdsPaginatorIntl } from '../paginator-intl';\n\nexport interface RdsPageChangeEvent {\n  previousPageIndex: number;\n  pageIndex: number;\n}\n\n@Component({\n  selector: 'rds-paginator-basic',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './paginator-basic.component.html',\n  styleUrls: ['./paginator-basic.component.scss'],\n})\nexport class RdsPaginatorBasicComponent implements OnChanges {\n  protected readonly intl = inject(RdsPaginatorIntl);\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n  @Input({ transform: booleanAttribute }) showButtons = true;\n  @Input({ transform: numberAttribute }) collectionSize: number;\n  @Input({ transform: numberAttribute }) maxSize: number;\n  @Input({ transform: numberAttribute }) page = 1;\n  @Input({ transform: numberAttribute }) pageSize: number;\n\n  @Output() pageChange = new EventEmitter<RdsPageChangeEvent>();\n\n  protected pageCount = 0;\n  protected pages: number[] = [];\n\n  hasPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  hasNext(): boolean {\n    return this.page < this.pageCount;\n  }\n\n  selectFirstPage(): void {\n    this._updatePages(1);\n  }\n\n  selectPreviousPage(): void {\n    if (!this.isPreviousDisabled()) {\n      this._updatePages(this.page - 1);\n    }\n  }\n\n  selectPage(pageNumber: number): void {\n    this._updatePages(pageNumber);\n  }\n\n  selectNextPage(): void {\n    if (!this.isNextDisabled()) {\n      this._updatePages(this.page + 1);\n    }\n  }\n\n  selectLastPage(): void {\n    this._updatePages(this.pageCount);\n  }\n\n  ngOnChanges(): void {\n    this._updatePages(this.page);\n  }\n\n  protected isNextDisabled(): boolean {\n    return !this.hasNext() || this.disabled;\n  }\n\n  protected isPreviousDisabled(): boolean {\n    return !this.hasPrevious() || this.disabled;\n  }\n\n  protected isEllipsis(pageNumber: number): boolean {\n    return pageNumber === -1;\n  }\n\n  private _applyEllipses(start: number, end: number): void {\n    if (start > 0) {\n      if (start > 2) {\n        this.pages.unshift(-1);\n      } else if (start === 2) {\n        this.pages.unshift(2);\n      }\n\n      this.pages.unshift(1);\n    }\n\n    if (end < this.pageCount) {\n      if (end < this.pageCount - 2) {\n        this.pages.push(-1);\n      } else if (end === this.pageCount - 2) {\n        this.pages.push(this.pageCount - 1);\n      }\n\n      this.pages.push(this.pageCount);\n    }\n  }\n\n  private _setPageInRange(newPageNo: number): void {\n    const prevPageNo = this.page;\n    this.page = this._getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && this._isNumber(this.collectionSize)) {\n      this.pageChange.emit({\n        previousPageIndex: prevPageNo - 1,\n        pageIndex: this.page - 1,\n      });\n    }\n  }\n\n  private _updatePages(newPage: number): void {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!this._isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    this.pages = [];\n\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    this._setPageInRange(newPage);\n\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      const [start, end] = this._applyRotation();\n      this.pages = this.pages.slice(start, end);\n      this._applyEllipses(start, end);\n    }\n  }\n\n  private _getValueInRange(value: number, max: number, min = 0): number {\n    return Math.max(Math.min(value, max), min);\n  }\n\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    const leftOffset = Math.floor(this.maxSize / 2);\n    const rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      start = this.pageCount - this.maxSize;\n    } else {\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  private _isNumber<T>(value: T): boolean {\n    return !isNaN(this._toInteger(value));\n  }\n\n  private _toInteger<T>(value: T): number {\n    return parseInt(`${value}`, 10);\n  }\n}\n","<div class=\"rds-basic-paginator\">\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'first_page',\n        btnClass: 'rds-paginator-navigation-first',\n        tooltipText: intl.firstPageLabel,\n        click: selectFirstPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isPreviousDisabled(),\n        icon: 'chevron_left',\n        btnClass: 'rds-paginator-navigation-previous',\n        tooltipText: intl.previousPageLabel,\n        click: selectPreviousPage.bind(this)\n      }\"\n    />\n  }\n  @for (pageNumber of pages; track pageNumber) {\n    <div\n      class=\"rds-page-item\"\n      [class.active]=\"pageNumber === page\"\n      [class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n      [attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n    >\n      @if (!isEllipsis(pageNumber)) {\n        <div\n          class=\"rds-page-link\"\n          [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\"\n          (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n        >\n          <button\n            type=\"button\"\n            class=\"rds-paginator-page-button rds-button--text\"\n          >\n            {{ pageNumber }}\n          </button>\n        </div>\n      } @else {\n        <div\n          class=\"rds-page-link rds-paginator-ellipsis\"\n          tabindex=\"-1\"\n          aria-disabled=\"true\"\n        >\n          ...\n        </div>\n      }\n    </div>\n  }\n  @if (showButtons) {\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'chevron_right',\n        btnClass: 'rds-paginator-navigation-next',\n        tooltipText: intl.nextPageLabel,\n        click: selectNextPage.bind(this)\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"arrow\"\n      [ngTemplateOutletContext]=\"{\n        disabled: isNextDisabled(),\n        icon: 'last_page',\n        btnClass: 'rds-paginator-navigation-last',\n        tooltipText: intl.lastPageLabel,\n        click: selectLastPage.bind(this)\n      }\"\n    />\n  }\n</div>\n\n<ng-template\n  #arrow\n  let-disabled=\"disabled\"\n  let-icon=\"icon\"\n  let-btnClass=\"btnClass\"\n  let-tooltipText=\"tooltipText\"\n  let-click=\"click\"\n>\n  <div class=\"rds-page-item\" [class.disabled]=\"disabled\">\n    <div\n      class=\"rds-page-link\"\n      [attr.tabindex]=\"disabled ? '-1' : null\"\n      [attr.aria-disabled]=\"disabled ? 'true' : null\"\n    >\n      <button\n        rds-icon-button\n        type=\"button\"\n        size=\"m\"\n        [class]=\"btnClass\"\n        [attr.aria-label]=\"tooltipText\"\n        [rdsTooltip]=\"tooltipText\"\n        [rdsTooltipDisabled]=\"disabled\"\n        rdsTooltipPosition=\"top-center\"\n        [rdsTooltipShowDelay]=\"500\"\n        rdsTooltipHideArrow\n        [disabled]=\"disabled\"\n        (click)=\"click(); $event.preventDefault()\"\n      >\n        <rds-icon [icon]=\"icon\" namespace=\"outlined\" />\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  inject,\n  InjectionToken,\n  Input,\n  numberAttribute,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Observable, Subscriber } from 'rxjs';\nimport { RdsPaginatorIntl } from './paginator-intl';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst DEFAULT_PAGE_SIZE = 50;\n\nexport interface PageEvent {\n  pageIndex: number;\n  previousPageIndex?: number;\n  pageSize: number;\n  length: number;\n}\n\nexport interface RdsPaginatorDefaultOptions {\n  pageSize?: number;\n  pageSizeOptions?: number[];\n  hidePageSize?: boolean;\n  showFirstLastButtons?: boolean;\n  showItemsOfPageLabel?: boolean;\n}\n\nexport type RdsPaginatorPresentationMode = 'full' | 'basic';\n\nexport const RDS_PAGINATOR_DEFAULT_OPTIONS =\n  new InjectionToken<RdsPaginatorDefaultOptions>(\n    'RDS_PAGINATOR_DEFAULT_OPTIONS',\n  );\n\n@Component({\n  selector: 'rds-paginator',\n  exportAs: 'rdsPaginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsPaginatorComponent implements OnInit {\n  protected readonly intl = inject(RdsPaginatorIntl);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly defaults = inject(RDS_PAGINATOR_DEFAULT_OPTIONS, {\n    optional: true,\n  });\n\n  private _isInitialized = false;\n  private _pendingSubscribers: Subscriber<void>[] | null = [];\n  private _length = 0;\n\n  readonly initialized = new Observable<void>((subscriber) => {\n    if (this._isInitialized) {\n      this._notifySubscriber(subscriber);\n    } else if (this._pendingSubscribers) {\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n    }\n  });\n\n  private _initialized = false;\n\n  @HostBinding('class') class = 'rds-paginator';\n\n  @Input()\n  set pageIndex(value: NumberInput) {\n    const newValue = Math.max(numberAttribute(value), 0);\n\n    if (newValue !== this.pageIndex) {\n      this._pageIndex = Math.max(numberAttribute(value), 0);\n      this.cdr.markForCheck();\n    }\n  }\n\n  get pageIndex(): number {\n    return this._pageIndex;\n  }\n\n  private _pageIndex = 0;\n\n  @Input()\n  set length(v: NumberInput) {\n    const newValue = numberAttribute(v);\n\n    if (newValue !== this._length) {\n      this._length = newValue;\n      this.cdr.markForCheck();\n    }\n  }\n  get length(): number {\n    return this._length;\n  }\n\n  @Input({ transform: booleanAttribute }) showItemsOfPageLabel = true;\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input({ transform: (v: unknown) => Math.max(numberAttribute(v, 0), 0) })\n  set pageSize(value: NumberInput) {\n    this._pageSize = Math.max(numberAttribute(value), 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  private _pageSize = 0;\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @Input()\n  set pageSizeOptions(value: NumberInput[]) {\n    this._pageSizeOptions = (value || []).map((p) => numberAttribute(p));\n    this._updateDisplayedPageSizeOptions();\n  }\n\n  get pageSizeOptions(): number[] {\n    return this._pageSizeOptions;\n  }\n\n  private _pageSizeOptions: number[] = [];\n\n  @Input()\n  set showButtons(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (this._presentationMode === 'full' && !newValue) {\n      throw new Error(\n        `showButtons property set on false can be used only with basic presentation mode`,\n      );\n    } else {\n      this._showButtons = newValue;\n    }\n  }\n\n  get showButtons(): boolean {\n    return this._showButtons;\n  }\n\n  private _showButtons = true;\n\n  @Input()\n  set presentationMode(value: RdsPaginatorPresentationMode) {\n    if (value === 'full' && !this.showButtons) {\n      throw new Error(\n        `showButtons property set on false can be used only with basic presentation mode`,\n      );\n    } else {\n      this._presentationMode = value;\n    }\n  }\n\n  get presentationMode(): RdsPaginatorPresentationMode {\n    return this._presentationMode;\n  }\n\n  private _presentationMode: RdsPaginatorPresentationMode = 'full';\n\n  @Input({ transform: booleanAttribute }) hidePageSize = false;\n  @Input({ transform: booleanAttribute }) showFirstLastButtons = true;\n\n  @Output() readonly page = new EventEmitter<PageEvent>();\n\n  _displayedPageSizeOptions: number[] = [];\n\n  constructor() {\n    this.intl.changes\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.cdr.markForCheck());\n\n    if (this.defaults) {\n      if (this.defaults.pageSize != null) {\n        this._pageSize = this.defaults.pageSize;\n      }\n\n      if (this.defaults.pageSizeOptions != null) {\n        this._pageSizeOptions = this.defaults.pageSizeOptions;\n      }\n\n      if (this.defaults.hidePageSize != null) {\n        this.hidePageSize = this.defaults.hidePageSize;\n      }\n\n      if (this.defaults.showFirstLastButtons != null) {\n        this.showFirstLastButtons = this.defaults.showFirstLastButtons;\n      }\n\n      if (this.defaults.showItemsOfPageLabel != null) {\n        this.showItemsOfPageLabel = this.defaults.showItemsOfPageLabel;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._markInitialized();\n  }\n\n  nextPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex + 1;\n    this.emitPageEvent({ previousPageIndex });\n  }\n\n  previousPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.pageIndex - 1;\n    this.emitPageEvent({ previousPageIndex });\n  }\n\n  firstPage(): void {\n    if (!this.hasPreviousPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this.emitPageEvent({ previousPageIndex });\n  }\n\n  lastPage(): void {\n    if (!this.hasNextPage()) {\n      return;\n    }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = this.getNumberOfPages() - 1;\n    this.emitPageEvent({ previousPageIndex });\n  }\n\n  hasPreviousPage(): boolean {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n\n  hasNextPage(): boolean {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n\n  getNumberOfPages(): number {\n    if (!this.pageSize) {\n      return 0;\n    }\n\n    return Math.ceil(this.length / this.pageSize);\n  }\n\n  get(): PageEvent {\n    return {\n      previousPageIndex: 0,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    };\n  }\n\n  _onPageIndexChange(input: HTMLInputElement): void {\n    const newPageIndex = Math.min(\n      Math.max(numberAttribute(input.value), 0),\n      this.getNumberOfPages(),\n    );\n\n    if (newPageIndex && newPageIndex - 1 !== this.pageIndex) {\n      const previousPageIndex = this.pageIndex;\n      this.pageIndex = newPageIndex - 1;\n      this.emitPageEvent({ previousPageIndex });\n    }\n\n    input.value = String(this.pageIndex + 1);\n  }\n\n  _changePageSize(pageSize: number): void {\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this.emitPageEvent({ previousPageIndex });\n  }\n\n  _nextButtonsDisabled(): boolean {\n    return this.disabled || !this.hasNextPage();\n  }\n\n  _previousButtonsDisabled(): boolean {\n    return this.disabled || !this.hasPreviousPage();\n  }\n\n  _onPageKeyDown($event: KeyboardEvent): boolean {\n    return $event.key !== '.';\n  }\n\n  _getPageNumberInputWidth(): number {\n    return this.getNumberOfPages().toString(10).split('').length * 10 + 24;\n  }\n\n  private _updateDisplayedPageSizeOptions(): void {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (!this.pageSize) {\n      this._pageSize =\n        this.pageSizeOptions.length != 0\n          ? this.pageSizeOptions[0]\n          : DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this.cdr.markForCheck();\n  }\n\n  emitPageEvent(data: { previousPageIndex: number; pageIndex?: number }): void {\n    const { previousPageIndex, pageIndex } = data;\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: pageIndex ?? this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    });\n  }\n\n  protected _markInitialized(): void {\n    if (this._isInitialized) {\n      throw Error(\n        'This directive has already been marked as initialized and ' +\n          'should not be called twice.',\n      );\n    }\n\n    this._isInitialized = true;\n\n    if (this._pendingSubscribers) {\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n    }\n\n    this._pendingSubscribers = null;\n  }\n\n  protected _notifySubscriber(subscriber: Subscriber<void>): void {\n    subscriber.next();\n    subscriber.complete();\n  }\n}\n","@if (presentationMode === 'full') {\n  <div\n    class=\"rds-paginator-container\"\n    [class.rds-paginator-disabled]=\"disabled\"\n  >\n    @if (showItemsOfPageLabel) {\n      <div class=\"rds-paginator-range-label\">\n        {{ intl.getRangeLabel(pageIndex, pageSize, length) }}\n      </div>\n    }\n    @if (!hidePageSize) {\n      <div class=\"rds-paginator-page-size\">\n        @if (_displayedPageSizeOptions.length > 1) {\n          <div\n            class=\"rds-paginator-page-size-select\"\n            rdsDropdown\n            #pageSizeDropdown=\"rdsDropdown\"\n            [disabled]=\"disabled\"\n          >\n            <button\n              rds-dropdown-toggle-button\n              [rdsMenuTriggerFor]=\"menu\"\n              #trigger=\"rdsMenuTrigger\"\n              [isOpen]=\"trigger.menuOpen\"\n              class=\"rds-paginator-page-size__toggle\"\n            >\n              {{ pageSize }}\n              <rds-icon\n                namespace=\"filled\"\n                [icon]=\"pageSizeDropdown.isOpen() ? 'caret_down' : 'caret_up'\"\n              />\n            </button>\n            <rds-menu #menu=\"rdsMenu\">\n              @for (\n                pageSizeOption of _displayedPageSizeOptions;\n                track pageSizeOption\n              ) {\n                <button\n                  rds-menu-item\n                  cdkMonitorElementFocus\n                  (click)=\"_changePageSize(pageSizeOption)\"\n                >\n                  {{ pageSizeOption }}\n                </button>\n              }\n            </rds-menu>\n            @if (_displayedPageSizeOptions.length <= 1) {\n              <div class=\"rds-paginator-page-size-value\">\n                {{ pageSize }}\n              </div>\n            }\n          </div>\n        }\n      </div>\n    }\n    <div class=\"rds-paginator-range-actions\">\n      @if (showFirstLastButtons) {\n        <button\n          rds-icon-button\n          type=\"button\"\n          size=\"m\"\n          class=\"rds-paginator-navigation-first\"\n          (click)=\"firstPage()\"\n          [attr.aria-label]=\"intl.firstPageLabel\"\n          [rdsTooltip]=\"intl.firstPageLabel\"\n          [rdsTooltipDisabled]=\"_previousButtonsDisabled()\"\n          [rdsTooltipPosition]=\"'top-center'\"\n          [rdsTooltipShowDelay]=\"500\"\n          rdsTooltipHideArrow\n          [disabled]=\"_previousButtonsDisabled()\"\n        >\n          <rds-icon icon=\"first_page\" namespace=\"outlined\" />\n        </button>\n      }\n      <button\n        rds-icon-button\n        type=\"button\"\n        size=\"m\"\n        class=\"rds-paginator-navigation-previous\"\n        (click)=\"previousPage()\"\n        [attr.aria-label]=\"intl.previousPageLabel\"\n        [rdsTooltip]=\"intl.previousPageLabel\"\n        [rdsTooltipDisabled]=\"_previousButtonsDisabled()\"\n        [rdsTooltipPosition]=\"'top-center'\"\n        [rdsTooltipShowDelay]=\"500\"\n        rdsTooltipHideArrow\n        [disabled]=\"_previousButtonsDisabled()\"\n      >\n        <rds-icon icon=\"chevron_left\" namespace=\"outlined\" />\n      </button>\n      <div class=\"rds-paginator-page-of\">\n        <input\n          class=\"rds-paginator-page-number-input\"\n          cdkMonitorElementFocus\n          [value]=\"pageIndex + 1\"\n          (change)=\"_onPageIndexChange(input)\"\n          [disabled]=\"disabled\"\n          #input\n          type=\"number\"\n          (keydown)=\"_onPageKeyDown($event)\"\n          [style.width.px]=\"_getPageNumberInputWidth()\"\n        />\n        {{ intl.ofPagesLabel + ' ' + getNumberOfPages() }}\n      </div>\n      <button\n        rds-icon-button\n        type=\"button\"\n        size=\"m\"\n        class=\"rds-paginator-navigation-next\"\n        (click)=\"nextPage()\"\n        [attr.aria-label]=\"intl.nextPageLabel\"\n        [rdsTooltip]=\"intl.nextPageLabel\"\n        [rdsTooltipDisabled]=\"_nextButtonsDisabled()\"\n        [rdsTooltipPosition]=\"'top-center'\"\n        [rdsTooltipShowDelay]=\"500\"\n        rdsTooltipHideArrow\n        [disabled]=\"_nextButtonsDisabled()\"\n      >\n        <rds-icon icon=\"chevron_right\" namespace=\"outlined\" />\n      </button>\n      @if (showFirstLastButtons) {\n        <button\n          rds-icon-button\n          type=\"button\"\n          size=\"m\"\n          class=\"rds-paginator-navigation-last\"\n          (click)=\"lastPage()\"\n          [attr.aria-label]=\"intl.lastPageLabel\"\n          [rdsTooltip]=\"intl.lastPageLabel\"\n          [rdsTooltipDisabled]=\"_nextButtonsDisabled()\"\n          [rdsTooltipPosition]=\"'top-center'\"\n          [rdsTooltipShowDelay]=\"500\"\n          rdsTooltipHideArrow\n          [disabled]=\"_nextButtonsDisabled()\"\n        >\n          <rds-icon icon=\"last_page\" namespace=\"outlined\" />\n        </button>\n      }\n    </div>\n  </div>\n} @else {\n  <rds-paginator-basic\n    [maxSize]=\"5\"\n    [collectionSize]=\"length\"\n    (pageChange)=\"this.emitPageEvent($event)\"\n    [pageSize]=\"pageSize\"\n    [disabled]=\"disabled\"\n    [showButtons]=\"showButtons\"\n  />\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsTooltipComponent } from './tooltip.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { RDS_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER } from './tokens';\nimport { RdsButtonModule } from '../button';\nimport { RdsIconComponent } from '../icons';\nimport { RdsTooltipDirective } from './tooltip.directive';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, RdsButtonModule, RdsIconComponent],\n  declarations: [RdsTooltipDirective, RdsTooltipComponent],\n  exports: [RdsTooltipDirective],\n  providers: [RDS_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class RdsTooltipModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RDS_PAGINATOR_INTL_PROVIDER } from '../paginator-intl';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { RdsIconComponent } from '../../icons';\nimport { RdsTooltipModule } from '../../tooltip';\nimport { RdsButtonModule } from '../../button';\nimport { RdsPaginatorBasicComponent } from './paginator-basic.component';\n\n@NgModule({\n  declarations: [RdsPaginatorBasicComponent],\n  exports: [RdsPaginatorBasicComponent],\n  imports: [\n    CommonModule,\n    RdsIconComponent,\n    RdsTooltipModule,\n    RdsButtonModule,\n    A11yModule,\n  ],\n  providers: [RDS_PAGINATOR_INTL_PROVIDER],\n})\nexport class RdsPaginatorBasicModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RDS_PAGINATOR_INTL_PROVIDER } from './paginator-intl';\nimport { RdsPaginatorComponent } from './paginator.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { RdsDropdownModule } from '../dropdown';\nimport { RdsIconComponent } from '../icons';\nimport { RdsTooltipModule } from '../tooltip';\nimport { RdsButtonModule } from '../button';\nimport { RdsMenuModule } from '../menu';\nimport { RdsPaginatorBasicModule } from './paginator-basic/paginator-basic.module';\n\n@NgModule({\n  declarations: [RdsPaginatorComponent],\n  exports: [RdsPaginatorComponent],\n  imports: [\n    CommonModule,\n    RdsDropdownModule,\n    RdsMenuModule,\n    RdsIconComponent,\n    RdsTooltipModule,\n    RdsButtonModule,\n    RdsPaginatorBasicModule,\n    A11yModule,\n  ],\n  providers: [RDS_PAGINATOR_INTL_PROVIDER],\n})\nexport class RdsPaginatorModule {}\n","// this basically is rdsTooltip directive, it's needed only to provide rdsPopover* input names\n// and make sure that hide and show delays are = 0\nimport { Directive, HostBinding, Input, TemplateRef } from '@angular/core';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { RdsTooltipDirective } from '../tooltip';\nimport {\n  RdsPopoverClass,\n  RdsPopoverPosition,\n  RdsPopoverTouchGestures,\n} from './popover.types';\nimport { fromEvent } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Directive({\n  selector: '[rdsPopover], [rds-popover]',\n  exportAs: 'rdsPopover',\n})\nexport class RdsPopoverDirective extends RdsTooltipDirective {\n  protected override _hasBackdrop = true;\n  protected override readonly isPopover = true;\n  override showDelay = 0;\n  override hideDelay = 0;\n\n  @Input()\n  @HostBinding('attr.aria-haspopup')\n  rdsPopoverRole = 'dialog';\n\n  @Input('rdsPopoverAriaDescription') override ariaDescription = '';\n\n  override get hideArrow(): boolean {\n    return super.hideArrow;\n  }\n\n  override set hideArrow(shouldHideArrow: BooleanInput) {\n    super.hideArrow = shouldHideArrow;\n  }\n\n  @Input('rdsPopoverTouchGestures')\n  override touchGestures: RdsPopoverTouchGestures = 'auto';\n\n  @Input('rdsPopoverPosition')\n  override get position(): RdsPopoverPosition {\n    return super.position;\n  }\n\n  override set position(value: RdsPopoverPosition) {\n    super.position = value;\n  }\n\n  @Input('rdsPopoverDisabled')\n  override set disabled(value: BooleanInput) {\n    super.disabled = value;\n  }\n\n  override get disabled(): boolean {\n    return super.disabled;\n  }\n\n  @Input('rdsPopover')\n  override get content(): string | TemplateRef<unknown> {\n    return super.content;\n  }\n\n  override set content(value: string | TemplateRef<unknown>) {\n    super.content = value;\n  }\n\n  @Input('rdsPopoverClass')\n  override get tooltipClass(): RdsPopoverClass {\n    return super.tooltipClass;\n  }\n\n  override set tooltipClass(value: RdsPopoverClass) {\n    super.tooltipClass = value;\n  }\n\n  @Input('rdsPopoverHasBackdrop')\n  override set hasBackdrop(v: BooleanInput) {\n    super.hasBackdrop = v;\n  }\n  override get hasBackdrop(): boolean {\n    return this._hasBackdrop;\n  }\n\n  @Input('rdsPopoverShowCloseButton')\n  override set showCloseButton(v: BooleanInput) {\n    super.showCloseButton = v;\n  }\n\n  override get showCloseButton(): boolean {\n    return super.showCloseButton;\n  }\n  @HostBinding('attr.aria-expanded')\n  protected override ariaExpanded: boolean | null = false;\n\n  protected override _hideArrow = false;\n\n  protected override handleFocus(): void {\n    setTimeout(() => {\n      if (!this._tooltipInstance) {\n        return;\n      }\n\n      const firstInteractive = this._tooltipInstance.getFirstFocusableElement();\n      const lastInteractive = this._tooltipInstance.getLastFocusableElement();\n\n      if (!firstInteractive) {\n        return;\n      }\n\n      this.focusMonitor.focusVia(firstInteractive, this.origin);\n      this.createTabHandler(firstInteractive, true);\n\n      if (lastInteractive) {\n        this.createTabHandler(lastInteractive, false);\n      }\n    });\n  }\n\n  private createTabHandler(el: HTMLElement, withShiftKey: boolean): void {\n    fromEvent(el, 'keydown')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((event: Event) => {\n        const { code, shiftKey } = event as KeyboardEvent;\n\n        if (code === 'Tab' && shiftKey === withShiftKey) {\n          event.preventDefault();\n          this.hide();\n        }\n      });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Overlay, ScrollStrategy } from '@angular/cdk/overlay';\nimport { RdsPopoverDefaultOptions } from './popover.types';\n\nconst SCROLL_THROTTLE_MS = 20;\n\nexport const RDS_POPOVER_SCROLL_STRATEGY = new InjectionToken<\n  () => ScrollStrategy\n>('RDS_POPOVER_SCROLL_STRATEGY');\n\n/** @docs-private */\nexport function RDS_POPOVER_SCROLL_STRATEGY_FACTORY(\n  overlay: Overlay,\n): () => ScrollStrategy {\n  return () =>\n    overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n\n/** @docs-private */\nexport const RDS_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: RDS_POPOVER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: RDS_POPOVER_SCROLL_STRATEGY_FACTORY,\n};\n\nexport const RDS_POPOVER_DEFAULT_OPTIONS =\n  new InjectionToken<RdsPopoverDefaultOptions>('RDS_POPOVER_DEFAULT_OPTIONS', {\n    providedIn: 'root',\n    factory: RDS_POPOVER_DEFAULT_OPTIONS_FACTORY,\n  });\n\n/** @docs-private */\nexport function RDS_POPOVER_DEFAULT_OPTIONS_FACTORY(): RdsPopoverDefaultOptions {\n  return {\n    hideDelay: 0,\n    showDelay: 0,\n    touchendHideDelay: 1500,\n    hideArrow: false,\n  };\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[rdsPopoverHeader], [rds-popover-header], rds-popover-header',\n})\nexport class RdsPopoverHeaderDirective {\n  @HostBinding('class') private readonly class = 'rds-popover-header';\n}\n","import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector:\n    '[rdsPopoverParagraph], [rds-popover-paragraph], rds-popover-paragraph',\n})\nexport class RdsPopoverParagraphDirective {\n  @HostBinding('class') private readonly class = 'rds-popover-paragraph';\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'rds-popover-text-content',\n  templateUrl: './popover-text-content.component.html',\n  styleUrls: ['./popover-text-content.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsPopoverTextContentComponent {}\n","<ng-content\n  select=\"rds-popover-header, [rdsPopoverHeader], [rds-popover-header]\"\n/>\n<ng-content\n  select=\"rds-popover-paragraph, [rdsPopoverParagraph], [rds-popover-paragraph]\"\n/>\n","import { RdsTooltipModule } from '../tooltip';\nimport { CommonModule } from '@angular/common';\nimport { RdsPopoverDirective } from './popover.directive';\nimport { NgModule } from '@angular/core';\nimport { RDS_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER } from './popover.tokens';\nimport { RdsPopoverHeaderDirective } from './popover-text-content/popover-header.directive';\nimport { RdsPopoverParagraphDirective } from './popover-text-content/popover-paragraph.directive';\nimport { RdsPopoverTextContentComponent } from './popover-text-content/popover-text-content.component';\n\n@NgModule({\n  imports: [CommonModule, RdsTooltipModule],\n  declarations: [\n    RdsPopoverDirective,\n    RdsPopoverHeaderDirective,\n    RdsPopoverParagraphDirective,\n    RdsPopoverTextContentComponent,\n  ],\n  exports: [\n    RdsPopoverDirective,\n    RdsTooltipModule,\n    RdsPopoverHeaderDirective,\n    RdsPopoverParagraphDirective,\n    RdsPopoverTextContentComponent,\n  ],\n  providers: [RDS_POPOVER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n})\nexport class RdsPopoverModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  numberAttribute,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsProgressBarMode } from './progress.mode';\n\nlet progressbarId = 0;\n\n@Component({\n  selector: 'rds-progress-bar',\n  template: `\n    <svg\n      width=\"100%\"\n      height=\"4\"\n      focusable=\"false\"\n      class=\"rds-progress-bar-background rds-progress-bar-element\"\n    >\n      <defs>\n        <pattern\n          [id]=\"progressbarId\"\n          x=\"4\"\n          y=\"0\"\n          width=\"8\"\n          height=\"4\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <circle cx=\"2\" cy=\"2\" r=\"2\" />\n        </pattern>\n      </defs>\n      <rect [attr.fill]=\"rectangleFillValue\" width=\"100%\" height=\"100%\" />\n    </svg>\n\n    <div\n      class=\"rds-progress-bar-buffer rds-progress-bar-element\"\n      [ngStyle]=\"bufferTransform()\"\n    ></div>\n    <div\n      class=\"rds-progress-bar-primary rds-progress-bar-fill rds-progress-bar-element\"\n      [ngStyle]=\"primaryTransform()\"\n      #primaryValueBar\n    ></div>\n    <div\n      class=\"rds-progress-bar-secondary rds-progress-bar-fill rds-progress-bar-element\"\n    ></div>\n  `,\n  styleUrls: ['./progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsProgressBarComponent {\n  readonly progressbarId = `rds-progress-bar-${progressbarId++}`;\n\n  @HostBinding('class.rds-progress-bar') readonly hostClass = true;\n\n  @HostBinding('attr.role') readonly hostRole = 'progressbar';\n  @HostBinding('attr.aria-valuemin') readonly hostAriaValuemin = '0';\n  @HostBinding('attr.aria-valuemax') readonly hostAriaValuemax = '100';\n\n  @HostBinding('attr.mode') get hostMode(): RdsProgressBarMode {\n    return this.mode;\n  }\n\n  @HostBinding('attr.aria-valuenow') get hostValueNow(): number | null {\n    let valueNow: number | null = this.value;\n\n    if (this.mode === 'indeterminate') {\n      valueNow = null;\n    }\n\n    return valueNow;\n  }\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input({ transform: (v: unknown) => clamp(numberAttribute(v, 0)) }) value = 0;\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input({ transform: (v: unknown) => clamp(numberAttribute(v, 0)) })\n  bufferValue = 0;\n  @Input() mode: RdsProgressBarMode = 'indeterminate';\n\n  @ViewChild('primaryValueBar') _primaryValueBar: ElementRef;\n\n  rectangleFillValue: string;\n\n  constructor() {\n    // We need to prefix the SVG reference with the current path, otherwise they won't work\n    // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n    // because named route URLs can contain parentheses\n    const path = location ? location.href.split('#')[0] : '';\n    this.rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n  }\n\n  primaryTransform(): { transform: string } {\n    const scale = this.value / 100;\n\n    return { transform: `scaleX(${scale})` };\n  }\n\n  bufferTransform(): { transform: string } | null {\n    if (this.mode === 'buffer') {\n      const scale = this.bufferValue / 100;\n\n      return { transform: `scaleX(${scale})` };\n    }\n\n    return null;\n  }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(value: number, min = 0, max = 100): number {\n  return Math.max(min, Math.min(max, value));\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsProgressBarComponent } from './progress-bar.component';\nimport { LottieComponent } from 'ngx-lottie';\n\n@NgModule({\n  imports: [CommonModule, LottieComponent],\n  exports: [RdsProgressBarComponent],\n  declarations: [RdsProgressBarComponent],\n})\nexport class RdsProgressBarModule {}\n","import { RdsRadioButtonComponent } from './index';\n\nexport class RdsRadioChangedEvent<T> {\n  constructor(\n    public readonly source: RdsRadioButtonComponent<T> | null,\n    public readonly value: T | null,\n  ) {}\n}\n","import {\n  ControlValueAccessor,\n  FormControl,\n  FormControlDirective,\n  FormControlName,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n  NgForm,\n  NgModel,\n} from '@angular/forms';\nimport {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  DoCheck,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  inject,\n  InjectionToken,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport {\n  RdsRadioButtonComponent,\n  RdsRadioButtonPosition,\n} from './radio-button.component';\nimport { RdsRadioChangedEvent } from './radio-button-changed-event';\nimport { tap } from 'rxjs/operators';\nimport { updateErrorState } from '../utils';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n/**\n * Provider Expression that allows rds-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const RDS_RADIO_GROUP = new InjectionToken<RdsRadioGroupDirective<any>>(\n  'RDS_RADIO_GROUP',\n);\n\n/**\n * Injection token that can be used to inject instances of `RdsRadioGroupDirective`. It serves as\n * alternative token to the actual `RdsRadioGroupDirective` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nexport const RDS_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RdsRadioGroupDirective),\n  multi: true,\n};\n\nlet nextUniqueId = 0;\n\n@Directive({\n  selector: 'rds-radio-group',\n  providers: [\n    RDS_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n    { provide: RDS_RADIO_GROUP, useExisting: RdsRadioGroupDirective },\n  ],\n})\nexport class RdsRadioGroupDirective<T>\n  implements OnInit, AfterContentInit, ControlValueAccessor, DoCheck\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly injector = inject(Injector);\n  readonly parentForm = inject(NgForm, { optional: true });\n  readonly parentFormGroup = inject(FormGroupDirective, { optional: true });\n\n  private _value: T | null;\n  private _name = `rds-radio-group-${nextUniqueId++}`;\n  private _selected: RdsRadioButtonComponent<T> | null = null;\n  private _isInitialized = false;\n  private _labelPosition: RdsRadioButtonPosition = 'after';\n  private _errorState = false;\n\n  control!: FormControl;\n\n  @ContentChildren(forwardRef(() => RdsRadioButtonComponent), {\n    descendants: true,\n  })\n  _radios: QueryList<RdsRadioButtonComponent<T>>;\n\n  @HostBinding('class') readonly hostClass = 'rds-radio-group';\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n    this.updateRadioButtonNames();\n  }\n\n  @Input()\n  get labelPosition(): RdsRadioButtonPosition {\n    return this._labelPosition;\n  }\n  set labelPosition(v: RdsRadioButtonPosition) {\n    const oldPosition = this._labelPosition;\n    this._labelPosition = v === 'before' ? 'before' : 'after';\n\n    if (oldPosition !== this._labelPosition) {\n      this._radios?.forEach((r) => (r.labelPosition = this.labelPosition));\n      this.markRadiosForCheck();\n    }\n  }\n\n  @Input()\n  get value(): T | null {\n    return this._value;\n  }\n  set value(newValue: T | null) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n\n      this.updateSelectedRadioFromValue();\n      this.checkSelectedRadioButton();\n    }\n  }\n\n  @Input()\n  get selected(): RdsRadioButtonComponent<T> | null {\n    return this._selected;\n  }\n  set selected(selected: RdsRadioButtonComponent<T> | null) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n    this.checkSelectedRadioButton();\n  }\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n  @Input({ transform: booleanAttribute }) required = false;\n\n  @Output() buttonChanged = new EventEmitter<RdsRadioChangedEvent<T>>();\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _controlValueAccessorChangeFn: (value: T) => void = () => {};\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onTouched: () => void = () => {};\n\n  ngOnInit(): void {\n    const injectedControl = this.injector.get(NgControl);\n\n    switch (injectedControl.constructor) {\n      case NgModel: {\n        const { control, update } = injectedControl as NgModel;\n\n        this.control = control;\n\n        this.control.valueChanges\n          .pipe(\n            tap((value: T) => update.emit(value)),\n            takeUntilDestroyed(this.destroyRef),\n          )\n          .subscribe();\n        break;\n      }\n\n      case FormControlName: {\n        this.control = this.injector\n          .get(FormGroupDirective)\n          .getControl(injectedControl as FormControlName);\n        break;\n      }\n\n      default: {\n        this.control = (injectedControl as FormControlDirective)\n          .form as FormControl;\n        break;\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    // Mark this component as initialized in AfterContentInit because the initial value can\n    // possibly be set by NgModel on RdsRadioGroupDirective, and it is possible that the OnInit of the\n    // NgModel occurs *after* the OnInit of the RdsRadioGroupDirective.\n    this._isInitialized = true;\n    this._radios?.forEach((r) => (r.labelPosition = this.labelPosition));\n    this.markRadiosForCheck();\n  }\n\n  ngDoCheck(): void {\n    if (this.control) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this._errorState = updateErrorState(\n        this._errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this.control,\n      );\n    }\n  }\n\n  checkSelectedRadioButton(): void {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n  touch(): void {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  private updateRadioButtonNames(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => {\n        radio.name = this.name;\n        radio.markForCheck();\n      });\n    }\n  }\n\n  private updateSelectedRadioFromValue(): void {\n    const isAlreadySelected =\n      this._selected !== null && this._selected.value === this._value;\n\n    if (this._radios && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach((radio) => {\n        radio.checked = this.value === radio.value;\n\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  emitChangeEvent(): void {\n    if (this._isInitialized) {\n      this.buttonChanged.emit(\n        new RdsRadioChangedEvent<T>(this._selected, this._value),\n      );\n    }\n  }\n\n  markRadiosForCheck(): void {\n    if (this._radios) {\n      this._radios.forEach((radio) => radio.markForCheck());\n    }\n  }\n\n  writeValue(value: T): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: T) => void): void {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.disabled !== isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  RDS_RADIO_GROUP,\n  RdsRadioGroupDirective,\n} from './radio-button-group.directive';\nimport { RdsRadioChangedEvent } from './radio-button-changed-event';\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormGroupDirective } from '@angular/forms';\nimport { noop } from 'rxjs';\n\nexport type RdsRadioButtonPosition = 'before' | 'after';\nexport type RdsRadioButtonSize = 's' | 'm' | 'l';\n\nlet nextUniqueId = 0;\n\nexport const rdsRadioAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('200ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n\n@Component({\n  selector: 'rds-radio-button',\n  template: `\n    <label [attr.for]=\"inputId\" class=\"rds-radio-label\">\n      <!-- The actual 'radio' part of the control. -->\n      <div class=\"rds-radio-container\">\n        <div class=\"rds-radio-checkmark-outer-circle\"></div>\n        <div class=\"rds-radio-checkmark-inner-circle\"></div>\n        <input\n          class=\"rds-radio-input\"\n          type=\"radio\"\n          [id]=\"inputId\"\n          [checked]=\"checked\"\n          [disabled]=\"disabled\"\n          [attr.name]=\"name\"\n          [attr.value]=\"value\"\n          [required]=\"required\"\n          [attr.aria-label]=\"ariaLabel\"\n          [attr.aria-labelledby]=\"ariaLabelledby\"\n          [attr.aria-describedby]=\"ariaDescribedby\"\n          (change)=\"onInputChange($event)\"\n          (click)=\"onInputClick($event)\"\n        />\n        <div class=\"rds-checkmark-hover\"></div>\n      </div>\n\n      <!-- The label content for radio control. -->\n      <div\n        class=\"rds-radio-label-content\"\n        [class.rds-radio-label-before]=\"labelPosition === 'before'\"\n        [ngClass]=\"'rds-radio-label-content--' + size\"\n      >\n        <!-- Add an invisible span so JAWS can read the label -->\n        <span style=\"display:none\">&nbsp;</span>\n        <ng-content />\n      </div>\n    </label>\n    <div class=\"rds-radio__subscript-wrapper\">\n      @switch (isErrorMessageVisible) {\n        @case (true) {\n          <div\n            class=\"rds-radio__subscript rds-radio__subscript--error\"\n            [@transitionMessages]=\"subscriptAnimationState\"\n          >\n            <ng-content select=\"rds-control-error\" />\n          </div>\n        }\n        @case (false) {\n          <div\n            class=\"rds-radio__subscript rds-radio__subscript--hint\"\n            [@transitionMessages]=\"subscriptAnimationState\"\n          >\n            <ng-content select=\"rds-control-hint\" />\n          </div>\n        }\n      }\n    </div>\n  `,\n  styleUrls: ['./radio-button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [rdsRadioAnimations.transitionMessages],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsRadioButtonComponent<T>\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  private readonly radioGroup = inject<RdsRadioGroupDirective<T>>(\n    RDS_RADIO_GROUP,\n    { optional: true },\n  );\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject(ElementRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly radioDispatcher = inject(UniqueSelectionDispatcher);\n\n  private _uniqueId = `rds-radio-${++nextUniqueId}`;\n  private _disabled: boolean;\n  private _required: boolean;\n  private _value: T;\n  private _labelPosition: 'before' | 'after';\n\n  subscriptAnimationState: '' | 'enter' = '';\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  @HostBinding('class') readonly hostClass = 'rds-radio-button';\n\n  @HostBinding('class.rds-radio--invalid')\n  get errorState(): boolean {\n    if (this.radioGroup) {\n      const parent =\n        this.radioGroup.parentFormGroup || this.radioGroup.parentForm;\n      const control = this.radioGroup.control;\n\n      if (control) {\n        return (\n          control.invalid && (control.touched || parent?.submitted || false)\n        );\n      }\n    }\n\n    return false;\n  }\n\n  @Input()\n  @HostBinding('attr.id')\n  id: string = this._uniqueId;\n\n  @Input() name: string;\n\n  @Input() size: RdsRadioButtonSize = 'l';\n\n  @Input()\n  @HostBinding('attr.aria-label')\n  ariaLabel: string;\n\n  @Input('aria-labelledby')\n  @HostBinding('attr.aria-labelledby')\n  ariaLabelledby: string;\n\n  @Input('aria-describedby')\n  @HostBinding('attr.aria-describedby')\n  ariaDescribedby: string;\n\n  @Input()\n  @HostBinding('class.rds-radio-checked')\n  set checked(value: BooleanInput) {\n    const newCheckedState = booleanAttribute(value);\n\n    if (this._checked !== newCheckedState) {\n      this._checked = newCheckedState;\n\n      if (\n        newCheckedState &&\n        this.radioGroup &&\n        this.radioGroup.value !== this.value\n      ) {\n        this.radioGroup.selected = this;\n      } else if (\n        !newCheckedState &&\n        this.radioGroup &&\n        this.radioGroup.value === this.value\n      ) {\n        this.radioGroup.selected = null;\n      }\n\n      if (newCheckedState) {\n        this.radioDispatcher.notify(this.id, this.name);\n      }\n    }\n  }\n\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _checked = false;\n\n  @Input()\n  get value(): T {\n    return this._value;\n  }\n  set value(value: T) {\n    if (this._value !== value) {\n      this._value = value;\n\n      if (this.radioGroup !== null) {\n        if (!this.checked) {\n          this.checked = this.radioGroup.value === value;\n        }\n\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n      }\n    }\n  }\n\n  @Input()\n  get labelPosition(): RdsRadioButtonPosition {\n    return (\n      this._labelPosition ||\n      (this.radioGroup && this.radioGroup.labelPosition) ||\n      'after'\n    );\n  }\n  set labelPosition(value: RdsRadioButtonPosition) {\n    this._labelPosition = value;\n  }\n\n  @HostBinding('class.rds-radio-disabled')\n  @Input()\n  set disabled(value: BooleanInput) {\n    this._disabled = booleanAttribute(value);\n  }\n\n  get disabled(): boolean {\n    return (\n      this._disabled || (this.radioGroup !== null && this.radioGroup.disabled)\n    );\n  }\n\n  @Input()\n  set required(value: BooleanInput) {\n    this._required = booleanAttribute(value);\n  }\n\n  get required(): boolean {\n    return (\n      this._required || (this.radioGroup && this.radioGroup.required) || false\n    );\n  }\n\n  @Output() buttonChanged = new EventEmitter<RdsRadioChangedEvent<T>>();\n\n  @HostListener('focus')\n  onFocus(): void {\n    this._inputElement.nativeElement.focus();\n  }\n\n  get isErrorMessageVisible(): boolean {\n    return this.errorState;\n  }\n\n  private readonly removeUniqueSelectionListener: () => void = noop;\n\n  constructor() {\n    this.removeUniqueSelectionListener = this.radioDispatcher.listen(\n      (id: string, name: string) => {\n        if (id !== this.id && name === this.name) {\n          this.checked = false;\n        }\n      },\n    );\n  }\n\n  focus(options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    if (this.radioGroup) {\n      this.checked = this.radioGroup.value === this._value;\n      this.name = this.radioGroup.name;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .subscribe((focusOrigin) => {\n        if (!focusOrigin && this.radioGroup) {\n          this.radioGroup.touch();\n        }\n      });\n\n    this.subscriptAnimationState = 'enter'; // Avoid animations on load.\n    this.cdr.detectChanges();\n    // Run change detection if the value changes.\n\n    if (this.radioGroup) {\n      if (this.radioGroup.control && this.radioGroup.control.valueChanges) {\n        this.radioGroup.control.valueChanges\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe(() => {\n            this.radioGroup?.control?.markAsDirty();\n            this.radioGroup?.control?.markAsTouched();\n            this.cdr.markForCheck();\n          });\n      }\n\n      const parent =\n        this.radioGroup.parentFormGroup || this.radioGroup.control.parent;\n\n      if (parent instanceof FormGroupDirective) {\n        parent.ngSubmit\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe(() => {\n            this.cdr.markForCheck();\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.removeUniqueSelectionListener();\n  }\n\n  private emitChangeEvent(): void {\n    this.buttonChanged.emit(new RdsRadioChangedEvent(this, this._value));\n  }\n\n  onInputClick(event: Event): void {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `radio-button` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n\n  onInputChange(event: Event): void {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `buttonChange` output.\n    event.stopPropagation();\n\n    const groupValueChanged =\n      this.radioGroup && this.value !== this.radioGroup.value;\n    this.checked = true;\n    this.emitChangeEvent();\n\n    if (this.radioGroup) {\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\n\n      if (groupValueChanged) {\n        this.radioGroup.emitChangeEvent();\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsRadioButtonComponent } from './radio-button.component';\nimport { RdsRadioGroupDirective } from './radio-button-group.directive';\nimport { RdsHelperTextModule } from '../form-field/helper-text.module';\n\n@NgModule({\n  imports: [CommonModule, RdsHelperTextModule],\n  declarations: [RdsRadioButtonComponent, RdsRadioGroupDirective],\n  exports: [RdsRadioButtonComponent, RdsRadioGroupDirective],\n})\nexport class RdsRadioButtonModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class RdsSidenavService {\n  private _isMinimal = new BehaviorSubject(false);\n  isMinimal$ = this._isMinimal.asObservable();\n\n  set isMinimal(v: boolean) {\n    this._isMinimal.next(v);\n  }\n\n  get isMinimal(): boolean {\n    return this._isMinimal.getValue();\n  }\n\n  toggleIsMinimal(): void {\n    this.isMinimal = !this.isMinimal;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { EventEmitter, InjectionToken, TemplateRef } from '@angular/core';\nimport { Direction } from '@angular/cdk/bidi';\nimport { FocusOrigin } from '@angular/cdk/a11y';\nimport { RdsMenuPositionX, RdsMenuPositionY } from '../menu';\n\nexport type RdsSidenavMenuCloseReason = void | 'click' | 'keydown' | 'tab';\n\nexport const RDS_SIDENAV_MENU_PANEL = new InjectionToken<RdsSidenavMenuPanel>(\n  'RDS_SIDENAV_MENU_PANEL',\n);\n\nexport interface RdsSidenavMenuPanel {\n  isOpened: boolean;\n  title: string;\n  hovered: Observable<boolean>;\n  expandedState: string;\n  templateRef: TemplateRef<unknown>;\n  readonly closed: EventEmitter<RdsSidenavMenuCloseReason>;\n  parentMenu?: RdsSidenavMenuPanel | undefined;\n  direction?: Direction;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  resetActiveItem: () => void;\n  setPositionClasses?: (x: RdsMenuPositionX, y: RdsMenuPositionY) => void;\n  backdropClass?: string;\n  overlayPanelClass?: string | string[];\n  readonly panelId?: string;\n  openOnInit: boolean;\n}\n\nexport interface NativeElement {\n  readonly nativeElement: HTMLElement;\n}\n","/*\n * Need for selecting both RdsSidenavMenuitem and RdsSidenavMenuTrigger\n * in a single @ContentChildren query\n * */\nexport class SidenavItem {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { RdsSidenavService } from '../sidenav.service';\nimport { filter } from 'rxjs/operators';\nimport { rdsExpansionAnimations } from '../../accordion';\nimport { NativeElement, RDS_SIDENAV_MENU_PANEL } from '../sidenav.types';\nimport { SidenavItem } from '../sidenav-item';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector:\n    'rds-sidenav-menuitem, [rds-sidenav-menuitem], [rdsSidenavMenuitem]',\n  exportAs: 'rdsSidenavMenuitem',\n  templateUrl: './sidenav-menuitem.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [rdsExpansionAnimations.bodyExpansion],\n  providers: [\n    { provide: SidenavItem, useExisting: RdsSidenavMenuitemComponent },\n  ],\n})\nexport class RdsSidenavMenuitemComponent\n  implements OnInit, AfterViewInit, OnDestroy, FocusableOption, NativeElement\n{\n  public readonly _parentMenu = inject(RDS_SIDENAV_MENU_PANEL, {\n    optional: true,\n  });\n  private readonly sidenavService = inject(RdsSidenavService);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  @HostBinding('attr.role')\n  role = 'menuitem';\n\n  readonly _hovered = new Subject<RdsSidenavMenuitemComponent>();\n  readonly _focused = new Subject<RdsSidenavMenuitemComponent>();\n  readonly nativeElement = this.elementRef.nativeElement;\n\n  @HostBinding('class.rds-sidenav-minimal') isMinimal: boolean;\n  @HostBinding('class.rds-sidenav-menuitem') rdsMenuItemClass = true;\n  @HostBinding('class.rds-focus-indicator') rdsFocusIndicatorClass = true;\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this.focusMonitor.focusVia(this.nativeElement, origin, options);\n    } else {\n      this.nativeElement.focus(options);\n    }\n  }\n\n  ngOnInit(): void {\n    this.sidenavService.isMinimal$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((v) => (this.isMinimal = v));\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, false)\n      .pipe(\n        filter((v) => !!v),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => this._focused.next(this));\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n\n    this._hovered.complete();\n    this._focused.complete();\n  }\n\n  @HostListener('mouseenter')\n  _handleMouseEnter(): void {\n    this._hovered.next(this);\n  }\n\n  getLabel(): string {\n    const clone = this.elementRef.nativeElement.cloneNode(true) as HTMLElement;\n    const icons = clone.querySelectorAll('rds-icon');\n\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n\n    return clone.textContent?.trim() || '';\n  }\n}\n","<ng-content select=\"rds-icon\" />\n<div class=\"sr-only-when-minimal-and-first-level\">\n  <ng-content />\n</div>\n<div class=\"rds-sidenav-badge-container\">\n  <ng-content select=\"rds-badge\" />\n</div>\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const EXPANSION_PANEL_ANIMATION_TIMING = `350ms ease`;\n\n// even thought this might look like a copy of expansionAnimations,\n// the visibility manipulation had to be moved to css for autofocusing to work\n\nexport const rdsSidenavExpansionAnimations: {\n  readonly indicatorRotate: AnimationTriggerMetadata;\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  indicatorRotate: trigger('indicatorRotate', [\n    state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n    state('expanded', style({ transform: 'rotate(180deg)' })),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ),\n  ]),\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({ height: '0px' })),\n    state('expanded', style({ height: '*' })),\n    transition(\n      'expanded <=> collapsed, void => collapsed',\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    ),\n  ]),\n};\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  inject,\n  OnDestroy,\n} from '@angular/core';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { NativeElement } from '../sidenav.types';\nimport { filter } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'a[rds-sidenav-menu-header], a[rdsSidenavMenuHeader]',\n  templateUrl: './sidenav-menu-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsSidenavMenuHeaderComponent\n  implements OnDestroy, FocusableOption, NativeElement\n{\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n  readonly disabled = false;\n  readonly _focused = this.focusMonitor.monitor(this.nativeElement, false).pipe(\n    filter((v) => !!v),\n    takeUntilDestroyed(),\n  );\n\n  @HostBinding('class')\n  readonly classes = 'rds-sidenav-menu-header';\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.nativeElement);\n  }\n\n  focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this.focusMonitor.focusVia(this.nativeElement, origin, options);\n    } else {\n      this.nativeElement.focus(options);\n    }\n  }\n\n  getLabel(): string {\n    const clone = this.nativeElement.cloneNode(true) as HTMLElement;\n    const icons = clone.querySelectorAll('rds-icon');\n\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n\n    return clone.textContent?.trim() || '';\n  }\n}\n","<ng-content /> <rds-icon icon=\"arrow_right\" />\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsSidenavMenuitemComponent } from '../sidenav-menuitem/sidenav-menuitem.component';\nimport { FocusKeyManager, FocusOrigin } from '@angular/cdk/a11y';\nimport {\n  RDS_SIDENAV_MENU_PANEL,\n  RdsSidenavMenuCloseReason,\n  RdsSidenavMenuPanel,\n} from '../sidenav.types';\nimport { merge, Subject, Subscription } from 'rxjs';\nimport { AnimationEvent } from '@angular/animations';\nimport { Direction } from '@angular/cdk/bidi';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport {\n  DOWN_ARROW,\n  ESCAPE,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport { RdsSidenavService } from '../sidenav.service';\nimport { rdsSidenavExpansionAnimations } from './sidenav-menu-expansion.animation';\nimport { RdsMenuPositionX, RdsMenuPositionY } from '../../menu';\nimport { RdsSidenavMenuHeaderComponent } from '../sidenav-menu-header/sidenav-menu-header.component';\n\nlet menuPanelUid = 0;\n\n@Component({\n  selector: 'rds-sidenav-menu',\n  exportAs: 'rdsSidenavMenu',\n  templateUrl: './sidenav-menu.component.html',\n  styleUrls: ['sidenav-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    { provide: RDS_SIDENAV_MENU_PANEL, useExisting: RdsSidenavMenuComponent },\n  ],\n  animations: [rdsSidenavExpansionAnimations.bodyExpansion],\n})\nexport class RdsSidenavMenuComponent\n  implements OnInit, AfterContentInit, OnDestroy, RdsSidenavMenuPanel\n{\n  private readonly sidenav = inject(RdsSidenavService);\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  private _keyManager: FocusKeyManager<\n    RdsSidenavMenuitemComponent | RdsSidenavMenuHeaderComponent\n  >;\n\n  _hovered = new Subject<boolean>();\n  hovered = this._hovered.asObservable();\n\n  @ContentChild(RdsSidenavMenuHeaderComponent)\n  menuHeader?: RdsSidenavMenuHeaderComponent;\n\n  @ContentChildren(RdsSidenavMenuitemComponent, { descendants: true })\n  _allItems: QueryList<RdsSidenavMenuitemComponent>;\n\n  @HostBinding('attr.aria-label') attrAriaLabel = null;\n  @HostBinding('attr.aria-labelledby') attrAriaLabelledBy = null;\n  @HostBinding('attr.aria-describedby') attrAriaDescribedBy = null;\n\n  private _directDescendantItems = new QueryList<\n    RdsSidenavMenuitemComponent | RdsSidenavMenuHeaderComponent\n  >();\n\n  private _tabSubscription = Subscription.EMPTY;\n\n  _classList: { [key: string]: boolean } = {};\n\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  readonly _animationDone = new Subject<AnimationEvent>();\n\n  _isAnimating: boolean;\n\n  parentMenu: RdsSidenavMenuPanel | undefined;\n\n  direction: Direction;\n\n  expandedState: 'expanded' | 'collapsed' = 'collapsed';\n\n  private _isOpened = false;\n  get isOpened(): boolean {\n    return this._isOpened;\n  }\n\n  set isOpened(value: boolean) {\n    if (this._isOpened !== value) {\n      this._isOpened = value;\n      this.cdr.markForCheck();\n    }\n  }\n\n  private _title: string;\n  set title(v: string) {\n    if (v !== this._title) {\n      this._title = v;\n      this.cdr.markForCheck();\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  overlayPanelClass: string | string[] = '';\n  backdropClass = 'cdk-overlay-transparent-backdrop';\n\n  @Input('aria-label') ariaLabel: string | null = null;\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n  @Input('aria-describedby') ariaDescribedby: string | null = null;\n\n  @Input({ transform: booleanAttribute }) openOnInit = false;\n\n  @ViewChild('panel') templateRef: TemplateRef<unknown>;\n\n  @Output() readonly closed = new EventEmitter<RdsSidenavMenuCloseReason>();\n\n  readonly panelId = `rds-menu-panel-${menuPanelUid++}`;\n  readonly isMinimal$ = this.sidenav.isMinimal$;\n\n  ngOnInit(): void {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit(): void {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() =>\n      this.closed.emit('tab'),\n    );\n\n    this._directDescendantItems.changes\n      .pipe(\n        startWith(this._directDescendantItems),\n        switchMap((items) =>\n          merge(\n            ...items.map(\n              (\n                item:\n                  | RdsSidenavMenuitemComponent\n                  | RdsSidenavMenuHeaderComponent,\n              ) => item._focused,\n            ),\n          ),\n        ),\n      )\n      .subscribe((focusedItem) =>\n        this._keyManager.updateActiveItem(\n          focusedItem as RdsSidenavMenuitemComponent,\n        ),\n      );\n  }\n\n  ngOnDestroy(): void {\n    this._directDescendantItems.destroy();\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    event.stopPropagation();\n\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n\n        break;\n      case LEFT_ARROW:\n        if (this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n      case RIGHT_ARROW:\n        if (this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    if (!this.sidenav.isMinimal) {\n      setTimeout(() => this._focusFirstItem(origin));\n\n      return;\n    }\n\n    this._focusFirstItem(origin);\n  }\n\n  private _focusFirstItem(origin: FocusOrigin): void {\n    const manager = this._keyManager;\n    manager.setFocusOrigin(origin).setFirstItemActive();\n\n    if (!manager.activeItem && this._directDescendantItems.length) {\n      let element =\n        this._directDescendantItems.first.nativeElement.parentElement;\n\n      while (element) {\n        if (element.getAttribute('role') === 'menu') {\n          element.focus();\n          break;\n        } else {\n          element = element.parentElement;\n        }\n      }\n    }\n  }\n\n  resetActiveItem(): void {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  setPositionClasses(\n    posX: RdsMenuPositionX = 'after',\n    posY: RdsMenuPositionY = 'below',\n  ): void {\n    const classes = this._classList;\n    classes['rds-menu-before'] = posX === 'before';\n    classes['rds-menu-after'] = posX === 'after';\n    classes['rds-menu-above'] = posY === 'above';\n    classes['rds-menu-below'] = posY === 'below';\n  }\n\n  _startAnimation(): void {\n    this._panelAnimationState = 'enter';\n    this.expandedState = 'expanded';\n  }\n\n  _resetAnimation(): void {\n    this._panelAnimationState = 'void';\n    this.expandedState = 'collapsed';\n  }\n\n  _onAnimationDone(event: AnimationEvent): void {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n\n  private _updateDirectDescendants(): void {\n    this._allItems.changes\n      .pipe(startWith(this._allItems))\n      .subscribe((items: QueryList<RdsSidenavMenuitemComponent>) => {\n        const results: (\n          | RdsSidenavMenuHeaderComponent\n          | RdsSidenavMenuitemComponent\n        )[] = items.filter((item) => item._parentMenu === this);\n\n        if (this.menuHeader) {\n          results.push(this.menuHeader);\n        }\n\n        this._directDescendantItems.reset(results);\n        this._directDescendantItems.notifyOnChanges();\n      });\n  }\n}\n","<ng-template #panel>\n  <div\n    class=\"rds-sidenav-menu-panel\"\n    [id]=\"panelId\"\n    [ngClass]=\"_classList\"\n    (click)=\"closed.emit('click')\"\n    (mouseenter)=\"_hovered.next(true)\"\n    (mouseleave)=\"_hovered.next(false)\"\n    tabindex=\"-1\"\n    role=\"menu\"\n    [attr.aria-label]=\"ariaLabel || null\"\n    [attr.aria-labelledby]=\"ariaLabelledby || null\"\n    [attr.aria-describedby]=\"ariaDescribedby || null\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n</ng-template>\n<ng-template #content>\n  <div class=\"rds-sidenav-menu-content\" (keydown)=\"_handleKeydown($event)\">\n    @if (menuHeader) {\n      <ng-content select=\".rds-sidenav-menu-header\" />\n    } @else {\n      <div class=\"rds-sidenav-menu-header\">\n        {{ title }}\n      </div>\n    }\n    <ng-content />\n  </div>\n</ng-template>\n@if ((isMinimal$ | async) === false) {\n  <div\n    class=\"rds-sidenav-expansion-body\"\n    [class.rds-sidenav-expansion-body-collapsed]=\"expandedState === 'collapsed'\"\n    role=\"menu\"\n    tabindex=\"-1\"\n    [@bodyExpansion]=\"expandedState\"\n    (@bodyExpansion.done)=\"_onAnimationDone($event)\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\" />\n  </div>\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { RdsSidenavMenuComponent } from '../sidenav-menu/sidenav-menu.component';\nimport { RdsSidenavService } from '../sidenav.service';\nimport { delay, filter, map, tap } from 'rxjs/operators';\nimport {\n  asapScheduler,\n  EMPTY,\n  fromEvent,\n  merge,\n  Observable,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport {\n  FocusableOption,\n  FocusMonitor,\n  FocusOrigin,\n  isFakeMousedownFromScreenReader,\n  isFakeTouchstartFromScreenReader,\n} from '@angular/cdk/a11y';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { rdsSidenavExpansionAnimations } from '../sidenav-menu/sidenav-menu-expansion.animation';\nimport { NativeElement, RdsSidenavMenuPanel } from '../sidenav.types';\nimport { throwRdsMenuMissingError } from '../../menu/menu-error';\nimport { isHoverSupported } from '../../utils';\nimport { SidenavItem } from '../sidenav-item';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\ndeclare const ngDevMode: boolean;\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n}) as AddEventListenerOptions;\n\n@Component({\n  selector:\n    'button[rds-sidenav-menu-trigger-for], button[rdsSidenavMenuTriggerFor]',\n  templateUrl: './sidenav-menu-trigger.component.html',\n  styleUrls: ['./sidenav-menu-trigger.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [rdsSidenavExpansionAnimations.indicatorRotate],\n  providers: [\n    { provide: SidenavItem, useExisting: RdsSidenavMenuTriggerComponent },\n  ],\n})\nexport class RdsSidenavMenuTriggerComponent\n  implements\n    AfterContentInit,\n    AfterViewInit,\n    OnDestroy,\n    FocusableOption,\n    NativeElement\n{\n  private readonly sidenavService = inject(RdsSidenavService);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly overlay = inject(Overlay);\n  private readonly element = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly viewContainerRef = inject(ViewContainerRef);\n  private readonly _dir = inject(Directionality, {\n    optional: true,\n  }) as Directionality;\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  @Output() readonly menuOpened = new EventEmitter<void>();\n  @Output() readonly menuClosed = new EventEmitter<void>();\n\n  @HostBinding('attr.role') role = 'menuitem';\n  @HostBinding('attr.aria-haspopup') _ariaHaspopup = true;\n  @HostBinding('class') class = 'rds-sidenav-menu-trigger';\n  @HostBinding('class.rds-sidenav-menu-hovered') isHovered = false;\n  _openedBy: Exclude<FocusOrigin, 'program' | null> | 'hover' | undefined =\n    undefined;\n\n  private _menu: RdsSidenavMenuPanel;\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen = false;\n  private _closingActionsSubscription = Subscription.EMPTY;\n  private _menuCloseSubscription = Subscription.EMPTY;\n  private readonly scrollStrategy: () => ScrollStrategy = () =>\n    this.overlay.scrollStrategies.reposition();\n\n  readonly _focused = new Subject<RdsSidenavMenuTriggerComponent>();\n  readonly isMinimal$ = this.sidenavService.isMinimal$;\n  readonly nativeElement = this.element.nativeElement;\n\n  private _handleTouchStart = (event: TouchEvent): void => {\n    if (!isFakeTouchstartFromScreenReader(event)) {\n      this._openedBy = 'touch';\n    }\n  };\n\n  @HostBinding('attr.aria-expanded')\n  get _ariaExpanded(): boolean | null {\n    return this.menuOpen || null;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get _ariaControl(): string | undefined | null {\n    return this.menuOpen ? this.menu.panelId : null;\n  }\n\n  @Input('rdsSidenavMenuTriggerFor')\n  get menu(): RdsSidenavMenuPanel {\n    return this._menu;\n  }\n\n  set menu(menu: RdsSidenavMenuPanel) {\n    if (menu === this._menu) {\n      return;\n    }\n\n    this._menu = menu as RdsSidenavMenuPanel;\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      this._menuCloseSubscription = menu.closed.subscribe(() => {\n        this._destroyMenu();\n      });\n    }\n  }\n\n  constructor() {\n    fromEvent(\n      this.element.nativeElement,\n      'touchstart',\n      passiveEventListenerOptions,\n    )\n      .pipe(takeUntilDestroyed())\n      .subscribe((e: Event) => this._handleTouchStart(e as TouchEvent));\n  }\n\n  ngAfterContentInit(): void {\n    this._checkMenu();\n\n    if (isHoverSupported()) {\n      this._handleHover();\n    }\n\n    this.menu.title = this.element.nativeElement.textContent ?? '';\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.element, false)\n      .pipe(\n        filter((v) => !!v),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => this._focused.next(this));\n\n    if (!this.sidenavService.isMinimal && this.menu?.openOnInit) {\n      // set hover to omit focusing first element\n      this._openedBy = 'hover';\n      this.openMenu();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    if (this.focusMonitor) {\n      this.focusMonitor.stopMonitoring(this.element);\n    }\n\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._focused.complete();\n  }\n\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  openMenu(withBackdrop?: boolean): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    if (this.sidenavService.isMinimal) {\n      const overlayRef = this._createOverlay();\n      const overlayConfig = overlayRef.getConfig();\n\n      this._setPosition(\n        overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy,\n      );\n      overlayConfig.hasBackdrop =\n        withBackdrop == undefined ? true : withBackdrop;\n\n      overlayRef.attach(this._getPortal());\n    }\n\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(\n      () => this.closeMenu(),\n    );\n    this._initMenu();\n\n    if (this.menu instanceof RdsSidenavMenuComponent) {\n      this.menu._startAnimation();\n    }\n  }\n\n  closeMenu(): void {\n    this.menu.closed.emit();\n    this.menu.isOpened = false;\n  }\n\n  focus(origin?: FocusOrigin | 'hover', options?: FocusOptions): void {\n    if (origin && origin === 'hover') {\n      return;\n    }\n\n    if (this.focusMonitor && origin) {\n      this.focusMonitor.focusVia(this.element, origin, options);\n    } else {\n      this.element.nativeElement.focus(options);\n    }\n\n    this._focused.next(this);\n  }\n\n  private _destroyMenu(): void {\n    if (!this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n\n    this._overlayRef?.detach();\n\n    // without setTimeout doesn't work for expandable menu\n    setTimeout(() => {\n      this.focus(this._openedBy);\n      this._openedBy = undefined;\n    });\n\n    if (menu instanceof RdsSidenavMenuComponent) {\n      menu._resetAnimation();\n    }\n\n    this._setIsMenuOpen(false);\n  }\n\n  private _initMenu(): void {\n    this.menu.parentMenu = undefined;\n    this.menu.direction = this.dir;\n\n    if (this._openedBy !== 'hover') {\n      this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n\n    this._setIsMenuOpen(true);\n  }\n\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this.menu.isOpened = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n  }\n\n  private _checkMenu(): void {\n    if (ngDevMode && !this.menu) {\n      throwRdsMenuMissingError();\n    }\n  }\n\n  private _createOverlay(): OverlayRef {\n    const config = this._getOverlayConfig();\n\n    if (\n      !this._overlayRef ||\n      this._overlayRef.getConfig().backdropClass !== config.backdropClass ||\n      this._overlayRef.getConfig().panelClass !== config.panelClass ||\n      this._overlayRef.getConfig().direction !== config.direction\n    ) {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n      }\n\n      this._subscribeToPositions(\n        config.positionStrategy as FlexibleConnectedPositionStrategy,\n      );\n      this._overlayRef = this.overlay.create(config);\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this.overlay\n        .position()\n        .flexibleConnectedTo(this.element)\n        .withFlexibleDimensions(false)\n        .withGrowAfterOpen()\n        .withTransformOriginOn('.rds-menu-panel'),\n      backdropClass:\n        this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: this.menu.overlayPanelClass,\n      scrollStrategy: this.scrollStrategy(),\n      direction: this._dir,\n    });\n  }\n\n  private _subscribeToPositions(\n    position: FlexibleConnectedPositionStrategy,\n  ): void {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe((change) => {\n        const posX =\n          change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY =\n          change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n        if (this.menu.setPositionClasses) {\n          this.menu.setPositionClasses(posX, posY);\n        }\n      });\n    }\n  }\n\n  private _setPosition(\n    positionStrategy: FlexibleConnectedPositionStrategy,\n  ): void {\n    const originX: HorizontalConnectionPos = 'start';\n    const [overlayY, overlayFallbackY]: VerticalConnectionPos[] = [\n      'top',\n      'bottom',\n    ];\n    const overlayX = originX;\n    const originY = overlayY === 'top' ? 'bottom' : 'top';\n    const originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    const offsetX = 61;\n    const offsetYWhenBelow = -115;\n    const offsetYWhenAbove = 65;\n\n    positionStrategy.withPositions([\n      {\n        originX,\n        originY,\n        overlayX,\n        overlayY,\n        offsetX,\n        offsetY: offsetYWhenBelow,\n      },\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetX,\n        offsetY: offsetYWhenAbove,\n      },\n    ]);\n  }\n\n  private _menuClosingActions(): Observable<void | MouseEvent> {\n    const backdrop = this._overlayRef\n      ? this._overlayRef.backdropClick()\n      : EMPTY;\n    const detachments = this._overlayRef\n      ? this._overlayRef.detachments()\n      : EMPTY;\n\n    return merge(backdrop, detachments);\n  }\n\n  @HostListener('mousedown', ['$event'])\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const openedByArrow =\n      (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n      (keyCode === LEFT_ARROW && this.dir === 'rtl');\n\n    if (keyCode === ENTER) {\n      // handled by _handleClick\n      return;\n    }\n\n    if (keyCode === SPACE || openedByArrow) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  _handleClick({ keyCode }: { keyCode?: number }): void {\n    if (keyCode === ENTER) {\n      this._openedBy = 'keyboard';\n    }\n\n    this.toggleMenu();\n  }\n\n  private hovered(): Observable<boolean> {\n    let isPanelHovered = false;\n\n    return merge(\n      fromEvent(this.element.nativeElement, 'mouseenter').pipe(map(() => true)),\n      this.menu.hovered.pipe(tap((v) => (isPanelHovered = v))),\n      fromEvent(this.element.nativeElement, 'mouseleave').pipe(\n        delay(0),\n        filter(() => !isPanelHovered),\n        map(() => false),\n      ),\n    );\n  }\n\n  private _handleHover(): void {\n    this.hovered()\n      .pipe(\n        filter(() => this.sidenavService.isMinimal),\n        delay(0, asapScheduler),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((isHovered) => {\n        this.isHovered = isHovered;\n\n        if (isHovered) {\n          this._openedBy = 'hover';\n          this.openMenu(false);\n        } else {\n          this.closeMenu();\n        }\n      });\n  }\n\n  private _getPortal(): TemplatePortal {\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(\n        this.menu.templateRef,\n        this.viewContainerRef,\n      );\n    }\n\n    return this._portal;\n  }\n}\n","<ng-content select=\"rds-icon\" />\n<div class=\"sr-only-when-minimal-and-first-level\">\n  <ng-content />\n</div>\n<div class=\"rds-sidenav-badge-container\">\n  <ng-content select=\"rds-badge\" />\n</div>\n@if ((isMinimal$ | async) === false) {\n  <rds-icon\n    [@indicatorRotate]=\"menu.expandedState\"\n    class=\"rds-sidenav-expansion-indicator\"\n    namespace=\"filled\"\n    icon=\"chevron_down\"\n  />\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'rds-sidenav-footer',\n  templateUrl: './sidenav-footer.component.html',\n  styleUrls: ['./sidenav-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsSidenavFooterComponent {}\n","<rds-divider />\n<ng-content />\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  RendererStyleFlags2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsSidenavService } from './sidenav.service';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { merge } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { DOWN_ARROW, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { RdsSidenavMenuTriggerComponent } from './sidenav-menuitem-trigger/sidenav-menu-trigger.component';\nimport { RdsSidenavMenuitemComponent } from './sidenav-menuitem/sidenav-menuitem.component';\nimport { SidenavItem } from './sidenav-item';\nimport { getScrollingAncestor } from '../utils';\nimport { NativeElement } from './sidenav.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-sidenav',\n  exportAs: 'rdsSidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [RdsSidenavService],\n})\nexport class RdsSidenavComponent\n  implements OnInit, AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly nativeElement: HTMLElement =\n    inject(ElementRef).nativeElement;\n  private readonly document: Document = inject(DOCUMENT);\n  private readonly renderer = inject(Renderer2);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly sidenavService = inject(RdsSidenavService);\n\n  private menubarHeight: number | null = null;\n  private scrollingAncestor: HTMLElement;\n\n  noScroll: boolean;\n\n  @Input({ transform: booleanAttribute }) isExpandable = true;\n\n  @Input()\n  set isMinimal(v: BooleanInput) {\n    this.sidenavService.isMinimal = booleanAttribute(v);\n  }\n\n  get isMinimal(): boolean {\n    return this.sidenavService.isMinimal;\n  }\n\n  @HostBinding('class.rds-sidenav-minimal')\n  get isInMinimalState(): boolean {\n    return this.isMinimal;\n  }\n\n  @HostBinding('class.rds-sidenav-full')\n  get isInFullState(): boolean {\n    return !this.isMinimal;\n  }\n\n  @Output()\n  isMinimalChange = new EventEmitter<boolean>();\n\n  @ContentChildren(SidenavItem, { descendants: true })\n  private children: QueryList<\n    RdsSidenavMenuTriggerComponent | RdsSidenavMenuitemComponent\n  >;\n\n  @ViewChild('footer', { read: ElementRef })\n  private footerRef?: ElementRef<HTMLElement>;\n\n  @ViewChild('nav', { read: ElementRef })\n  private navRef: ElementRef<HTMLElement>;\n\n  private directDescendantItems = new QueryList<\n    RdsSidenavMenuTriggerComponent | RdsSidenavMenuitemComponent\n  >();\n\n  private keyManager: FocusKeyManager<\n    RdsSidenavMenuTriggerComponent | RdsSidenavMenuitemComponent\n  >;\n\n  ngOnInit(): void {\n    this.sidenavService.isMinimal$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((isMinimal) => this.onMinimalStateChange(isMinimal));\n  }\n\n  ngAfterContentInit(): void {\n    this.onContentChanged();\n    this.updateDirectDescendants();\n    this.keyManager = new FocusKeyManager(this.directDescendantItems)\n      .withWrap()\n      .withHomeAndEnd();\n\n    this.directDescendantItems.changes\n      .pipe(\n        startWith(this.directDescendantItems),\n        switchMap((menus) =>\n          merge(\n            ...menus.map(\n              (\n                menu:\n                  | RdsSidenavMenuTriggerComponent\n                  | RdsSidenavMenuitemComponent,\n              ) => menu._focused,\n            ),\n          ),\n        ),\n      )\n      .subscribe((focusedMenu) => {\n        this.keyManager.updateActiveItem(\n          focusedMenu as\n            | RdsSidenavMenuTriggerComponent\n            | RdsSidenavMenuitemComponent,\n        );\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.scrollingAncestor =\n      getScrollingAncestor(this.nativeElement) ?? this.document.body;\n\n    // update other layout work like @HostBindings and other components destruction is finished\n    setTimeout(() => {\n      this.updateSelfAppearance();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.directDescendantItems.destroy();\n  }\n\n  toggleIsMinimal(): void {\n    this.sidenavService.toggleIsMinimal();\n  }\n\n  onContentChanged(entries?: ResizeObserverEntry[]): void {\n    this.scrollingAncestor =\n      getScrollingAncestor(this.nativeElement) ?? this.document.body;\n\n    const newHeight = this.getHeight(entries);\n\n    if (newHeight === null || newHeight !== this.menubarHeight) {\n      this.menubarHeight = newHeight;\n      this.noScroll = this.calculateNoScroll();\n      this.cdr.detectChanges();\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const manager = this.keyManager;\n    const delta = event.shiftKey ? -1 : 1;\n    const activeItemIndex = manager.activeItemIndex ?? -1;\n\n    switch (keyCode) {\n      case TAB:\n        manager.setFocusOrigin('keyboard');\n        manager.updateActiveItem(activeItemIndex + delta);\n\n        if (!event.shiftKey) {\n          this.scrollIfNeeded(manager.activeItem as NativeElement | null);\n        }\n\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  private scrollIfNeeded(activeItem: NativeElement | null): void {\n    if (!activeItem || !this.footerRef) {\n      return;\n    }\n\n    const elY = activeItem.nativeElement.offsetTop;\n    const elHeight = activeItem.nativeElement.offsetHeight;\n    const paddingTop = 20;\n\n    if (elY + elHeight >= this.footerRef.nativeElement.offsetTop) {\n      const scroller = this.isMinimal\n        ? this.scrollingAncestor\n        : this.navRef.nativeElement;\n\n      scroller.scrollTo(0, elY - paddingTop);\n    }\n  }\n\n  private getHeight(entries?: ResizeObserverEntry[]): number | null {\n    if (!entries || !entries[0]) {\n      return null;\n    }\n\n    return entries[0].contentRect.height;\n  }\n\n  private onMinimalStateChange(isMinimal: boolean): void {\n    this.updateSelfAppearance();\n    this.isMinimalChange.emit(isMinimal);\n  }\n\n  private updateSelfAppearance(): void {\n    const { top } = this.nativeElement.getBoundingClientRect();\n\n    this.renderer.setStyle(\n      this.nativeElement,\n      '--rds-sidenav-offset-top',\n      `${top}px`,\n      RendererStyleFlags2.DashCase,\n    );\n  }\n\n  private calculateNoScroll(): boolean {\n    if (!this.nativeElement.firstElementChild) {\n      return false;\n    }\n\n    return (\n      this.scrollingAncestor.offsetHeight >=\n      this.nativeElement.firstElementChild.scrollHeight\n    );\n  }\n\n  private updateDirectDescendants(): void {\n    this.children.changes\n      .pipe(startWith(this.children))\n      .subscribe(\n        (\n          items: QueryList<\n            RdsSidenavMenuTriggerComponent | RdsSidenavMenuitemComponent\n          >,\n        ) => {\n          this.directDescendantItems.reset(\n            items.filter(\n              (item) =>\n                item instanceof RdsSidenavMenuTriggerComponent ||\n                item._parentMenu == undefined,\n            ),\n          );\n          this.directDescendantItems.notifyOnChanges();\n        },\n      );\n  }\n}\n","<nav #nav>\n  <div\n    role=\"menubar\"\n    (rdsObserveResize)=\"onContentChanged($event)\"\n    (keydown)=\"handleKeydown($event)\"\n  >\n    <ng-content />\n  </div>\n  @if (isExpandable) {\n    <rds-sidenav-footer #footer [class.rds-sidenav-footer-no-scroll]=\"noScroll\">\n      <button\n        class=\"expand-toggle\"\n        title=\"expand toggle\"\n        rds-icon-button\n        size=\"m\"\n        (click)=\"toggleIsMinimal()\"\n      >\n        <rds-icon icon=\"double_chevron_right\" />\n      </button>\n    </rds-sidenav-footer>\n  }\n</nav>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nlet groupCounter = 0;\n\n@Component({\n  selector: 'rds-sidenav-group',\n  templateUrl: './sidenav-group.component.html',\n  styleUrls: ['sidenav-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsSidenavGroupComponent {\n  readonly id = `rds-sidenav-group-header-${groupCounter++}`;\n}\n","<section [attr.aria-labelledby]=\"id\">\n  <header [id]=\"id\" class=\"sr-only-when-minimal\">\n    <ng-content select=\"rds-sidenav-group-title\" />\n  </header>\n  <ng-content />\n</section>\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector:\n    'rds-sidenav-group-title, [rds-sidenav-group-title], [rdsSidenavGroupTitle]',\n  exportAs: 'rdsSidenavGroupTitle',\n})\nexport class RdsSidenavGroupTitleDirective {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsSidenavComponent } from './sidenav.component';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\nimport { RdsSidenavFooterComponent } from './sidenav-footer/sidenav-footer.component';\nimport { RdsSidenavMenuitemComponent } from './sidenav-menuitem/sidenav-menuitem.component';\nimport { RdsSidenavMenuComponent } from './sidenav-menu/sidenav-menu.component';\nimport { RdsSidenavMenuTriggerComponent } from './sidenav-menuitem-trigger/sidenav-menu-trigger.component';\nimport { RdsSidenavGroupComponent } from './sidenav-group/sidenav-group.component';\nimport { RdsSidenavGroupTitleDirective } from './sidenav-group/sidenav-group-title.directive';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { RdsDividerModule } from '../divider';\nimport { RdsObserveResizeDirective } from '../utils';\nimport { RdsSidenavMenuHeaderComponent } from './sidenav-menu-header/sidenav-menu-header.component';\n\nconst PUBLIC_SIDENAV_ELEMENTS = [\n  RdsSidenavComponent,\n  RdsSidenavMenuComponent,\n  RdsSidenavMenuTriggerComponent,\n  RdsSidenavGroupComponent,\n  RdsSidenavGroupTitleDirective,\n  RdsSidenavMenuitemComponent,\n  RdsSidenavMenuHeaderComponent,\n];\n\n@NgModule({\n  exports: [...PUBLIC_SIDENAV_ELEMENTS],\n  declarations: [...PUBLIC_SIDENAV_ELEMENTS, RdsSidenavFooterComponent],\n  imports: [\n    CommonModule,\n    RdsIconComponent,\n    RdsButtonModule,\n    OverlayModule,\n    RdsDividerModule,\n    RdsObserveResizeDirective,\n  ],\n})\nexport class RdsSidenavModule {}\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { NumberInput } from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  hasModifierKey,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  Attribute,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  numberAttribute,\n  OnDestroy,\n  Output,\n  Provider,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { noop, timer } from 'rxjs';\nimport { Point } from '@angular/cdk/drag-drop';\nimport { delay, tap } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n\nconst MIN_AUTO_TICK_SEPARATION = 30;\nconst DISABLED_THUMB_GAP = 7;\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\nexport const RDS_SLIDER_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RdsSliderComponent),\n  multi: true,\n};\n\nexport class RdsSliderChange {\n  source: RdsSliderComponent;\n  value: number | null;\n}\n\nconst ANIMATION_TIME = 400;\n\n@Component({\n  selector: 'rds-slider',\n  exportAs: 'rdsSlider',\n  providers: [RDS_SLIDER_VALUE_ACCESSOR],\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsSliderComponent\n  implements ControlValueAccessor, OnDestroy, AfterViewInit\n{\n  private readonly elementRef = inject(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly dir = inject(Directionality, { optional: true });\n  private readonly ngZone = inject(NgZone);\n  private readonly document = inject(DOCUMENT);\n  private readonly animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true,\n  });\n\n  @HostBinding('class') class = 'rds-slider rds-focus-indicator';\n  @HostBinding('attr.role') role = 'slider';\n\n  @HostBinding('attr.aria-disabled')\n  @HostBinding('class.rds-slider-disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n\n  @HostBinding('tabIndex')\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  private _tabIndex = TAB_INDEX_DEFAULT;\n\n  @Input({ transform: booleanAttribute }) invert = false;\n\n  @HostBinding('attr.aria-valuemax')\n  @Input()\n  set max(v: NumberInput) {\n    this._max = numberAttribute(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n  }\n\n  get max(): number {\n    return this._max;\n  }\n\n  private _max = 100;\n\n  @HostBinding('attr.aria-valuemin')\n  @Input()\n  set min(v: NumberInput) {\n    this._min = numberAttribute(v, this._min);\n    this._percent = this._calculatePercentage(this._value);\n  }\n\n  get min(): number {\n    return this._min;\n  }\n\n  private _min = 0;\n\n  @Input()\n  set step(v: NumberInput) {\n    this._step = numberAttribute(v, this._step);\n    const step = this._step.toString().split('.').pop();\n\n    if (this._step % 1 !== 0 && step) {\n      this._roundToDecimal = step.length;\n    }\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  private _step = 1;\n\n  @HostBinding('class.rds-slider-thumb-label-showing')\n  @Input({ transform: booleanAttribute })\n  thumbLabel = false;\n\n  get tickInterval(): 'auto' | number {\n    return this._tickInterval;\n  }\n\n  @HostBinding('class.rds-slider-has-ticks')\n  @Input()\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = numberAttribute(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n\n  private _tickInterval: 'auto' | number = 0;\n\n  get value(): number {\n    if (this._value === null) {\n      this.value = this.min;\n    }\n\n    return this._value as number;\n  }\n\n  @HostBinding('attr.aria-valuenow')\n  @Input()\n  set value(v: NumberInput) {\n    if (v !== this._value) {\n      let value = numberAttribute(v, 0);\n\n      if (this._roundToDecimal && value !== this.min && value !== this.max) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      if (value !== this._value) {\n        this._value = value;\n        this._percent = this._calculatePercentage(this._value);\n        this.cdr.markForCheck();\n      }\n    }\n  }\n\n  private _value: number | null = null;\n\n  @HostBinding('attr.aria-valuetext')\n  get valueTextAttr(): string {\n    return this.valueText === null || this.valueText === undefined\n      ? String(this.displayValue)\n      : this.valueText;\n  }\n\n  @Input() displayWith: (value: number) => string | number;\n\n  @Input() valueText: string;\n\n  @HostBinding('attr.aria-orientation')\n  get ariaOrientationAttr(): string {\n    return this.vertical ? 'vertical' : 'horizontal';\n  }\n\n  @HostBinding('class.rds-slider-horizontal')\n  get rdsSliderHorizontal(): boolean {\n    return !this.vertical;\n  }\n\n  @HostBinding('class.rds-slider-vertical')\n  @Input({ transform: booleanAttribute })\n  vertical = false;\n\n  @HostBinding('class.rds-slider-axis-inverted')\n  get rdsSliderAxisInvertedClass(): boolean {\n    return this._shouldInvertAxis();\n  }\n\n  @HostBinding('class.rds-slider-invert-mouse-coords')\n  get rdsSliderInvertMouseCoords(): boolean {\n    return this._shouldInvertMouseCoords();\n  }\n\n  @HostBinding('class.rds-slider-hide-last-tick')\n  get hideLastTick(): boolean {\n    return (\n      this.disabled ||\n      (this._isMinValue() &&\n        this._getThumbGap() > 0 &&\n        this._shouldInvertAxis())\n    );\n  }\n\n  @HostBinding('class._rds-animation-noopable')\n  get noAnimation(): boolean {\n    return this.animationMode === 'NoopAnimations';\n  }\n\n  onTouched: () => void = noop;\n\n  get percent(): number {\n    return this._clamp(this._percent);\n  }\n\n  private _percent = 0;\n\n  @HostBinding('class.rds-slider-sliding')\n  _isSliding: 'keyboard' | 'pointer' | null = null;\n\n  _isActive = false;\n\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly change: EventEmitter<RdsSliderChange> =\n    new EventEmitter<RdsSliderChange>();\n\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() readonly input: EventEmitter<RdsSliderChange> =\n    new EventEmitter<RdsSliderChange>();\n\n  @Output() readonly valueChange: EventEmitter<number | null> =\n    new EventEmitter<number | null>();\n\n  private _tickIntervalPercent = 0;\n\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: number) => void = noop;\n\n  private _roundToDecimal: number;\n\n  private _valueOnSlideStart: number | null;\n\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\n\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n\n  private _touchId: number | undefined;\n\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      return this.displayWith(this.value);\n    }\n\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  focus(options?: FocusOptions): void {\n    this._focusHostElement(options);\n  }\n\n  blur(): void {\n    this._blurHostElement();\n  }\n\n  _shouldInvertAxis(): boolean {\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n  _isMinValue(): boolean {\n    return this.percent === 0;\n  }\n\n  _getThumbGap(): number {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n\n    if (this._isMinValue() && !this.thumbLabel) {\n      return this._isActive\n        ? MIN_VALUE_ACTIVE_THUMB_GAP\n        : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n\n    return 0;\n  }\n\n  _getTrackFillStyles(): Partial<CSSStyleDeclaration> {\n    const percent = this.percent;\n    const style: Partial<CSSStyleDeclaration> = {};\n\n    if (this.vertical) {\n      style.height = `${\n        (this._getSliderDimensions()?.height || 0) * percent\n      }px`;\n\n      if (this._shouldInvertMouseCoords()) {\n        style.bottom = '0';\n      } else {\n        style.top = '0';\n      }\n    } else {\n      style.width = `${(this._getSliderDimensions()?.width || 0) * percent}px`;\n\n      if (this._shouldInvertMouseCoords()) {\n        style.right = '0';\n      } else {\n        style.left = '0';\n      }\n    }\n\n    return {\n      ...style,\n      display: percent === 0 ? 'none' : '',\n    };\n  }\n\n  _getTicksContainerStyles(): Partial<CSSStyleDeclaration> {\n    const axis = this.vertical ? 'Y' : 'X';\n    const sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    const offset = (this._tickIntervalPercent / 2) * 100;\n\n    return {\n      transform: `translate${axis}(${sign}${offset}%)`,\n    };\n  }\n\n  _getTicksStyles(): Partial<CSSStyleDeclaration> {\n    const tickSize = this._tickIntervalPercent * 100;\n    const backgroundSize = this.vertical\n      ? `3px ${tickSize}%`\n      : `${tickSize}% 3px`;\n    const axis = this.vertical ? 'Y' : 'X';\n    const sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    const rotate =\n      !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    const styles: { [key: string]: string } = {\n      backgroundSize: backgroundSize,\n      transform: `translateZ(0) translate${axis}(${sign}${\n        tickSize / 2\n      }%)${rotate}`,\n    };\n\n    if (this._isMinValue() && this._getThumbGap()) {\n      const shouldInvertAxis = this._shouldInvertAxis();\n      let side: string;\n\n      if (this.vertical) {\n        side = shouldInvertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = shouldInvertAxis ? 'Right' : 'Left';\n      }\n\n      styles[`padding${side}`] = `${this._getThumbGap()}px`;\n    }\n\n    return styles;\n  }\n\n  _getThumbContainerStyles(): Partial<CSSStyleDeclaration> {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    const axis = this.vertical ? 'Y' : 'X';\n    const invertOffset =\n      this._getDirection() == 'rtl' && !this.vertical\n        ? !shouldInvertAxis\n        : shouldInvertAxis;\n    const offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n\n    return {\n      transform: `translate${axis}(-${offset}%)`,\n    };\n  }\n\n  _shouldInvertMouseCoords(): boolean {\n    const shouldInvertAxis = this._shouldInvertAxis();\n\n    return this._getDirection() == 'rtl' && !this.vertical\n      ? !shouldInvertAxis\n      : shouldInvertAxis;\n  }\n\n  private _getDirection(): Direction {\n    return this.dir && this.dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n\n    this.ngZone.runOutsideAngular(() => {\n      const element = this.elementRef.nativeElement;\n      element.addEventListener(\n        'mousedown',\n        this._pointerDown,\n        activeEventOptions,\n      );\n      element.addEventListener(\n        'touchstart',\n        this._pointerDown,\n        activeEventOptions,\n      );\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .subscribe((origin: FocusOrigin) => {\n        this._isActive = !!origin && origin !== 'keyboard';\n        this.cdr.detectChanges();\n      });\n\n    if (this.dir) {\n      this.dir.change\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => this.cdr.markForCheck());\n    }\n\n    timer(1)\n      .pipe(\n        tap(() => this.cdr.markForCheck()),\n        delay(ANIMATION_TIME - 1),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy(): void {\n    const element = this.elementRef.nativeElement;\n    element.removeEventListener(\n      'mousedown',\n      this._pointerDown,\n      activeEventOptions,\n    );\n    element.removeEventListener(\n      'touchstart',\n      this._pointerDown,\n      activeEventOptions,\n    );\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  @HostListener('mouseenter')\n  _onMouseenter(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  @HostListener('focus')\n  _onFocus(): void {\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  @HostListener('blur')\n  _onBlur(): void {\n    this.onTouched();\n  }\n\n  @HostListener('selectstart', ['$event'])\n  _onSelectStart($event: Event): void {\n    $event.preventDefault();\n  }\n\n  @HostListener('keydown', ['$event'])\n  _onKeydown(event: KeyboardEvent): void {\n    if (\n      this.disabled ||\n      hasModifierKey(event) ||\n      (this._isSliding && this._isSliding !== 'keyboard')\n    ) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = 'keyboard';\n    event.preventDefault();\n  }\n\n  @HostListener('keyup')\n  _onKeyup(): void {\n    if (this._isSliding === 'keyboard') {\n      this._isSliding = null;\n    }\n  }\n\n  private _pointerDown = (event: TouchEvent | MouseEvent): void => {\n    if (\n      this.disabled ||\n      this._isSliding ||\n      (!isTouchEvent(event) && event.button !== 0)\n    ) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this._touchId = isTouchEvent(event)\n        ? getTouchIdForSlider(event, this.elementRef.nativeElement)\n        : undefined;\n      const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n      if (pointerPosition) {\n        const oldValue = this.value;\n        this._isSliding = 'pointer';\n        this._lastPointerEvent = event;\n        event.preventDefault();\n        this._focusHostElement();\n        this._onMouseenter();\n        this._bindGlobalEvents(event);\n        this._focusHostElement();\n        this._updateValueFromPosition(pointerPosition);\n        this._valueOnSlideStart = oldValue;\n\n        if (oldValue != this.value) {\n          this._emitInputEvent();\n        }\n      }\n    });\n  };\n\n  private _pointerMove = (event: TouchEvent | MouseEvent): void => {\n    if (this._isSliding === 'pointer') {\n      const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n      if (pointerPosition) {\n        event.preventDefault();\n        const oldValue = this.value;\n        this._lastPointerEvent = event;\n        this._updateValueFromPosition(pointerPosition);\n\n        if (oldValue != this.value) {\n          this._emitInputEvent();\n        }\n      }\n    }\n  };\n\n  private _pointerUp = (event: TouchEvent | MouseEvent): void => {\n    if (this._isSliding === 'pointer') {\n      if (\n        !isTouchEvent(event) ||\n        typeof this._touchId !== 'number' ||\n        findMatchingTouch(event.changedTouches, this._touchId)\n      ) {\n        event.preventDefault();\n        this._removeGlobalEvents();\n        this._isSliding = null;\n        this._touchId = undefined;\n\n        if (this._valueOnSlideStart != this.value && !this.disabled) {\n          this._emitChangeEvent();\n        }\n\n        this._valueOnSlideStart = this._lastPointerEvent = null;\n      }\n    }\n  };\n\n  private _windowBlur = (): void => {\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  };\n\n  private _getWindow(): Window {\n    return this.document.defaultView || window;\n  }\n\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent): void {\n    const document = this.document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(\n      moveEventName,\n      this._pointerMove,\n      activeEventOptions,\n    );\n    document.addEventListener(\n      endEventName,\n      this._pointerUp,\n      activeEventOptions,\n    );\n\n    if (isTouch) {\n      document.addEventListener(\n        'touchcancel',\n        this._pointerUp,\n        activeEventOptions,\n      );\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  private _removeGlobalEvents(): void {\n    const document = this.document;\n    document.removeEventListener(\n      'mousemove',\n      this._pointerMove,\n      activeEventOptions,\n    );\n    document.removeEventListener(\n      'mouseup',\n      this._pointerUp,\n      activeEventOptions,\n    );\n    document.removeEventListener(\n      'touchmove',\n      this._pointerMove,\n      activeEventOptions,\n    );\n    document.removeEventListener(\n      'touchend',\n      this._pointerUp,\n      activeEventOptions,\n    );\n    document.removeEventListener(\n      'touchcancel',\n      this._pointerUp,\n      activeEventOptions,\n    );\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  private _increment(numSteps: number): void {\n    this.value = this._clamp(\n      (this.value || 0) + this.step * numSteps,\n      this.min,\n      this.max,\n    );\n  }\n\n  private _updateValueFromPosition(pos: { x: number; y: number }): void {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    const offset = this.vertical\n      ? this._sliderDimensions.top\n      : this._sliderDimensions.left;\n    const size = this.vertical\n      ? this._sliderDimensions.height\n      : this._sliderDimensions.width;\n    const posComponent = this.vertical ? pos.y : pos.x;\n\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n      const closestValue =\n        Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  private _emitChangeEvent(): void {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  private _emitInputEvent(): void {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  private _updateTickIntervalPercent(): void {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      const trackSize = this.vertical\n        ? this._sliderDimensions.height\n        : this._sliderDimensions.width;\n      const pixelsPerStep = (trackSize * this.step) / (this.max - this.min);\n      const stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      const pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent =\n        (this.tickInterval * this.step) / (this.max - this.min);\n    }\n  }\n\n  private _createChangeEvent(value = this.value): RdsSliderChange {\n    const event = new RdsSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  private _calculatePercentage(value: number | null): number {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  private _calculateValue(percentage: number): number {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  private _clamp(value: number, min = 0, max = 1): number {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  private _getSliderDimensions(): ClientRect {\n    return this._sliderWrapper\n      ? this._sliderWrapper.nativeElement.getBoundingClientRect()\n      : null;\n  }\n\n  private _focusHostElement(options?: FocusOptions): void {\n    this.elementRef.nativeElement.focus(options);\n  }\n\n  private _blurHostElement(): void {\n    this.elementRef.nativeElement.blur();\n  }\n\n  writeValue(value: number): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.disabled !== isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n}\n\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  return event.type[0] === 't';\n}\n\nfunction getPointerPositionOnPage(\n  event: MouseEvent | TouchEvent,\n  id: number | undefined,\n): Point | undefined {\n  let point: { clientX: number; clientY: number } | undefined;\n\n  if (isTouchEvent(event)) {\n    if (typeof id === 'number') {\n      point =\n        findMatchingTouch(event.touches, id) ||\n        findMatchingTouch(event.changedTouches, id);\n    } else {\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n\n  return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n\nfunction findMatchingTouch(touches: TouchList, id: number): Touch | undefined {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n\n  return undefined;\n}\n\nfunction getTouchIdForSlider(\n  event: TouchEvent,\n  sliderHost: HTMLElement,\n): number | undefined {\n  for (let i = 0; i < event.touches.length; i++) {\n    const target = event.touches[i].target as HTMLElement;\n\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n\n  return undefined;\n}\n","<div class=\"rds-slider-wrapper\" #sliderWrapper>\n  <div class=\"rds-slider-track-wrapper\">\n    <div class=\"rds-slider-track-background\"></div>\n    <div class=\"rds-slider-track-fill\" [ngStyle]=\"_getTrackFillStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-ticks-container\"\n    [ngStyle]=\"_getTicksContainerStyles()\"\n  >\n    <div class=\"rds-slider-ticks\" [ngStyle]=\"_getTicksStyles()\"></div>\n  </div>\n  <div\n    class=\"rds-slider-thumb-container\"\n    [ngStyle]=\"_getThumbContainerStyles()\"\n  >\n    <div class=\"rds-slider-focus-ring\"></div>\n    <div class=\"rds-slider-thumb\">\n      <div class=\"rds-slider-thumb-hover\"></div>\n    </div>\n    <div class=\"rds-slider-thumb-label\">\n      <span class=\"rds-slider-thumb-label-text\">{{ displayValue }}</span>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsSliderComponent } from './slider.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [RdsSliderComponent],\n  declarations: [RdsSliderComponent],\n})\nexport class RdsSliderModule {}\n","import { Directive } from '@angular/core';\nimport { CdkStepLabel } from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[rdsStepLabel],[rds-step-label]',\n})\nexport class RdsStepLabelDirective extends CdkStepLabel {}\n","import { Directive, inject, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[rdsStepContent],ng-template[rds-step-content]',\n})\nexport class RdsStepContentDirective {\n  public readonly _template = inject(TemplateRef);\n}\n","import {\n  CdkStepHeader,\n  StepperOrientation,\n  StepState,\n} from '@angular/cdk/stepper';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { RdsStepLabelDirective } from './step-label.directive';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { BreakpointUtil } from '../utils';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-step-header',\n  template: `\n    <div\n      class=\"rds-step-icon-state-{{ state }} rds-step-icon\"\n      [class.rds-step-icon-selected]=\"selected\"\n      [class.rds-step-icon__hovered]=\"_animationState === 'hovered'\"\n    >\n      <div\n        class=\"rds-step-icon-focus-element\"\n        [@stepHover]=\"_animationState\"\n        (@stepHover.done)=\"onAnimationDone()\"\n      ></div>\n      <div class=\"rds-step-icon-content\">\n        <span>{{ index + 1 }}</span>\n      </div>\n    </div>\n    <div\n      class=\"rds-step-label\"\n      [class.rds-step-label-active]=\"active\"\n      [class.rds-step-label-selected]=\"selected\"\n      [class.rds-step-label-error]=\"state === 'error'\"\n    >\n      @if (isMobile()) {\n        <div class=\"rds-step-number\">\n          {{ getStepMobileNumber(index + 1) }}\n        </div>\n      }\n      @if (_templateLabel()) {\n        <div class=\"rds-step-text-label\">\n          <ng-container [ngTemplateOutlet]=\"_templateLabel()!.template\" />\n        </div>\n      }\n      @if (_stringLabel()) {\n        <div class=\"rds-step-text-label\">{{ label }}</div>\n      }\n    </div>\n  `,\n  styleUrls: ['step-header.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('stepHover', [\n      state(\n        'void',\n        style({ top: '0px', left: '0px', width: '32px', height: '32px' }),\n      ),\n      state(\n        'default',\n        style({ top: '0px', left: '0px', width: '32px', height: '32px' }),\n      ),\n      state(\n        'hovered',\n        style({ top: '-7px', left: '-7px', width: '46px', height: '46px' }),\n      ),\n      transition('default => hovered', animate('.3s ease-in')),\n      transition('hovered => default', animate('.2s ease-out')),\n      transition('* => void', animate('.1s ease-out')),\n      transition('void => hovered', animate('.15s ease-in')),\n    ]),\n  ],\n})\nexport class RdsStepHeaderComponent\n  extends CdkStepHeader\n  implements AfterViewInit, OnChanges, OnDestroy, OnInit\n{\n  override readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly ngZone = inject(NgZone);\n\n  @HostBinding('attr.role') hostRole = 'tab';\n\n  @HostBinding('class') get hostClass(): string[] {\n    const classes = ['rds-step-header'];\n\n    if (this.orientation === 'horizontal') {\n      classes.push('rds-step-header-horizontal');\n    } else if (this.orientation === 'vertical') {\n      classes.push('rds-step-header-vertical');\n\n      if (this.sideBySide) {\n        classes.push('rds-step-header-side-by-side');\n      }\n    }\n\n    if (this.state === 'edit') {\n      classes.push('rds-step-header-edit');\n    }\n\n    return [...classes];\n  }\n\n  @Input() orientation: StepperOrientation;\n\n  @Input({ transform: booleanAttribute }) sideBySide = false;\n\n  /** State of the given step. */\n  @Input() state: StepState | undefined;\n\n  /** Label of the given step. */\n  @Input() label: RdsStepLabelDirective | string = '';\n\n  /** Index of the given step. */\n  @Input() index = 0;\n\n  /** Whether the given step is selected. */\n  @HostBinding('class.rds-step-header-selected')\n  @Input({ transform: booleanAttribute })\n  selected = false;\n\n  /** Whether the given step label is active. */\n  @Input({ transform: booleanAttribute }) active = false;\n\n  /** Whether the given step is optional. */\n  @Input({ transform: booleanAttribute }) optional = false;\n\n  @Input() stepNumberMobileFunc: (stepNumber: number) => string;\n\n  _animationState = 'default';\n  private readonly _mouseevent$ = new BehaviorSubject<\n    'mouseenter' | 'mouseleave' | null\n  >(null);\n\n  constructor() {\n    super(inject(ElementRef));\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => this.ngZone.run(() => this.cdr.markForCheck()));\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this._elementRef, true);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['selected']) {\n      if (changes['selected'].currentValue) {\n        if (this._mouseevent$.getValue() !== 'mouseenter') {\n          this._animationState = 'hovered';\n        }\n      } else {\n        this._animationState = 'default';\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this._elementRef);\n    this._mouseevent$.complete();\n  }\n\n  @HostListener('click')\n  onClick(): void {\n    this._animationState = 'void';\n    this.cdr.detectChanges();\n  }\n\n  @HostListener('mouseenter')\n  onMouseenter(): void {\n    this._animationState = 'hovered';\n    this._mouseevent$.next('mouseenter');\n  }\n\n  @HostListener('mouseleave')\n  onMouseleave(): void {\n    if (!this.selected) {\n      this._animationState = 'default';\n    }\n\n    this._mouseevent$.next('mouseleave');\n  }\n\n  onAnimationDone(): void {\n    if (this._animationState === 'void') {\n      this._animationState = 'hovered';\n    }\n  }\n\n  override focus(origin?: FocusOrigin, options?: FocusOptions): void {\n    if (origin) {\n      this.focusMonitor.focusVia(this._elementRef, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n\n  getStepMobileNumber(stepNumber: number): string {\n    return typeof this.stepNumberMobileFunc === 'function'\n      ? this.stepNumberMobileFunc(stepNumber)\n      : this._getDefaultStepMobileNumber(stepNumber);\n  }\n  isMobile(): boolean {\n    return BreakpointUtil.isMobile();\n  }\n\n  _stringLabel(): string | null {\n    return this.label instanceof RdsStepLabelDirective ? null : this.label;\n  }\n\n  _templateLabel(): RdsStepLabelDirective | null {\n    return this.label instanceof RdsStepLabelDirective ? this.label : null;\n  }\n\n  private _getDefaultStepMobileNumber(stepNumber: number): string {\n    return `STEP ${stepNumber}`;\n  }\n}\n","import {\n  animate,\n  AnimationEvent,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CdkStepper, StepContentPositionState } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  inject,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsStepHeaderComponent } from './step-header.component';\nimport { RdsStepComponent } from './step.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\n@Component({\n  selector: 'rds-stepper, [rdsStepper], [rds-stepper]',\n  exportAs: 'rdsStepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['stepper.component.scss'],\n  animations: [\n    trigger('stepTransition', [\n      state(\n        'previous',\n        style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' }),\n      ),\n      state('current', style({ transform: 'none', visibility: 'inherit' })),\n      state(\n        'next',\n        style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' }),\n      ),\n      transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    ]),\n    trigger('stepTransitionVertical', [\n      state('previous', style({ height: '0px', visibility: 'hidden' })),\n      state('next', style({ height: '0px', visibility: 'hidden' })),\n      state('current', style({ height: '*', visibility: 'inherit' })),\n      transition(\n        '* <=> current',\n        animate('500ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n        {},\n      ),\n    ]),\n    trigger('stepTransitionSideBySide', [\n      state('previous', style({ opacity: '0' })),\n      state('current', style({ opacity: '100%' })),\n      state('next', style({ opacity: '0' })),\n      transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    ]),\n    trigger('stepProgress', [\n      state('void', style({ width: 0 })),\n      state('max', style({ width: '100%' })),\n      transition('* => *', animate('.3s linear')),\n    ]),\n    trigger('stepProgressVertical', [\n      state('void', style({ height: 0 })),\n      state('max', style({ height: '100%' })),\n      transition('* => *', animate('.3s linear')),\n    ]),\n    trigger('stepProgressSideBySide', [\n      state('void', style({ height: 0 })),\n      state('max', style({ height: '100%' })),\n      transition('* => *', animate('.3s linear')),\n    ]),\n  ],\n  providers: [{ provide: CdkStepper, useExisting: RdsStepperComponent }],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsStepperComponent\n  extends CdkStepper\n  implements AfterContentInit, AfterViewInit\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly viewportRuler = inject(ViewportRuler);\n\n  @HostBinding('class') get class(): string[] {\n    const classList = ['rds-stepper'];\n\n    if (this.orientation === 'horizontal') {\n      classList.push('rds-stepper-horizontal');\n    } else if (this.orientation === 'vertical') {\n      classList.push('rds-stepper-vertical');\n\n      if (this.sideBySide) {\n        classList.push('rds-stepper-side-by-side');\n      }\n    }\n\n    return classList;\n  }\n  @HostBinding('attr.role') readonly hostRole = 'tablist';\n\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(RdsStepHeaderComponent)\n  override _stepHeader: QueryList<RdsStepHeaderComponent>;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(forwardRef(() => RdsStepComponent), { descendants: true })\n  override _steps: QueryList<RdsStepComponent>;\n\n  @Input({ transform: booleanAttribute }) sideBySide = false;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone = new EventEmitter<void>();\n\n  override readonly steps = new QueryList<RdsStepComponent>(); // Steps that belong to current stepper, excluding from nested\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  readonly _animationDone = new Subject<AnimationEvent>(); //\n\n  _horizontalLineStyle: Partial<CSSStyleDeclaration> = {};\n\n  constructor() {\n    super(\n      inject(Directionality),\n      inject(ChangeDetectorRef),\n      inject(ElementRef),\n    );\n  }\n\n  override ngAfterContentInit(): void {\n    super.ngAfterContentInit();\n\n    // Mark the component for change detection whenever the content children query changes\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n\n    if (this._stepHeader.first) {\n      Promise.resolve().then(() => {\n        this.calculateHorizontalLineStyle();\n      });\n    }\n\n    this.viewportRuler\n      .change()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this.calculateHorizontalLineStyle());\n  }\n\n  private calculateHorizontalLineStyle(): void {\n    const headerPadding = 8;\n    const stepperGap = 32;\n    const offsetWidth =\n      this._stepHeader.first?._elementRef.nativeElement.offsetWidth || 0;\n    this._horizontalLineStyle.minWidth = `calc(100% + ${offsetWidth}px)`;\n    this._horizontalLineStyle.transform = `translateX(-${\n      offsetWidth - headerPadding - stepperGap\n    }px)`;\n    this.cdr.detectChanges();\n  }\n}\n","<ng-container>\n  <ng-container>\n    <div class=\"rds-stepper-header-container\">\n      @for (step of steps; track step; let i = $index; let isLast = $last) {\n        @if (orientation !== 'vertical') {\n          <ng-container\n            [ngTemplateOutlet]=\"stepTemplate\"\n            [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n          />\n        }\n        @if (orientation === 'vertical') {\n          <div class=\"rds-content-wrapper\">\n            <div\n              [ngClass]=\"{\n                'rds-stepper-vertical-line-wrapper': !isLast,\n                'rds-stepper-content-container-vertical-selected':\n                  selectedIndex === i\n              }\"\n            >\n              <div class=\"rds-stepper-vertical-line\">\n                @if (!sideBySide) {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressVertical]=\"selectedIndex > i ? 'max' : 'void'\"\n                  ></div>\n                } @else {\n                  <div\n                    class=\"rds-stepper-vertical-line-progress\"\n                    [@stepProgressSideBySide]=\"\n                      selectedIndex > i ? 'max' : 'void'\n                    \"\n                  ></div>\n                }\n              </div>\n            </div>\n            <div>\n              <ng-container\n                [ngTemplateOutlet]=\"stepTemplate\"\n                [ngTemplateOutletContext]=\"{ step: step, i: i }\"\n              />\n              @if (!sideBySide) {\n                <div\n                  class=\"rds-stepper-content-container rds-stepper-content-container-vertical\"\n                >\n                  <div\n                    role=\"tabpanel\"\n                    Class=\"rds-stepper-content\"\n                    [@stepTransitionVertical]=\"_getAnimationDirection(i)\"\n                    (@stepTransitionVertical.done)=\"_animationDone.next($event)\"\n                    [id]=\"_getStepContentId(i)\"\n                    [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n                    [attr.aria-expanded]=\"selectedIndex === i\"\n                  >\n                    <ng-container [ngTemplateOutlet]=\"step.content\" />\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        }\n        @if (!isLast && orientation === 'horizontal') {\n          <div class=\"rds-stepper-line-wrapper\">\n            <div\n              class=\"rds-stepper-line\"\n              [class.rds-stepper-line-selected-element-after]=\"\n                selectedIndex > i\n              \"\n              [ngStyle]=\"_horizontalLineStyle\"\n            >\n              <div\n                class=\"rds-stepper-line-progress\"\n                [@stepProgress]=\"selectedIndex > i ? 'max' : 'void'\"\n              ></div>\n            </div>\n          </div>\n        }\n      }\n    </div>\n\n    @if (orientation === 'vertical' && sideBySide) {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransitionSideBySide]=\"_getAnimationDirection(i)\"\n            (@stepTransitionSideBySide.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [ngStyle]=\"{\n              display: selectedIndex === i ? 'inherit' : 'none'\n            }\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n    @if (orientation === 'horizontal') {\n      <div\n        class=\"rds-stepper-content-container rds-stepper-content-container-horizontal\"\n      >\n        @for (step of steps; track step; let i = $index) {\n          <div\n            role=\"tabpanel\"\n            class=\"rds-stepper-content\"\n            [@stepTransition]=\"_getAnimationDirection(i)\"\n            (@stepTransition.done)=\"_animationDone.next($event)\"\n            [id]=\"_getStepContentId(i)\"\n            [attr.aria-labelledby]=\"_getStepLabelId(i)\"\n            [attr.aria-expanded]=\"selectedIndex === i\"\n          >\n            <ng-container [ngTemplateOutlet]=\"step.content\" />\n          </div>\n        }\n      </div>\n    }\n  </ng-container>\n</ng-container>\n\n<!-- Common step templating -->\n<ng-template let-step=\"step\" let-i=\"i\" #stepTemplate>\n  <rds-step-header\n    [class.rds-step-header-selected-element-after]=\"selectedIndex > i\"\n    (click)=\"step.select()\"\n    (keydown)=\"_onKeydown($event)\"\n    [tabIndex]=\"_getFocusIndex() === i ? 0 : -1\"\n    [id]=\"_getStepLabelId(i)\"\n    [attr.aria-posinset]=\"i + 1\"\n    [attr.aria-setsize]=\"steps.length\"\n    [attr.aria-controls]=\"_getStepContentId(i)\"\n    [attr.aria-selected]=\"selectedIndex === i\"\n    [attr.aria-label]=\"step.ariaLabel || null\"\n    [attr.aria-labelledby]=\"\n      !step.ariaLabel && step.ariaLabelledby ? step.ariaLabelledby : null\n    \"\n    [index]=\"i\"\n    [state]=\"_getIndicatorType(i, step.state)\"\n    [label]=\"step.stepLabel || step.label\"\n    [selected]=\"selectedIndex === i\"\n    [active]=\"step.completed || selectedIndex === i || !linear\"\n    [optional]=\"step.optional\"\n    [sideBySide]=\"sideBySide\"\n    [orientation]=\"orientation\"\n  />\n</ng-template>\n","import { CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  forwardRef,\n  inject,\n  OnDestroy,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { UntypedFormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RdsStepLabelDirective } from './step-label.directive';\nimport { RdsStepContentDirective } from './step-content.directive';\nimport { RdsStepperComponent } from './stepper.component';\nimport { ErrorStateMatcher } from '../core';\n\n@Component({\n  selector: 'rds-step',\n  template: ` <ng-template>\n    <ng-content />\n    <ng-template [cdkPortalOutlet]=\"_portal\" />\n  </ng-template>`,\n  providers: [\n    { provide: ErrorStateMatcher, useExisting: RdsStepComponent },\n    { provide: CdkStep, useExisting: RdsStepComponent },\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsStepComponent\n  extends CdkStep\n  implements AfterContentInit, OnDestroy\n{\n  private readonly errorStateMatcher = inject(ErrorStateMatcher, {\n    skipSelf: true,\n  });\n  private readonly viewContainerRef = inject(ViewContainerRef, {\n    skipSelf: true,\n  });\n\n  private _isSelected = Subscription.EMPTY;\n\n  @ContentChild(RdsStepLabelDirective)\n  override stepLabel: RdsStepLabelDirective;\n\n  @ContentChild(RdsStepContentDirective, { static: false })\n  _lazyContent: RdsStepContentDirective | undefined;\n\n  _portal: TemplatePortal | undefined;\n\n  constructor() {\n    super(\n      inject(forwardRef(() => RdsStepperComponent)),\n      inject(STEPPER_GLOBAL_OPTIONS, { optional: true }) || undefined,\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this._isSelected = this._stepper.steps.changes\n      .pipe(\n        switchMap(() => {\n          return this._stepper.selectionChange.pipe(\n            map((event) => event.selectedStep === this),\n            startWith(this._stepper.selected === this),\n          );\n        }),\n      )\n      .subscribe((isSelected) => {\n        if (isSelected && this._lazyContent && !this._portal) {\n          this._portal = new TemplatePortal(\n            this._lazyContent._template,\n            this.viewContainerRef,\n          );\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._isSelected.unsubscribe();\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(\n    control: UntypedFormControl | null,\n    form: FormGroupDirective | NgForm | null,\n  ): boolean {\n    const originalErrorState = this.errorStateMatcher.isErrorState(\n      control,\n      form,\n    );\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n","import { Directive, HostBinding } from '@angular/core';\nimport { CdkStepperNext } from '@angular/cdk/stepper';\n\n@Directive({\n  selector: 'button[rdsStepperNext],button[rds-stepper-next]',\n})\nexport class RdsStepperNextDirective extends CdkStepperNext {\n  @HostBinding('class') readonly hostClass = 'rds-stepper-next';\n}\n","import { Directive, HostBinding } from '@angular/core';\nimport { CdkStepperPrevious } from '@angular/cdk/stepper';\n\n@Directive({\n  selector: 'button[rdsStepperPrevious],button[rds-stepper-previous]',\n})\nexport class RdsStepperPreviousDirective extends CdkStepperPrevious {\n  @HostBinding('class') readonly hostClass = 'rds-stepper-previous';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { RdsStepperNextDirective } from './stepper-next.directive';\nimport { RdsStepperPreviousDirective } from './stepper-previous.directive';\nimport { RdsStepContentDirective } from './step-content.directive';\nimport { RdsStepHeaderComponent } from './step-header.component';\nimport { RdsStepLabelDirective } from './step-label.directive';\nimport { RdsStepComponent } from './step.component';\nimport { RdsStepperComponent } from './stepper.component';\nimport { PortalModule } from '@angular/cdk/portal';\n\n@NgModule({\n  imports: [CommonModule, PortalModule, CdkStepperModule],\n  declarations: [\n    RdsStepperNextDirective,\n    RdsStepperPreviousDirective,\n    RdsStepContentDirective,\n    RdsStepHeaderComponent,\n    RdsStepLabelDirective,\n    RdsStepComponent,\n    RdsStepperComponent,\n  ],\n  exports: [\n    RdsStepperNextDirective,\n    RdsStepperPreviousDirective,\n    RdsStepContentDirective,\n    RdsStepHeaderComponent,\n    RdsStepLabelDirective,\n    RdsStepComponent,\n    RdsStepperComponent,\n  ],\n})\nexport class RdsStepperModule {}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { NumberInput } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Attribute,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlContainer,\n  ControlValueAccessor,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgForm,\n} from '@angular/forms';\nimport { noop } from 'rxjs';\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  TAB_INDEX_DEFAULT,\n  TAB_INDEX_NOT_FOCUSABLE,\n  updateErrorState,\n} from '../utils';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextUniqueId = 0;\n\nexport class RdsSwitchChange {\n  constructor(\n    public readonly source: RdsSwitchComponent,\n    public readonly checked: boolean,\n  ) {}\n}\n\nexport const rdsSwitchAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('200ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ]),\n};\n\nexport type RdsSwitchPosition = 'before' | 'after';\n\nexport type RdsSwitchSize = 's' | 'm' | 'l';\n\n@Component({\n  selector: 'rds-switch',\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [rdsSwitchAnimations.transitionMessages],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RdsSwitchComponent),\n      multi: true,\n    },\n  ],\n})\nexport class RdsSwitchComponent\n  implements\n    ControlValueAccessor,\n    OnInit,\n    DoCheck,\n    AfterContentInit,\n    AfterViewInit,\n    OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly parentForm = inject(NgForm, { optional: true });\n  private readonly parentFormGroup = inject(FormGroupDirective, {\n    optional: true,\n  });\n  private readonly controlContainer = inject(ControlContainer, {\n    optional: true,\n    host: true,\n    skipSelf: true,\n  });\n\n  private _uniqueId = `rds-switch-${++nextUniqueId}`;\n  private _errorState = false;\n  private _tabIndex = TAB_INDEX_DEFAULT;\n  private _control: AbstractControl | null | undefined;\n  subscriptAnimationState: '' | 'enter' = '';\n\n  @HostBinding('class') readonly hostClass = 'rds-switch';\n\n  @Input() formControlName: string;\n\n  @Input() name: string;\n\n  @Input() size: RdsSwitchSize = 'l';\n\n  @Input()\n  @HostBinding('attr.id')\n  id: string = this._uniqueId;\n\n  @Input() labelPosition: RdsSwitchPosition = 'after';\n\n  @HostBinding('attr.aria-labelledby')\n  @Input('aria-label')\n  ariaLabel: string | null = null;\n\n  @HostBinding('attr.aria-label')\n  @Input('aria-labelledby')\n  ariaLabelledby: string | null = null;\n\n  @Input('aria-describedby') ariaDescribedby: string;\n\n  @Input({ transform: booleanAttribute }) required = false;\n\n  @HostBinding('class.rds-checked')\n  @Input({ transform: booleanAttribute })\n  checked = false;\n\n  @HostBinding('class.rds-switch--invalid')\n  get errorState(): boolean {\n    return this._errorState;\n  }\n\n  @HostBinding('class.rds-disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n\n  @Output() readonly buttonChanged: EventEmitter<RdsSwitchChange> =\n    new EventEmitter<RdsSwitchChange>();\n\n  @Output() readonly toggleChange: EventEmitter<void> =\n    new EventEmitter<void>();\n\n  get inputId(): string {\n    return `${this.id || this._uniqueId}-input`;\n  }\n\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  @HostListener('focus')\n  onFocus(): void {\n    this._inputElement.nativeElement.focus();\n  }\n\n  @HostBinding('tabIndex')\n  @Input()\n  set tabIndex(value: NumberInput) {\n    this._tabIndex = numberAttribute(value, TAB_INDEX_DEFAULT);\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this._tabIndex;\n  }\n\n  private _onChange: (value: boolean) => void = noop;\n  private _onTouched: () => void = noop;\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    this._tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n  }\n\n  ngOnInit(): void {\n    if (this.controlContainer) {\n      if (this.formControlName) {\n        this._control = this.controlContainer.control?.get(\n          this.formControlName,\n        );\n      } else {\n        // Missing FormControlName directive from host element of the component\n      }\n    } else {\n      // Can't find parent FormGroup directive\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this._control) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this._errorState = updateErrorState(\n        this.errorState,\n        this.parentFormGroup,\n        this.parentForm,\n        this._control,\n      );\n    }\n  }\n\n  ngAfterContentInit(): void {\n    const control = this._control;\n\n    if (control && control.valueChanges) {\n      control.valueChanges\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          control?.markAsDirty();\n          control?.markAsTouched();\n          this.cdr.markForCheck();\n        });\n    }\n\n    const parent = this.parentFormGroup || this.parentForm;\n\n    if (parent) {\n      parent.ngSubmit\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe(() => {\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .subscribe((focusOrigin) => {\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._inputElement.nativeElement.focus();\n        } else if (!focusOrigin) {\n          Promise.resolve().then(() => this._onTouched());\n        }\n      });\n\n    this.subscriptAnimationState = 'enter'; // Avoid animations on load.\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  get isErrorMessageVisible(): boolean {\n    return this.errorState;\n  }\n\n  _onChangeEvent(event: Event): void {\n    event.stopPropagation();\n    this.toggleChange.emit();\n\n    if (this.disabled) {\n      this._inputElement.nativeElement.checked = this.checked;\n\n      return;\n    }\n\n    if (this.checked !== this._inputElement.nativeElement.checked) {\n      this.checked = this._inputElement.nativeElement.checked;\n      this.cdr.markForCheck();\n    }\n\n    this._emitChangeEvent();\n  }\n\n  _onInputClick(event: Event): void {\n    event.stopPropagation();\n  }\n\n  writeValue(value: boolean): void {\n    if (this.checked !== value) {\n      this.checked = value;\n      this.cdr.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.disabled !== isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n  }\n\n  focus(options?: FocusOptions): void {\n    this._inputElement.nativeElement.focus(options);\n  }\n\n  toggle(): void {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n\n  _onLabelTextChange(): void {\n    this.cdr.detectChanges();\n  }\n\n  private _emitChangeEvent(): void {\n    this._onChange(this.checked);\n    this.buttonChanged.emit(new RdsSwitchChange(this, this.checked));\n  }\n}\n","<label\n  [attr.for]=\"inputId\"\n  class=\"rds-switch-label\"\n  [class.rds-switch-label-before]=\"labelPosition === 'before'\"\n>\n  <div\n    class=\"rds-switch-bar\"\n    [class.rds-switch-bar-no-side-margin]=\"\n      !labelContent.textContent || !labelContent.textContent.trim()\n    \"\n  >\n    <input\n      #input\n      class=\"rds-switch-input cdk-visually-hidden\"\n      type=\"checkbox\"\n      role=\"switch\"\n      [id]=\"inputId\"\n      [required]=\"required\"\n      [tabIndex]=\"tabIndex\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [attr.name]=\"name\"\n      [attr.aria-checked]=\"checked ? 'true' : 'false'\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-describedby]=\"ariaDescribedby\"\n      (change)=\"_onChangeEvent($event)\"\n      (click)=\"_onInputClick($event)\"\n    />\n    <div class=\"rds-switch-thumb-container\">\n      <div class=\"rds-switch-thumb\"></div>\n      <div class=\"rds-switch-ripple rds-focus-indicator\">\n        <div class=\"rds-ripple-element rds-switch-persistent-ripple\"></div>\n      </div>\n    </div>\n  </div>\n  <span\n    class=\"rds-switch-content\"\n    [ngClass]=\"'rds-switch-label-content--' + size\"\n    #labelContent\n    (cdkObserveContent)=\"_onLabelTextChange()\"\n  >\n    <ng-content />\n  </span>\n</label>\n<div class=\"rds-switch__subscript-wrapper\">\n  @switch (isErrorMessageVisible) {\n    @case (true) {\n      <div\n        class=\"rds-switch__subscript rds-switch__subscript--error\"\n        [@transitionMessages]=\"subscriptAnimationState\"\n      >\n        <ng-content select=\"rds-control-error\" />\n      </div>\n    }\n    @case (false) {\n      <div\n        class=\"rds-switch__subscript rds-switch__subscript--hint\"\n        [@transitionMessages]=\"subscriptAnimationState\"\n      >\n        <ng-content select=\"rds-control-hint\" />\n      </div>\n    }\n  }\n</div>\n","import { Directive, forwardRef, Provider } from '@angular/core';\nimport { CheckboxRequiredValidator, NG_VALIDATORS } from '@angular/forms';\n\nexport const RDS_SWITCH_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RdsSwitchRequiredValidatorDirective),\n  multi: true,\n};\n\n@Directive({\n  selector: `rds-switch[required][formControlName],\n              rds-switch[required][formControl], rds-switch[required][ngModel]`,\n  providers: [RDS_SWITCH_REQUIRED_VALIDATOR],\n})\nexport class RdsSwitchRequiredValidatorDirective extends CheckboxRequiredValidator {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RdsCheckboxModule } from '../checkbox';\nimport { RdsSwitchRequiredValidatorDirective } from './switch-required-validator';\nimport { RdsSwitchComponent } from './switch.component';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { RdsHelperTextModule } from '../form-field/helper-text.module';\n\n@NgModule({\n  imports: [\n    BidiModule,\n    FormsModule,\n    RdsCheckboxModule,\n    ObserversModule,\n    CommonModule,\n    RdsHelperTextModule,\n  ],\n  declarations: [RdsSwitchComponent, RdsSwitchRequiredValidatorDirective],\n  exports: [RdsSwitchComponent, RdsSwitchRequiredValidatorDirective],\n})\nexport class RdsSwitchModule {}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@angular/cdk/portal';\n\n@Directive({\n  selector: '[rds-tab-label]',\n})\nexport class RdsTabLabelDirective extends CdkPortal {}\n","import {\n  booleanAttribute,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsTabLabelDirective } from './tab-label.directive';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'rds-tab',\n  template: `\n    <div [hidden]=\"!active\" (cdkObserveContent)=\"stateChanges.next()\">\n      <ng-content />\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsTabComponent implements OnChanges, OnDestroy {\n  private _templateLabel: RdsTabLabelDirective;\n\n  @Input() label: string;\n\n  @Input()\n  set active(value: BooleanInput) {\n    const newValue = booleanAttribute(value);\n\n    if (newValue !== this.active) {\n      this._active = newValue;\n      this.stateChanges.next();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n  private _active = false;\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  readonly stateChanges = new EventEmitter<void>();\n\n  @ContentChild(RdsTabLabelDirective)\n  get templateLabel(): RdsTabLabelDirective {\n    return this._templateLabel;\n  }\n\n  set templateLabel(value: RdsTabLabelDirective) {\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['label'] || changes['disabled']) {\n      this.stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n  }\n}\n","import {\n  FocusableOption,\n  FocusMonitor,\n  FocusOptions,\n  FocusOrigin,\n} from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  inject,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Directive({\n  selector: '[rdsTabLabelWrapper]',\n})\nexport class RdsTabLabelWrapperDirective\n  implements AfterViewInit, FocusableOption, OnDestroy\n{\n  private readonly elementRef = inject(ElementRef);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly destroyRef = inject(DestroyRef);\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n  public readonly _focused = new Subject<RdsTabLabelWrapperDirective>();\n\n  ngAfterViewInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this._focused.next(this));\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this._focused.complete();\n  }\n\n  focus(origin: FocusOrigin, options?: FocusOptions): void {\n    this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n    this._focused.next(this);\n  }\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, TAB } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  inject,\n  Input,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { RdsTabLabelWrapperDirective } from './tab-label-wrapper.directive';\nimport { RdsTabComponent } from './tab.component';\nimport { RdsMenuItemComponent } from '../menu';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nexport type RdsTabsSize = 's' | 'm';\n\n@Component({\n  selector: 'rds-tabs',\n  template: `\n    <div class=\"rds-tabs\" [class.rds-tabs-stretch]=\"stretch\">\n      <div\n        class=\"rds-tabs__header\"\n        role=\"tablist\"\n        (blur)=\"resetActiveItem()\"\n        (keydown)=\"onKeydown($event)\"\n      >\n        @for (tab of tabs; track tab.label; let i = $index) {\n          <div\n            class=\"rds-tabs__tab rds-tabs__tab-size-{{ size }}\"\n            role=\"tab\"\n            rdsTabLabelWrapper\n            [disabled]=\"tab.disabled\"\n            [attr.tabIndex]=\"tab.disabled ? '-1' : '0'\"\n            [attr.aria-posinset]=\"i + 1\"\n            [attr.aria-setsize]=\"tabs.length\"\n            [attr.aria-disabled]=\"tab.disabled\"\n            [attr.aria-selected]=\"selectedIndex === i\"\n            [class.rds-tabs__tab--active]=\"selectedIndex === i\"\n            [class.rds-tabs__tab--disabled]=\"tab.disabled\"\n            (click)=\"selectTab(i)\"\n          >\n            @if (tab.templateLabel) {\n              <ng-template [cdkPortalOutlet]=\"tab.templateLabel\" />\n            }\n            @if (!tab.templateLabel) {\n              {{ tab.label }}\n            }\n          </div>\n        }\n      </div>\n\n      <div class=\"rds-tabs__content-wrapper\">\n        <ng-content />\n      </div>\n    </div>\n  `,\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsTabsComponent implements AfterContentInit, AfterViewInit {\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  private focusKeyManager: FocusKeyManager<RdsTabLabelWrapperDirective>;\n\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  selectedIndex: number;\n\n  @ContentChildren(RdsTabComponent) tabs: QueryList<RdsTabComponent>;\n\n  @ViewChildren(RdsTabLabelWrapperDirective)\n  labelWrappers: QueryList<RdsTabLabelWrapperDirective>;\n\n  @Input() size: RdsTabsSize = 'm';\n\n  @Input({ transform: booleanAttribute }) stretch = false;\n\n  ngAfterContentInit(): void {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(\n      ...this.tabs.map((tab) => tab.stateChanges),\n    ).subscribe(() => this.cdr.markForCheck());\n\n    this.tabs.changes\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.getActiveTabIndex() !== this.selectedIndex) {\n          this.selectTab(this.getActiveTabIndex());\n        }\n\n        this.cdr.markForCheck();\n      });\n\n    this.selectTab(this.getActiveTabIndex());\n  }\n\n  ngAfterViewInit(): void {\n    this.focusKeyManager = new FocusKeyManager<RdsTabLabelWrapperDirective>(\n      this.labelWrappers,\n    )\n      .skipPredicate((item) => item.disabled)\n      .withHorizontalOrientation('ltr')\n      .withWrap()\n      .withHomeAndEnd();\n    this.focusKeyManager.updateActiveItem(this.getActiveTabIndex());\n    this.labelWrappers.changes\n      .pipe(\n        startWith(this.labelWrappers),\n        switchMap((items) =>\n          merge(...items.map((item: RdsMenuItemComponent) => item._focused)),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((focusedItem) => {\n        this.focusKeyManager.updateActiveItem(\n          focusedItem as RdsTabLabelWrapperDirective,\n        );\n      });\n  }\n\n  selectTab(tabIndex: number): void {\n    const rdsTabComponents = this.tabs.toArray();\n    const rdsTabComponent = rdsTabComponents[tabIndex];\n\n    if (rdsTabComponent.disabled) {\n      return;\n    }\n\n    this.selectedIndex = tabIndex;\n    rdsTabComponents.forEach((tab) => (tab.active = false));\n    rdsTabComponent.active = true;\n  }\n\n  onKeydown(event: KeyboardEvent): void {\n    if (hasModifierKey(event)) {\n      if (event.keyCode === TAB && hasModifierKey(event, 'shiftKey')) {\n        if (\n          this.focusKeyManager.activeItemIndex !== null &&\n          this.focusKeyManager.activeItemIndex > 0\n        ) {\n          this.focusKeyManager.setFocusOrigin('keyboard');\n          this.focusKeyManager.setPreviousItemActive();\n          event.preventDefault();\n          this.focusKeyManager.onKeydown(event);\n        } else {\n          this.resetActiveItem();\n        }\n      }\n\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.getIndexOfFocusedElement() !== this.selectedIndex) {\n          this.selectTab(this.getIndexOfFocusedElement());\n        }\n\n        break;\n      case TAB:\n        if (\n          this.focusKeyManager.activeItemIndex ===\n          this.labelWrappers.filter((l) => !l.disabled).length - 1\n        ) {\n          this.resetActiveItem();\n        } else {\n          event.preventDefault();\n          this.focusKeyManager.setFocusOrigin('keyboard');\n          this.focusKeyManager.setNextItemActive();\n          this.focusKeyManager.onKeydown(event);\n        }\n\n        break;\n      default:\n        this.focusKeyManager.onKeydown(event);\n    }\n  }\n\n  resetActiveItem(): void {\n    this.focusKeyManager.setActiveItem(-1);\n  }\n\n  private getIndexOfFocusedElement(): number {\n    return this.focusKeyManager\n      ? (this.focusKeyManager.activeItemIndex as number)\n      : 0;\n  }\n\n  private getActiveTabIndex(): number {\n    const activeTabs = this.tabs ? this.tabs.filter((tab) => tab.active) : [];\n\n    return activeTabs.length > 0\n      ? this.tabs.toArray().indexOf(activeTabs[0])\n      : 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsTabsComponent } from './tabs.component';\nimport { RdsTabComponent } from './tab.component';\nimport { RdsTabLabelDirective } from './tab-label.directive';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { RdsTabLabelWrapperDirective } from './tab-label-wrapper.directive';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nconst componentsToExpert = [\n  RdsTabsComponent,\n  RdsTabComponent,\n  RdsTabLabelDirective,\n  RdsTabLabelWrapperDirective,\n];\n\n@NgModule({\n  declarations: [...componentsToExpert],\n  exports: [...componentsToExpert],\n  imports: [CommonModule, PortalModule, A11yModule, ObserversModule],\n})\nexport class RdsTabModule {}\n","import { Observable, Subject } from 'rxjs';\n\nexport type AllSelectedType = 'none' | 'partial' | 'all';\n\nexport class AsyncSelectionModel<T> {\n  protected _length = -1;\n  protected _isAllSelected = false;\n  protected _removedToEmit: T[] = [];\n  protected _addedToEmit: T[] = [];\n  protected _selected: T[] = [];\n  protected _deselected: T[] = [];\n  protected readonly _changed = new Subject<AsyncSelectionChange<T>>();\n\n  get changed(): Observable<AsyncSelectionChange<T>> {\n    return this._changed.asObservable();\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  protected _compareFunc: (a: T, b: T) => boolean = (a, b) => a === b;\n\n  constructor(\n    length: number,\n    protected _multiple = false,\n    compareFunc: (a: T, b: T) => boolean = (a, b) => a === b,\n    initiallySelectedValues?: T[],\n    initiallyDeselectedValues?: T[],\n    protected _emitChanges = true,\n  ) {\n    this._length = length;\n\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach((value) => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      this._addedToEmit.length = 0;\n    }\n\n    if (initiallyDeselectedValues && initiallyDeselectedValues.length) {\n      initiallyDeselectedValues.forEach((value) => this._markDeselected(value));\n      this._removedToEmit.length = 0;\n    }\n\n    if (typeof compareFunc === 'function') {\n      this._compareFunc = compareFunc;\n    }\n  }\n\n  updateLength(length: number): void {\n    this._length = length;\n    this._checkIfAllSelected();\n  }\n\n  isAllSelected(): boolean {\n    return this._isAllSelected || this._length === 0;\n  }\n\n  getAllSelectedType(): AllSelectedType {\n    if (this.isAllSelected() && this._deselected.length === 0) {\n      return 'all';\n    } else if (!this.isAllSelected() && this._selected.length === 0) {\n      return 'none';\n    } else {\n      return 'partial';\n    }\n  }\n\n  selectAll(): void {\n    if (this._length > 1 && !this._multiple) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n\n    this._isAllSelected = true;\n    this._deselected = [];\n    this._removedToEmit = [];\n    this._selected = [];\n    this._addedToEmit = [];\n    this._emitChangeEvent();\n  }\n\n  deselectAll(): void {\n    this._isAllSelected = false;\n    this._deselected = [];\n    this._removedToEmit = [];\n    this._selected = [];\n    this._addedToEmit = [];\n    this._emitChangeEvent();\n  }\n\n  toggleAll(): void {\n    this.isAllSelected() ? this.deselectAll() : this.selectAll();\n  }\n\n  clear(): void {\n    this._isAllSelected = false;\n    this._deselected = [];\n    this._removedToEmit = [];\n    this._selected = [];\n    this._addedToEmit = [];\n    this._emitChangeEvent();\n  }\n\n  select(...values: T[]): void {\n    this._verifyValueAssignment(values);\n    values.forEach((value) => this._markSelected(value));\n    this._checkIfAllSelected();\n    this._emitChangeEvent();\n  }\n\n  deselect(...values: T[]): void {\n    this._verifyValueAssignment(values);\n    values.forEach((value) => this._markDeselected(value));\n    this._checkIfAllSelected();\n    this._emitChangeEvent();\n  }\n\n  toggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n\n  isSelected(value: T): boolean {\n    return this.isAllSelected()\n      ? !this._deselected.some((v) => this._compareFunc(v, value))\n      : this._selected.some((v) => this._compareFunc(v, value));\n  }\n\n  isDeselected(value: T): boolean {\n    return !this.isSelected(value);\n  }\n\n  isEmpty(): boolean {\n    if (this._length === 0) {\n      return true;\n    }\n\n    return (\n      (!this.isAllSelected() && this._selected.length === 0) ||\n      (this.isAllSelected() && this._deselected.length === this._length)\n    );\n  }\n\n  hasValue(): boolean {\n    return !this.isEmpty();\n  }\n\n  sort(predicate?: (a: T, b: T) => number): void {\n    if (this._multiple) {\n      if (this._selected) {\n        this._selected.sort(predicate);\n      }\n    }\n\n    if (this._deselected) {\n      this._deselected.sort(predicate);\n    }\n  }\n\n  isMultipleSelection(): boolean {\n    return this._multiple;\n  }\n\n  protected _emitChangeEvent(): void {\n    this._changed.next({\n      source: this,\n      isAllSelected: this.isAllSelected(),\n      allSelectedType: this.getAllSelectedType(),\n      added: this._addedToEmit,\n      removed: this._removedToEmit,\n    });\n\n    this._removedToEmit = [];\n    this._addedToEmit = [];\n  }\n\n  protected _markSelected(value: T): void {\n    if (this.isDeselected(value)) {\n      this._unmarkDeselected(value);\n\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n\n      this._selected.push(value);\n\n      if (this._emitChanges) {\n        this.pushIfNotExists(this._addedToEmit, value);\n      }\n    }\n  }\n\n  protected _unmarkSelected(value: T): void {\n    if (this.isSelected(value)) {\n      const index = this._selected.findIndex((v) =>\n        this._compareFunc(v, value),\n      );\n\n      if (index > -1) {\n        this._selected.splice(index, 1);\n\n        if (this._emitChanges) {\n          this.pushIfNotExists(this._removedToEmit, value);\n        }\n      }\n    }\n  }\n\n  protected _markDeselected(value: T): void {\n    if (this.isSelected(value)) {\n      this._unmarkSelected(value);\n      const index = this._deselected.findIndex((v) =>\n        this._compareFunc(v, value),\n      );\n\n      if (index === -1) {\n        this._deselected.push(value);\n\n        if (this._emitChanges) {\n          this.pushIfNotExists(this._removedToEmit, value);\n        }\n      }\n    }\n  }\n\n  protected _unmarkDeselected(value: T): void {\n    if (this.isDeselected(value)) {\n      const index = this._deselected.findIndex((v) =>\n        this._compareFunc(v, value),\n      );\n\n      if (index > -1) {\n        this._deselected.splice(index, 1);\n\n        if (this._emitChanges) {\n          this.pushIfNotExists(this._addedToEmit, value);\n        }\n      }\n    }\n  }\n\n  protected _unmarkAll(): void {\n    if (!this.isEmpty()) {\n      this._selected.forEach((value) => this._unmarkSelected(value));\n    }\n  }\n\n  protected _verifyValueAssignment(values: T[]): void {\n    if (values.length > 1 && !this._multiple) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n\n  protected _checkIfAllSelected(): void {\n    if (this._length === this._selected.length) {\n      this._isAllSelected = true;\n      this._removedToEmit = this._deselected;\n      this._deselected = [];\n    } else if (this._length === this._deselected.length) {\n      this._isAllSelected = false;\n      this._addedToEmit = [];\n      this._selected = [];\n    }\n  }\n\n  protected pushIfNotExists(array: T[], value: T): void {\n    if (array.every((v) => !this._compareFunc(v, value))) {\n      array.push(value);\n    }\n  }\n}\n\nexport interface AsyncSelectionChange<T> {\n  source: AsyncSelectionModel<T>;\n  isAllSelected: boolean;\n  allSelectedType: AllSelectedType;\n  added: T[];\n  removed: T[];\n}\n\nexport function getMultipleValuesInSingleSelectionError(): Error {\n  return Error(\n    'Cannot pass multiple values into AsyncSelectionModel with single-value mode.',\n  );\n}\n\nexport function isEqual<T>(...property: (keyof T)[]): (a: T, b: T) => boolean {\n  if (!property || (Array.isArray(property) && property.length === 0)) {\n    throw new Error('Property needs to be defined to compare function');\n  }\n\n  return (a: T, b: T) => {\n    for (let i = 0; i < property.length; i++) {\n      if (a[property[i]] === b[property[i]]) {\n        continue;\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n}\n","import { Directive, HostBinding, InjectionToken, Input } from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkFooterCell,\n  CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n@Directive({\n  selector: '[rds-cell-def], [rdsCellDef]',\n  providers: [{ provide: CdkCellDef, useExisting: RdsCellDefDirective }],\n})\nexport class RdsCellDefDirective extends CdkCellDef {}\n\n@Directive({\n  selector: '[rds-header-cell-def], [rdsHeaderCellDef]',\n  providers: [\n    { provide: CdkHeaderCellDef, useExisting: RdsHeaderCellDefDirective },\n  ],\n})\nexport class RdsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n@Directive({\n  selector: '[rds-footer-cell-def], [rdsFooterCellDef]',\n  providers: [\n    { provide: CdkFooterCellDef, useExisting: RdsFooterCellDefDirective },\n  ],\n})\nexport class RdsFooterCellDefDirective extends CdkFooterCellDef {}\n\nexport const RDS_SORT_HEADER_COLUMN_DEF =\n  new InjectionToken<RdsColumnDefDirective>('RDS_SORT_HEADER_COLUMN_DEF');\n\n@Directive({\n  selector: '[rds-column-def], [rdsColumnDef]',\n  providers: [\n    { provide: CdkColumnDef, useExisting: RdsColumnDefDirective },\n    {\n      provide: RDS_SORT_HEADER_COLUMN_DEF,\n      useExisting: RdsColumnDefDirective,\n    },\n  ],\n})\nexport class RdsColumnDefDirective extends CdkColumnDef {\n  @Input('rdsColumnDef')\n  override get name(): string {\n    return this._name;\n  }\n\n  override set name(name: string) {\n    this._setNameInput(name);\n  }\n\n  protected override _updateColumnCssClassName(): void {\n    super._updateColumnCssClassName();\n    this._columnCssClassName.push(`rds-column-${this.cssClassFriendlyName}`);\n  }\n}\n\n@Directive({\n  selector: 'rds-header-cell, th[rdsHeaderCell], th[rds-header-cell]',\n})\nexport class RdsHeaderCellDirective extends CdkHeaderCell {\n  @HostBinding('class') class = 'rds-header-cell';\n  @HostBinding('attr.role') role = 'columnheader';\n}\n\n@Directive({\n  selector: 'rds-footer-cell, td[rdsFooterCell], td[rds-footer-cell]',\n})\nexport class RdsFooterCellDirective extends CdkFooterCell {\n  @HostBinding('class') class = 'rds-footer-cell';\n  @HostBinding('attr.role') role = 'gridcell';\n}\n\n@Directive({\n  selector: 'rds-cell, td[rdsCell], td[rds-cell]',\n})\nexport class RdsCellDirective extends CdkCell {\n  @HostBinding('class') class = 'rds-cell';\n  @HostBinding('attr.role') role = 'gridcell';\n}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkNoDataRow,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\nimport {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Directive({\n  selector: '[rds-header-row-def], [rdsHeaderRowDef]',\n  providers: [\n    { provide: CdkHeaderRowDef, useExisting: RdsHeaderRowDefDirective },\n  ],\n})\nexport class RdsHeaderRowDefDirective extends CdkHeaderRowDef {\n  @Input('rdsHeaderRowDef') override columns: Iterable<string>;\n\n  @Input('rdsHeaderRowDefSticky')\n  override get sticky(): boolean {\n    return super.sticky;\n  }\n\n  override set sticky(v: BooleanInput) {\n    super.sticky = booleanAttribute(v);\n  }\n}\n\n@Directive({\n  selector: '[rds-footer-row-def], [rdsFooterRowDef]',\n  providers: [\n    { provide: CdkFooterRowDef, useExisting: RdsFooterRowDefDirective },\n  ],\n})\nexport class RdsFooterRowDefDirective extends CdkFooterRowDef {\n  @Input('rdsFooterRowDef') override columns: Iterable<string>;\n\n  @Input('rdsFooterRowDefSticky')\n  override set sticky(v: BooleanInput) {\n    super.sticky = booleanAttribute(v);\n  }\n\n  override get sticky(): boolean {\n    return super.sticky;\n  }\n}\n\n@Directive({\n  selector: '[rds-row-def], [rdsRowDef]',\n  providers: [{ provide: CdkRowDef, useExisting: RdsRowDefDirective }],\n})\nexport class RdsRowDefDirective<T> extends CdkRowDef<T> {\n  @Input('rdsRowDefColumns') override columns: Iterable<string>;\n  @Input('rdsRowDefWhen') override when: (index: number, rowData: T) => boolean;\n}\n\n@Component({\n  selector: 'rds-header-row, tr[rds-header-row], tr[rdsHeaderRow]',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsHeaderRow',\n  providers: [{ provide: CdkHeaderRow, useExisting: RdsHeaderRowComponent }],\n})\nexport class RdsHeaderRowComponent extends CdkHeaderRow {\n  @HostBinding('class') class = 'rds-header-row';\n  @HostBinding('attr.role') role = 'row';\n}\n\n@Component({\n  selector: 'rds-footer-row, tr[rds-footer-row], tr[rdsFooterRow]',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsFooterRow',\n  providers: [{ provide: CdkFooterRow, useExisting: RdsFooterRowComponent }],\n})\nexport class RdsFooterRowComponent extends CdkFooterRow {\n  @HostBinding('class') class = 'rds-footer-row';\n  @HostBinding('attr.role') role = 'row';\n}\n\n@Component({\n  selector: 'rds-row, tr[rds-row], tr[rdsRow]',\n  template: CDK_ROW_TEMPLATE,\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'rdsRow',\n  providers: [{ provide: CdkRow, useExisting: RdsRowComponent }],\n})\nexport class RdsRowComponent extends CdkRow {\n  @HostBinding('class') class = 'rds-row';\n  @HostBinding('attr.role') role = 'row';\n\n  @HostBinding('class.selected')\n  @Input({ transform: booleanAttribute })\n  selected = false;\n\n  @HostBinding('class.disabled')\n  @Input({ transform: booleanAttribute })\n  disabled = false;\n}\n\n@Directive({\n  selector: 'ng-template[rds-no-data-row], ng-template[rdsNoDataRow]',\n  providers: [{ provide: CdkNoDataRow, useExisting: RdsNoDataRowDirective }],\n})\nexport class RdsNoDataRowDirective extends CdkNoDataRow {}\n","import {\n  booleanAttribute,\n  Directive,\n  EventEmitter,\n  HostBinding,\n  inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport type SortDirection = 'asc' | 'desc' | '';\n\nexport interface RdsSortable {\n  id: string;\n  start: SortDirection;\n  disableClear: boolean;\n}\n\nexport interface Sort {\n  active: string;\n  direction: SortDirection;\n}\n\nexport interface RdsSortDefaultOptions {\n  disableClear?: boolean;\n}\n\nexport const RDS_SORT_DEFAULT_OPTIONS =\n  new InjectionToken<RdsSortDefaultOptions>('RDS_SORT_DEFAULT_OPTIONS');\n\n@Directive({\n  selector: '[rdsSort], [rds-sort]',\n  exportAs: 'rdsSort',\n})\nexport class RdsSortDirective implements OnChanges, OnDestroy, OnInit {\n  private readonly defaultOptions = inject(RDS_SORT_DEFAULT_OPTIONS, {\n    optional: true,\n  });\n\n  readonly _stateChanges = new Subject<void>();\n  sortables = new Map<string, RdsSortable>();\n\n  @HostBinding('class') class = 'rds-sort';\n\n  @Input('rdsSortActive') active: string | null = null;\n\n  @Input({ alias: 'rdsSortDisabled', transform: booleanAttribute }) disabled =\n    false;\n\n  @Input('rdsSortStart') start: SortDirection = 'asc';\n\n  @Input('rdsSortDirection')\n  get direction(): SortDirection {\n    return this._direction;\n  }\n\n  set direction(direction: SortDirection) {\n    this._direction = direction;\n  }\n\n  private _direction: SortDirection = '';\n\n  @Input({ alias: 'rdsSortDisableClear', transform: booleanAttribute })\n  disableClear = false;\n\n  get initialized(): Observable<void> {\n    return this._initialized.asObservable();\n  }\n\n  private _initialized = new ReplaySubject<void>(1);\n\n  @Output()\n  readonly rdsSortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n\n  register(sortable: RdsSortable): void {\n    if (!sortable.id) {\n      throw Error(`RdsSortHeader must be provided with a unique id.`);\n    }\n\n    if (this.sortables.has(sortable.id)) {\n      throw Error(\n        `Cannot have two RdsSortables with the same id (${sortable.id}).`,\n      );\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n  deregister(sortable: RdsSortable): void {\n    this.sortables.delete(sortable.id);\n  }\n\n  sort(sortable: RdsSortable): void {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.rdsSortChange.emit({ active: this.active, direction: this.direction });\n  }\n\n  getNextSortDirection(sortable: RdsSortable): SortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    const disableClear =\n      sortable?.disableClear ??\n      this.disableClear ??\n      !!this.defaultOptions?.disableClear;\n    const sortDirectionCycle = this._getSortDirectionCycle(\n      sortable.start,\n      disableClear,\n    );\n\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n  ngOnInit(): void {\n    this._initialized.next();\n  }\n\n  ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n    this._initialized.complete();\n  }\n\n  private _getSortDirectionCycle(\n    start: SortDirection = this.start,\n    disableClear: boolean,\n  ): SortDirection[] {\n    const sortOrder: SortDirection[] = ['asc', 'desc'];\n\n    if (start === 'desc') {\n      sortOrder.reverse();\n    }\n\n    if (!disableClear) {\n      sortOrder.push('');\n    }\n\n    return sortOrder;\n  }\n}\n","import {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { merge, Subscription } from 'rxjs';\nimport { RdsSortable, RdsSortDirective, SortDirection } from './sort.directive';\nimport {\n  animate,\n  animateChild,\n  AnimationTriggerMetadata,\n  keyframes,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { RDS_SORT_HEADER_COLUMN_DEF } from './cell';\n\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\n\nexport interface ArrowViewStateTransition {\n  fromState?: ArrowViewState;\n  toState: ArrowViewState;\n}\n\nconst SORT_ANIMATION_TRANSITION = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\nconst rdsSortAnimations: {\n  readonly arrowOpacity: AnimationTriggerMetadata;\n  readonly arrowPosition: AnimationTriggerMetadata;\n  readonly allowChildren: AnimationTriggerMetadata;\n  readonly arrow: AnimationTriggerMetadata;\n} = {\n  arrowOpacity: trigger('arrowOpacity', [\n    state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n    state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n    state(\n      'hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n      style({ opacity: 0 }),\n    ),\n    transition(\n      '* => asc, * => desc, * => active, * => hint, * => void',\n      animate('0ms'),\n    ),\n    transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n  arrowPosition: trigger('arrowPosition', [\n    transition(\n      '* => desc-to-hint, * => desc-to-active',\n      animate(\n        SORT_ANIMATION_TRANSITION,\n        keyframes([\n          style({ transform: 'translateY(-25%)' }),\n          style({ transform: 'translateY(0)' }),\n        ]),\n      ),\n    ),\n    transition(\n      '* => hint-to-desc, * => active-to-desc',\n      animate(\n        SORT_ANIMATION_TRANSITION,\n        keyframes([\n          style({ transform: 'translateY(0)' }),\n          style({ transform: 'translateY(25%)' }),\n        ]),\n      ),\n    ),\n    transition(\n      '* => asc-to-hint, * => asc-to-active',\n      animate(\n        SORT_ANIMATION_TRANSITION,\n        keyframes([\n          style({ transform: 'translateY(25%)' }),\n          style({ transform: 'translateY(0)' }),\n        ]),\n      ),\n    ),\n    transition(\n      '* => hint-to-asc, * => active-to-asc',\n      animate(\n        SORT_ANIMATION_TRANSITION,\n        keyframes([\n          style({ transform: 'translateY(0)' }),\n          style({ transform: 'translateY(-25%)' }),\n        ]),\n      ),\n    ),\n    state(\n      'desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n      style({ transform: 'translateY(0)' }),\n    ),\n    state(\n      'hint-to-desc, active-to-desc, desc',\n      style({ transform: 'translateY(-25%)' }),\n    ),\n    state(\n      'hint-to-asc, active-to-asc, asc',\n      style({ transform: 'translateY(25%)' }),\n    ),\n  ]),\n  allowChildren: trigger('allowChildren', [\n    transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n  ]),\n  arrow: trigger('arrow', [\n    state('asc', style({ transform: '' })),\n    state('desc', style({ transform: 'scaleY(-1)' })),\n    transition('asc => desc', [animate(SORT_ANIMATION_TRANSITION)]),\n    transition('desc => asc', [animate(SORT_ANIMATION_TRANSITION)]),\n  ]),\n};\n\n@Component({\n  selector: '[rds-sort-header], [rdsSortHeader]',\n  exportAs: 'rdsSortHeader',\n  templateUrl: './sort-header.html',\n  styleUrls: ['./sort-header.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    rdsSortAnimations.arrowOpacity,\n    rdsSortAnimations.arrowPosition,\n    rdsSortAnimations.allowChildren,\n    rdsSortAnimations.arrow,\n  ],\n})\nexport class RdsSortHeaderComponent\n  implements RdsSortable, OnDestroy, OnInit, AfterViewInit\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly sort = inject(RdsSortDirective, {\n    optional: true,\n  }) as RdsSortDirective;\n  private readonly columnDef = inject(RDS_SORT_HEADER_COLUMN_DEF, {\n    optional: true,\n  });\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  private _rerenderSubscription: Subscription | null = null;\n\n  @HostBinding('class') class = 'rds-sort-header';\n\n  @HostBinding('class.rds-sort-header-disabled')\n  get _disabledClass(): boolean {\n    return this._isDisabled();\n  }\n\n  @HostBinding('attr.aria-sort')\n  get ariaSortAttribute(): string {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n\n    return this.sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n\n  _showIndicatorHint = false;\n  _viewState: ArrowViewStateTransition | null = null;\n  _arrowDirection: SortDirection = '';\n  _disableViewStateAnimation = false;\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('rds-sort-header') id = '';\n\n  @Input() arrowPosition: 'left' | 'right' = 'right';\n  @Input() start: SortDirection = '';\n  @Input({ transform: booleanAttribute }) disableClear = false;\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  constructor() {\n    if (!this.sort) {\n      throw Error(\n        `RdsSortHeader must be placed within a parent element with the RdsSort directive.`,\n      );\n    }\n\n    this._handleStateChanges();\n  }\n\n  ngOnInit(): void {\n    if (!this.id && this.columnDef) {\n      this.id = this.columnDef.name;\n    }\n\n    this._updateArrowDirection();\n    this._setAnimationTransitionState({\n      toState: this._isSorted() ? 'active' : this._arrowDirection,\n    });\n\n    this.sort.register(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe((origin) => {\n      const newState = !!origin;\n\n      if (newState !== this._showIndicatorHint) {\n        this._setIndicatorHintVisible(newState);\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.sort.deregister(this);\n    this._rerenderSubscription?.unsubscribe();\n  }\n\n  @HostListener('mouseenter')\n  onMouseenter(): void {\n    this._setIndicatorHintVisible(true);\n  }\n\n  @HostListener('mouseleave')\n  onMouseleave(): void {\n    this._setIndicatorHintVisible(false);\n  }\n\n  @HostListener('click')\n  _handleClick(): void {\n    if (!this._isDisabled()) {\n      this.sort.sort(this);\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent): void {\n    if (\n      !this._isDisabled() &&\n      (event.keyCode === SPACE || event.keyCode === ENTER)\n    ) {\n      event.preventDefault();\n      this._toggleOnInteraction();\n    }\n  }\n\n  _isSorted(): boolean {\n    return (\n      this.sort.active == this.id &&\n      (this.sort.direction === 'asc' || this.sort.direction === 'desc')\n    );\n  }\n\n  _isDisabled(): boolean {\n    return this.sort.disabled || this.disabled;\n  }\n\n  _renderArrow(): boolean {\n    return !this._isDisabled() || this._isSorted();\n  }\n\n  _getArrowDirectionState(): string {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n\n  _getArrowViewState(): string {\n    const fromState = this._viewState?.fromState;\n\n    return (fromState ? `${fromState}-to-` : '') + this._viewState?.toState;\n  }\n\n  private _updateArrowDirection(): void {\n    this._arrowDirection = this._isSorted()\n      ? this.sort.direction\n      : this.start || this.sort.start;\n  }\n\n  private _handleStateChanges(): void {\n    this._rerenderSubscription = merge(\n      this.sort.rdsSortChange,\n      this.sort._stateChanges,\n    ).subscribe(() => {\n      if (this._isSorted()) {\n        this._updateArrowDirection();\n\n        if (\n          this._viewState?.toState === 'hint' ||\n          this._viewState?.toState === 'active'\n        ) {\n          this._disableViewStateAnimation = true;\n        }\n\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'active',\n        });\n        this._showIndicatorHint = false;\n      }\n\n      if (\n        !this._isSorted() &&\n        this._viewState &&\n        this._viewState.toState === 'active'\n      ) {\n        this._disableViewStateAnimation = false;\n        this._setAnimationTransitionState({\n          fromState: 'active',\n          toState: this._arrowDirection,\n        });\n      }\n\n      this.cdr.markForCheck();\n    });\n  }\n\n  private _setIndicatorHintVisible(visible: boolean): void {\n    if (this._isDisabled() && visible) {\n      return;\n    }\n\n    this._showIndicatorHint = visible;\n\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({\n          fromState: this._arrowDirection,\n          toState: 'hint',\n        });\n      } else {\n        this._setAnimationTransitionState({\n          fromState: 'hint',\n          toState: this._arrowDirection,\n        });\n      }\n    }\n  }\n\n  private _setAnimationTransitionState(\n    viewState: ArrowViewStateTransition,\n  ): void {\n    this._viewState = viewState;\n\n    if (this._disableViewStateAnimation) {\n      this._viewState = { toState: viewState.toState };\n    }\n  }\n\n  private _toggleOnInteraction(): void {\n    this.sort.sort(this);\n\n    if (\n      this._viewState?.toState === 'hint' ||\n      this._viewState?.toState === 'active'\n    ) {\n      this._disableViewStateAnimation = true;\n    }\n  }\n}\n","<div\n  class=\"rds-sort-header-container rds-focus-indicator\"\n  [class.rds-sort-header-sorted]=\"_isSorted()\"\n  [class.rds-sort-header-position-left]=\"arrowPosition === 'left'\"\n  [attr.tabindex]=\"_isDisabled() ? null : 0\"\n  role=\"button\"\n>\n  <div class=\"rds-sort-header-content\">\n    <ng-content />\n  </div>\n  @if (_renderArrow()) {\n  <div\n    class=\"rds-sort-header-arrow\"\n    [@arrowOpacity]=\"_getArrowViewState()\"\n    [@arrowPosition]=\"_getArrowViewState()\"\n    [@allowChildren]=\"_getArrowDirectionState()\"\n    (@arrowPosition.start)=\"_disableViewStateAnimation = true\"\n    (@arrowPosition.done)=\"_disableViewStateAnimation = false\"\n  >\n    <rds-icon [@arrow]=\"_arrowDirection\" namespace=\"outlined\" icon=\"arrow_up\" />\n  </div>\n  }\n</div>\n","import { _isNumberValue } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  catchError,\n  combineLatest,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport { delay, map, switchMap, tap } from 'rxjs/operators';\nimport { RdsSortDirective, Sort } from './sort.directive';\nimport { PageEvent, RdsPaginatorComponent } from '../paginator';\nimport { isDevMode } from '@angular/core';\n\ndeclare const ngDevMode: boolean;\n\ninterface Paginator {\n  page: Subject<PageEvent>;\n  pageIndex: number;\n  initialized: Observable<void>;\n  pageSize: number;\n  length: number;\n}\n\nexport abstract class _RdsTableDataSource<\n  T,\n  P extends Paginator,\n> extends DataSource<T> {\n  protected readonly _data: BehaviorSubject<T[]>;\n  protected readonly _renderData = new BehaviorSubject<T[]>([]);\n  protected readonly _internalPageChanges = new Subject<void>();\n  protected _isInitialized = false;\n\n  _renderChangesSubscription: Subscription | null = null;\n\n  get data(): T[] {\n    return this._data.value;\n  }\n\n  set data(data: T[]) {\n    if (!Array.isArray(data)) {\n      if (ngDevMode) {\n        throw new Error(\n          \"Data passed to the table's data source is not an array.\",\n        );\n      } else {\n        data = [];\n      }\n    }\n\n    this._data.next(data);\n  }\n\n  get sort(): RdsSortDirective | null {\n    return this._sort;\n  }\n\n  set sort(sort: RdsSortDirective | null) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n\n  protected _sort: RdsSortDirective | null = null;\n\n  get paginator(): P | null {\n    return this._paginator;\n  }\n\n  set paginator(paginator: P | null) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n\n  protected _paginator: P | null = null;\n\n  sortingDataAccessor: (data: T, sortHeaderId: string) => string | number = (\n    data: T,\n    sortHeaderId: string,\n  ): string | number => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const value = (data as { [key: string]: any })[sortHeaderId];\n\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n\n      return numberValue < Number.MAX_SAFE_INTEGER ? numberValue : value;\n    }\n\n    return value;\n  };\n\n  sortData: (data: T[], sort: RdsSortDirective) => T[] = (\n    data: T[],\n    sort: RdsSortDirective,\n  ): T[] => {\n    const active = sort.active;\n    const direction = sort.direction;\n\n    if (!active || direction == '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n\n      const valueAType = typeof valueA;\n      const valueBType = typeof valueB;\n\n      if (valueAType !== valueBType) {\n        if (valueAType === 'number') {\n          valueA += '';\n        }\n\n        if (valueBType === 'number') {\n          valueB += '';\n        }\n      }\n\n      let comparatorResult = 0;\n\n      if (valueA != null && valueB != null) {\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  };\n\n  constructor(initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n  }\n\n  connect(): Observable<T[]> {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n\n    return this._renderData.asObservable();\n  }\n\n  disconnect(): void {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n\n  init(): this {\n    this._isInitialized = true;\n    this._updateChangeSubscription();\n\n    return this;\n  }\n\n  protected abstract _updateChangeSubscription(): void;\n\n  protected createSortObservable(): Observable<Sort | void> {\n    return this._sort\n      ? merge(this._sort.rdsSortChange, this._sort.initialized)\n      : of(undefined);\n  }\n\n  protected createPageObservable(): Observable<PageEvent | void> {\n    return this._paginator\n      ? merge(\n          this._paginator.page,\n          this._internalPageChanges,\n          this._paginator.initialized,\n        )\n      : of(undefined);\n  }\n\n  protected _orderData(data: T[]): T[] {\n    if (!this.sort) {\n      return data;\n    }\n\n    return this.sortData(data.slice(), this.sort);\n  }\n\n  protected _pageData(data: T[]): T[] {\n    if (!this.paginator) {\n      return data;\n    }\n\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n\n  protected _updatePaginator(filteredDataLength: number): void {\n    Promise.resolve().then(() => {\n      if (!this.paginator) {\n        return;\n      }\n\n      this.paginator.length = filteredDataLength;\n\n      if (this.paginator.pageIndex > 0) {\n        const lastPageIndex =\n          Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\n\n        if (newPageIndex !== this.paginator.pageIndex) {\n          this.paginator.pageIndex = newPageIndex;\n\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n}\n\nexport class RdsTableDataSource<T> extends _RdsTableDataSource<\n  T,\n  RdsPaginatorComponent\n> {\n  protected readonly _filter = new BehaviorSubject<string>('');\n  protected _filteredData: T[] = [];\n\n  get filteredData(): T[] {\n    return this._filteredData;\n  }\n\n  private set filteredData(v: T[]) {\n    this._filteredData = v;\n  }\n\n  override set data(data: T[]) {\n    super.data = data;\n\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n\n  override get data(): T[] {\n    return super.data;\n  }\n\n  get filter(): string {\n    return this._filter.value;\n  }\n\n  set filter(filter: string) {\n    this._filter.next(filter);\n\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n\n  protected _filterData(data: T[], skipPaginatorUpdate = false): T[] {\n    this.filteredData =\n      this.filter == null || this.filter === ''\n        ? data\n        : data.filter((obj) => this.filterPredicate(obj, this.filter));\n\n    if (this.paginator && !skipPaginatorUpdate) {\n      this._updatePaginator(this.filteredData.length);\n    }\n\n    return this.filteredData;\n  }\n\n  filterPredicate: (data: T, filter: string) => boolean = (\n    data: T,\n    filter: string,\n  ): boolean => {\n    const dataStr = Object.keys(data as unknown as Record<string, unknown>)\n      .reduce((currentTerm: string, key: string) => {\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\n        // This avoids matches where the values of two columns combined will match the user's query\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n        // that has a very low chance of being typed in by somebody in a text field. This one in\n        // particular is \"White up-pointing triangle with dot\" from\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n        return (\n          currentTerm + (data as unknown as Record<string, unknown>)[key] + '◬'\n        );\n      }, '')\n      .toLowerCase();\n\n    const transformedFilter = filter.trim().toLowerCase();\n\n    return dataStr.indexOf(transformedFilter) != -1;\n  };\n\n  protected _updateChangeSubscription(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    const sortChange = this.createSortObservable();\n    const pageChange = this.createPageObservable();\n    const dataStream = this._data;\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(\n      map(([data]) => this._filterData(data)),\n    );\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(\n      tap(([data]) => this._updatePaginator(data.length)),\n      map(([data]) => this._orderData(data)),\n    );\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(\n      map(([data]) => this._pageData(data)),\n    );\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe((data) => {\n      this._renderData.next(data);\n    });\n  }\n}\n\nexport interface RdsAsyncDataSourceEvent {\n  sort: Sort | void | null;\n  page: PageEvent | void | null;\n}\n\nexport interface RdsAsyncDataSourceResponse<T, E = unknown> {\n  offset: number;\n  length: number;\n  data: T[];\n  error?: E;\n}\n\nexport class RdsTableAsyncDataSource<T> extends _RdsTableDataSource<\n  T,\n  RdsPaginatorComponent\n> {\n  protected readonly _loadingData$ = new BehaviorSubject<boolean>(false);\n  protected readonly _error$ = new BehaviorSubject<unknown | null>(null);\n  protected readonly _externalTrigger$ = new BehaviorSubject<void>(void 0);\n\n  get isLoading(): boolean {\n    return this._loadingData$.getValue();\n  }\n\n  get isError(): boolean {\n    return !this._loadingData$.getValue() && this._error$.getValue() !== null;\n  }\n\n  private readonly _fetchData: (\n    event: RdsAsyncDataSourceEvent,\n  ) => Observable<RdsAsyncDataSourceResponse<T>>;\n\n  constructor(\n    fetchData: (\n      event: RdsAsyncDataSourceEvent,\n    ) => Observable<RdsAsyncDataSourceResponse<T>>,\n  ) {\n    super([]);\n    this._fetchData = fetchData;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this._loadingData$.complete();\n    this._error$.complete();\n  }\n\n  fetchData(): void {\n    if (this._isInitialized) {\n      this._externalTrigger$.next();\n    } else if (isDevMode()) {\n      throw new Error(\n        `RdsAsyncTableDataSource needs to be initialized before manual fetchData trigger.`,\n      );\n    }\n  }\n\n  getLoadingData(): Observable<boolean> {\n    return this._loadingData$.asObservable();\n  }\n\n  getError(): Observable<unknown | null> {\n    return this._error$.asObservable();\n  }\n\n  protected _updateChangeSubscription(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    const sortChange = this.createSortObservable();\n    const pageChange = this.createPageObservable();\n\n    const dataStream = combineLatest([\n      sortChange,\n      pageChange,\n      this._externalTrigger$,\n    ]).pipe(\n      delay(0),\n      switchMap(([sort, page]) => {\n        if (typeof this._fetchData === 'function') {\n          this._loadingData$.next(true);\n\n          return this._fetchData({\n            sort,\n            page: page || this._paginator?.get(),\n          });\n        } else {\n          throw new Error('FetchData must be function');\n        }\n      }),\n      tap(() => {\n        this._loadingData$.next(false);\n\n        if (this._error$.getValue() !== null) {\n          this._error$.next(null);\n        }\n      }),\n      catchError((err) => {\n        this._loadingData$.next(false);\n        this._error$.next(err);\n\n        return of({\n          data: [],\n          length: 0,\n          offset: 0,\n          error: err,\n        } as RdsAsyncDataSourceResponse<T>);\n      }),\n    );\n\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = dataStream.subscribe((result) => {\n      this._renderData.next(result.data);\n      this._updatePaginator(result.length);\n    });\n  }\n}\n","import { CdkTextColumn } from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'rds-text-column',\n  template: `\n    <ng-container rdsColumnDef>\n      <th rds-header-cell *rdsHeaderCellDef [style.text-align]=\"justify\">\n        {{ headerText }}\n      </th>\n      <td rds-cell *rdsCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{ dataAccessor(data, name) }}\n      </td>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class RdsTextColumnComponent<T> extends CdkTextColumn<T> {}\n","import {\n  _COALESCED_STYLE_SCHEDULER,\n  _CoalescedStyleScheduler,\n  CDK_TABLE,\n  CDK_TABLE_TEMPLATE,\n  CdkTable,\n  STICKY_POSITIONING_LISTENER,\n} from '@angular/cdk/table';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  _DisposeViewRepeaterStrategy,\n  _VIEW_REPEATER_STRATEGY,\n} from '@angular/cdk/collections';\nimport { RdsTableAsyncDataSource } from './table-data-source';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  RdsTableAlternation,\n  RdsTableDensity,\n  RdsTableSize,\n  RdsTableVisualAccent,\n} from './table.types';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'rds-table, table[rds-table],  table[rdsTable]',\n  exportAs: 'rdsTable',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['./table.component.scss'],\n  providers: [\n    {\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _DisposeViewRepeaterStrategy,\n    },\n    { provide: CdkTable, useExisting: RdsTableComponent },\n    { provide: CDK_TABLE, useExisting: RdsTableComponent },\n    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n    // Prevent nested tables from seeing this table's StickyPositioningListener.\n    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class RdsTableComponent<T>\n  extends CdkTable<T>\n  implements OnChanges, OnDestroy\n{\n  protected readonly _isLoadingDestroyer = new Subject<void>();\n\n  _isLoading = false;\n\n  @Input()\n  density: RdsTableDensity = 'normal';\n\n  @Input()\n  size: RdsTableSize = 'l';\n\n  @Input()\n  visualAccent: RdsTableVisualAccent = 'basic';\n\n  @Input()\n  alternation: RdsTableAlternation = 'none';\n\n  @HostBinding('class') get class(): string[] {\n    return [\n      'rds-table',\n      `rds-table-density-${this.density}`,\n      `rds-table-size-${this.size}`,\n      `rds-table-accent-${this.visualAccent}`,\n      `rds-table-alternation-${this.alternation}`,\n      this._isLoading && 'rds-table-loading-data',\n      this.fixedLayout && 'rds-table-fixed-layout',\n    ].filter((v) => typeof v === 'string') as string[];\n  }\n\n  private readonly destroyRef = inject(DestroyRef);\n  protected override stickyCssClass = 'rds-table-sticky';\n  protected override needsPositionStickyOnElement = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['dataSource'] &&\n      changes['dataSource'].currentValue instanceof RdsTableAsyncDataSource\n    ) {\n      this._isLoadingDestroyer.next();\n      (this.dataSource as RdsTableAsyncDataSource<T>)\n        .getLoadingData()\n        .pipe(\n          takeUntil(this._isLoadingDestroyer),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe((isLoading) => {\n          this._isLoading = isLoading;\n          this._changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._isLoadingDestroyer.complete();\n  }\n\n  override updateStickyColumnStyles(): void {\n    super.updateStickyColumnStyles();\n  }\n}\n","import { Directive, ElementRef, HostBinding, inject } from '@angular/core';\n\n@Directive({\n  selector: '[rdsTableDragHandle], [rds-table-drag-handle]',\n})\nexport class RdsTableDragHandleDirective {\n  readonly nativeElement =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n\n  @HostBinding('class')\n  readonly classes = 'rds-table-drag-handle';\n}\n","import { PointerEvent } from 'react';\n\nexport function isElement(target: EventTarget): target is Element {\n  return 'closest' in target;\n}\n\nexport function isInsideRect(event: PointerEvent, rect: DOMRect): boolean {\n  return (\n    event.clientX > rect.left &&\n    event.clientX < rect.right &&\n    event.clientY > rect.top &&\n    event.clientY < rect.bottom\n  );\n}\n\nexport function cellsToRowsHTML(cells: Element[], maxRows?: number): string {\n  if (typeof maxRows === 'number') {\n    cells = cells.slice(0, maxRows);\n  }\n\n  return cells\n    .map((cell) => {\n      const height = cell.parentElement?.offsetHeight;\n\n      return `<tr class=\"rds-row\">\n                <td class=\"rds-cell\" style=\"height: ${\n                  height ? height + 'px' : 'unset'\n                }\">\n                  ${cell.innerHTML}\n                </td>\n              </tr>`;\n    })\n    .join('\\n');\n}\n","import {\n  AfterViewInit,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  NgZone,\n  numberAttribute,\n  Output,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\nimport { RdsTableDragHandleDirective } from './table-drag-handle.directive';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\nimport { PointerEvent } from 'react';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  cellsToRowsHTML,\n  isElement,\n  isInsideRect,\n} from './table-draggable.helpers';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nconst HEADER_ROW_SELECTOR = '.rds-header-row';\nconst HEADER_CELL_SELECTOR = '.rds-header-cell';\n\nexport type RdsTableDragEndEvent = {\n  oldIndex: number;\n  newIndex: number;\n};\n\ntype RdsTableDragStartEvent = {\n  nativeEvent: PointerEvent<Element>;\n  draggedHeaderCell: Element;\n};\n\n@Directive({\n  selector: '[rdsTableDraggable], [rds-table-draggable]',\n})\nexport class RdsTableDraggableDirective implements AfterViewInit {\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly document = inject(DOCUMENT);\n  private readonly renderer = inject(Renderer2);\n  private readonly originalTable =\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\n  private readonly zone = inject(NgZone);\n\n  private header: HTMLElement | null = null;\n  private container: HTMLElement;\n  private boundingRect: DOMRect;\n  private columnPreview: HTMLElement | null = null;\n  private currentIndex: number;\n  private originalIndex: number;\n  private clientX: number;\n  private clientY: number;\n  private columnRects: DOMRect[] = [];\n  private moveColumnAnimationFrame: number;\n\n  @ContentChildren(RdsTableDragHandleDirective, { descendants: true })\n  dragHandlesQuery: QueryList<RdsTableDragHandleDirective>;\n\n  @Input({ transform: numberAttribute }) maxPreviewRows = 10;\n\n  @Output()\n  rdsTableDragEnd = new EventEmitter<RdsTableDragEndEvent>();\n\n  ngAfterViewInit(): void {\n    this.zone.runOutsideAngular(() => {\n      this.createDragStartObservable().subscribe((e) => this.onDragStart(e));\n    });\n  }\n\n  private onDragStart({\n    draggedHeaderCell,\n    nativeEvent,\n  }: RdsTableDragStartEvent): void {\n    this.columnRects = [];\n    this.createAndInsertContainerElement();\n    this.saveCoords(nativeEvent);\n    this.getHeaderCells().forEach((headerCell, index) =>\n      this.createColumnAndHandleDrag(draggedHeaderCell, headerCell, index),\n    );\n    this.createDragMoveObservable().subscribe((e) => this.onDragMove(e));\n    this.createDragEndObservable().subscribe(() => this.onDragEnd());\n  }\n\n  private createColumnAndHandleDrag(\n    draggedHeaderCell: Element,\n    headerCell: Element,\n    index: number,\n  ): void {\n    headerCell === draggedHeaderCell\n      ? this.addDraggedColumn(headerCell, index)\n      : this.addColumn(headerCell, index);\n  }\n\n  private addColumn(headerCell: Element, index: number): void {\n    const { width } = headerCell.getBoundingClientRect();\n    const rowsHTML = cellsToRowsHTML(this.getColumnCells(index));\n    this.container.innerHTML += this.createColumnHTML(\n      rowsHTML,\n      width,\n      headerCell,\n    );\n\n    this.saveLastColumnRect(index);\n  }\n\n  private addDraggedColumn(headerCell: Element, index: number): void {\n    this.currentIndex = index;\n    this.originalIndex = index;\n\n    const { width, x, y } = headerCell.getBoundingClientRect();\n    const rowsHTML = cellsToRowsHTML(\n      this.getColumnCells(index),\n      this.maxPreviewRows,\n    );\n\n    this.container.innerHTML += this.createColumnPlaceholderHTML(\n      width,\n      this.boundingRect.height,\n    );\n\n    this.saveLastColumnRect(index);\n\n    this.columnPreview = this.createColumnPreview(headerCell, width, rowsHTML);\n    this.renderer.insertBefore(this.document.body, this.columnPreview, null);\n\n    this.moveColumnAnimationFrame = requestAnimationFrame(\n      this.followPointerFactory(x, y),\n    );\n  }\n\n  private saveLastColumnRect(index: number): void {\n    this.columnRects[index] =\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.container.lastElementChild!.getBoundingClientRect();\n  }\n\n  private createDragStartObservable(): Observable<RdsTableDragStartEvent> {\n    return fromEvent<PointerEvent>(this.originalTable, 'pointerdown').pipe(\n      map((event) => this.addHeaderCellData(event)),\n      filter(Boolean),\n      takeUntilDestroyed(this.destroyRef),\n    );\n  }\n\n  private createDragMoveObservable(): Observable<PointerEvent<Element>> {\n    return fromEvent<PointerEvent>(this.document.body, 'pointermove').pipe(\n      takeUntil(this.rdsTableDragEnd),\n      takeUntilDestroyed(this.destroyRef),\n    );\n  }\n\n  private addHeaderCellData(\n    event: PointerEvent<Element>,\n  ): RdsTableDragStartEvent | null {\n    if (!isElement(event.target)) {\n      return null;\n    }\n\n    if (\n      this.dragHandlesQuery.length &&\n      !this.dragHandlesQuery.some(\n        (handle) => handle.nativeElement === event.target,\n      )\n    ) {\n      return null;\n    }\n\n    // header is rebuilt after each drag end, so we need to query it on each drag start\n    this.header = event.target.closest(HEADER_ROW_SELECTOR);\n\n    if (!this.header) {\n      return null;\n    }\n\n    const draggedHeaderCell = event.target.closest(HEADER_CELL_SELECTOR);\n\n    if (!draggedHeaderCell) {\n      return null;\n    }\n\n    return { draggedHeaderCell, nativeEvent: event };\n  }\n\n  private createAndInsertContainerElement(): void {\n    this.boundingRect = this.originalTable.getBoundingClientRect();\n\n    this.container = this.renderer.createElement('div') as HTMLElement;\n    this.renderer.addClass(this.container, 'rds-table-draggable-preview');\n    this.renderer.setStyle(\n      this.container,\n      'width',\n      this.boundingRect.width + 'px',\n    );\n    this.renderer.setStyle(\n      this.container,\n      'height',\n      this.boundingRect.height + 'px',\n    );\n\n    this.renderer.insertBefore(\n      this.originalTable.parentElement,\n      this.container,\n      this.originalTable,\n    );\n  }\n\n  private getColumnCells(columnIndex: number): Element[] {\n    return Array.from(\n      this.originalTable.querySelectorAll(\n        `.rds-cell:nth-child(${columnIndex + 1})`,\n      ),\n    );\n  }\n\n  private createColumnPreview(\n    headerCell: Element,\n    width: number,\n    rowsHTML: string,\n  ): HTMLElement {\n    const columnPreview = this.renderer.createElement('div') as HTMLDivElement;\n    this.renderer.setStyle(columnPreview, 'position', 'fixed');\n    this.renderer.setStyle(columnPreview, 'top', '0');\n    this.renderer.setStyle(columnPreview, 'left', '0');\n    this.renderer.setStyle(columnPreview, 'z-index', '99999999');\n\n    const height = headerCell.parentElement?.offsetHeight;\n\n    columnPreview.innerHTML = `\n      <table class=\"${\n        this.originalTable.classList.value\n      }\" style=\"width: ${width}px; \">\n          <thead>\n            <tr class=\"rds-row\">\n              <th class=\"rds-header-cell\" style=\"height: ${\n                height ? height + 'px' : 'unset'\n              }\">${headerCell.innerHTML}</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${rowsHTML}\n          </tbody>\n      </table>\n        `;\n\n    return columnPreview;\n  }\n\n  private createColumnHTML(\n    rowsHTML: string,\n    width: number,\n    headerCell: Element,\n  ): string {\n    const height = headerCell.parentElement?.offsetHeight;\n\n    return `\n          <div style=\"flex-shrink: 0;\">\n            <table class=\"${\n              this.originalTable.classList.value\n            }\" style=\"width: ${width}px;\">\n                <thead>\n                  <tr class=\"rds-row\">\n                    <th class=\"rds-header-cell\" style=\"height: ${\n                      height ? height + 'px' : 'unset'\n                    }\">${headerCell.innerHTML}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${rowsHTML}\n                </tbody>\n            </table>\n          </div>\n        `;\n  }\n\n  private createColumnPlaceholderHTML(width: number, height: number): string {\n    return `\n      <div class=\"rds-table-draggable-column-placeholder\" style=\"width: ${width}px; height: ${height}px\"></div>\n    `;\n  }\n\n  private getHeaderCells(): Element[] {\n    return Array.from(\n      this.header?.querySelectorAll(HEADER_CELL_SELECTOR) ?? [],\n    );\n  }\n\n  private swapColumns(aIndex: number, bIndex: number): void {\n    const aColumn = this.container.children.item(aIndex);\n    const bColumn = this.container.children.item(bIndex);\n\n    if (!aColumn || !bColumn) {\n      return;\n    }\n\n    if (bIndex > aIndex) {\n      this.renderer.insertBefore(this.container, bColumn, aColumn);\n    } else {\n      this.renderer.insertBefore(this.container, aColumn, bColumn);\n    }\n  }\n\n  private createDragEndObservable(): Observable<PointerEvent> {\n    return fromEvent<PointerEvent>(window, 'pointerup', { once: true }).pipe(\n      take(1),\n      takeUntilDestroyed(this.destroyRef),\n    );\n  }\n\n  private onDragMove(event: PointerEvent<Element>): void {\n    this.saveCoords(event);\n\n    for (let i = 0; i < this.columnRects.length; i++) {\n      if (i === this.currentIndex) {\n        continue;\n      }\n\n      const rect = this.columnRects[i];\n\n      if (isInsideRect(event, rect)) {\n        this.swapColumns(this.currentIndex, i);\n        this.currentIndex = i;\n\n        break;\n      }\n    }\n  }\n\n  private saveCoords({ clientX, clientY }: PointerEvent<Element>): void {\n    this.clientX = clientX;\n    this.clientY = clientY;\n  }\n\n  private onDragEnd(): void {\n    cancelAnimationFrame(this.moveColumnAnimationFrame);\n    this.removeContainerAndPreview();\n    this.emitChange();\n  }\n\n  private emitChange(): void {\n    this.zone.run(() => {\n      this.rdsTableDragEnd.emit({\n        oldIndex: this.originalIndex,\n        newIndex: this.currentIndex,\n      });\n    });\n  }\n\n  private removeContainerAndPreview(): void {\n    this.renderer.removeChild(this.container.parentElement, this.container);\n\n    if (this.columnPreview) {\n      this.renderer.removeChild(this.document.body, this.columnPreview);\n    }\n  }\n\n  private followPointerFactory(\n    columnOriginX: number,\n    columnOriginY: number,\n  ): () => void {\n    const offsetX = this.clientX - columnOriginX;\n    const offsetY = this.clientY - columnOriginY;\n\n    const followPointer = (): void => {\n      this.renderer.setStyle(\n        this.columnPreview,\n        'transform',\n        `translate(${this.clientX - offsetX}px, ${this.clientY - offsetY}px)`,\n      );\n\n      this.moveColumnAnimationFrame = requestAnimationFrame(followPointer);\n    };\n\n    return followPointer;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsTableComponent } from './table.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { RdsSortDirective } from './sort.directive';\nimport {\n  RdsCellDefDirective,\n  RdsCellDirective,\n  RdsColumnDefDirective,\n  RdsFooterCellDefDirective,\n  RdsFooterCellDirective,\n  RdsHeaderCellDefDirective,\n  RdsHeaderCellDirective,\n} from './cell';\nimport {\n  RdsFooterRowComponent,\n  RdsFooterRowDefDirective,\n  RdsHeaderRowComponent,\n  RdsHeaderRowDefDirective,\n  RdsNoDataRowDirective,\n  RdsRowComponent,\n  RdsRowDefDirective,\n} from './row';\nimport { RdsSortHeaderComponent } from './sort-header';\nimport { RdsTextColumnComponent } from './text-column.component';\nimport { RdsIconComponent } from '../icons';\nimport { RdsTableDraggableDirective } from './table-draggable.directive';\nimport { RdsTableDragHandleDirective } from './table-drag-handle.directive';\n\nconst EXPORTS = [\n  RdsTableComponent,\n  RdsSortDirective,\n  RdsSortHeaderComponent,\n  RdsCellDefDirective,\n  RdsHeaderCellDefDirective,\n  RdsFooterCellDefDirective,\n  RdsColumnDefDirective,\n  RdsHeaderCellDirective,\n  RdsFooterCellDirective,\n  RdsCellDirective,\n  RdsHeaderRowDefDirective,\n  RdsFooterRowDefDirective,\n  RdsRowDefDirective,\n  RdsHeaderRowComponent,\n  RdsFooterRowComponent,\n  RdsRowComponent,\n  RdsNoDataRowDirective,\n  RdsTextColumnComponent,\n  RdsTableDraggableDirective,\n  RdsTableDragHandleDirective,\n];\n\n@NgModule({\n  declarations: [...EXPORTS],\n  exports: [...EXPORTS],\n  imports: [CommonModule, CdkTableModule, RdsIconComponent],\n})\nexport class RdsTableModule {}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nexport const rdsTableRowExpansionAnimation = trigger('rowExpand', [\n  state('collapsed', style({ height: '0px', minHeight: '0' })),\n  state('expanded', style({ height: '*' })),\n  transition(\n    'expanded <=> collapsed',\n    animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n  ),\n]);\n","import { InjectionToken } from '@angular/core';\n\nexport interface RdsThemeConfig {\n  setAutoTheme: boolean;\n}\n\nexport const RDS_THEME_CONFIG = new InjectionToken<RdsThemeConfig>(\n  'RDS_THEME_CONFIG',\n);\n","import { inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\nimport { RdsThemeDark, RdsThemeLight, RdsThemeName } from '@rds/core';\nimport { RDS_THEME_CONFIG } from './theme.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RdsThemeService<T extends string = RdsThemeName | 'auto'> {\n  private static readonly ATTRIBUTE_NAME = 'rds-theme';\n  private readonly documentElement = inject(DOCUMENT).documentElement;\n  private readonly config = inject(RDS_THEME_CONFIG, { optional: true });\n  private readonly _killAutoTheme$ = new Subject<void>();\n  private readonly _globalThemeChange$ = new Subject<T | null>();\n  readonly globalThemeChange$ = this._globalThemeChange$.pipe(\n    distinctUntilChanged(),\n  );\n\n  constructor() {\n    if (!this.config || this.config.setAutoTheme) {\n      this.setAuto();\n    }\n\n    new MutationObserver(() => this.emitValue()).observe(this.documentElement, {\n      attributes: true,\n      attributeFilter: [RdsThemeService.ATTRIBUTE_NAME],\n    });\n  }\n\n  setAuto(): void {\n    this._killAutoTheme$.next();\n\n    const savedThemeChoice = localStorage.getItem(\n      RdsThemeService.ATTRIBUTE_NAME,\n    );\n\n    if (savedThemeChoice) {\n      this.set(savedThemeChoice as T);\n\n      return;\n    }\n\n    if (window.matchMedia) {\n      if (\n        window.matchMedia('(prefers-color-scheme: dark)').matches &&\n        !this.isDark()\n      ) {\n        this.setDark();\n      }\n\n      fromEvent<MediaQueryListEvent>(\n        window.matchMedia('(prefers-color-scheme: dark)'),\n        'change',\n      )\n        .pipe(\n          map((e) => (e.matches ? RdsThemeDark : RdsThemeLight)),\n          filter((t) => t !== this.get()),\n          takeUntil(this._killAutoTheme$),\n        )\n        .subscribe((t) => this.set(t as T));\n    }\n  }\n\n  setLight(element: Element = this.documentElement): void {\n    this.set(RdsThemeLight as T, element);\n  }\n\n  setDark(element: Element = this.documentElement): void {\n    this.set(RdsThemeDark as T, element);\n  }\n\n  isDark(element: Element = this.documentElement): boolean {\n    return this.get(element) === RdsThemeDark;\n  }\n\n  isLight(element: Element = this.documentElement): boolean {\n    return ([RdsThemeLight, null] as (T | null)[]).includes(this.get(element));\n  }\n\n  set(theme: T, element: Element = this.documentElement): void {\n    element.setAttribute(RdsThemeService.ATTRIBUTE_NAME, theme as string);\n    localStorage.setItem(RdsThemeService.ATTRIBUTE_NAME, theme);\n\n    if (element === this.documentElement) {\n      this.emitValue();\n    }\n  }\n\n  clear(element: Element = this.documentElement): void {\n    element.removeAttribute(RdsThemeService.ATTRIBUTE_NAME);\n    localStorage.setItem(RdsThemeService.ATTRIBUTE_NAME, RdsThemeLight);\n    this.emitValue();\n  }\n\n  get(element: Element = this.documentElement): T | null {\n    return element.getAttribute(RdsThemeService.ATTRIBUTE_NAME) as T;\n  }\n\n  has(element: Element = this.documentElement): boolean {\n    return element.hasAttribute(RdsThemeService.ATTRIBUTE_NAME);\n  }\n\n  private emitValue(): void {\n    this._globalThemeChange$.next(\n      this.documentElement.getAttribute(\n        RdsThemeService.ATTRIBUTE_NAME,\n      ) as T | null,\n    );\n  }\n}\n","import { Directive, ElementRef, inject, Input } from '@angular/core';\nimport { RdsThemeService } from './theme.service';\nimport { RdsThemeName } from '@rds/core';\n\n@Directive({\n  selector: '[rds-theme], [rdsTheme]',\n  standalone: true,\n  providers: [RdsThemeService],\n})\nexport class RdsThemeDirective<T extends string = RdsThemeName> {\n  private readonly themeService = inject<RdsThemeService<T>>(RdsThemeService);\n  private readonly nativeElement =\n    inject<ElementRef<Element>>(ElementRef).nativeElement;\n\n  @Input('rds-theme') set theme(theme: T) {\n    if (!!theme && this.themeService.get(this.nativeElement) !== theme) {\n      this._theme = theme;\n      this.themeService.set(this.theme, this.nativeElement);\n    }\n  }\n\n  get theme(): T {\n    return this._theme;\n  }\n\n  private _theme: T;\n}\n","import { NgModule } from '@angular/core';\nimport { RdsThemeDirective } from './theme.directive';\n\n@NgModule({\n  imports: [RdsThemeDirective],\n  exports: [RdsThemeDirective],\n})\nexport class RdsThemeModule {}\n","import { ComponentRef, Injector } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/overlay';\n\nexport class RdsComponentPortal<T> {\n  private _attachedHost?: RdsBasePortalHost<T>;\n\n  constructor(\n    public readonly component: ComponentType<T>,\n    public readonly injector: Injector,\n  ) {}\n\n  attach(host: RdsBasePortalHost<T>, newestOnTop: boolean): ComponentRef<T> {\n    this._attachedHost = host;\n\n    return host.attach(this, newestOnTop);\n  }\n\n  detach(): void {\n    const host = this._attachedHost;\n\n    if (host) {\n      this._attachedHost = undefined;\n\n      return host.detach();\n    }\n  }\n\n  get isAttached(): boolean {\n    return this._attachedHost !== undefined;\n  }\n\n  setAttachedHost(host?: RdsBasePortalHost<T>): void {\n    this._attachedHost = host;\n  }\n}\n\nexport abstract class RdsBasePortalHost<T> {\n  private _attachedPortal?: RdsComponentPortal<T>;\n  private _disposeFn?: () => void;\n\n  attach(portal: RdsComponentPortal<T>, newestOnTop: boolean): ComponentRef<T> {\n    this._attachedPortal = portal;\n\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal(\n    portal: RdsComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T>;\n\n  detach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void): void {\n    this._disposeFn = fn;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { RdsBasePortalHost, RdsComponentPortal } from './rds-component-portal';\n\nexport class RdsDomPortalHost<T> extends RdsBasePortalHost<T> {\n  constructor(\n    private readonly _hostDomElement: Element,\n    private readonly _componentFactoryResolver: ComponentFactoryResolver,\n    private readonly _applicationRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  attachComponentPortal(\n    portal: RdsComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory =\n      this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    const componentRef = componentFactory.create(portal.injector);\n    this._applicationRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._applicationRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    if (newestOnTop) {\n      const newChild = this._getComponentRootNode(componentRef);\n      const refChild = this._hostDomElement.firstChild;\n      this._hostDomElement.insertBefore(newChild, refChild);\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  private _getComponentRootNode(componentRef: ComponentRef<T>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<T>)\n      .rootNodes[0] as HTMLElement;\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { RdsToastRef } from './rds-toast.ref';\nimport { RdsToastIndividualConfig } from './rds-toast.config';\n\nexport class RdsToastPackage<T, A> {\n  private readonly _onTap = new Subject<void>();\n  private readonly _onAction = new Subject<A>();\n\n  constructor(\n    public readonly toastId: number,\n    public readonly config: RdsToastIndividualConfig,\n    public readonly message: string | null | undefined,\n    public readonly title: string | undefined,\n    public readonly toastRef: RdsToastRef<T>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  triggerTap(): void {\n    this._onTap.next();\n\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap(): Observable<void> {\n    return this._onTap.asObservable();\n  }\n\n  triggerAction(action: A): void {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<A> {\n    return this._onAction.asObservable();\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  Component,\n  DestroyRef,\n  HostBinding,\n  HostListener,\n  inject,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport { RdsToastPackage } from './rds-toast.package';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: '[rds-toast-component]',\n  templateUrl: './rds-toast.component.html',\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({ opacity: 0 })),\n      state('active', style({ opacity: 1 })),\n      state('removed', style({ opacity: 0 })),\n      transition(\n        'inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}'),\n      ),\n      transition('active => removed', animate('{{ easeTime }}ms {{ easing }}')),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class RdsToastComponent implements OnDestroy {\n  public readonly rdsToastPackage =\n    inject<RdsToastPackage<RdsToastComponent, void>>(RdsToastPackage);\n  protected readonly destroyRef = inject(DestroyRef);\n  protected readonly ngZone = inject(NgZone, { optional: true });\n\n  message = this.rdsToastPackage.message || null;\n  title = this.rdsToastPackage.title || null;\n  options = this.rdsToastPackage.config;\n  originalTimeout = this.rdsToastPackage.config.timeOut;\n\n  private timeout: number;\n  private hideTime: number;\n\n  @HostBinding('class') toastClasses = '';\n  @HostBinding('@flyInOut')\n  state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.rdsToastPackage.config.easeTime,\n      easing: 'ease-in',\n    },\n  };\n\n  @HostBinding('style.display')\n  get displayStyle(): string | undefined {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n\n    return undefined;\n  }\n\n  @HostListener('click')\n  tapToast(): void {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    this.rdsToastPackage.triggerTap();\n\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n\n  @HostListener('mouseenter')\n  stickAround(): void {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n  }\n\n  @HostListener('mouseleave')\n  delayedHideToast(): void {\n    if (\n      this.options.disableTimeOut === true ||\n      this.options.disableTimeOut === 'extendedTimeOut' ||\n      this.options.extendedTimeOut === 0 ||\n      this.state.value === 'removed'\n    ) {\n      return;\n    }\n\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n  }\n\n  constructor() {\n    this.toastClasses = `rds-toast-${this.rdsToastPackage.config.type} ${this.rdsToastPackage.config.toastClass}`;\n\n    if (this.rdsToastPackage.config.tapToDismiss) {\n      this.toastClasses += ' rds-toast-dismiss-click';\n    }\n\n    if (this.rdsToastPackage.config.closeButton) {\n      this.toastClasses += ' rds-toast-with-close-icon';\n    }\n\n    if (this.title) {\n      this.toastClasses += ' rds-toast-with-title';\n    }\n\n    this.rdsToastPackage.toastRef\n      .afterActivate()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.activateToast());\n    this.rdsToastPackage.toastRef\n      .manualClosed()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.remove());\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  activateToast(): void {\n    this.state = { ...this.state, value: 'active' };\n\n    if (\n      !(\n        this.options.disableTimeOut === true ||\n        this.options.disableTimeOut === 'timeOut'\n      ) &&\n      this.options.timeOut\n    ) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n    }\n  }\n\n  remove(): void {\n    if (this.state.value === 'removed') {\n      return;\n    }\n\n    clearTimeout(this.timeout);\n    this.state = { ...this.state, value: 'removed' };\n    this.outsideTimeout(\n      () => this.rdsToastPackage.toastRef.close(),\n      +this.rdsToastPackage.config.easeTime,\n    );\n  }\n\n  outsideTimeout<T>(func: () => T, timeout: number): void {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => {\n        this.timeout = window.setTimeout(\n          () => this.runInsideAngular(func),\n          timeout,\n        );\n      });\n    } else {\n      this.timeout = window.setTimeout(() => func(), timeout);\n    }\n  }\n\n  private runInsideAngular<T>(func: () => T): void {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n}\n","<div class=\"rds-container-left\"></div>\n<div class=\"rds-toast-inner\">\n  @if (options.icon && options.iconNamespace) {\n    <rds-icon\n      [icon]=\"options.icon\"\n      [namespace]=\"options.iconNamespace\"\n      class=\"rds-toast__leading-icon rds-icon\"\n    />\n  }\n  <div class=\"rds-toast-text\">\n    @if (title) {\n      <div\n        class=\"rds-toast-text__header\"\n        [class]=\"options.titleClass\"\n        [attr.aria-label]=\"title\"\n      >\n        {{ title }}\n      </div>\n    }\n    @if (message && options.enableHtml) {\n      <div\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        class=\"rds-toast-text__message\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n        [innerHTML]=\"message\"\n      ></div>\n    }\n    @if (message && !options.enableHtml) {\n      <div\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        class=\"rds-toast-text__message\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    }\n  </div>\n</div>\n@if (options.closeButton) {\n  <button rds-icon-button class=\"rds-toast__close-button\" (click)=\"remove()\">\n    <rds-icon icon=\"close\" namespace=\"outlined\" />\n  </button>\n}\n","import { RdsIconName, RdsIconNamespace } from '../icons';\nimport { AriaLivePoliteness } from '@angular/cdk/a11y';\nimport { ComponentType } from '@angular/cdk/overlay';\nimport { InjectionToken } from '@angular/core';\n\nexport type RdsToastType = 'info' | 'warning' | 'success' | 'error';\nexport type RdsToastPosition =\n  | 'center-center'\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\n/**\n * Configuration for an individual toast.\n */\nexport interface RdsToastIndividualConfig {\n  /**\n   * toast type\n   * default: 'info'\n   */\n  type: RdsToastType;\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean | 'timeOut' | 'extendedTimeOut';\n  /**\n   * toast time to live in milliseconds\n   * default: 5000\n   */\n  timeOut: number;\n  /**\n   * toast show close button\n   * default: false\n   */\n  closeButton: boolean;\n  /**\n   * time to close after a user hovers over toast\n   * default: 1000\n   */\n  extendedTimeOut: number;\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: ngx-toastr\n   */\n  toastClass: string;\n  /**\n   * toast container position\n   * default: toast-top-right\n   */\n  position: RdsToastPosition;\n  /**\n   * css class on toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on toast message\n   * default: toast-message\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown. RdsToast Component is only supported.\n   * default: RdsToastComponent\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  toastComponent?: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n   * component or template, the announcement message will default to the specified message.\n   */\n  announcementMessage: string | null;\n  /** The politeness level for the LiveAnnouncer announcement. */\n  politeness: AriaLivePoliteness;\n  /**\n   * Icon class\n   */\n  icon: RdsIconName | null;\n  /**\n   * Icon namespace\n   */\n  iconNamespace: RdsIconNamespace | null;\n}\n\nexport interface RdsToastGlobalConfig extends RdsToastIndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n}\n\nexport const DEFAULT_GLOBAL_CONFIG: RdsToastGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n\n  // Individual\n  type: 'info',\n  closeButton: true,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  toastClass: 'rds-toast',\n  position: 'top-right',\n  titleClass: 'rds-toast-title',\n  messageClass: 'rds-toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: false,\n  onActivateTick: false,\n  icon: null,\n  iconNamespace: null,\n  announcementMessage: null,\n  politeness: 'assertive',\n};\n\nexport const RDS_TOAST_GLOBAL_CONFIG_TOKEN =\n  new InjectionToken<RdsToastGlobalConfig>('RDS_TOAST_GLOBAL_CONFIG_TOKEN');\n","import { Directive, ElementRef, inject } from '@angular/core';\n\n@Directive({\n  selector: '[rdsToastContainer]',\n  exportAs: 'rdsToastContainer',\n})\nexport class RdsToastContainerDirective {\n  private readonly elementRef = inject(ElementRef);\n\n  getContainerElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { inject, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { RdsToastComponent } from './rds-toast.component';\nimport { RdsIconComponent } from '../icons';\nimport {\n  DEFAULT_GLOBAL_CONFIG,\n  RDS_TOAST_GLOBAL_CONFIG_TOKEN,\n  RdsToastGlobalConfig,\n} from './rds-toast.config';\nimport { RdsToastContainerDirective } from './rds-toast-container.directive';\nimport { RdsButtonModule } from '../button';\n\n@NgModule({\n  imports: [CommonModule, RdsIconComponent, RdsButtonModule],\n  declarations: [RdsToastComponent, RdsToastContainerDirective],\n  exports: [RdsToastComponent, RdsToastContainerDirective],\n})\nexport class RdsToastModule {\n  private readonly parentModule = inject(RdsToastModule, {\n    optional: true,\n    skipSelf: true,\n  });\n\n  static forRoot(\n    config: Partial<RdsToastGlobalConfig>,\n  ): ModuleWithProviders<RdsToastModule> {\n    return {\n      ngModule: RdsToastModule,\n      providers: [\n        {\n          provide: RDS_TOAST_GLOBAL_CONFIG_TOKEN,\n          useValue: {\n            ...DEFAULT_GLOBAL_CONFIG,\n            ...config,\n          },\n        },\n      ],\n    };\n  }\n\n  constructor() {\n    if (this.parentModule) {\n      throw new Error(\n        'RdsToastModule is already loaded. Import it in the AppModule only.',\n      );\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { inject, Injectable, OnDestroy } from '@angular/core';\nimport { RdsToastModule } from '../rds-toast.module';\n\n@Injectable({\n  providedIn: RdsToastModule,\n})\nexport class RdsToastOverlayContainerService implements OnDestroy {\n  private readonly document = inject(DOCUMENT);\n\n  private containerElement: HTMLElement;\n\n  ngOnDestroy(): void {\n    if (this.containerElement && this.containerElement.parentNode) {\n      this.containerElement.parentNode.removeChild(this.containerElement);\n    }\n  }\n\n  getContainerElement(): HTMLElement {\n    if (!this.containerElement) {\n      this._createContainer();\n    }\n\n    return this.containerElement;\n  }\n\n  private _createContainer(): void {\n    const container = this.document.createElement('div');\n    container.classList.add('rds-toast-overlay-container');\n    this.document.body.appendChild(container);\n    this.containerElement = container;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport {\n  RdsBasePortalHost,\n  RdsComponentPortal,\n} from '../portal/rds-component-portal';\n\nexport class RdsToastOverlayRef<T> {\n  constructor(private readonly _portalHost: RdsBasePortalHost<T>) {}\n\n  attach(portal: RdsComponentPortal<T>, newestOnTop = true): ComponentRef<T> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  detach(): void {\n    return this._portalHost.detach();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  inject,\n  Injectable,\n} from '@angular/core';\n\nimport { RdsDomPortalHost } from '../portal/rds-dom-portal-host';\nimport { RdsToastContainerDirective } from '../rds-toast-container.directive';\nimport { RdsToastOverlayContainerService } from './rds-toast-overlay-container.service';\nimport { RdsToastOverlayRef } from './rds-toast-overlay-ref';\nimport { RdsToastModule } from '../rds-toast.module';\nimport { RdsToastPosition } from '../rds-toast.config';\n\n@Injectable({\n  providedIn: RdsToastModule,\n})\nexport class RdsToastOverlayService {\n  private readonly toastOverlayContainerService = inject(\n    RdsToastOverlayContainerService,\n  );\n  private readonly componentFactoryResolver = inject(ComponentFactoryResolver);\n  private readonly applicationRef = inject(ApplicationRef);\n  private readonly document = inject(DOCUMENT);\n\n  private readonly _paneElements: Map<\n    RdsToastContainerDirective,\n    Record<string, HTMLElement>\n  > = new Map();\n\n  create<T>(\n    position: RdsToastPosition,\n    overlayContainer?: RdsToastContainerDirective,\n  ): RdsToastOverlayRef<T> {\n    return this._createOverlayRef<T>(\n      this._getPaneElement(position, overlayContainer),\n    );\n  }\n\n  private _getPaneElement(\n    positionClass: RdsToastPosition,\n    overlayContainer?: RdsToastContainerDirective,\n  ): HTMLElement {\n    const posClass = `rds-toast-${positionClass}`;\n\n    if (!this._paneElements.get(<RdsToastContainerDirective>overlayContainer)) {\n      this._paneElements.set(<RdsToastContainerDirective>overlayContainer, {});\n    }\n\n    const paneElement = this._paneElements.get(\n      <RdsToastContainerDirective>overlayContainer,\n    ) as Record<string, HTMLElement>;\n\n    if (!paneElement[posClass]) {\n      paneElement[posClass] = this._createPaneElement(\n        posClass,\n        overlayContainer,\n      );\n    }\n\n    return paneElement[posClass];\n  }\n\n  private _createPaneElement(\n    positionClass: string,\n    overlayContainer?: RdsToastContainerDirective,\n  ): HTMLElement {\n    const pane = this.document.createElement('div');\n\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('rds-toast-container');\n\n    if (!overlayContainer) {\n      this.toastOverlayContainerService.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n\n    return pane;\n  }\n\n  private _createPortalHost<T>(pane: HTMLElement): RdsDomPortalHost<T> {\n    return new RdsDomPortalHost<T>(\n      pane,\n      this.componentFactoryResolver,\n      this.applicationRef,\n    );\n  }\n\n  private _createOverlayRef<T>(pane: HTMLElement): RdsToastOverlayRef<T> {\n    return new RdsToastOverlayRef(this._createPortalHost(pane));\n  }\n}\n","import {\n  AbstractType,\n  InjectFlags,\n  InjectionToken,\n  InjectOptions,\n  Injector,\n  Type,\n} from '@angular/core';\nimport { RdsToastPackage } from './rds-toast.package';\n\nexport class RdsToastInjector<T, A> implements Injector {\n  constructor(\n    private readonly _toastPackage: RdsToastPackage<T, A>,\n    private readonly _parentInjector: Injector,\n  ) {}\n\n  get(\n    token:\n      | Type<T | RdsToastPackage<T, A>>\n      | InjectionToken<T>\n      | AbstractType<T>,\n    notFoundValue: undefined,\n    options?: InjectFlags | InjectOptions,\n  ): T | RdsToastPackage<T, A> | null {\n    if (token === RdsToastPackage) {\n      return this._toastPackage;\n    }\n\n    return this._parentInjector.get<T>(token, notFoundValue, options);\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { RdsToastOverlayRef } from './overlay/rds-toast-overlay-ref';\n\nexport class RdsToastRef<T> {\n  componentInstance: T;\n  private readonly _afterClosed = new Subject<void>();\n  private readonly _activate = new Subject<void>();\n  private readonly _manualClose = new Subject<void>();\n  private _isClosed = false;\n\n  constructor(private readonly _rdsToastOverlayRef: RdsToastOverlayRef<T>) {}\n\n  manualClose(): void {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<void> {\n    return this._manualClose.asObservable();\n  }\n\n  close(): void {\n    this._isClosed = true;\n    this._rdsToastOverlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n  }\n\n  isClosed(): boolean {\n    return this._isClosed;\n  }\n\n  afterClosed(): Observable<void> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive(): boolean {\n    return this._activate.isStopped;\n  }\n\n  activate(): void {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  afterActivate(): Observable<void> {\n    return this._activate.asObservable();\n  }\n}\n","import {\n  ComponentRef,\n  inject,\n  Injectable,\n  Injector,\n  NgZone,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { from, noop, Observable } from 'rxjs';\nimport { RdsComponentPortal } from './portal/rds-component-portal';\nimport { RdsToastOverlayService } from './overlay/rds-toast-overlay.service';\nimport { RdsToastInjector } from './rds-toast.injector';\nimport { RdsToastRef } from './rds-toast.ref';\nimport { RdsToastContainerDirective } from './rds-toast-container.directive';\nimport {\n  DEFAULT_GLOBAL_CONFIG,\n  RDS_TOAST_GLOBAL_CONFIG_TOKEN,\n  RdsToastGlobalConfig,\n  RdsToastIndividualConfig,\n} from './rds-toast.config';\nimport { RdsToastPackage } from './rds-toast.package';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { RdsToastComponent } from './rds-toast.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { RdsToastModule } from './rds-toast.module';\n\nexport interface RdsActiveToast<C = RdsToastComponent> {\n  toastId: number;\n  title: string;\n  message: string;\n  portal: ComponentRef<C>;\n  toastRef: RdsToastRef<C>;\n  onShown: Observable<void>;\n  onHidden: Observable<void>;\n  onTap: Observable<void>;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onAction: Observable<any>;\n}\n\n@Injectable({\n  providedIn: RdsToastModule,\n})\nexport class RdsToastService {\n  private readonly overlayService = inject(RdsToastOverlayService);\n  private readonly injector = inject(Injector);\n  private readonly domSanitizer = inject(DomSanitizer);\n  private readonly ngZone = inject(NgZone);\n  private readonly liveAnnouncer = inject(LiveAnnouncer);\n  private readonly toastGlobalConfig = inject(RDS_TOAST_GLOBAL_CONFIG_TOKEN, {\n    optional: true,\n  });\n\n  globalConfig: RdsToastGlobalConfig;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly toasts: RdsActiveToast<any>[] = [];\n  private currentlyActive = 0;\n  private overlayContainer?: RdsToastContainerDirective;\n  private previousToastMessage: string | undefined;\n  private _index = 0;\n\n  constructor() {\n    if (this.toastGlobalConfig) {\n      this.globalConfig = { ...this.toastGlobalConfig };\n    } else {\n      this.globalConfig = { ...DEFAULT_GLOBAL_CONFIG };\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  show<T = RdsToastComponent, A = any>(\n    message?: string,\n    title?: string,\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsActiveToast<T> | null {\n    if (\n      override.type === 'info' ||\n      override.type === 'warning' ||\n      override.type === 'success' ||\n      override.type === 'error'\n    ) {\n      return this[override.type](message, title, override);\n    } else {\n      return this._preBuildNotification<T, A>(\n        message,\n        title,\n        this._applyConfig(override),\n      );\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  success<T = RdsToastComponent, A = any>(\n    message?: string,\n    title?: string,\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsActiveToast<T> | null {\n    override.type = 'success';\n    override.icon = 'checkmark_circle';\n    override.iconNamespace = 'outlined';\n\n    return this._preBuildNotification<T, A>(\n      message,\n      title,\n      this._applyConfig(override),\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error<T = RdsToastComponent, A = any>(\n    message?: string,\n    title?: string,\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsActiveToast<T> | null {\n    override.type = 'error';\n    override.icon = 'close_circle';\n    override.iconNamespace = 'outlined';\n\n    return this._preBuildNotification<T, A>(\n      message,\n      title,\n      this._applyConfig(override),\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info<T = RdsToastComponent, A = any>(\n    message?: string,\n    title?: string,\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsActiveToast<T> | null {\n    override.type = 'info';\n    override.icon = 'info';\n    override.iconNamespace = 'outlined';\n\n    return this._preBuildNotification<T, A>(\n      message,\n      title,\n      this._applyConfig(override),\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warning<T = RdsToastComponent, A = any>(\n    message?: string,\n    title?: string,\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsActiveToast<T> | null {\n    override.type = 'warning';\n    override.icon = 'warning_circle';\n    override.iconNamespace = 'outlined';\n\n    return this._preBuildNotification<T, A>(\n      message,\n      title,\n      this._applyConfig(override),\n    );\n  }\n\n  clear<T>(toastId?: number | RdsActiveToast<T>): void {\n    const toast =\n      typeof toastId === 'number'\n        ? this.toasts.find((t) => t.toastId === toastId)\n        : this.toasts.find((t) => t === toastId);\n\n    if (!toast) {\n      this.toasts.forEach((t) => t.toastRef.manualClose());\n    } else {\n      toast.toastRef.manualClose();\n    }\n  }\n\n  private _remove(toastId: number): boolean {\n    const toastIndex = this.toasts.findIndex((t) => t.toastId === toastId);\n\n    if (toastIndex === -1) {\n      return false;\n    }\n\n    if (!this.toasts[toastIndex].toastRef.isClosed()) {\n      this.toasts[toastIndex].toastRef.close();\n    }\n\n    this.toasts.splice(toastIndex, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n\n    if (!this.globalConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n\n    if (\n      this.currentlyActive < this.globalConfig.maxOpened &&\n      this.toasts[this.currentlyActive]\n    ) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n\n    return true;\n  }\n\n  private _applyConfig(\n    override: Partial<RdsToastIndividualConfig> = {},\n  ): RdsToastGlobalConfig {\n    return {\n      ...this.globalConfig,\n      ...override,\n      // remove this line when library should allow to pass custom component\n      ...{ toastComponent: RdsToastComponent },\n    };\n  }\n\n  private _preBuildNotification<T, A>(\n    message: string | undefined,\n    title: string | undefined,\n    config: RdsToastGlobalConfig,\n  ): RdsActiveToast<T> | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() =>\n        this._buildNotification<T, A>(message, title, config),\n      );\n    }\n\n    return this._buildNotification<T, A>(message, title, config);\n  }\n\n  private _buildNotification<T, A>(\n    message: string | undefined,\n    title: string | undefined,\n    config: RdsToastGlobalConfig,\n  ): RdsActiveToast<T> | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n\n    if (typeof title !== 'string' || title.trim().length === 0) {\n      title = '';\n    }\n\n    if (typeof message !== 'string' || message.trim().length === 0) {\n      message = title;\n      title = '';\n    }\n\n    this.previousToastMessage = message;\n    let keepInactive = false;\n\n    if (\n      this.globalConfig.maxOpened &&\n      this.currentlyActive >= this.globalConfig.maxOpened\n    ) {\n      keepInactive = true;\n\n      if (this.globalConfig.autoDismiss) {\n        this.clear(this.toasts[0]);\n      }\n    }\n\n    const overlayRef = this.overlayService.create<T>(\n      config.position,\n      this.overlayContainer,\n    );\n    this._index = this._index + 1;\n    let sanitizedMessage: string | undefined | null = message;\n\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.domSanitizer.sanitize(\n        SecurityContext.HTML,\n        message,\n      );\n    }\n\n    const toastRef = new RdsToastRef<T>(overlayRef);\n    const toastPackage = new RdsToastPackage<T, A>(\n      this._index,\n      config,\n      sanitizedMessage,\n      title,\n      toastRef,\n    );\n    const toastInjector = new RdsToastInjector<T, A>(\n      toastPackage,\n      this.injector,\n    );\n    const component = new RdsComponentPortal(\n      config.toastComponent,\n      toastInjector,\n    );\n    const portal = overlayRef.attach(component, config.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins: RdsActiveToast<T> = {\n      toastId: this._index,\n      title: title,\n      message: message,\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal,\n    };\n\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      from(Promise.resolve())\n        .pipe(takeUntil(ins.toastRef.afterClosed()))\n        .subscribe(() => ins.toastRef.activate());\n    }\n\n    toastRef.afterClosed().subscribe(() => {\n      this.liveAnnouncer.clear();\n      this._remove(ins.toastId);\n    });\n    toastRef\n      .afterActivate()\n      .pipe(takeUntil(toastRef.afterClosed()))\n      .subscribe(() => {\n        if (config.announcementMessage) {\n          from(\n            this.liveAnnouncer.announce(\n              config.announcementMessage,\n              config.politeness,\n            ),\n          ).subscribe(noop);\n        } else {\n          from(\n            this.liveAnnouncer.announce(\n              `${config.type} Toast: Title: ${ins.title}: Message: ${ins.message}`,\n              config.politeness,\n            ),\n          ).subscribe(noop);\n        }\n      });\n\n    this.toasts.push(ins);\n\n    return ins;\n  }\n}\n","import { FlatTreeControl } from '@angular/cdk/tree';\n\nexport class RdsTreeControl<T, K = T> extends FlatTreeControl<T, K> {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RdsTreeFlattener } from './tree-flattener';\nimport { RdsTreeControl } from './tree-control';\n\nexport class RdsTreeDataSource<T, F, K = F> extends DataSource<F> {\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data: BehaviorSubject<T[]>;\n  get data(): T[] {\n    return this._data.value;\n  }\n\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  constructor(\n    private _treeControl: RdsTreeControl<F, K>,\n    private _treeFlattener: RdsTreeFlattener<T, F, K>,\n    initialData: T[] = [],\n  ) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this._treeControl.expansionModel.changed.asObservable(),\n      this._flattenedData.asObservable(),\n    ];\n\n    return merge(...changes).pipe(\n      map(() => {\n        this._expandedData.next(\n          this._treeFlattener.expandFlattenedNodes(\n            this._flattenedData.value,\n            this._treeControl,\n          ),\n        );\n\n        return this._expandedData.value;\n      }),\n    );\n  }\n\n  disconnect(): void {\n    // no op\n  }\n}\n","import { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { RdsTreeControl } from './tree-control';\n\nexport class RdsTreeFlattener<T, F, K = F> {\n  constructor(\n    public transformFunction: (node: T, level: number) => F,\n    public getLevel: (node: F) => number,\n    public isExpandable: (node: F) => boolean,\n    public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null,\n  ) {}\n\n  _flattenNode(\n    node: T,\n    level: number,\n    resultNodes: F[],\n    parentMap: boolean[],\n  ): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n\n      if (childrenNodes) {\n        if (Array.isArray(childrenNodes)) {\n          this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n        } else {\n          childrenNodes.pipe(take(1)).subscribe((children) => {\n            this._flattenChildren(children, level, resultNodes, parentMap);\n          });\n        }\n      }\n    }\n\n    return resultNodes;\n  }\n\n  _flattenChildren(\n    children: T[],\n    level: number,\n    resultNodes: F[],\n    parentMap: boolean[],\n  ): void {\n    children.forEach((child, index) => {\n      const childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index !== children.length - 1);\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach((node) =>\n      this._flattenNode(node, 0, resultNodes, []),\n    );\n\n    return resultNodes;\n  }\n\n  expandFlattenedNodes(nodes: F[], treeControl: RdsTreeControl<F, K>): F[] {\n    const results: F[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach((node) => {\n      let expand = true;\n\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n\n      if (expand) {\n        results.push(node);\n      }\n\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n\n    return results;\n  }\n}\n","import {\n  CDK_TREE_NODE_OUTLET_NODE,\n  CdkTreeNodeOutlet,\n} from '@angular/cdk/tree';\nimport { Directive, inject, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[rdsTreeNodeOutlet], [rds-tree-node-outlet]',\n  providers: [\n    {\n      provide: CdkTreeNodeOutlet,\n      useExisting: RdsTreeNodeOutletDirective,\n    },\n  ],\n})\nexport class RdsTreeNodeOutletDirective implements CdkTreeNodeOutlet {\n  public readonly viewContainer = inject(ViewContainerRef);\n  public readonly _node = inject(CDK_TREE_NODE_OUTLET_NODE, { optional: true });\n}\n","import { CdkTree } from '@angular/cdk/tree';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsTreeNodeOutletDirective } from './tree-node-outlet.directive';\nimport { RdsTreeControl } from './data-source/tree-control';\n\nexport type RdsTreeNodeSize = 's' | 'm';\n\n@Component({\n  selector: 'rds-tree',\n  exportAs: 'rdsTree',\n  template: ` <ng-container rdsTreeNodeOutlet /> `,\n  styleUrls: ['tree.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n  providers: [{ provide: CdkTree, useExisting: RdsTreeComponent }],\n})\nexport class RdsTreeComponent<T> extends CdkTree<T> {\n  @HostBinding('class') class = 'rds-tree';\n  @HostBinding('attr.role') role = 'tree';\n  @ViewChild(RdsTreeNodeOutletDirective, { static: true })\n  override _nodeOutlet: RdsTreeNodeOutletDirective;\n  @Input()\n  override treeControl: RdsTreeControl<T>;\n  @Input()\n  size: RdsTreeNodeSize = 's';\n}\n","import { CdkTreeNode } from '@angular/cdk/tree';\nimport {\n  AfterContentInit,\n  Attribute,\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  numberAttribute,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { FocusableOption, FocusMonitor } from '@angular/cdk/a11y';\nimport { RdsTreeComponent } from './tree.component';\nimport { TAB_INDEX_DEFAULT, TAB_INDEX_NOT_FOCUSABLE } from '../utils';\n\n@Directive({\n  selector: 'rds-tree-node',\n  exportAs: 'rdsTreeNode',\n  providers: [{ provide: CdkTreeNode, useExisting: RdsTreeNodeDirective }],\n})\nexport class RdsTreeNodeDirective<T>\n  extends CdkTreeNode<T>\n  implements AfterContentInit, OnChanges, OnDestroy, FocusableOption\n{\n  protected readonly renderer = inject(Renderer2);\n  protected readonly focusMonitor = inject(FocusMonitor);\n  protected readonly tree = inject<RdsTreeComponent<T>>(RdsTreeComponent);\n\n  @HostBinding('class') get cssClasses(): string {\n    const cssClasses: string[] = ['rds-tree-node'];\n\n    if (this.disabled) {\n      cssClasses.push('rds-tree-node--disabled');\n    }\n\n    if (!this.disabled && this.active) {\n      cssClasses.push('rds-tree-node--active');\n    }\n\n    if (this.tree) {\n      cssClasses.push(`rds-tree-node--size-${this.tree.size}`);\n    }\n\n    return cssClasses.join(' ');\n  }\n\n  @HostBinding('attr.aria-expanded') get attrAriaExpanded():\n    | boolean\n    | undefined {\n    // don't set aria-expanded for leafs as it violates accessibility\n    if (!this._tree.treeControl.isExpandable(this._data)) {\n      return undefined;\n    }\n\n    return this.isExpanded;\n  }\n\n  @HostBinding('attr.aria-level') get attrAriaLevel(): number {\n    return this.level + 1;\n  }\n\n  @HostBinding('style.--rds-tree-node-level') get styleLevel(): number {\n    return this.level + 1;\n  }\n\n  @HostBinding('tabIndex')\n  get attrTabIndex(): number {\n    return this.disabled ? TAB_INDEX_NOT_FOCUSABLE : this.tabIndex;\n  }\n\n  @Input({ transform: numberAttribute })\n  tabIndex = TAB_INDEX_DEFAULT;\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n  @Input({ transform: booleanAttribute }) active = false;\n\n  @HostListener('keydown.arrowDown')\n  onArrowDown(): void {\n    const nextNode = this._elementRef.nativeElement\n      .nextElementSibling as HTMLElement | null;\n\n    if (!nextNode) {\n      return;\n    }\n\n    this.focusMonitor.focusVia(nextNode, 'keyboard');\n  }\n\n  @HostListener('keydown.arrowUp')\n  onArrowUp(): void {\n    const previousNode = this._elementRef.nativeElement\n      .previousElementSibling as HTMLElement | null;\n\n    if (!previousNode) {\n      return;\n    }\n\n    this.focusMonitor.focusVia(previousNode, 'keyboard');\n  }\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  onExpand(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (\n      this._tree.treeControl.isExpandable(this._data) &&\n      !this._tree.treeControl.isExpanded(this._data)\n    ) {\n      this._tree.treeControl.expand(this.data);\n      event.stopPropagation();\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  onCollapse(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (\n      this._tree.treeControl.isExpandable(this._data) &&\n      this._tree.treeControl.isExpanded(this._data)\n    ) {\n      this._tree.treeControl.collapse(this._data);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(@Attribute('tabindex') tabIndex?: string) {\n    super(inject(ElementRef), inject(RdsTreeComponent));\n    this.tabIndex = numberAttribute(tabIndex, TAB_INDEX_DEFAULT);\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.disabled) {\n      this.focusMonitor.monitor(this._elementRef, true);\n    } else {\n      this.focusMonitor.stopMonitoring(this._elementRef);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['disabled'] &&\n      changes['disabled'].previousValue !== changes['disabled'].currentValue\n    ) {\n      if (this.disabled) {\n        this.focusMonitor.stopMonitoring(this._elementRef);\n        this.renderer.setAttribute(\n          this._elementRef.nativeElement,\n          'disabled',\n          'disabled',\n        );\n      } else {\n        this.renderer.removeAttribute(\n          this._elementRef.nativeElement,\n          'disabled',\n        );\n        this.focusMonitor.monitor(this._elementRef, true);\n      }\n\n      this._checkButtons();\n    }\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  override focus(): void {\n    super.focus();\n  }\n\n  private _checkButtons(): void {\n    const buttonElements =\n      this._elementRef.nativeElement.querySelectorAll<HTMLButtonElement>(\n        'button',\n      );\n    buttonElements.forEach((b) =>\n      this.renderer.setProperty(b, 'disabled', this.disabled),\n    );\n  }\n}\n","import { BooleanInput } from '@angular/cdk/coercion';\nimport { CdkTreeNodeToggle } from '@angular/cdk/tree';\nimport {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  Input,\n} from '@angular/core';\n\n@Directive({\n  selector: '[rdsTreeNodeToggle], [rds-tree-node-toggle]',\n  providers: [\n    { provide: CdkTreeNodeToggle, useExisting: RdsTreeNodeToggleDirective },\n  ],\n})\nexport class RdsTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n  private readonly hostTag = inject(ElementRef).nativeElement.tagName;\n\n  @Input({ alias: 'rdsTreeNodeToggleRecursive', transform: booleanAttribute })\n  override recursive = false;\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @HostListener('keydown.enter', ['$event'])\n  onInteraction(event: KeyboardEvent): void {\n    // CdkTreeNodeToggle listens to (click) and button's enter clicks are handled\n    // using that event, that's why we omit it here - interaction would be doubled\n    if (this.hostTag !== 'BUTTON') {\n      this._toggle(event);\n    }\n  }\n\n  override _toggle(event: Event): void {\n    if (!this.disabled) {\n      super._toggle(event);\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@angular/cdk/tree';\n\n@Directive({\n  selector: '[rdsTreeNodeDef], [rds-tree-node-def]',\n  providers: [\n    { provide: CdkTreeNodeDef, useExisting: RdsTreeNodeDefDirective },\n  ],\n})\nexport class RdsTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('rdsTreeNode') data: T;\n  @Input('rdsTreeNodeDefWhen') override when: (\n    index: number,\n    nodeData: T,\n  ) => boolean;\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[rdsTreeNodeContentLeft], [rds-tree-node-content-left]',\n  exportAs: 'rdsTreeNodeContentLeft',\n})\nexport class RdsTreeNodeContentLeftDirective {\n  @HostBinding('class.rds-tree-node--content-left') contentLeftClass = true;\n\n  @HostListener('keydown.space', ['$event'])\n  @HostListener('click', ['$event'])\n  onClick(event: Event): void {\n    event.stopPropagation();\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[rdsTreeNodeContentRight], [rds-tree-node-content-right]',\n  exportAs: 'rdsTreeNodeContentRight',\n})\nexport class RdsTreeNodeContentRightDirective {\n  @HostBinding('class.rds-tree-node--content-right') contentRightClass = true;\n\n  @HostListener('keydown.space', ['$event'])\n  @HostListener('click', ['$event'])\n  onClick(event: Event): void {\n    event.stopPropagation();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nexport type RdsTreeNodeTextAlignment = 'left' | 'center' | 'right';\n\n@Component({\n  selector: 'rds-tree-node-text',\n  exportAs: 'rdsTreeText',\n  template: `\n    <span class=\"rds-tree-text-node\" #rdsTreeNodeElement>\n      <ng-content />\n    </span>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsTreeNodeTextComponent implements OnChanges {\n  @HostBinding('class.rds-tree-text-node') truncateClass = true;\n  @HostBinding('class.rds-tree-text-node__container') containerClass = true;\n  @HostBinding('class.rds-tree-node--content-left') contentLeftClass = true;\n  @HostBinding('class.rds-tree-text-node__container-align-right')\n  alignRightClass = false;\n  @HostBinding('class.rds-tree-text-node__container-align-center')\n  alignCenterClass = false;\n\n  @ViewChild('rdsTreeNodeElement', { static: true })\n  rdsTreeNodeElement: ElementRef;\n\n  @Input()\n  textAlignment: RdsTreeNodeTextAlignment = 'left';\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['textAlignment'] &&\n      changes['textAlignment'].previousValue !==\n        changes['textAlignment'].currentValue\n    ) {\n      if (this.textAlignment === 'right') {\n        this.alignRightClass = true;\n        this.alignCenterClass = false;\n      } else if (this.textAlignment === 'center') {\n        this.alignRightClass = false;\n        this.alignCenterClass = true;\n      } else {\n        this.alignRightClass = false;\n        this.alignCenterClass = false;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RdsTreeNodeDirective } from './tree-node.directive';\nimport { RdsTreeComponent } from './tree.component';\nimport { RdsTreeNodeToggleDirective } from './tree-node-toggle.directive';\nimport { RdsTreeNodeOutletDirective } from './tree-node-outlet.directive';\nimport { RdsTreeNodeDefDirective } from './tree-node-def.directive';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { RdsTreeNodeContentLeftDirective } from './tree-node-content-left.directive';\nimport { RdsTreeNodeContentRightDirective } from './tree-node-content-right.directive';\nimport { RdsTreeNodeTextComponent } from './tree-node-text.component';\n\nconst RDS_TREE_ELEMENTS = [\n  RdsTreeNodeDefDirective,\n  RdsTreeNodeToggleDirective,\n  RdsTreeComponent,\n  RdsTreeNodeDirective,\n  RdsTreeNodeOutletDirective,\n  RdsTreeNodeContentLeftDirective,\n  RdsTreeNodeContentRightDirective,\n  RdsTreeNodeTextComponent,\n];\n\n@NgModule({\n  imports: [CdkTreeModule],\n  exports: [...RDS_TREE_ELEMENTS],\n  declarations: [...RDS_TREE_ELEMENTS],\n})\nexport class RdsTreeModule {}\n","import { RdsTreeControl } from './data-source/tree-control';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RdsFlatTreeNode } from './tree.types';\n\ninterface SelectionModelOptions<T> {\n  // _multiple?: boolean is omitted on purpose as it has to be set to true anyway\n  initiallySelectedValues?: T[];\n  _emitChanges?: boolean;\n  compareWith?: (o1: T, o2: T) => boolean;\n}\n\nexport class RdsTreeSelectionModel<\n  T extends { level: number } = RdsFlatTreeNode,\n  K = T,\n> extends SelectionModel<T> {\n  constructor(\n    private treeControl: RdsTreeControl<T, K>,\n    getLevel?: ((node: T) => number) | null,\n    selectionModelOptions?: SelectionModelOptions<T>,\n  ) {\n    super(\n      true,\n      selectionModelOptions?.initiallySelectedValues,\n      selectionModelOptions?._emitChanges,\n      selectionModelOptions?.compareWith,\n    );\n\n    if (getLevel) {\n      this.getLevel = getLevel;\n    }\n  }\n\n  descendantsAllSelected(node: T): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    return (\n      descendants.length > 0 &&\n      descendants.every((child) => {\n        return this.isSelected(child);\n      })\n    );\n  }\n\n  /**\n   * @returns false when all or none selected, otherwise true\n   */\n  descendantsPartiallySelected(node: T): boolean {\n    return (\n      this.descendantsAnySelected(node) && !this.descendantsAllSelected(node)\n    );\n  }\n\n  /**\n   * @returns true when at least one descendant is selected, otherwise false\n   */\n  descendantsAnySelected(node: T): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    return descendants.some((child) => this.isSelected(child));\n  }\n\n  itemSelectionToggle(node: T): void {\n    this.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.isSelected(node)\n      ? this.select(...descendants)\n      : this.deselect(...descendants);\n\n    // Force update for the parent\n    descendants.forEach((child) => this.isSelected(child));\n    this.checkAllParentsSelection(node);\n  }\n\n  leafItemSelectionToggle(node: T): void {\n    this.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  checkAllParentsSelection(node: T): void {\n    let parent = this.getParentNode(node);\n\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n  checkRootNodeSelection(node: T): void {\n    const nodeSelected = this.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected =\n      descendants.length > 0 &&\n      descendants.every((child) => {\n        return this.isSelected(child);\n      });\n\n    if (nodeSelected && !descAllSelected) {\n      this.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.select(node);\n    }\n  }\n\n  getLevel = (node: T): number => node.level;\n\n  getParentNode(node: T): T | null {\n    const currentLevel = this.getLevel(node);\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n\n      if (this.getLevel(currentNode) < currentLevel) {\n        return currentNode;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector:\n    'rds-icon[rds-timeline-event-icon-marker], rds-icon[rdsTimelineEventIconMarker]',\n})\nexport class RdsTimelineEventIconMarkerDirective {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector:\n    'rds-timeline-opposite, [rds-timeline-opposite], [rdsTimelineOpposite]',\n})\nexport class RdsTimelineOppositeDirective {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsTimelineEventIconMarkerDirective } from './timeline-event-icon-marker.directive';\nimport { RdsTimelineOppositeDirective } from './timeline-event-opposite.directive';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\nexport type RdsTimelineEventStatus =\n  | 'default'\n  | 'danger'\n  | 'disabled'\n  | 'success'\n  | 'warning';\n\nexport type RdsTimelineEvent<T> = T & { status?: RdsTimelineEventStatus };\n\n@Component({\n  selector: 'rds-timeline-event',\n  template: `\n    <div class=\"rds-timeline-event-content\">\n      <ng-content />\n    </div>\n    <div class=\"rds-timeline-event-separator\">\n      <div\n        #marker\n        class=\"rds-timeline-event{{\n          iconMarkerTemplate ? '-icon' : ''\n        }}-marker rds-timeline-event{{\n          iconMarkerTemplate ? '-icon' : ''\n        }}-marker-{{ event.status ?? 'default' }}\"\n        [tabindex]=\"event.status === 'disabled' ? -1 : 0\"\n        [class.active]=\"isActive\"\n        (click)=\"selected.emit()\"\n        (keydown.enter)=\"selected.emit()\"\n        (keydown.space)=\"selected.emit()\"\n      >\n        <ng-content\n          select=\"rds-icon[rds-timeline-event-icon-marker], rds-icon[rdsTimelineEventIconMarker]\"\n        />\n      </div>\n      <div class=\"rds-timeline-event-connector\"></div>\n    </div>\n    <div class=\"rds-timeline-event-opposite\">\n      @if (oppositeTemplate) {\n        <ng-content\n          select=\"rds-timeline-opposite, [rds-timeline-opposite], [rdsTimelineOpposite]\"\n        />\n      }\n    </div>\n  `,\n  styleUrls: ['./timeline-event.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsTimelineEventComponent<T>\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  private readonly elementRef = inject(ElementRef);\n  private readonly contentObserver = inject(ContentObserver);\n  private readonly focusMonitor = inject(FocusMonitor);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  @HostBinding('class') private readonly class = 'rds-timeline-event';\n\n  @Input({ required: true }) event: RdsTimelineEvent<T>;\n\n  @Output() selected = new EventEmitter<void>();\n\n  @ContentChild(RdsTimelineEventIconMarkerDirective)\n  protected iconMarkerTemplate: TemplateRef<RdsTimelineEventIconMarkerDirective>;\n  @ContentChild(RdsTimelineOppositeDirective)\n  protected oppositeTemplate: TemplateRef<RdsTimelineOppositeDirective>;\n\n  @ViewChild('marker', { static: true }) protected marker: HTMLElement;\n\n  set isActive(value: boolean) {\n    if (this._isActive !== value) {\n      this._isActive = value;\n      this.cdr.markForCheck();\n    }\n  }\n\n  get isActive(): boolean {\n    return this._isActive;\n  }\n\n  private _isActive = false;\n\n  ngOnInit(): void {\n    this.contentObserver\n      .observe(this.elementRef)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.marker);\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.marker);\n  }\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { delay, filter, map, takeUntil } from 'rxjs/operators';\nimport { RdsTimelineEventComponent } from './timeline-event/timeline-event.component';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nexport type RdsTimelineAlign = 'start' | 'end' | 'alternate';\nexport type RdsTimelineOrientation = 'vertical' | 'horizontal';\nexport type RdsTimelinePresentationMode = 'slider' | 'pagination' | 'scroll';\n\n@Component({\n  selector: 'rds-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsTimelineComponent\n  implements AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly removeOldHandlers$ = new Subject<void>();\n\n  @Input() align: RdsTimelineAlign = 'start';\n  @Input() presentationMode: RdsTimelinePresentationMode = 'scroll';\n  @Input() orientation: RdsTimelineOrientation = 'vertical';\n\n  protected activePage = 1;\n  protected numberOfPages = 0;\n  private readonly triggerCalculation$ = new Subject<void>();\n  private readonly scroll$ = new Subject<'start' | 'end'>();\n  private isScrolling = false;\n  private isScrollable: boolean;\n  private pageOffsetFactor = 0.3;\n\n  @HostBinding('class') protected class = 'rds-timeline';\n  @ViewChild('widgetsContent')\n  protected widgetsContent!: ElementRef<HTMLElement>;\n\n  @ContentChildren(RdsTimelineEventComponent) protected events: QueryList<\n    RdsTimelineEventComponent<unknown>\n  >;\n\n  protected get showGradientRight(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'horizontal' &&\n      !this.isStartButtonActive &&\n      this.isEndButtonActive\n    );\n  }\n\n  protected get showGradientLeft(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'horizontal' &&\n      this.isStartButtonActive &&\n      !this.isEndButtonActive\n    );\n  }\n\n  protected get showCircleGradientHorizontal(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'horizontal' &&\n      this.isStartButtonActive &&\n      this.isEndButtonActive\n    );\n  }\n\n  protected get showCircleGradientVertical(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'vertical' &&\n      this.isStartButtonActive &&\n      this.isEndButtonActive\n    );\n  }\n\n  protected get showGradientTop(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'vertical' &&\n      !this.isStartButtonActive &&\n      this.isEndButtonActive\n    );\n  }\n\n  protected get showGradientBottom(): boolean {\n    return (\n      this.presentationMode !== 'scroll' &&\n      this.orientation === 'vertical' &&\n      this.isStartButtonActive &&\n      !this.isEndButtonActive\n    );\n  }\n\n  protected get isStartButtonActive(): boolean {\n    return this.numberOfPages > 0 && this.activePage > 1;\n  }\n\n  protected get isEndButtonActive(): boolean {\n    return this.numberOfPages > 0 && this.activePage < this.numberOfPages;\n  }\n\n  ngAfterViewInit(): void {\n    this.triggerCalculation$\n      .pipe(delay(1), takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.calculateNumberOfPages());\n\n    this.setupScrollListeners();\n\n    this.setupEventHandlers(this.events);\n\n    this.events.changes\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((events) => {\n        this.removeOldHandlers$.next();\n        this.setupEventHandlers(events);\n        this.triggerCalculation$.next();\n      });\n\n    this.triggerCalculation$.next();\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.orientation === 'horizontal') {\n      const newValue =\n        this.widgetsContent.nativeElement.scrollWidth >\n        this.widgetsContent.nativeElement.clientWidth;\n      this.contentScroll(newValue);\n    } else {\n      const newValue =\n        this.widgetsContent.nativeElement.scrollHeight >\n        this.widgetsContent.nativeElement.clientHeight;\n      this.contentScroll(newValue);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      'orientation' in changes ||\n      'align' in changes ||\n      'presentationMode' in changes\n    ) {\n      this.activePage = 1;\n      this.triggerCalculation$.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.triggerCalculation$.complete();\n  }\n\n  hasPrevPage(): boolean {\n    return 1 < this.activePage && this.activePage <= this.numberOfPages;\n  }\n\n  hasNextPage(): boolean {\n    return this.activePage < this.numberOfPages;\n  }\n\n  scrollStart(): void {\n    this.scroll$.next('start');\n  }\n\n  scrollEnd(): void {\n    this.scroll$.next('end');\n  }\n\n  protected contentScroll(newValue?: boolean): void {\n    if (this.isScrollable !== newValue) {\n      this.isScrollable = !!newValue;\n      this.cdr.markForCheck();\n    }\n  }\n\n  private setupEventHandlers<T>(\n    events: QueryList<RdsTimelineEventComponent<T>>,\n  ): void {\n    merge(...events.map((e) => e.selected.pipe(map(() => e))))\n      .pipe(\n        takeUntil(this.removeOldHandlers$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((e) => this.updateEventStates(e));\n  }\n\n  private setupScrollListeners(): void {\n    fromEvent(this.widgetsContent.nativeElement, 'scroll')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => (this.isScrolling = true));\n    fromEvent(this.widgetsContent.nativeElement, 'scrollend')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => (this.isScrolling = false));\n\n    this.scroll$\n      .pipe(\n        filter(() => !this.isScrolling),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((dir) => this.scroll(dir));\n  }\n\n  private updateEventStates<T>(selected: RdsTimelineEventComponent<T>): void {\n    if (selected.event.status !== 'disabled') {\n      this.events.forEach((eventComponent) => {\n        eventComponent.isActive = selected === eventComponent;\n      });\n    }\n  }\n\n  private scroll(direction: 'start' | 'end'): void {\n    const hasPage =\n      direction === 'end' ? this.hasNextPage() : this.hasPrevPage();\n\n    if (hasPage) {\n      const directionSign = direction === 'end' ? 1 : -1;\n      this.activePage = this.activePage + directionSign;\n      const scrollOptions: ScrollToOptions = { behavior: 'smooth' };\n\n      if (this.orientation === 'horizontal') {\n        scrollOptions.left =\n          this.widgetsContent.nativeElement.scrollLeft +\n          this.getScrollOffset() * directionSign;\n      } else {\n        scrollOptions.top =\n          this.widgetsContent.nativeElement.scrollTop +\n          this.getScrollOffset() * directionSign;\n      }\n\n      this.widgetsContent.nativeElement.scrollTo(scrollOptions);\n      this.cdr.markForCheck();\n    }\n  }\n\n  private calculateNumberOfPages(): void {\n    const beforeNumberOfPages = this.numberOfPages;\n    const segments =\n      this.orientation === 'horizontal'\n        ? (this.widgetsContent.nativeElement.scrollWidth -\n            this.widgetsContent.nativeElement.clientWidth) /\n          this.getScrollOffset()\n        : (this.widgetsContent.nativeElement.scrollHeight -\n            this.widgetsContent.nativeElement.clientHeight) /\n          this.getScrollOffset();\n    this.numberOfPages = Math.ceil(segments) + 1;\n\n    if (beforeNumberOfPages !== this.numberOfPages) {\n      this.cdr.markForCheck();\n    }\n\n    setTimeout(() => {\n      this.widgetsContent.nativeElement.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'instant',\n      });\n\n      // when changing orientation something triggers scroll event, that's why the line below is needed\n      this.isScrolling = false;\n    }, 25);\n  }\n\n  private getScrollOffset(): number {\n    const pageWidth =\n      this.orientation === 'horizontal'\n        ? this.widgetsContent.nativeElement.offsetWidth\n        : this.widgetsContent.nativeElement.offsetHeight;\n\n    return pageWidth - pageWidth * this.pageOffsetFactor;\n  }\n}\n","<div class=\"rds-scrolling rds-scrolling-{{ orientation }}\">\n  @if (presentationMode === 'slider') {\n    @if (isStartButtonActive) {\n      <div\n        class=\"rds-arrow\"\n        [class.rds-arrow-left]=\"orientation === 'horizontal'\"\n        [class.rds-arrow-top]=\"orientation === 'vertical'\"\n      >\n        <button rds-icon-button size=\"s\" (click)=\"scrollStart()\">\n          <rds-icon\n            namespace=\"filled\"\n            [icon]=\"\n              orientation === 'horizontal' ? 'chevron_left' : 'chevron_up'\n            \"\n          />\n        </button>\n      </div>\n    }\n  }\n  <div\n    class=\"rds-scrolling-container\"\n    [class.rds-timeline-circle-gradient-horizontal]=\"\n      showCircleGradientHorizontal\n    \"\n    [class.rds-timeline-circle-gradient-vertical]=\"showCircleGradientVertical\"\n    [class.rds-timeline-gradient-right]=\"showGradientRight\"\n    [class.rds-timeline-gradient-left]=\"showGradientLeft\"\n    [class.rds-timeline-gradient-top]=\"showGradientTop\"\n    [class.rds-timeline-gradient-bottom]=\"showGradientBottom\"\n  >\n    <div\n      #widgetsContent\n      class=\"rds-scrolling-wrapper rds-scrolling-wrapper-{{\n        orientation\n      }} rds-scrolling-wrapper-{{ presentationMode }}\"\n      (scroll)=\"contentScroll()\"\n    >\n      <div\n        class=\"rds-timeline-wrapper rds-timeline-wrapper-{{\n          align\n        }} rds-timeline-wrapper-{{ orientation }}\"\n      >\n        <ng-content select=\"rds-timeline-event\" />\n      </div>\n    </div>\n  </div>\n  @if (presentationMode === 'slider') {\n    @if (isEndButtonActive) {\n      <div\n        class=\"rds-arrow\"\n        [class.rds-arrow-right]=\"orientation === 'horizontal'\"\n        [class.rds-arrow-down]=\"orientation === 'vertical'\"\n      >\n        <button rds-icon-button size=\"s\" (click)=\"scrollEnd()\">\n          <rds-icon\n            namespace=\"filled\"\n            [icon]=\"\n              orientation === 'horizontal' ? 'chevron_right' : 'chevron_down'\n            \"\n          />\n        </button>\n      </div>\n    }\n  }\n  @if (presentationMode === 'pagination') {\n    <div class=\"rds-timeline-pagination\">\n      <button\n        rds-icon-button\n        size=\"s\"\n        [disabled]=\"!isStartButtonActive\"\n        (click)=\"scrollStart()\"\n      >\n        <rds-icon\n          namespace=\"filled\"\n          icon=\"chevron_left\"\n          [class.active]=\"isStartButtonActive\"\n        />\n      </button>\n      <div class=\"rds-timeline-pagination-text\">\n        {{ activePage }}/{{ numberOfPages }}\n      </div>\n      <button\n        rds-icon-button\n        size=\"s\"\n        [disabled]=\"!isEndButtonActive\"\n        (click)=\"scrollEnd()\"\n      >\n        <rds-icon\n          namespace=\"filled\"\n          icon=\"chevron_right\"\n          [class.active]=\"isEndButtonActive\"\n        />\n      </button>\n    </div>\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsTimelineComponent } from './timeline.component';\nimport { RdsTimelineEventComponent } from './timeline-event/timeline-event.component';\nimport { RdsTimelineEventIconMarkerDirective } from './timeline-event/timeline-event-icon-marker.directive';\nimport { RdsTimelineOppositeDirective } from './timeline-event/timeline-event-opposite.directive';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\n\nconst ELEMENTS = [\n  RdsTimelineComponent,\n  RdsTimelineEventComponent,\n  RdsTimelineEventIconMarkerDirective,\n  RdsTimelineOppositeDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, RdsIconComponent, RdsButtonModule],\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsTimelineModule {}\n","import { BehaviorSubject } from 'rxjs';\nimport { RdsFileItemState, RdsUploadFilter } from './upload.types';\nimport { RdsUploadIntlToken } from './rds-upload-intl.service';\n\nlet id = 0;\n\nexport class RdsFileItem {\n  private _errorIntlToken: RdsUploadIntlToken = 'EMPTY';\n  private readonly _progress$ = new BehaviorSubject<number | null>(0);\n  private readonly _state$ = new BehaviorSubject<RdsFileItemState>('ready');\n\n  get errorIntlToken(): RdsUploadIntlToken {\n    return this._errorIntlToken;\n  }\n\n  readonly progress$ = this._progress$.asObservable();\n  readonly state$ = this._state$.asObservable();\n  readonly id = id++;\n  readonly hasFailedFilters = !!this.failedFilters.length;\n\n  get state(): RdsFileItemState {\n    return this._state$.value;\n  }\n\n  private set state(v: RdsFileItemState) {\n    if (v !== this.state) {\n      this._state$.next(v);\n    }\n  }\n\n  get isUploading(): boolean {\n    return this.state === 'uploading';\n  }\n\n  constructor(\n    public readonly file: File,\n    public readonly failedFilters: RdsUploadFilter[],\n  ) {\n    if (this.hasFailedFilters) {\n      this._errorIntlToken = this.failedFilters[0].descriptionIntlToken;\n      this.state = 'error';\n    }\n  }\n\n  onBeforeUpload(): void {\n    this._errorIntlToken = 'EMPTY';\n    this.state = 'uploading';\n    this._progress$.next(0);\n  }\n\n  onProgress(progress: number | null): void {\n    this._progress$.next(progress);\n  }\n\n  onSuccess(): void {\n    this.state = 'success';\n    this._progress$.next(100);\n  }\n\n  onError(): void {\n    this._errorIntlToken = 'uploadFailed';\n    this.state = 'error';\n  }\n\n  onAbort(): void {\n    this.state = 'aborted';\n  }\n}\n","import { RdsUploadFilter, RdsUploadConfig } from './upload.types';\n\n// those consts exist to avoid circular reference in type definition\nexport const FILTER_QUEUE_LIMIT_DESCRIPTION_INTL_TOKEN =\n  'queueLimitFilterDescription';\nexport const FILTER_FILE_SIZE_DESCRIPTION_INTL_TOKEN =\n  'fileSizeFilterDescription';\nexport const FILTER_FILE_TYPE_DESCRIPTION_INTL_TOKEN =\n  'fileTypeFilterDescription';\n\nexport class RdsUploadFilters {\n  static readonly queueLimit: RdsUploadFilter = {\n    name: 'queueLimit',\n    descriptionIntlToken: FILTER_QUEUE_LIMIT_DESCRIPTION_INTL_TOKEN,\n    preventsAddingToQueue: true,\n    fn: (item, config, queue) =>\n      !config.queueLimit || queue.length < config.queueLimit,\n  };\n\n  static readonly fileSize: RdsUploadFilter = {\n    name: 'fileSize',\n    descriptionIntlToken: FILTER_FILE_SIZE_DESCRIPTION_INTL_TOKEN,\n    fn: (item, config) =>\n      !(config.maxFileSize && item.size > config.maxFileSize),\n  };\n\n  static readonly fileType: RdsUploadFilter = {\n    name: 'fileType',\n    descriptionIntlToken: FILTER_FILE_TYPE_DESCRIPTION_INTL_TOKEN,\n    fn: verifyAccept,\n  };\n\n  static compose(\n    currentFilters: RdsUploadFilter[],\n    config: RdsUploadConfig,\n  ): RdsUploadFilter[] {\n    const filters = new Set([...currentFilters, RdsUploadFilters.queueLimit]);\n\n    config.maxFileSize && filters.add(RdsUploadFilters.fileSize);\n    config.accept && filters.add(RdsUploadFilters.fileType);\n\n    return Array.from(filters);\n  }\n}\n\nfunction verifyAccept(file: File, config: RdsUploadConfig): boolean {\n  const accept = config.accept?.filter((v) => !!v);\n\n  if (!accept || !accept.length) {\n    return true;\n  }\n\n  const allowed = parseAccept(accept);\n  const extension = extractExtension(file.name);\n\n  return (\n    allowed.extension.includes(extension) ||\n    allowed.mime.some((regex) => regex.test(file.type))\n  );\n}\n\nfunction parseAccept(accept: string[]): ParsedAccept {\n  return accept.reduce(\n    (acc, curr) => {\n      curr = curr.trim().toLowerCase();\n\n      if (curr.startsWith('.')) {\n        acc.extension.push(...unifyJpgExtensionsIfNeeded(curr));\n      } else {\n        acc.mime.push(new RegExp(curr.replace('*', '.*')));\n      }\n\n      return acc;\n    },\n    { extension: [], mime: [] } as ParsedAccept,\n  );\n}\n\nfunction unifyJpgExtensionsIfNeeded(extension: string): string[] {\n  if (extension === '.jpg' || extension === '.jpeg') {\n    return ['.jpeg', '.jpg'];\n  } else {\n    return [extension];\n  }\n}\n\nfunction extractExtension(filename: string): string {\n  const splitName = filename.split('.');\n\n  return '.' + splitName[splitName.length - 1].toLowerCase();\n}\n\ntype ParsedAccept = { extension: string[]; mime: RegExp[] };\n","import { RdsFileItem } from './file-item.class';\nimport {\n  RdsFileItemProgressChange,\n  RdsFileItemStatusChange,\n  RdsUploadConfig,\n} from './upload.types';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpEventType,\n  HttpProgressEvent,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\n\nexport class RdsHttpClientWrapper<T = unknown> {\n  private readonly form = new FormData();\n  private readonly request: HttpRequest<FormData>;\n  private readonly response$: Observable<HttpEvent<T>>;\n  private responseSubscription?: Subscription;\n\n  progress?: (change: RdsFileItemProgressChange) => void;\n  success?: (change: RdsFileItemStatusChange<T>) => void;\n  error?: (change: RdsFileItemStatusChange<T, HttpErrorResponse>) => void;\n  complete?: (\n    change: RdsFileItemStatusChange<T, HttpResponse<T> | HttpErrorResponse>,\n  ) => void;\n  cancel?: (change: RdsFileItemStatusChange<T>) => void;\n\n  constructor(\n    private readonly item: RdsFileItem,\n    readonly config: RdsUploadConfig,\n    private readonly client: HttpClient,\n  ) {\n    this.form.append('file', item.file, item.file.name);\n\n    const method = config.method ?? 'POST';\n    this.request = new HttpRequest(method, config.url, this.form, {\n      headers: config.headers,\n      reportProgress: true,\n      withCredentials: !!config.authToken,\n      responseType: config.responseType,\n    });\n\n    if (config.authToken) {\n      this.request = this.request.clone({\n        headers: this.request.headers.set('Authorization', config.authToken),\n      });\n    }\n\n    this.response$ = this.client.request(this.request);\n  }\n\n  abort(): void {\n    this.responseSubscription?.unsubscribe();\n    this.responseSubscription = undefined;\n    this.onAbort();\n  }\n\n  send(): void {\n    this.responseSubscription = this.response$.subscribe({\n      error: (e) => this.onError(e),\n      next: (e) => {\n        if (e.type === HttpEventType.UploadProgress) {\n          this.onProgress(e);\n        } else if (e.type === HttpEventType.Response) {\n          this.onSuccess(e);\n        }\n      },\n    });\n  }\n\n  private onSuccess(event: HttpResponse<T>): void {\n    const change: RdsFileItemStatusChange<T> = {\n      item: this.item,\n      event,\n    };\n\n    this.success && this.success(change);\n    this.complete && this.complete(change);\n  }\n\n  private onError(event: HttpErrorResponse): void {\n    const change: RdsFileItemStatusChange<T, HttpErrorResponse> = {\n      item: this.item,\n      event,\n    };\n\n    this.error && this.error(change);\n    this.complete && this.complete(change);\n  }\n\n  private onProgress(event: HttpProgressEvent): void {\n    const progress =\n      event.total != undefined\n        ? Math.round((event.loaded * 100) / event.total)\n        : null;\n\n    this.progress && this.progress({ item: this.item, progress });\n  }\n\n  private onAbort(): void {\n    const change: RdsFileItemStatusChange<T> = {\n      item: this.item,\n    };\n\n    this.cancel && this.cancel(change);\n    this.complete && this.complete(change);\n  }\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { RdsFileItem } from './file-item.class';\nimport { RdsUploadFilters } from './upload.filters';\nimport {\n  RdsFileItemProgressChange,\n  RdsFileItemStatusChange,\n  RdsUploadConfig,\n  RdsUploadFileAddError,\n  RdsUploadFilter,\n} from './upload.types';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n} from '@angular/common/http';\nimport { RdsHttpClientWrapper } from './http-client-wrapper';\n\nexport class RdsFileUploader<T = unknown> {\n  _config: RdsUploadConfig & Required<Pick<RdsUploadConfig, 'filters'>> = {\n    autoUpload: true,\n    filters: [],\n    url: '',\n  };\n\n  readonly queue: RdsFileItem[] = [];\n  readonly itemIdToRequest = new Map<number, RdsHttpClientWrapper<T>>();\n\n  get config(): Readonly<RdsUploadConfig> {\n    return this._config;\n  }\n\n  private readonly events = {\n    fileInvalid: new Subject<RdsUploadFileAddError>(),\n    fileItemSuccess: new Subject<RdsFileItemStatusChange<T>>(),\n    fileItemError: new Subject<RdsFileItemStatusChange<T, HttpErrorResponse>>(),\n    fileItemCanceled: new Subject<RdsFileItemStatusChange<T>>(),\n    fileItemCompleted: new Subject<\n      RdsFileItemStatusChange<T, HttpResponse<T> | HttpErrorResponse>\n    >(),\n    allComplete: new Subject<void>(),\n    isUploading: new BehaviorSubject(false),\n    config: new BehaviorSubject<Readonly<RdsUploadConfig>>(this._config),\n    queue: new BehaviorSubject(this.queue),\n  };\n\n  readonly fileInvalid$ = this.events.fileInvalid.asObservable();\n  readonly fileItemSuccess$ = this.events.fileItemSuccess.asObservable();\n  readonly fileItemError$ = this.events.fileItemError.asObservable();\n  readonly fileItemCanceled$ = this.events.fileItemCanceled.asObservable();\n  readonly fileItemCompleted$ = this.events.fileItemCompleted.asObservable();\n  readonly allComplete$ = this.events.allComplete.asObservable();\n  readonly isUploading$ = this.events.isUploading.asObservable();\n  readonly config$ = this.events.config.asObservable();\n  readonly queue$ = this.events.queue.asObservable();\n\n  get isUploading(): boolean {\n    return this.events.isUploading.value;\n  }\n\n  private set isUploading(v: boolean) {\n    this.events.isUploading.next(v);\n  }\n\n  constructor(\n    config: RdsUploadConfig,\n    private client?: HttpClient,\n  ) {\n    this.setConfig(config);\n  }\n\n  setConfig(config: RdsUploadConfig): void {\n    this._config = {\n      ...config,\n      filters: RdsUploadFilters.compose(config.filters ?? [], config),\n    };\n\n    if (this._config.queueLimit == undefined) {\n      this._config.queueLimit = this._config.multiple ? undefined : 1;\n    }\n\n    this.events.config.next(this.config);\n  }\n\n  updateConfig(update: Partial<RdsUploadConfig>): void {\n    this._config = Object.assign(this._config, update);\n\n    this._config.filters = RdsUploadFilters.compose(\n      this._config.filters,\n      this._config,\n    );\n\n    this._config = { ...this._config };\n    this.events.config.next(this.config);\n  }\n\n  addToQueue(\n    files: File[],\n    filters?: RdsUploadFilter[] | string,\n    bypassAutoUpload = false,\n  ): RdsFileItem[] {\n    const list = [...files];\n    const selectedFilters = this.getFilters(filters);\n    const addedItems: RdsFileItem[] = [];\n\n    list.forEach((file) => {\n      const fileItem = this.addFileToQueue(file, selectedFilters);\n\n      if (!fileItem) {\n        return;\n      }\n\n      addedItems.push(fileItem);\n\n      if (!bypassAutoUpload && this._config.autoUpload) {\n        this.uploadItem(fileItem);\n      }\n    });\n\n    this.events.queue.next(this.queue);\n\n    return addedItems;\n  }\n\n  removeFromQueue(value: RdsFileItem | number): boolean {\n    const index = this.getIndexOfItem(value);\n\n    if (index == null) {\n      return false;\n    }\n\n    this.removeItem(index);\n\n    return true;\n  }\n\n  clearQueue(): void {\n    for (let i = this.queue.length; i >= 0; i--) {\n      this.removeItem(i, false);\n    }\n\n    this.events.queue.next(this.queue);\n  }\n\n  uploadItem(value: RdsFileItem): void {\n    const index = this.getIndexOfItem(value);\n\n    if (index == null) {\n      return;\n    }\n\n    const item = this.queue[index];\n\n    if (\n      (this.isUploading && this._config.uploadSequentially) ||\n      item.hasFailedFilters\n    ) {\n      return;\n    }\n\n    if (!this.client) {\n      throw new Error(\n        'Missing HttpClient! Pass it as a RdsUploader\\'s constructor param or use \"registerHttpClient\" method to provide one.',\n      );\n    }\n\n    this.isUploading = true;\n\n    const request = new RdsHttpClientWrapper<T>(\n      item,\n      this._config,\n      this.client,\n    );\n    request.progress = (change) => this.onProgressItem(change);\n    request.success = (change) => this.onSuccessItem(change);\n    request.cancel = (change) => this.onCancelItem(change);\n    request.error = (change) => this.onErrorItem(change);\n    request.complete = (change) => this.onCompleteItem(change);\n\n    item.onBeforeUpload();\n\n    request.send();\n\n    this.itemIdToRequest.set(item.id, request);\n  }\n\n  cancelItem(value: RdsFileItem | number): void {\n    const index = this.getIndexOfItem(value);\n\n    if (index == null) {\n      return;\n    }\n\n    const item = this.queue[index];\n\n    if (item && item.isUploading) {\n      const request = this.itemIdToRequest.get(item.id);\n      request?.abort();\n    }\n  }\n\n  uploadAll(): void {\n    const items = this.queue.filter(\n      (item) =>\n        item.state !== 'success' && !item.isUploading && !item.hasFailedFilters,\n    );\n\n    if (!items.length) {\n      return;\n    }\n\n    items.forEach((item) => {\n      this.uploadItem(item);\n    });\n  }\n\n  cancelAll(): void {\n    this.queue\n      .filter((item) => item.isUploading)\n      .forEach((item) => this.cancelItem(item));\n  }\n\n  destroy(): void {\n    this.cancelAll();\n    Object.values(this.events).forEach((subject) => subject.complete());\n  }\n\n  registerHttpClient(client: HttpClient): void {\n    this.client = client;\n  }\n\n  isHttpClientRegistered(): boolean {\n    return !!this.client;\n  }\n\n  private removeItem(index: number, emitEvent = true): void {\n    const fileItem = this.queue[index];\n\n    if (fileItem.isUploading) {\n      this.cancelItem(fileItem);\n    }\n\n    this.queue.splice(index, 1);\n    this.itemIdToRequest.delete(fileItem.id);\n    emitEvent && this.events.queue.next(this.queue);\n  }\n\n  private getIndexOfItem(value: RdsFileItem | number): number | null {\n    if (typeof value === 'number') {\n      return this.isValidIndex(value) ? value : null;\n    } else {\n      return this.queue.indexOf(value);\n    }\n  }\n\n  private isValidIndex(index: number): boolean {\n    return 0 <= index && index < this.queue.length;\n  }\n\n  private getReadyItems(): RdsFileItem[] {\n    return this.queue.filter((item) => item.state === 'ready');\n  }\n\n  private onErrorItem(\n    event: RdsFileItemStatusChange<T, HttpErrorResponse>,\n  ): void {\n    event.item.onError();\n    this.events.fileItemError.next(event);\n  }\n\n  private onCompleteItem(\n    change: RdsFileItemStatusChange<T, HttpResponse<T> | HttpErrorResponse>,\n  ): void {\n    if (this._config.removeAfterUpload && change.item.state === 'success') {\n      this.removeFromQueue(change.item);\n    }\n\n    this.events.fileItemCompleted.next(change);\n\n    const nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n\n    if (nextItem) {\n      this.uploadItem(nextItem);\n\n      return;\n    }\n\n    this.events.allComplete.next();\n  }\n\n  private addFileToQueue(\n    file: File,\n    filters: RdsUploadFilter[],\n  ): RdsFileItem | null {\n    const { isValid, failedFilters } = this.isValidFile(file, filters);\n\n    if (!isValid) {\n      this.events.fileInvalid.next({\n        file,\n        failedFilters,\n        config: this.config,\n      });\n    }\n\n    if (failedFilters.some((f) => f.preventsAddingToQueue)) {\n      return null;\n    }\n\n    const fileItem = new RdsFileItem(file, failedFilters);\n    this.queue.push(fileItem);\n\n    return fileItem;\n  }\n\n  private getFilters(filters?: RdsUploadFilter[] | string): RdsUploadFilter[] {\n    if (!filters) {\n      return this._config.filters;\n    }\n\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n\n    const names = filters.match(/[^\\s,]+/g);\n\n    if (!names) {\n      return this._config.filters;\n    }\n\n    return this._config.filters.filter((filter) => names.includes(filter.name));\n  }\n\n  private isValidFile(\n    file: File,\n    filters: RdsUploadFilter[],\n  ): { isValid: boolean; failedFilters: RdsUploadFilter[] } {\n    const failedFilters: RdsUploadFilter[] = [];\n\n    filters.forEach((filter) => {\n      if (!filter.fn(file, this.config, this.queue)) {\n        failedFilters.push(filter);\n      }\n    });\n\n    return { isValid: failedFilters.length === 0, failedFilters };\n  }\n\n  private onProgressItem(change: RdsFileItemProgressChange): void {\n    change.item.onProgress(change.progress);\n  }\n\n  private onSuccessItem(change: RdsFileItemStatusChange<T>): void {\n    change.item.onSuccess();\n    this.events.fileItemSuccess.next(change);\n  }\n\n  private onCancelItem(change: RdsFileItemStatusChange<T>): void {\n    change.item.onAbort();\n    this.events.fileItemCanceled.next(change);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { RdsFileItem } from './file-item.class';\nimport {\n  FILTER_FILE_SIZE_DESCRIPTION_INTL_TOKEN,\n  FILTER_FILE_TYPE_DESCRIPTION_INTL_TOKEN,\n  FILTER_QUEUE_LIMIT_DESCRIPTION_INTL_TOKEN,\n} from './upload.filters';\n\nexport type RdsUploadIntlMessageFactory = (fileItem: RdsFileItem) => string;\nexport type RdsUploadIntlToken = keyof typeof RdsUploadIntlService.translations;\n\n@Injectable({ providedIn: 'root' })\nexport class RdsUploadIntlService {\n  static readonly translations = {\n    EMPTY: '',\n    chooseFilesButtonLabel: 'Upload',\n    dropZoneChooseFiles: 'Upload',\n    dropZoneOrDropFiles: 'or drop files here',\n    uploadListAriaLabel: 'File upload queue',\n    startUploadButtonLabel: 'Upload',\n    retryButtonAriaLabel: 'Retry',\n    cancelButtonAriaLabel: 'Cancel',\n    uploadFailed: 'Upload failed.',\n    [FILTER_QUEUE_LIMIT_DESCRIPTION_INTL_TOKEN]: '',\n    [FILTER_FILE_SIZE_DESCRIPTION_INTL_TOKEN]: 'File exceeds size limit.',\n    [FILTER_FILE_TYPE_DESCRIPTION_INTL_TOKEN]: 'Invalid file type.',\n  };\n\n  private readonly _change$ = new BehaviorSubject(\n    RdsUploadIntlService.translations,\n  );\n  change$ = this._change$.asObservable();\n\n  setTranslation(key: RdsUploadIntlToken, value: string): void {\n    RdsUploadIntlService.translations[key] = value;\n    this._change$.next({ ...RdsUploadIntlService.translations });\n  }\n\n  setFileItemUploadSuccessMessageFactory(\n    fn: RdsUploadIntlMessageFactory,\n  ): void {\n    this.fileItemUploadSuccessMessageFactory = fn;\n  }\n\n  setFileItemUploadErrorMessageFactory(fn: RdsUploadIntlMessageFactory): void {\n    this.fileItemUploadErrorMessageFactory = fn;\n  }\n\n  setFileItemFilterFailedMessageFactory(fn: RdsUploadIntlMessageFactory): void {\n    this.fileItemFilterFailedMessageFactory = fn;\n  }\n\n  setFileItemProgressMessageFactory(\n    fn: (progress: number | null) => string,\n  ): void {\n    this.fileItemProgressMessageFactory = fn;\n  }\n\n  getFileItemUploadSuccessMessage(fileItem: RdsFileItem): string {\n    return this.fileItemUploadSuccessMessageFactory(fileItem);\n  }\n\n  getFileItemUploadErrorMessage(fileItem: RdsFileItem): string {\n    return this.fileItemUploadErrorMessageFactory(fileItem);\n  }\n\n  getFileItemFilterFailedMessage(fileItem: RdsFileItem): string {\n    return this.fileItemFilterFailedMessageFactory(fileItem);\n  }\n\n  getFileItemProgressMessage(progress: number | null): string {\n    return this.fileItemProgressMessageFactory(progress);\n  }\n\n  private fileItemUploadSuccessMessageFactory: RdsUploadIntlMessageFactory = (\n    fileItem,\n  ): string => {\n    return fileItem.file.name + ' upload completed successfully';\n  };\n\n  private fileItemUploadErrorMessageFactory: RdsUploadIntlMessageFactory = (\n    fileItem,\n  ): string => {\n    return (\n      fileItem.file.name +\n      ' error: ' +\n      RdsUploadIntlService.translations[fileItem.errorIntlToken]\n    );\n  };\n\n  private fileItemFilterFailedMessageFactory: RdsUploadIntlMessageFactory = (\n    fileItem,\n  ) => {\n    return (\n      fileItem.file.name +\n      ' error: ' +\n      RdsUploadIntlService.translations[fileItem.errorIntlToken]\n    );\n  };\n\n  private fileItemProgressMessageFactory = (\n    progress: number | null,\n  ): string => {\n    return progress == null ? '' : `${progress}% Uploaded`;\n  };\n}\n","import { Directive, ElementRef, inject, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: `rds-upload-error, [rds-upload-error], [rdsUploadError]`,\n})\nexport class RdsUploadErrorDirective {\n  private readonly nativeElement = inject(ElementRef<HTMLElement>)\n    .nativeElement;\n  private readonly renderer = inject(Renderer2);\n\n  setId(id: string): void {\n    this.renderer.setAttribute(this.nativeElement, 'id', id);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { RdsUploadConfig } from './upload.types';\n\ndeclare const ngDevMode: boolean;\n\n@Directive({\n  selector: 'input[rds-upload], input[rdsUpload]',\n})\nexport class RdsUploadDirective implements OnInit {\n  private _config: RdsUploadConfig;\n  private readonly renderer = inject(Renderer2);\n  private readonly nativeElement: HTMLInputElement =\n    inject(ElementRef).nativeElement;\n\n  @Input() set config(v: RdsUploadConfig) {\n    this._config = v;\n    this.onConfigChange();\n  }\n\n  @Output() fileSelected = new EventEmitter<File[]>();\n\n  @HostBinding('style.display')\n  private display = 'none';\n\n  @HostBinding('type')\n  private type = 'file';\n\n  @HostListener('change')\n  private onChange(): void {\n    const files = Array.from(this.nativeElement.files ?? []);\n    this.fileSelected.emit(files);\n    this.nativeElement.value = '';\n  }\n\n  ngOnInit(): void {\n    if (ngDevMode && !this._config) {\n      throw new Error(\n        `The \"config\" input is required, received \"${JSON.stringify(\n          this._config,\n        )}\"`,\n      );\n    }\n\n    this.onConfigChange();\n  }\n\n  private onConfigChange(): void {\n    this._config.multiple\n      ? this.renderer.setAttribute(this.nativeElement, 'multiple', '')\n      : this.renderer.removeAttribute(this.nativeElement, 'multiple');\n\n    const accept = this._config.accept?.join(',');\n\n    accept\n      ? this.renderer.setAttribute(this.nativeElement, 'accept', accept)\n      : this.renderer.removeAttribute(this.nativeElement, 'accept');\n  }\n}\n","import {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { DragEvent } from 'react';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\nconst RDS_DROPZONE_DRAGOVER_CLASS_TOKEN = 'rds-upload-drop-zone-dragover';\nconst RDS_DROPZONE_DISABLED_CLASS_TOKEN = 'rds-upload-drop-zone-disabled';\n\n@Directive({\n  selector: '[rds-upload-drop-zone], [rdsUploadDropZone]',\n})\nexport class RdsUploadDropZoneDirective {\n  private readonly nativeElement = inject(ElementRef).nativeElement;\n  private readonly renderer = inject(Renderer2);\n\n  @Input()\n  set disabled(v: BooleanInput) {\n    this._disabled = booleanAttribute(v);\n    this.onDisabledChange();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  private _disabled = false;\n\n  @Output() fileOver = new EventEmitter<boolean>();\n  @Output() fileDropped = new EventEmitter<File[]>();\n\n  @HostListener('dragenter', ['$event'])\n  private onDragenter(e: DragEvent): void {\n    if (!this.hasFiles(e)) {\n      return;\n    }\n\n    this.fileOver.emit(true);\n    this.toggleDragoverClass(true);\n  }\n\n  @HostListener('dragover', ['$event'])\n  private onDragover(e: DragEvent): void {\n    if (!this.hasFiles(e)) {\n      return;\n    }\n\n    e.dataTransfer.dropEffect = this.disabled ? 'none' : 'copy';\n\n    // without this 'drop' event won't be fired in chrome\n    e.preventDefault();\n  }\n\n  @HostListener('dragleave')\n  private onDragleave(): void {\n    this.fileOver.emit(false);\n    this.toggleDragoverClass(false);\n  }\n\n  @HostListener('drop', ['$event'])\n  private onDrop(e: DragEvent): void {\n    if (!this.hasFiles(e) || this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.fileOver.emit(false);\n    this.toggleDragoverClass(false);\n    this.fileDropped.emit(Array.from(e.dataTransfer.files));\n  }\n\n  private hasFiles(event: DragEvent): boolean {\n    return !!event.dataTransfer?.types?.includes('Files');\n  }\n\n  private toggleDragoverClass(hasDragover: boolean): void {\n    if (hasDragover) {\n      this.renderer.addClass(\n        this.nativeElement,\n        RDS_DROPZONE_DRAGOVER_CLASS_TOKEN,\n      );\n    } else {\n      this.renderer.removeClass(\n        this.nativeElement,\n        RDS_DROPZONE_DRAGOVER_CLASS_TOKEN,\n      );\n    }\n  }\n\n  private onDisabledChange(): void {\n    if (this.disabled) {\n      this.renderer.setAttribute(this.nativeElement, 'disabled', '');\n      this.renderer.addClass(\n        this.nativeElement,\n        RDS_DROPZONE_DISABLED_CLASS_TOKEN,\n      );\n    } else {\n      this.renderer.removeAttribute(this.nativeElement, 'disabled');\n      this.renderer.removeClass(\n        this.nativeElement,\n        RDS_DROPZONE_DISABLED_CLASS_TOKEN,\n      );\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst THRESHOLD = 1024;\n\n@Pipe({ name: 'rdsFileSize' })\nexport class RdsFileSizePipe implements PipeTransform {\n  transform(sizeInBytes: number, decimalPrecision = 1): string {\n    if (sizeInBytes < THRESHOLD) {\n      return sizeInBytes + 'B';\n    }\n\n    const units = ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let unitIndex = -1;\n    const r = Math.pow(10, decimalPrecision);\n\n    do {\n      sizeInBytes /= THRESHOLD;\n      ++unitIndex;\n    } while (\n      Math.round(sizeInBytes * r) / r >= THRESHOLD &&\n      unitIndex < units.length - 1\n    );\n\n    return sizeInBytes.toFixed(decimalPrecision) + units[unitIndex];\n  }\n}\n","import {\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  EventEmitter,\n  HostBinding,\n  inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { RdsButtonSize } from '../../button';\nimport { RdsUploadSize } from '../upload.types';\nimport { RdsFileItem } from '../file-item.class';\nimport { RdsUploadIntlService } from '../rds-upload-intl.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet rdsUploadItemNextId = 0;\n\n@Component({\n  selector: 'li[rds-upload-list-item], li[rdsUploadListItem]',\n  templateUrl: './upload-list-item.component.html',\n  styleUrls: ['./upload-list-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsUploadListItemComponent implements OnInit {\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n  readonly intl = inject(RdsUploadIntlService);\n\n  private _size: RdsUploadSize;\n  private stateClass = '';\n\n  actionButtonSize: RdsButtonSize;\n  ariaLiveContent = '';\n\n  @Input() fileItem: RdsFileItem;\n\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @Input()\n  set size(v: RdsUploadSize) {\n    this._size = v;\n    this.actionButtonSize = v === 'l' ? 'm' : 's';\n  }\n\n  get size(): RdsUploadSize {\n    return this._size;\n  }\n\n  @Output() upload = new EventEmitter<RdsFileItem>();\n  @Output() remove = new EventEmitter<RdsFileItem>();\n\n  @HostBinding('class')\n  private get classes(): string[] {\n    return [this.stateClass, `rds-upload-item-size-${this.size}`];\n  }\n\n  @HostBinding('attr.aria-labelledby')\n  nameId = `rds-upload-item-${rdsUploadItemNextId++}-name`;\n\n  ngOnInit(): void {\n    this.fileItem.state$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((state) => {\n        this.stateClass = `rds-upload-item-${state}`;\n        this.updateAriaLiveRegion();\n        this.cdr.markForCheck();\n      });\n  }\n\n  private updateAriaLiveRegion(): void {\n    if (this.fileItem.hasFailedFilters) {\n      // we need to delay the update in case of immediately known errors, like incorrect file type,\n      // because otherwise screen readers will miss the difference and won't announce anything\n      setTimeout(() => {\n        this.ariaLiveContent = this.intl.getFileItemFilterFailedMessage(\n          this.fileItem,\n        );\n        this.cdr.markForCheck();\n      });\n\n      return;\n    }\n\n    if (this.fileItem.state === 'success') {\n      this.ariaLiveContent = this.intl.getFileItemUploadSuccessMessage(\n        this.fileItem,\n      );\n    }\n\n    if (this.fileItem.state === 'error') {\n      this.ariaLiveContent = this.intl.getFileItemUploadErrorMessage(\n        this.fileItem,\n      );\n    }\n  }\n}\n","@if (intl.change$ | async; as t) {\n  <div class=\"rds-upload-name-and-actions\">\n    <div class=\"rds-upload-name\" [id]=\"nameId\">{{ fileItem.file.name }}</div>\n    <div class=\"rds-upload-actions\">\n      <ng-content />\n      @if (fileItem.state === 'error') {\n        <rds-icon\n          class=\"rds-upload-status-icon rds-upload-status-icon-error\"\n          namespace=\"outlined\"\n          icon=\"warning_circle\"\n        />\n        @if (!fileItem.hasFailedFilters) {\n          <button\n            rds-icon-button\n            [attr.aria-label]=\"t.retryButtonAriaLabel\"\n            [disabled]=\"disabled\"\n            [size]=\"actionButtonSize\"\n            (click)=\"upload.emit(fileItem)\"\n          >\n            <rds-icon namespace=\"outlined\" icon=\"repeat\" />\n          </button>\n        }\n      }\n      @if (fileItem.state === 'success') {\n        <rds-icon\n          class=\"rds-upload-status-icon rds-upload-status-icon-success\"\n          namespace=\"outlined\"\n          icon=\"checkmark_circle\"\n        />\n      } @else {\n        <button\n          rds-icon-button\n          [attr.aria-label]=\"t.cancelButtonAriaLabel\"\n          [disabled]=\"disabled\"\n          [size]=\"actionButtonSize\"\n          (click)=\"remove.emit(fileItem)\"\n        >\n          <rds-icon namespace=\"outlined\" icon=\"close\" />\n        </button>\n      }\n    </div>\n  </div>\n  @if ({ progress: fileItem.progress$ | async }; as fi) {\n    @if (!fileItem.hasFailedFilters) {\n      <rds-progress-bar\n        [mode]=\"fi.progress === null ? 'indeterminate' : 'determinate'\"\n        [value]=\"fi.progress\"\n      />\n    }\n    <div class=\"rds-upload-size-and-state\">\n      <span class=\"rds-upload-size\">{{\n        fileItem.file.size | rdsFileSize\n      }}</span>\n      {{ fileItem.isUploading || t[fileItem.errorIntlToken] ? '-' : '' }}\n      @if (fileItem.isUploading) {\n        <span>{{ intl.getFileItemProgressMessage(fi.progress) }}</span>\n      }\n      @if (fileItem.errorIntlToken !== 'EMPTY') {\n        <span>{{ t[fileItem.errorIntlToken] }}</span>\n      }\n      <div class=\"sr-only\" aria-live=\"polite\">\n        {{ ariaLiveContent }}\n      </div>\n    </div>\n  }\n}\n","import {\n  AfterContentInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DestroyRef,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { RdsUploadSize } from './upload.types';\nimport { RdsFileUploader } from './uploader';\nimport { RdsUploadIntlService } from './rds-upload-intl.service';\nimport { filter, startWith } from 'rxjs/operators';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\nimport { noop } from 'rxjs';\nimport { RdsFileItem } from './file-item.class';\nimport { RdsUploadErrorDirective } from './upload-error.directive';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'rds-upload',\n  exportAs: 'rdsUpload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsUploadComponent<T = unknown>\n  implements\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    ControlValueAccessor,\n    Validator\n{\n  protected readonly intl = inject(RdsUploadIntlService);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly httpClient = inject(HttpClient);\n  private readonly ngControl = inject(NgControl, {\n    self: true,\n    optional: true,\n  });\n\n  private _uploader: RdsFileUploader<T>;\n\n  ariaErrorMessage: string | null = null;\n\n  onChange: (files: RdsFileItem[]) => void = noop;\n  onTouched = noop;\n\n  get hasError(): boolean {\n    return !!(this.ngControl && this.ngControl.errors);\n  }\n\n  @Input() size: RdsUploadSize = 'm';\n  @Input({ transform: booleanAttribute }) hasBackground = false;\n\n  @Input()\n  set uploader(uploader: RdsFileUploader<T>) {\n    this._uploader = uploader;\n\n    if (!this._uploader.isHttpClientRegistered()) {\n      this._uploader.registerHttpClient(this.httpClient);\n    }\n  }\n\n  get uploader(): RdsFileUploader<T> {\n    return this._uploader;\n  }\n\n  @Input({ transform: booleanAttribute }) hasDropZone = false;\n  @Input({ transform: booleanAttribute }) disabled = false;\n\n  @HostBinding('class') get class(): string[] {\n    return [`rds-upload-size-${this.size}`];\n  }\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef<HTMLInputElement>;\n\n  @ContentChildren(RdsUploadErrorDirective)\n  errors: QueryList<RdsUploadErrorDirective>;\n\n  // can be used to transform/filter the files before they get added to the queue\n  @Input()\n  beforeAddFn = (files: File[]): File[] => files;\n\n  constructor() {\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.uploader.config$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => this.cdr.markForCheck());\n\n    this.uploader.queue$\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((v) => this.onChange(v));\n\n    if (this.ngControl) {\n      // Setting the validator directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.control?.addValidators((control) =>\n        this.validate(control),\n      );\n\n      this.ngControl.statusChanges\n        ?.pipe(\n          filter(\n            (status) => status === 'VALID' && !!this.uploader.config.autoUpload,\n          ),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe(() => this.uploader.uploadAll());\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.errors.changes\n      .pipe(startWith(this.errors), takeUntilDestroyed(this.destroyRef))\n      .subscribe((errors) => this.setupErrors(errors));\n  }\n\n  ngOnDestroy(): void {\n    this.uploader?.destroy();\n  }\n\n  onFilesSelected(files: File[]): void {\n    this.onTouched();\n    this.uploader.addToQueue(this.beforeAddFn(files), [], !!this.ngControl);\n  }\n\n  writeValue(files: File[]): void {\n    this.uploader.addToQueue(files);\n  }\n\n  registerOnChange(onChange: (value: RdsFileItem[]) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.disabled !== disabled) {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }\n\n  validate(control: AbstractControl<RdsFileItem[]>): ValidationErrors | null {\n    if (!control.value) {\n      return null;\n    }\n\n    const errors = control.value.reduce((acc, curr) => {\n      if (!curr.hasFailedFilters) {\n        return acc;\n      }\n\n      curr.failedFilters.forEach((failedFilter) => {\n        if (acc[failedFilter.name]) {\n          acc[failedFilter.name].push(curr.file.name);\n        } else {\n          acc[failedFilter.name] = [curr.file.name];\n        }\n      });\n\n      return acc;\n    }, {} as ValidationErrors);\n\n    if (Object.keys(errors).length > 0) {\n      return errors;\n    }\n\n    return null;\n  }\n\n  openDialog(): void {\n    this.fileInput?.nativeElement.click();\n  }\n\n  private setupErrors(errors: QueryList<RdsUploadErrorDirective>): void {\n    const errorMessageIds: string[] = [];\n\n    errors.forEach((err) => {\n      const id = `rds-upload-error-${nextId++}`;\n      err.setId(id);\n      errorMessageIds.push(id);\n    });\n\n    this.ariaErrorMessage = errorMessageIds.length\n      ? errorMessageIds.join(',')\n      : null;\n  }\n}\n","@if (intl.change$ | async; as t) {\n  @if (hasDropZone) {\n    <button\n      rds-upload-drop-zone\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      (fileDropped)=\"onFilesSelected($event)\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      <strong>{{ t.dropZoneChooseFiles }}</strong>\n      {{ t.dropZoneOrDropFiles }}\n    </button>\n  } @else {\n    <button\n      rds-secondary-button\n      class=\"rds-upload-simple-button\"\n      [size]=\"size\"\n      [disabled]=\"disabled\"\n      (click)=\"openDialog()\"\n      [attr.aria-errormessage]=\"ariaErrorMessage\"\n    >\n      <rds-icon namespace=\"outlined\" icon=\"upload\" />\n      {{ t.chooseFilesButtonLabel }}\n    </button>\n  }\n  <div class=\"rds-upload-error-container\">\n    <ng-content\n      select=\"rds-upload-error, [rds-upload-error], [rdsUploadError]\"\n    />\n  </div>\n  <input\n    #fileInput\n    rds-upload\n    [config]=\"uploader.config\"\n    (fileSelected)=\"onFilesSelected($event)\"\n  />\n  <ul\n    [class.rds-upload-item-with-background]=\"hasBackground\"\n    [attr.aria-label]=\"t.uploadListAriaLabel\"\n  >\n    @for (item of uploader.queue; track item) {\n      <li\n        rds-upload-list-item\n        [disabled]=\"disabled\"\n        [size]=\"size\"\n        [fileItem]=\"item\"\n        (remove)=\"uploader.removeFromQueue($event)\"\n        (upload)=\"uploader.uploadItem($event)\"\n      ></li>\n    }\n  </ul>\n  @if (!uploader.config.autoUpload && uploader.queue.length) {\n    <button\n      rds-primary-button\n      [size]=\"size\"\n      [disabled]=\"uploader.isUploading || disabled || hasError\"\n      (click)=\"uploader.uploadAll()\"\n    >\n      {{ t.startUploadButtonLabel }}\n    </button>\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RdsIconComponent } from '../icons';\nimport { RdsButtonModule } from '../button';\nimport { RdsUploadComponent } from './upload.component';\nimport { RdsUploadDirective } from './upload.directive';\nimport { RdsUploadDropZoneDirective } from './upload-drop-zone.directive';\nimport { RdsProgressBarModule } from '../progress-bar';\nimport { RdsFileSizePipe } from './file-size.pipe';\nimport { RdsUploadListItemComponent } from './upload-list-item/upload-list-item.component';\nimport { RdsUploadErrorDirective } from './upload-error.directive';\n\nconst publicElements = [\n  RdsUploadComponent,\n  RdsUploadDirective,\n  RdsUploadDropZoneDirective,\n  RdsFileSizePipe,\n  RdsUploadListItemComponent,\n  RdsUploadErrorDirective,\n];\n\n@NgModule({\n  exports: [...publicElements],\n  declarations: [...publicElements],\n  imports: [\n    CommonModule,\n    RdsIconComponent,\n    RdsButtonModule,\n    RdsProgressBarModule,\n  ],\n})\nexport class RdsUploadModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'rds-anchor-menu',\n  templateUrl: './anchor-menu.component.html',\n  styleUrls: ['./anchor-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RdsAnchorMenuComponent {\n  readonly headerId = `rds-anchor-menu-header-${nextId++}`;\n\n  @Input()\n  navAriaLabel?: string;\n\n  get labelledBy(): string | undefined {\n    return this.navAriaLabel ? undefined : this.headerId;\n  }\n}\n","<section>\n  <header [id]=\"headerId\">\n    <ng-content\n      select=\"rds-anchor-menu-title, [rds-anchor-menu-title], [rdsAnchorMenuTitle]\"\n    />\n  </header>\n  <nav [attr.aria-labelledby]=\"labelledBy\" [attr.aria-label]=\"navAriaLabel\">\n    <ng-content />\n  </nav>\n</section>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  HostBinding,\n  inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { RdsAnchorMenuSectionData } from '../anchor-menu.types';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'a[rdsAnchorMenuItem], a[rds-anchor-menu-item]',\n  templateUrl: './anchor-menu-item.component.html',\n  styleUrls: ['./anchor-menu-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsAnchorMenuItemComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  @Input('rdsAnchorMenuItem')\n  item: RdsAnchorMenuSectionData;\n\n  @HostBinding('class')\n  protected readonly classes = 'rds-anchor-menu-item';\n\n  @HostBinding('class.rds-anchor-menu-item-active')\n  protected isActive = false;\n\n  private readonly killItemSubscription$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.subscribeItem();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['item'] && !changes['item'].isFirstChange()) {\n      this.killItemSubscription$.next();\n      this.subscribeItem();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.killItemSubscription$.complete();\n  }\n\n  private subscribeItem(): void {\n    this.item?.isActive$\n      .pipe(\n        filter((v) => v !== this.isActive),\n        takeUntil(this.killItemSubscription$),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((v) => {\n        this.isActive = v;\n        this.cdr.markForCheck();\n      });\n  }\n}\n","<ng-content />\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  inject,\n  Input,\n  isDevMode,\n  OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[rds-anchor-menu-section], [rdsAnchorMenuSection]',\n})\nexport class RdsAnchorMenuSectionDirective implements OnInit {\n  readonly _element = inject(ElementRef<HTMLElement>);\n\n  @HostBinding('id')\n  @Input()\n  id: string;\n\n  @Input()\n  label: string;\n\n  ngOnInit(): void {\n    if (isDevMode() && !this.id) {\n      throw new Error(\n        'You must specify an id input for rds-anchor-menu-section',\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { ElementRef, inject, Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Observer, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class IntersectionObserverFactory {\n  create(\n    callback: IntersectionObserverCallback,\n    options?: IntersectionObserverInit,\n  ): IntersectionObserver | null {\n    return typeof IntersectionObserver === 'undefined'\n      ? null\n      : new IntersectionObserver(callback, options);\n  }\n}\n\n@Injectable()\nexport class IntersectionObserverRx implements OnDestroy {\n  private readonly intersectionObserverFactory = inject(\n    IntersectionObserverFactory,\n  );\n\n  private _observedElements = new Map<\n    Element,\n    {\n      observer: IntersectionObserver | null;\n      readonly stream: Subject<IntersectionObserverEntry[]>;\n      count: number;\n    }\n  >();\n\n  ngOnDestroy(): void {\n    this._observedElements.forEach((_, element) =>\n      this._cleanupObserver(element),\n    );\n  }\n\n  observe(\n    element: Element,\n    options?: IntersectionObserverInit,\n  ): Observable<IntersectionObserverEntry[]>;\n  observe(\n    element: ElementRef<Element>,\n    options?: IntersectionObserverInit,\n  ): Observable<IntersectionObserverEntry[]>;\n  observe(\n    elementOrRef: Element | ElementRef<Element>,\n    options?: IntersectionObserverInit,\n  ): Observable<IntersectionObserverEntry[]> {\n    const element = coerceElement(elementOrRef);\n\n    return new Observable((observer: Observer<IntersectionObserverEntry[]>) => {\n      const stream = this._observeElement(element, options);\n      const subscription = stream.subscribe(observer);\n\n      return () => {\n        subscription.unsubscribe();\n        this._unobserveElement(element);\n      };\n    });\n  }\n\n  private _observeElement(\n    element: Element,\n    options?: IntersectionObserverInit,\n  ): Subject<IntersectionObserverEntry[]> {\n    if (!this._observedElements.has(element)) {\n      const stream = new Subject<IntersectionObserverEntry[]>();\n      const observer = this.intersectionObserverFactory.create(\n        (mutations) => stream.next(mutations),\n        options,\n      );\n\n      if (observer) {\n        observer.observe(element);\n      }\n\n      this._observedElements.set(element, { observer, stream, count: 1 });\n    } else {\n      this._observedElements.get(element)!.count++;\n    }\n\n    return this._observedElements.get(element)!.stream;\n  }\n\n  private _unobserveElement(element: Element): void {\n    if (this._observedElements.has(element)) {\n      this._observedElements.get(element)!.count--;\n\n      if (!this._observedElements.get(element)!.count) {\n        this._cleanupObserver(element);\n      }\n    }\n  }\n\n  private _cleanupObserver(element: Element): void {\n    if (this._observedElements.has(element)) {\n      const { observer, stream } = this._observedElements.get(element)!;\n\n      if (observer) {\n        observer.disconnect();\n      }\n\n      stream.complete();\n      this._observedElements.delete(element);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  ContentChildren,\n  DestroyRef,\n  Directive,\n  inject,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport {\n  map,\n  skipWhile,\n  startWith,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { IntersectionObserverRx } from '../utils/intersection-observer.util';\nimport { RdsAnchorMenuSectionData } from './anchor-menu.types';\nimport { RdsAnchorMenuSectionDirective } from './anchor-menu-section.directive';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nlet nextId = 0;\n\nconst DEFAULT_OBSERVER_CONFIG = Object.freeze({\n  rootMargin: '-10% 0px -70%',\n  threshold: 0.02,\n});\n\n@Directive({\n  selector:\n    '[rds-anchor-menu-sections-container], [rdsAnchorMenuSectionsContainer]',\n  exportAs: 'rdsAnchorMenuSectionsContainer',\n  providers: [IntersectionObserverRx],\n})\nexport class RdsAnchorMenuSectionsContainerDirective\n  implements AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly activeRoute = inject(ActivatedRoute);\n  private readonly intersectionObserver = inject(IntersectionObserverRx);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly _sections$ = new BehaviorSubject<RdsAnchorMenuSectionData[]>(\n    [],\n  );\n  private readonly killIntersectionSubscriptions$ = new Subject<void>();\n  private readonly activeSection$ = new BehaviorSubject<\n    RdsAnchorMenuSectionDirective | undefined\n  >(undefined);\n\n  readonly sections$ = this._sections$.asObservable();\n  readonly id = `rdsAnchorMenuSectionsContainer-${nextId++}`;\n\n  @ContentChildren(RdsAnchorMenuSectionDirective, { descendants: true })\n  sectionQuery: QueryList<RdsAnchorMenuSectionDirective>;\n\n  @Input()\n  intersectionObserverOptions: IntersectionObserverInit;\n\n  @Input()\n  scrollIntoViewOptions: boolean | ScrollIntoViewOptions = {\n    behavior: 'smooth',\n  };\n\n  ngAfterContentInit(): void {\n    this.sectionQuery.changes\n      .pipe(\n        startWith(this.sectionQuery),\n        map((sections) => this.queryListToAnchorMenuSectionData(sections)),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((v) => {\n        this._sections$.next(v);\n\n        // Force change detection cause otherwise we get ExpressionChangedAfterItHasBeenCheckedError\"\n        // Deferring value propagation helps only in case of initial value\n        this.cdr.detectChanges();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.activeRoute.fragment\n      .pipe(\n        map((fragment) => {\n          return fragment\n            ? this.sectionQuery.find((section) => section.id === fragment)\n            : null;\n        }),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((target) => {\n        if (!target) {\n          return;\n        }\n\n        target._element.nativeElement.scrollIntoView(\n          this.scrollIntoViewOptions,\n        );\n\n        if (\n          typeof this.scrollIntoViewOptions !== 'object' ||\n          this.scrollIntoViewOptions.behavior !== 'smooth'\n        ) {\n          // intersection observer might be confused in case of an instant scroll\n          // we emit correct active section just a tiny bit after its events are handled\n          setTimeout(() => {\n            this.activeSection$.next(target);\n          }, 100);\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.killIntersectionSubscriptions$.complete();\n  }\n\n  queryListToAnchorMenuSectionData(\n    list: QueryList<RdsAnchorMenuSectionDirective>,\n  ): RdsAnchorMenuSectionData[] {\n    this.killIntersectionSubscriptions$.next();\n\n    return list.map((section, index) => {\n      this.createIntersectionObservable(section)\n        .pipe(\n          withLatestFrom(this.activeSection$),\n          takeUntil(this.killIntersectionSubscriptions$),\n          takeUntilDestroyed(this.destroyRef),\n        )\n        .subscribe(([entry, activeSection]) =>\n          this.onIntersectionEvent(entry, index, activeSection),\n        );\n\n      return {\n        section,\n        isActive$: this.activeSection$.pipe(\n          map((active) => active === section),\n        ),\n      };\n    });\n  }\n\n  private onIntersectionEvent(\n    entry: IntersectionObserverEntry,\n    sectionIndex: number,\n    activeSection?: RdsAnchorMenuSectionDirective,\n  ): void {\n    const section = this._sections$.value[sectionIndex].section;\n\n    if (entry.isIntersecting) {\n      const nextSection = this._sections$.value[sectionIndex + 1]?.section;\n\n      if (nextSection && nextSection === activeSection) {\n        // this is the event which occurs when previous section is entering intersection area\n        // we want to ignore it because change is emitted when user scrolls further and the current section leaves\n        return;\n      }\n\n      this.activeSection$.next(section);\n\n      return;\n    }\n\n    if (this.isScrolledOutDownwards(entry)) {\n      // user scrolls up, so the section is lower than rootBounds,\n      // so we emit previous item as the active one\n      const previousItemIndex = sectionIndex > 0 ? sectionIndex - 1 : 0;\n      this.activeSection$.next(\n        this._sections$.value[previousItemIndex]?.section,\n      );\n    }\n  }\n\n  private createIntersectionObservable(\n    section: RdsAnchorMenuSectionDirective,\n  ): Observable<IntersectionObserverEntry> {\n    // emit section once it's intersecting\n    return this.intersectionObserver\n      .observe(section._element.nativeElement, {\n        ...DEFAULT_OBSERVER_CONFIG,\n        ...this.intersectionObserverOptions,\n      })\n      .pipe(\n        map((entries) => entries[0]),\n        // we don't need any information about the section until its first intersection,\n        // it makes initialization process and active item logic harder to manage\n        skipWhile((entry) => !entry.isIntersecting),\n      );\n  }\n\n  private isScrolledOutDownwards(entry: IntersectionObserverEntry): boolean {\n    // honestly I haven't found any mention of rootBounds being nullable value in MDN\n    // but Typescript says it could be null, so we're setting fallback value that should\n    // be reasonable in most cases\n    const rootBounds =\n      entry.rootBounds ||\n      ({\n        bottom: 200,\n      } as DOMRectReadOnly);\n\n    return (\n      !entry.isIntersecting &&\n      entry.boundingClientRect.bottom > rootBounds.bottom\n    );\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector:\n    'rds-anchor-menu-title, [rds-anchor-menu-title], [rdsAnchorMenuTitle]',\n})\nexport class RdsAnchorMenuTitleDirective {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RdsAnchorMenuComponent } from './anchor-menu.component';\nimport { RdsAnchorMenuItemComponent } from './anchor-menu-item/anchor-menu-item.component';\nimport { RdsAnchorMenuSectionDirective } from './anchor-menu-section.directive';\nimport { RdsAnchorMenuSectionsContainerDirective } from './anchor-menu-sections-container.directive';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { RdsAnchorMenuTitleDirective } from './anchor-menu-title.directive';\n\nconst ELEMENTS = [\n  RdsAnchorMenuComponent,\n  RdsAnchorMenuItemComponent,\n  RdsAnchorMenuSectionDirective,\n  RdsAnchorMenuSectionsContainerDirective,\n  RdsAnchorMenuTitleDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, RouterLink, RouterLinkActive],\n  declarations: [...ELEMENTS],\n  exports: [...ELEMENTS],\n})\nexport class RdsAnchorMenuModule {}\n","/*\n * Public API Surface of angular-components\n */\nexport * from './lib/accordion';\nexport * from './lib/alert';\nexport * from './lib/avatar';\nexport * from './lib/autocomplete';\n\nexport * from './lib/badge';\nexport * from './lib/breadcrumbs';\nexport * from './lib/button';\n\nexport * from './lib/card';\nexport * from './lib/carousel';\nexport * from './lib/checkbox';\nexport * from './lib/chips';\nexport * from './lib/core';\n\nexport * from './lib/datepicker';\nexport * from './lib/dialog';\nexport * from './lib/divider';\nexport * from './lib/drawer';\nexport * from './lib/dropdown';\nexport * from './lib/empty-state';\nexport * from './lib/footer';\nexport * from './lib/form-field';\nexport * from './lib/header';\n\nexport * from './lib/menu';\nexport * from './lib/icons';\n\nexport * from './lib/link';\nexport * from './lib/list-item';\n\nexport * from './lib/paginator';\nexport * from './lib/popover';\nexport * from './lib/progress-bar';\nexport * from './lib/progress-spinner';\n\nexport * from './lib/radio-button';\nexport * from './lib/search';\nexport * from './lib/sidenav';\nexport * from './lib/slider';\nexport * from './lib/stepper';\nexport * from './lib/switch';\n\nexport * from './lib/tab';\nexport * from './lib/table';\nexport * from './lib/theme';\nexport * from './lib/toast';\nexport * from './lib/toggle-button';\nexport * from './lib/tooltip';\nexport * from './lib/tree';\nexport * from './lib/timeline';\n\nexport * from './lib/upload';\nexport * from './lib/utils';\n\nexport * from './lib/anchor-menu';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EXPANSION_PANEL_ANIMATION_TIMING","uniqueId","i1.RdsIconComponent","nextId","ELEMENTS","i1.RdsIconButtonComponent","nextUniqueId","i1","i2","i1.RdsPseudoCheckboxComponent","COMPONENTS","i1.RdsListItemComponent","i2.RdsMultiSelectListItemComponent","i3.RdsSingleSelectListItemComponent","RDS_INPUT_VALUE_ACCESSOR","i3.RdsIconButtonComponent","i4.RdsInputDirective","i2.RdsTriggerValuesComponent","i2.RdsIconComponent","i4.RdsChipActionDirective","i4.RdsChipListComponent","i5.RdsChipComponent","i6.RdsBadgeComponent","i7.RdsTriggerValuesComponent","i8","i2.RdsIconButtonComponent","i3.RdsChipActionDirective","distinctUntilChanged","i1.RdsProgressSpinnerComponent","i3.RdsChipComponent","i1.RdsTextButtonComponent","i1.RdsCardSelectableDirective","i1.DateAdapter","i1.RdsCalendarBodyComponent","i3.RdsMonthViewComponent","i4.RdsYearViewComponent","i5.RdsMultiYearViewComponent","i6.RdsIconButtonComponent","i7.RdsIconComponent","i8.RdsToggleButtonComponent","i9.RdsToggleDirective","debounceTime","i2.RdsButtonComponent","i3","i4","i5.RdsCalendarComponent","i3.RdsIconComponent","filter","i2.RdsDividerComponent","i1.RdsFormFieldComponent","i2.RdsInputDirective","i3.RdsPrefixDirective","i4.RdsSuffixDirective","i5.RdsIconComponent","i7.RdsButtonComponent","i8.RdsIconButtonComponent","i5.RdsSearchComponent","i6.RdsHeaderSearchbarComponent","menuPanelUid","passiveEventListenerOptions","SCROLL_THROTTLE_MS","ScrollDispatcher","i3.RdsTooltipDirective","i4.RdsIconButtonComponent","i1.RdsDropdownToggleButtonComponent","i2.RdsDropdownDirective","i3.RdsMenuComponent","i4.RdsMenuItemComponent","i5.RdsMenuTriggerDirective","i6.RdsIconComponent","i7.RdsTooltipDirective","i9.RdsPaginatorBasicComponent","i10","i1.RdsDividerComponent","i3.RdsObserveResizeDirective","i4.RdsSidenavFooterComponent","i2.RdsStepHeaderComponent","i2.RdsTabLabelWrapperDirective","i1.RdsCellDefDirective","i1.RdsHeaderCellDefDirective","i1.RdsColumnDefDirective","i1.RdsHeaderCellDirective","i1.RdsCellDirective","DataSource","i1.RdsTreeNodeOutletDirective","i3.RdsProgressBarComponent","i5.RdsFileSizePipe","i3.RdsUploadDirective","i4.RdsUploadDropZoneDirective","i5.RdsUploadListItemComponent","i6"],"mappings":"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"}